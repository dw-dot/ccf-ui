var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BodyUILayer.html",[0,1.249,1,1.249]],["body/classes/BodyUILayer.html",[0,1.029,1,1.874,2,1.867,3,0.455,4,0.608,5,0.455,6,0.651,7,0.424,8,1.81,9,1.59,10,1.572,11,1.135,12,3.864,13,0.325,14,0.755,15,4.64,16,2.709,17,3.864,18,3.864,19,3.311,20,3.864,21,4.217,22,4.217,23,0.542,24,0.052,25,1.352,26,2.248,27,1.471,28,3.598,29,2.316,30,1.059,31,2.316,32,2.316,33,2.316,34,2.67,35,1.352,36,0.794,37,1.933,38,3.116,39,2.316,40,2.316,41,1.681,42,2.316,43,1.219,44,2.316,45,1.176,46,3.311,47,3.116,48,1.867,49,1.176,50,3.311,51,3.864,52,1.867,53,1.267,54,1.029,55,0.87,56,0.903,57,1.933,58,1.572,59,1.933,60,2.316,61,1.352,62,2.624,63,2.316,64,2.316,65,1.176,66,1.867,67,2.171,68,2.248,69,2.316,70,1.874,71,1.529,72,2.316,73,1.508,74,2.863,75,1.529,76,0.651,77,4.777,78,1.874,79,2.316,80,2.945,81,2.316,82,1.867,83,2.316,84,2.316,85,2.265,86,3.311,87,3.311,88,1.717,89,1.717,90,1.962,91,2.256,92,1.717,93,1.933,94,1.933,95,3.864,96,3.15,97,3.311,98,2.461,99,1.471,100,1.436,101,3.311,102,1.292,103,2.316,104,0.608,105,3.864,106,1.292,107,2.242,108,2.316,109,2.316,110,1.933,111,2.316,112,2.316,113,2.316,114,1.029,115,3.311,116,4.64,117,4.461,118,3.742,119,3.598,120,4.217,121,3.311,122,3.311,123,3.311,124,3.311,125,3.864,126,2.316,127,2.316,128,2.316,129,2.316,130,3.864,131,2.316,132,2.316,133,2.316,134,1.471,135,2.316,136,2.316,137,2.316,138,2.316,139,2.316,140,2.316,141,2.316,142,1.867,143,1.572,144,3.311,145,2.316,146,4.217,147,1.176,148,2.316,149,1.352,150,2.316,151,2.316,152,2.316,153,2.316,154,1.352,155,1.352,156,1.029,157,2.316,158,1.176,159,2.316,160,2.316,161,2.316,162,2.316,163,1.572,164,2.316,165,2.316,166,2.316,167,2.316,168,2.316,169,0.021,170,0.03,171,0.021]],["title/interfaces/BodyUIProps.html",[172,0.024,173,1.427]],["body/interfaces/BodyUIProps.html",[0,1.15,1,1.411,3,0.624,4,0.437,5,0.327,6,0.234,7,0.29,8,0.65,9,0.887,11,0.571,13,0.363,14,0.591,16,2.907,23,0.699,24,0.053,27,1.723,30,1.097,36,1.227,37,2.764,41,2.551,43,1.195,45,0.845,49,0.845,53,1.331,54,0.74,55,0.68,56,1.601,67,1.968,70,1.411,71,1.227,73,1.728,75,1.722,76,0.762,78,1.15,80,1.853,85,2.084,88,1.723,89,1.723,90,1.968,91,2.263,92,1.15,93,0.972,94,0.972,98,0.972,99,0.74,100,1.607,102,1.01,104,1.018,106,0.65,107,2.066,110,2.845,114,2.233,134,0.74,147,0.845,154,0.972,155,0.972,156,0.74,158,0.845,169,0.015,170,0.024,171,0.024,172,0.028,173,1.314,174,0.327,175,0.845,176,2.787,177,2.431,178,2.431,179,2.431,180,2.431,181,2.633,182,2.633,183,1.818,184,2.431,185,1.728,186,3.007,187,2.155,188,2.155,189,1.723,190,2.155,191,2.155,192,1.757,193,1.757,194,1.757,195,1.757,196,1.131,197,0.65,198,2.585,199,0.972,200,1.131,201,2.655,202,0.972,203,1.131,204,1.131,205,1.757,206,0.845,207,1.131,208,0.845,209,2.249,210,2.155,211,2.431,212,2.431,213,2.175,214,1.397,215,1.131,216,2.155,217,0.845,218,1.757,219,0.972,220,2.633,221,0.972,222,1.757,223,1.131,224,1.131,225,0.845,226,0.972,227,3.439,228,1.131,229,1.131,230,1.131,231,1.131,232,1.131,233,1.131,234,1.131,235,1.131,236,1.131,237,1.131,238,1.131,239,1.131,240,1.131,241,1.131,242,1.131,243,1.131,244,1.131,245,1.131,246,1.131,247,1.131,248,1.131,249,1.131,250,1.131,251,2.633,252,1.131,253,1.757,254,1.131,255,1.131,256,0.972,257,1.757,258,0.972,259,1.131,260,1.131,261,1.131,262,1.757,263,1.757,264,1.131,265,1.131,266,1.131,267,1.131,268,1.131,269,1.131,270,1.131,271,1.131,272,1.131,273,1.131,274,1.131,275,1.131,276,1.131,277,1.131,278,1.131,279,1.757,280,1.131,281,1.131,282,1.131,283,1.131,284,1.131,285,1.131,286,1.131,287,1.131,288,1.131,289,3.007,290,3.007,291,1.131,292,1.757,293,1.131,294,1.131,295,1.511,296,1.757,297,1.131,298,1.131,299,1.131,300,0.845,301,1.131,302,2.155,303,1.314,304,1.131,305,1.131,306,1.131,307,1.757,308,1.131,309,1.131,310,1.131,311,1.131,312,2.155,313,1.131,314,1.131,315,1.757,316,1.131,317,2.155,318,1.131,319,1.131,320,1.818,321,1.511,322,1.511,323,1.01,324,1.131,325,1.131,326,1.131,327,1.131,328,2.155,329,1.131,330,1.131,331,1.131,332,1.131,333,0.845,334,1.131,335,1.131,336,1.131,337,1.131,338,1.131,339,1.131,340,1.511,341,0.74,342,1.131,343,0.845,344,1.131,345,1.131,346,1.131,347,2.633,348,1.131,349,1.131,350,1.131,351,1.131,352,1.131,353,1.131,354,1.131,355,1.131,356,1.757,357,1.131,358,2.155,359,1.131,360,1.757,361,1.757,362,1.131,363,1.131,364,1.131,365,1.131,366,1.131,367,2.155,368,1.131,369,1.131,370,1.131,371,1.131,372,1.131,373,1.131,374,1.131,375,1.131,376,1.131,377,1.131,378,1.131,379,0.74,380,1.131,381,1.131,382,1.131,383,1.131,384,1.131,385,1.131,386,2.155,387,1.131,388,1.131,389,1.131,390,1.131,391,1.131,392,1.131,393,1.131,394,1.131]],["title/interfaces/BodyUIViewStateProps.html",[172,0.024,209,1.427]],["body/interfaces/BodyUIViewStateProps.html",[0,1.176,1,1.437,3,0.636,4,0.45,5,0.337,6,0.241,7,0.295,8,0.669,9,0.907,11,0.907,13,0.372,14,0.604,16,2.924,23,0.644,24,0.053,27,1.746,30,1.07,36,1.246,37,2.785,41,2.565,43,1.205,45,0.87,49,0.87,53,1.344,54,0.762,55,0.695,56,1.621,67,1.987,70,1.437,71,1.246,73,1.745,75,1.732,76,0.52,78,1.176,80,1.887,85,2.109,88,1.746,89,1.746,90,1.995,91,2.294,92,1.176,93,1.001,94,1.001,98,1.001,99,0.762,100,1.603,102,1.033,104,1.032,106,0.669,107,2.083,110,2.863,114,2.083,134,0.762,147,0.87,154,1.001,155,1.001,156,0.762,158,0.87,169,0.016,170,0.024,171,0.024,172,0.028,173,0.87,174,0.337,175,0.87,176,2.82,177,1.164,178,1.164,179,1.164,180,1.164,181,1.797,182,1.797,183,0.87,184,1.164,185,1.745,186,3.036,187,1.164,188,1.164,189,1.746,190,2.195,191,2.195,192,1.797,193,1.797,194,1.797,195,2.195,196,1.164,197,0.669,198,2.61,199,1.001,200,1.164,201,2.679,202,1.001,203,1.164,204,1.164,205,1.797,206,0.87,207,1.164,208,0.87,209,2.33,210,2.82,211,2.94,212,2.94,213,2.198,214,1.419,215,1.164,216,2.195,217,0.87,218,1.797,219,1.001,220,2.668,221,1.001,222,1.797,223,1.164,224,1.164,225,0.87,226,1.001,227,3.457,228,1.164,229,1.164,230,1.164,231,1.164,232,1.164,233,1.164,234,1.164,235,1.164,236,1.164,237,1.164,238,1.164,239,1.164,240,1.164,241,1.164,242,1.164,243,1.164,244,1.164,245,1.164,246,1.164,247,1.164,248,1.164,249,1.164,250,1.164,251,2.668,252,1.164,253,1.797,254,1.164,255,1.164,256,1.001,257,1.797,258,1.001,259,1.164,260,1.164,261,1.164,262,1.797,263,1.797,264,1.164,265,1.164,266,1.164,267,1.164,268,1.164,269,1.164,270,1.164,271,1.164,272,1.164,273,1.164,274,1.164,275,1.164,276,1.164,277,1.164,278,1.164,279,1.797,280,1.164,281,1.164,282,1.164,283,1.164,284,1.164,285,1.164,286,1.164,287,1.164,288,1.164,289,3.036,290,3.036,291,1.164,292,1.797,293,1.164,294,1.164,295,1.545,296,1.797,297,1.164,298,1.164,299,1.164,300,0.87,301,1.164,302,2.195,303,1.344,304,1.164,305,1.164,306,1.164,307,1.797,308,1.164,309,1.164,310,1.164,311,1.164,312,2.195,313,1.164,314,1.164,315,1.797,316,1.164,317,2.195,318,1.164,319,1.164,320,1.846,321,1.545,322,1.545,323,1.033,324,1.164,325,1.164,326,1.164,327,1.164,328,2.195,329,1.164,330,1.164,331,1.164,332,1.164,333,0.87,334,1.164,335,1.164,336,1.164,337,1.164,338,1.164,339,1.164,340,1.545,341,0.762,342,1.164,343,0.87,344,1.164,345,1.164,346,1.164,347,2.668,348,1.164,349,1.164,350,1.164,351,1.164,352,1.164,353,1.164,354,1.164,355,1.164,356,1.797,357,1.164,358,2.195,359,1.164,360,1.797,361,1.797,362,1.164,363,1.164,364,1.164,365,1.164,366,1.164,367,2.195,368,1.164,369,1.164,370,1.164,371,1.164,372,1.164,373,1.164,374,1.164,375,1.164,376,1.164,377,1.164,378,1.164,379,0.762,380,1.164,381,1.164,382,1.164,383,1.164,384,1.164,385,1.164,386,2.195,387,1.164,388,1.164,389,1.164,390,1.164,391,1.164,392,1.164,393,1.164,394,1.164]],["title/interfaces/Collision.html",[172,0.024,395,1.908]],["body/interfaces/Collision.html",[3,0.525,4,0.702,5,0.525,6,0.375,7,0.244,13,0.375,14,0.835,23,0.66,24,0.052,25,2.137,30,1.234,35,3.143,43,1.306,53,1.1,54,1.188,55,1.179,56,1.428,61,2.437,65,1.357,70,1.855,73,1.428,74,2.834,75,1.735,76,1.053,78,1.855,88,1.626,89,1.188,104,0.702,106,1.043,107,2.43,118,2.952,119,2.155,142,2.952,149,1.56,163,3.193,169,0.024,170,0.033,171,0.024,172,0.023,174,0.525,185,1.043,189,1.188,197,1.043,300,1.357,303,1.357,395,2.834,396,1.814,397,1.814,398,4.857,399,1.814,400,2.155,401,3.66,402,2.155,403,3.66,404,2.155,405,3.621,406,2.155,407,1.814,408,1.814,409,1.56,410,2.155,411,2.155,412,2.673,413,2.673,414,4.174,415,2.673,416,2.673,417,2.673,418,3.66,419,3.621,420,2.673,421,3.621,422,2.673,423,2.673,424,3.366,425,3.66,426,3.366,427,2.952,428,2.952,429,2.952,430,2.952,431,2.952,432,2.952,433,4.174,434,2.673,435,2.673,436,2.673,437,2.673,438,2.673,439,2.155,440,2.673,441,2.155,442,2.155,443,2.952,444,2.155,445,2.155,446,2.155,447,2.155,448,2.155,449,2.155,450,2.673,451,2.155,452,4.49,453,3.66,454,2.673,455,2.673,456,2.673,457,2.673,458,2.673,459,2.673,460,2.673,461,2.673,462,2.673,463,2.673,464,2.673,465,2.673,466,2.673,467,2.673,468,2.673,469,4.703,470,3.66,471,3.621,472,3.66,473,3.66,474,2.673,475,2.673,476,2.673,477,2.673,478,2.673,479,2.155]],["title/interfaces/PickInfo.html",[172,0.024,213,1.427]],["body/interfaces/PickInfo.html",[0,1.181,1,1.441,3,0.638,4,0.452,5,0.339,6,0.242,7,0.296,8,0.672,9,0.911,11,0.59,13,0.553,14,0.606,16,2.926,23,0.629,24,0.053,27,1.75,30,0.95,36,1.249,37,2.788,41,2.567,43,1.207,45,0.874,49,0.874,53,1.346,54,0.765,55,0.698,56,1.624,67,1.99,70,1.441,71,1.249,73,1.747,75,1.733,76,0.522,78,1.181,80,1.893,85,2.113,88,1.75,89,1.75,90,1.999,91,2.299,92,1.181,93,1.005,94,1.005,98,1.893,99,0.765,100,1.594,102,1.037,104,1.034,106,0.672,107,2.086,110,2.866,114,2.154,134,0.765,147,0.874,154,1.005,155,1.005,156,0.765,158,0.874,169,0.016,170,0.024,171,0.024,172,0.028,173,0.874,174,0.339,175,0.874,176,2.202,177,1.169,178,1.169,179,1.169,180,1.169,181,1.804,182,1.804,183,0.874,184,1.169,185,1.537,186,2.674,187,1.169,188,1.169,189,1.441,190,2.202,191,2.202,192,1.804,193,1.804,194,1.804,195,1.804,196,1.169,197,0.672,198,2.614,199,1.005,200,1.169,201,2.682,202,1.005,203,1.169,204,1.169,205,2.674,206,0.874,207,1.169,208,0.874,209,2.274,210,2.202,211,2.475,212,2.475,213,2.274,214,1.692,215,2.475,216,2.826,217,1.851,218,2.674,219,1.005,220,2.674,221,1.005,222,1.804,223,1.169,224,1.169,225,0.874,226,1.005,227,3.459,228,1.169,229,1.169,230,1.169,231,1.169,232,1.169,233,1.169,234,1.169,235,1.169,236,1.169,237,1.169,238,1.169,239,1.169,240,1.169,241,1.169,242,1.169,243,1.169,244,1.169,245,1.169,246,1.169,247,1.169,248,1.169,249,1.169,250,1.169,251,2.674,252,1.169,253,1.804,254,1.169,255,1.169,256,1.005,257,1.804,258,1.005,259,1.169,260,1.169,261,1.169,262,1.804,263,1.804,264,1.169,265,1.169,266,1.169,267,1.169,268,1.169,269,1.169,270,1.169,271,1.169,272,1.169,273,1.169,274,1.169,275,1.169,276,1.169,277,1.169,278,1.169,279,1.804,280,1.169,281,1.169,282,1.169,283,1.169,284,1.169,285,1.169,286,1.169,287,1.169,288,1.169,289,3.041,290,3.041,291,1.169,292,1.804,293,1.169,294,1.169,295,1.551,296,1.804,297,1.169,298,1.169,299,1.169,300,0.874,301,1.169,302,2.202,303,1.349,304,1.169,305,1.169,306,1.169,307,1.804,308,1.169,309,1.169,310,1.169,311,1.169,312,2.202,313,1.169,314,1.169,315,1.804,316,1.169,317,2.202,318,1.169,319,1.169,320,1.851,321,1.551,322,1.551,323,1.037,324,1.169,325,1.169,326,1.169,327,1.169,328,2.202,329,1.169,330,1.169,331,1.169,332,1.169,333,0.874,334,1.169,335,1.169,336,1.169,337,1.169,338,1.169,339,1.169,340,1.551,341,0.765,342,1.169,343,0.874,344,1.169,345,1.169,346,1.169,347,2.674,348,1.169,349,1.169,350,1.169,351,1.169,352,1.169,353,1.169,354,1.169,355,1.169,356,1.804,357,1.169,358,2.202,359,1.169,360,1.804,361,1.804,362,1.169,363,1.169,364,1.169,365,1.169,366,1.169,367,2.202,368,1.169,369,1.169,370,1.169,371,1.169,372,1.169,373,1.169,374,1.169,375,1.169,376,1.169,377,1.169,378,1.169,379,0.765,380,1.169,381,1.169,382,1.169,383,1.169,384,1.169,385,1.169,386,2.202,387,1.169,388,1.169,389,1.169,390,1.169,391,1.169,392,1.169,393,1.169,394,1.169]],["title/interfaces/ProcessedNode.html",[172,0.024,480,1.908]],["body/interfaces/ProcessedNode.html",[3,0.538,4,0.719,5,0.538,6,0.384,7,0.25,11,1.275,13,0.384,14,0.849,23,0.665,24,0.052,30,1.142,43,1.245,53,1.363,54,1.216,55,1.191,56,2.085,57,1.597,59,2.171,61,2.171,65,1.888,70,1.653,73,1.067,74,2.869,75,1.715,76,0.731,78,1.878,85,2.302,88,1.653,89,1.216,96,1.857,99,1.653,102,1.067,104,0.977,106,1.067,107,2.429,134,1.216,156,1.216,158,1.389,169,0.025,170,0.034,171,0.025,172,0.024,174,0.538,189,1.878,197,1.067,208,1.888,295,2.171,300,1.389,303,1.389,320,1.888,333,1.389,341,1.878,343,1.389,399,1.857,405,3.824,406,4.035,407,1.857,408,1.857,409,1.597,410,2.206,419,2.999,421,2.999,426,3.656,427,2.206,428,2.206,429,2.206,430,2.206,431,2.206,432,2.206,439,2.206,441,2.206,442,2.206,443,2.999,444,2.206,445,2.206,446,2.206,447,2.206,448,2.206,449,2.206,451,2.999,479,2.206,480,3.544,481,1.597,482,1.857,483,3.824,484,3.656,485,4.742,486,2.206,487,2.869,488,3.719,489,2.736,490,2.736,491,2.736,492,2.736,493,3.407,494,2.736,495,3.719,496,3.719,497,3.719,498,2.206,499,3.719,500,2.736,501,2.736,502,2.736,503,2.736,504,2.736,505,2.206,506,2.736,507,2.736,508,2.736,509,3.719,510,2.736,511,2.736,512,4.225,513,2.736,514,2.736,515,2.736,516,3.719,517,2.736,518,2.736,519,2.736,520,2.736,521,2.736,522,2.736,523,2.736,524,2.736,525,2.736,526,2.736,527,2.736,528,2.736,529,2.736,530,2.736,531,2.736,532,2.736]],["title/interfaces/SpatialEntityJsonLd.html",[172,0.024,533,1.427]],["body/interfaces/SpatialEntityJsonLd.html",[3,0.541,4,0.981,5,0.734,6,0.386,7,0.252,11,1.558,13,0.386,14,0.852,23,0.787,24,0.052,30,1.301,43,0.723,71,1.679,76,0.963,100,1.676,104,1.113,169,0.025,170,0.034,171,0.025,172,0.037,174,0.541,185,1.074,214,1.774,533,1.896,534,1.607,535,1.398,536,1.607,537,3.226,538,3.226,539,3.086,540,3.086,541,3.086,542,3.086,543,3.086,544,3.086,545,3.086,546,3.086,547,3.086,548,2.774,549,2.654,550,2.654,551,3.086,552,2.654,553,2.654,554,3.086,555,3.086,556,3.086,557,3.086,558,3.086,559,3.086,560,2.308,561,2.589,562,2.878,563,2.878,564,2.475,565,2.475,566,1.869,567,1.607,568,1.869,569,1.869,570,1.869,571,1.869,572,1.869,573,1.869,574,1.869,575,1.869,576,1.869,577,1.869,578,1.869,579,1.869,580,1.869,581,1.869]],["title/interfaces/SpatialObjectReferenceJsonLd.html",[172,0.024,560,1.427]],["body/interfaces/SpatialObjectReferenceJsonLd.html",[3,0.658,4,1.115,5,0.995,6,0.47,7,0.306,11,1.681,13,0.47,14,0.969,23,0.764,24,0.051,30,1.299,43,0.879,71,1.455,76,1.017,100,1.664,104,1.225,169,0.031,170,0.039,171,0.031,172,0.041,174,0.658,185,1.306,214,1.306,533,1.699,534,1.953,535,1.699,536,1.953,537,3.437,538,2.882,539,2.272,540,2.272,541,2.272,542,2.272,543,2.272,544,2.272,545,2.272,546,2.272,547,2.272,548,2.955,549,1.953,550,1.953,551,2.272,552,1.953,553,1.953,554,2.272,555,2.272,556,2.272,557,2.272,558,2.272,559,2.272,560,2.367,561,2.626,562,2.272,563,2.272,564,1.953,565,1.953,566,2.272,567,1.953,568,2.272,569,2.272,570,2.272,571,2.272,572,2.272,573,2.272,574,2.272,575,2.272,576,2.272,577,2.272,578,2.272,579,2.272,580,2.272,581,3.33]],["title/interfaces/SpatialPlacementJsonLd.html",[172,0.024,561,1.427]],["body/interfaces/SpatialPlacementJsonLd.html",[3,0.585,4,1.281,5,0.773,6,0.418,7,0.272,11,1.607,13,0.418,14,0.898,23,0.784,24,0.052,30,1.298,36,1.607,43,0.781,71,1.348,76,0.985,100,1.696,104,1.158,169,0.027,170,0.036,171,0.027,172,0.038,174,0.585,185,1.83,214,1.161,533,1.51,534,1.737,535,1.51,536,1.737,537,3.312,538,3.312,539,2.02,540,2.02,541,2.02,542,2.02,543,2.02,544,2.02,545,2.02,546,2.02,547,2.02,548,2.296,549,1.737,550,1.737,551,2.02,552,1.737,553,1.737,554,2.02,555,2.02,556,2.02,557,2.02,558,2.02,559,2.02,560,1.997,561,2.476,562,2.02,563,2.02,564,1.737,565,1.737,566,2.02,567,1.737,568,3.184,569,3.184,570,3.184,571,3.184,572,3.184,573,3.184,574,3.184,575,3.184,576,3.184,577,3.184,578,3.184,579,3.184,580,3.184,581,2.02]],["title/interfaces/SpatialSceneNode.html",[53,0.845,172,0.024]],["body/interfaces/SpatialSceneNode.html",[3,0.617,4,0.825,5,0.617,6,0.441,7,0.287,13,0.441,14,0.93,23,0.786,24,0.051,30,1.288,35,2.796,36,1.938,43,0.825,53,1.225,55,0.825,76,0.942,96,3.252,99,2.128,100,1.667,102,1.869,104,0.825,114,2.442,134,2.128,143,3.252,156,2.128,169,0.029,170,0.037,171,0.029,172,0.027,174,0.617,189,2.128,197,1.225,341,2.128,343,2.431,424,3.862,505,3.862,549,2.796,550,2.796,582,2.532,583,2.532,584,4.789,585,4.789,586,4.789,587,4.789]],["title/changelog.html",[588,1.61,589,1.384,590,1.61]],["body/changelog.html",[3,0.737,7,0.372,9,1.475,14,0.274,23,0.168,24,0.039,26,0.814,28,0.967,36,0.411,55,1.03,67,2.196,68,1.349,75,1.394,76,0.236,82,1.603,90,1.903,92,0.883,100,0.36,102,1.155,143,0.814,147,1.991,163,1.349,169,0.011,170,0.018,171,0.036,172,0.033,174,0.236,183,0.609,217,0.609,225,2.592,256,1.486,258,0.7,322,2.698,323,1.748,340,0.7,379,1.316,399,2.011,471,3.674,487,0.814,548,0.7,552,1.16,553,0.7,564,0.7,565,0.7,567,2.188,589,1.486,590,1.349,591,1.603,592,0.967,593,3.163,594,1.988,595,2.961,596,3.283,597,1.199,598,5.527,599,1.988,600,3.283,601,1.988,602,3.539,603,1.988,604,1.199,605,1.199,606,3.539,607,1.199,608,4.303,609,1.988,610,3.023,611,1.988,612,4.252,613,3.539,614,2.388,615,3.748,616,1.199,617,3.283,618,3.748,619,3.023,620,4.117,621,1.199,622,1.199,623,1.988,624,2.961,625,2.388,626,3.922,627,1.199,628,1.199,629,2.961,630,1.199,631,1.988,632,4.303,633,2.546,634,1.199,635,1.988,636,2.546,637,1.199,638,1.199,639,3.417,640,2.546,641,1.199,642,2.546,643,1.988,644,1.199,645,1.988,646,4.556,647,1.199,648,1.199,649,1.199,650,4.556,651,1.199,652,1.199,653,0.967,654,0.967,655,2.229,656,0.967,657,1.199,658,1.988,659,0.967,660,1.199,661,1.988,662,2.961,663,2.961,664,1.199,665,1.988,666,2.546,667,1.199,668,1.199,669,1.988,670,1.199,671,1.199,672,3.539,673,2.403,674,2.648,675,2.053,676,1.199,677,4.194,678,2.648,679,1.199,680,1.988,681,1.199,682,2.546,683,3.163,684,4.481,685,1.988,686,1.199,687,1.199,688,1.988,689,4.303,690,2.053,691,1.199,692,3.539,693,3.283,694,1.199,695,1.199,696,3.283,697,1.199,698,1.199,699,1.199,700,1.199,701,2.546,702,1.199,703,1.603,704,1.603,705,1.199,706,3.163,707,1.199,708,1.199,709,1.199,710,1.199,711,1.199,712,1.199,713,2.648,714,2.763,715,2.648,716,1.199,717,1.988,718,1.199,719,1.199,720,2.546,721,1.988,722,1.199,723,1.988,724,1.199,725,1.988,726,1.988,727,1.988,728,3.539,729,1.988,730,1.199,731,2.546,732,1.199,733,1.199,734,0.967,735,1.199,736,2.053,737,1.349,738,1.988,739,1.199,740,1.199,741,1.199,742,4.785,743,1.199,744,1.988,745,1.988,746,1.988,747,2.961,748,1.988,749,1.199,750,1.199,751,1.199,752,2.546,753,1.199,754,1.988,755,1.199,756,1.199,757,1.988,758,3.539,759,1.603,760,1.199,761,0.967,762,1.199,763,1.199,764,3.283,765,2.961,766,1.199,767,2.546,768,1.988,769,3.539,770,1.603,771,2.961,772,1.199,773,1.199,774,1.603,775,2.961,776,3.283,777,1.199,778,1.199,779,1.199,780,0.967,781,1.199,782,1.988,783,1.988,784,1.199,785,1.988,786,1.199,787,0.967,788,1.988,789,1.199,790,1.988,791,1.199,792,1.199,793,2.961,794,1.199,795,1.199,796,1.199,797,1.199,798,1.199,799,1.988,800,1.199,801,1.199,802,1.199,803,1.199,804,1.199,805,1.199,806,1.988,807,1.199,808,1.199,809,1.199,810,1.199,811,1.199,812,1.988,813,1.199,814,3.539,815,1.199,816,2.546,817,1.988,818,1.199,819,1.988,820,1.199,821,0.967,822,0.967,823,1.199,824,1.988,825,1.988,826,1.199,827,1.199,828,2.011,829,1.199,830,1.199,831,1.988,832,1.988,833,1.199,834,1.199,835,1.988,836,1.988,837,1.199,838,1.988,839,2.961,840,2.546,841,1.199,842,1.199,843,1.199,844,1.199,845,0.967,846,0.967,847,1.199,848,1.988,849,1.199,850,1.199,851,1.199,852,1.199,853,1.988,854,2.961,855,1.199,856,1.199,857,1.199,858,1.199,859,3.539,860,2.546,861,1.988,862,1.199,863,1.199,864,2.546,865,1.988,866,1.988,867,1.988,868,2.961,869,1.199,870,0.967,871,1.199,872,1.199,873,1.988,874,1.199,875,1.199,876,1.199,877,1.199,878,1.199,879,2.961,880,1.199,881,2.546,882,2.961,883,1.199,884,2.546,885,3.283,886,1.988,887,1.988,888,1.988,889,1.988,890,1.988,891,2.546,892,2.961,893,3.283,894,1.988,895,2.546,896,1.199,897,1.199,898,3.748,899,2.546,900,1.199,901,2.961,902,2.961,903,4.069,904,1.199,905,1.199,906,1.199,907,1.199,908,1.199,909,1.199,910,1.988,911,1.199,912,1.988,913,1.199,914,1.199,915,1.199,916,1.199,917,1.988,918,1.199,919,1.728,920,1.199,921,1.988,922,2.053,923,1.988,924,2.546,925,1.199,926,1.199,927,1.199,928,1.988,929,1.199,930,1.199,931,1.199,932,1.199,933,1.199,934,1.199,935,1.199,936,1.988,937,1.199,938,1.199,939,2.961,940,3.539,941,1.988,942,2.546,943,1.988,944,2.961,945,1.199,946,1.199,947,1.199,948,1.199,949,2.546,950,1.199,951,1.199,952,1.199,953,1.988,954,1.988,955,1.988,956,1.988,957,2.546,958,1.199,959,1.199,960,1.199,961,1.199,962,1.199,963,1.199,964,0.967,965,1.199,966,1.199,967,1.199,968,1.988,969,1.199,970,1.199,971,1.988,972,1.199,973,1.199,974,1.199,975,1.199,976,1.199,977,1.199,978,1.199,979,1.199,980,1.199,981,1.199,982,3.922,983,1.199,984,2.053,985,2.546,986,2.961,987,1.988,988,2.546,989,1.199,990,1.988,991,1.199,992,1.199,993,1.199,994,1.988,995,1.988,996,1.988,997,1.199,998,1.199,999,1.199,1000,1.199,1001,1.988,1002,1.199,1003,2.546,1004,1.199,1005,1.199,1006,1.199,1007,1.199,1008,0.967,1009,1.199,1010,1.199,1011,1.199,1012,1.199,1013,1.199,1014,1.199,1015,1.199,1016,1.199,1017,1.199,1018,1.199,1019,1.199,1020,2.388,1021,3.283,1022,1.199,1023,1.199,1024,1.199,1025,1.199,1026,1.199,1027,1.199,1028,1.199,1029,1.199,1030,1.199,1031,1.199,1032,1.199,1033,1.199,1034,1.199,1035,1.199,1036,1.988,1037,1.199,1038,1.988,1039,1.199,1040,1.988,1041,1.988,1042,2.961,1043,2.961,1044,1.988,1045,1.988,1046,1.199,1047,1.199,1048,1.199,1049,2.546,1050,1.199,1051,0.967,1052,1.199,1053,1.199,1054,1.199,1055,1.199,1056,1.199,1057,1.199,1058,1.988,1059,4.194,1060,2.546,1061,1.988,1062,1.199,1063,1.988,1064,1.199,1065,1.199,1066,1.199,1067,1.199,1068,1.199,1069,1.199,1070,1.199,1071,1.199,1072,1.199,1073,1.988,1074,3.023,1075,1.988,1076,1.199,1077,1.199,1078,1.199,1079,1.603,1080,1.199,1081,2.961,1082,1.199,1083,1.988,1084,1.199,1085,1.199,1086,2.011,1087,1.199,1088,1.988,1089,1.199,1090,1.199,1091,1.199,1092,1.988,1093,1.988,1094,1.199,1095,1.199,1096,1.199,1097,1.199,1098,1.988,1099,2.546,1100,1.988,1101,1.199,1102,1.199,1103,1.603,1104,1.199,1105,1.199,1106,1.199,1107,1.199,1108,1.199,1109,1.199,1110,1.199,1111,1.199,1112,1.199,1113,0.967,1114,1.199,1115,1.199,1116,1.988,1117,1.199,1118,1.199,1119,1.199,1120,1.199,1121,1.199,1122,1.199,1123,1.199,1124,1.988,1125,1.988,1126,1.199,1127,0.967,1128,1.199,1129,1.199,1130,0.967,1131,1.199,1132,1.199,1133,1.199,1134,1.988,1135,1.199,1136,1.199,1137,1.199,1138,1.199,1139,1.199,1140,1.199,1141,1.199,1142,1.199,1143,1.199,1144,1.199,1145,1.199,1146,1.988,1147,1.199,1148,1.199,1149,1.199,1150,1.199,1151,1.988,1152,1.199,1153,1.199,1154,0.967,1155,1.199,1156,1.199,1157,1.199,1158,1.199,1159,1.199,1160,1.199,1161,1.199,1162,1.199]],["title/coverage.html",[1086,2.571]],["body/coverage.html",[0,1.74,1,1.313,5,0.581,6,0.789,7,0.513,8,1.951,9,1.342,10,2.659,23,0.415,24,0.051,53,0.888,55,1.314,57,1.725,58,2.006,59,1.725,62,2.006,65,2.789,73,2.19,75,1.013,169,0.027,170,0.036,171,0.027,172,0.046,173,1.5,175,2.375,206,1.5,209,1.5,213,1.5,226,1.725,323,1.528,379,1.313,395,2.006,396,2.659,397,2.659,409,1.725,480,2.006,481,3.024,482,2.982,533,1.5,534,2.564,535,2.375,536,2.564,560,1.5,561,1.5,582,2.383,583,2.383,673,2.006,737,2.006,919,2.006,1086,2.006,1163,2.954,1164,2.954,1165,2.383,1166,2.383,1167,2.383,1168,5.51,1169,4.393,1170,2.383,1171,2.954,1172,2.954,1173,2.954,1174,2.954,1175,2.954,1176,2.954,1177,2.954,1178,3.772,1179,3.772,1180,2.383,1181,3.158,1182,3.158,1183,2.383,1184,2.383,1185,2.383,1186,2.383,1187,2.383,1188,2.383,1189,2.659,1190,2.383,1191,2.954,1192,2.383,1193,2.383,1194,2.383,1195,2.383,1196,2.006,1197,2.006,1198,2.383,1199,2.383,1200,2.383,1201,2.954,1202,2.954,1203,2.954]],["title/dependencies.html",[659,1.912,828,2.286]],["body/dependencies.html",[5,0.614,7,0.286,24,0.052,25,1.824,45,1.586,48,2.52,49,2.063,52,2.52,56,1.219,149,1.824,169,0.029,170,0.037,171,0.029,197,1.219,198,1.824,199,1.824,202,1.824,400,2.52,402,2.52,404,2.52,407,2.121,408,2.121,484,2.52,655,2.121,678,2.52,703,2.52,759,2.52,770,2.52,821,2.52,822,2.52,828,2.121,846,3.276,922,2.52,984,3.276,1079,3.276,1204,3.125,1205,3.125,1206,3.125,1207,5.386,1208,3.125,1209,3.125,1210,3.125,1211,3.125,1212,3.125,1213,3.125,1214,3.125,1215,3.125,1216,4.063,1217,3.125,1218,3.125,1219,3.125,1220,3.125,1221,3.125,1222,3.125,1223,3.125,1224,4.515,1225,3.125,1226,3.125,1227,3.125,1228,4.515,1229,3.125,1230,3.125,1231,3.125,1232,3.125,1233,3.125,1234,3.125,1235,3.125,1236,3.125,1237,4.063,1238,4.063,1239,3.125,1240,3.125,1241,3.125,1242,3.125,1243,3.125,1244,3.276,1245,3.125,1246,3.125,1247,4.063,1248,3.125,1249,3.125,1250,3.125,1251,3.125,1252,3.125,1253,3.125,1254,3.125,1255,3.125,1256,3.125,1257,3.125,1258,3.125,1259,3.125,1260,3.125,1261,3.125,1262,3.125,1263,3.125,1264,2.52,1265,3.125,1266,3.125,1267,3.125,1268,3.125,1269,3.125,1270,3.125,1271,4.063,1272,3.125,1273,3.125,1274,3.125,1275,3.125,1276,3.125,1277,3.125,1278,3.125,1279,3.125,1280,3.125,1281,3.125,1282,3.125,1283,3.125,1284,3.125,1285,3.125,1286,3.125,1287,3.125,1288,3.125,1289,3.125,1290,3.125,1291,3.125,1292,3.125,1293,4.063,1294,3.125,1295,3.125,1296,3.125,1297,3.125,1298,3.125,1299,3.125,1300,3.125,1301,3.125,1302,3.125,1303,3.125,1304,3.125,1305,4.063,1306,3.125,1307,3.125,1308,3.125,1309,3.125,1310,3.125,1311,3.125,1312,3.125,1313,3.125,1314,3.125,1315,3.125,1316,3.125,1317,3.125,1318,3.125]],["title/miscellaneous/functions.html",[1319,1.054,1320,2.715]],["body/miscellaneous/functions.html",[6,0.75,7,0.488,8,1.111,9,1.31,10,2.595,13,0.4,24,0.051,27,1.266,30,0.65,34,4.397,35,3.183,36,1.869,38,4.397,41,1.446,47,2.297,55,1.35,57,2.231,58,2.595,59,2.518,61,2.231,62,2.595,66,2.297,67,1.698,68,2.595,71,0.976,76,0.56,106,2.07,114,1.266,149,1.663,169,0.026,170,0.035,171,0.026,183,1.446,206,1.94,208,1.446,320,1.446,323,1.491,333,1.446,341,1.698,396,1.934,397,2.595,409,2.231,411,2.297,481,2.806,482,2.929,486,2.297,487,2.595,493,3.717,498,2.297,535,1.94,737,2.595,787,3.082,919,2.595,1165,2.297,1166,3.082,1167,3.082,1170,3.082,1178,2.297,1179,3.877,1180,3.082,1181,2.297,1182,3.479,1183,3.082,1184,3.082,1185,3.082,1186,3.082,1187,3.082,1188,3.082,1189,2.595,1190,3.082,1193,3.082,1194,3.082,1195,3.082,1196,1.934,1197,2.595,1198,2.297,1199,3.082,1200,3.082,1244,3.082,1319,1.266,1320,2.297,1321,2.849,1322,3.992,1323,4.61,1324,2.849,1325,2.297,1326,3.822,1327,2.849,1328,2.297,1329,2.849,1330,4.95,1331,2.849,1332,3.822,1333,2.849,1334,2.849,1335,3.822,1336,2.849,1337,4.61,1338,4.313,1339,2.849,1340,2.849,1341,2.849,1342,4.61,1343,2.849,1344,2.849,1345,2.849,1346,2.849,1347,3.822,1348,2.849,1349,3.822]],["title/index.html",[13,0.333,588,1.61,589,1.384]],["body/index.html",[3,1.005,9,1.187,24,0.04,92,1.54,169,0.032,170,0.04,171,0.032,172,0.038,174,0.681,217,2.203,225,2.87,321,2.899,483,2.794,590,2.352,591,3.5,592,3.5,593,3.821,610,2.794,612,3.5,614,2.794,619,4.005,620,3.821,625,2.794,639,3.217,653,2.794,654,2.794,655,2.352,656,2.794,674,4.125,675,4.005,683,3.5,690,2.794,704,3.5,706,2.794,714,3.372,715,2.794,736,2.794,774,3.5,845,2.794,870,3.5,1008,2.794,1020,3.5,1103,2.794,1113,2.794,1127,2.794,1350,4.339,1351,3.464,1352,3.464,1353,3.464,1354,3.464,1355,3.5,1356,3.464,1357,3.464,1358,3.464,1359,4.339,1360,4.339,1361,4.339,1362,4.738,1363,3.464,1364,3.464,1365,4.738,1366,3.464,1367,3.464,1368,4.339,1369,3.464,1370,3.464,1371,3.464,1372,4.339,1373,3.464,1374,3.464,1375,3.464,1376,3.464,1377,4.967,1378,3.464,1379,3.464,1380,3.464,1381,3.464,1382,3.464,1383,3.464,1384,3.464,1385,3.464,1386,3.464,1387,3.464,1388,3.464,1389,3.464,1390,3.464,1391,3.464,1392,3.464,1393,3.464]],["title/license.html",[588,1.61,589,1.384,1394,1.912]],["body/license.html",[24,0.042,169,0.035,170,0.042,171,0.035,201,2.222,673,2.584,713,3.708,714,2.584,734,3.984,761,3.069,780,3.708,964,3.708,1051,3.069,1074,3.069,1130,3.069,1154,3.069,1264,3.069,1355,4.424,1394,3.069,1395,3.806,1396,4.94,1397,3.806,1398,3.806,1399,4.598,1400,3.806,1401,3.806,1402,3.806,1403,3.806,1404,3.806,1405,3.806,1406,4.598,1407,3.806,1408,3.806,1409,3.806,1410,3.806,1411,3.806,1412,3.806,1413,3.806,1414,3.806,1415,3.806,1416,3.806,1417,3.806,1418,3.806,1419,4.598,1420,3.806,1421,3.806,1422,3.806,1423,3.806,1424,3.806,1425,4.598,1426,3.806,1427,3.806,1428,3.806,1429,3.806,1430,3.806,1431,3.806,1432,3.806,1433,3.806,1434,3.806,1435,3.806,1436,3.806,1437,3.806,1438,3.806,1439,3.806,1440,3.806,1441,3.806,1442,3.806,1443,3.806,1444,3.806,1445,3.806,1446,3.806,1447,3.806,1448,3.806,1449,3.806,1450,3.806,1451,3.806,1452,3.806,1453,3.806]],["title/modules.html",[1454,3.054]],["body/modules.html",[24,0.046,169,0.04,170,0.046,171,0.04,1454,3.558]],["title/overview.html",[1455,3.054]],["body/overview.html",[2,3.534,24,0.046,169,0.04,170,0.046,171,0.04,174,0.861,379,1.947,1455,3.534,1456,4.382]],["title/miscellaneous/typealiases.html",[1319,1.054,1457,3.367]],["body/miscellaneous/typealiases.html",[6,0.685,7,0.446,8,1.642,13,0.591,23,0.723,24,0.045,25,2.848,65,2.136,169,0.038,170,0.045,171,0.038,175,2.616,219,2.848,221,2.848,1196,2.857,1197,3.313,1319,1.87,1325,3.935,1328,3.394,1458,4.208,1459,4.879]],["title/miscellaneous/variables.html",[1319,1.054,1460,2.715]],["body/miscellaneous/variables.html",[6,0.589,7,0.383,13,0.589,23,0.589,24,0.05,26,2.848,27,1.864,169,0.038,170,0.044,171,0.038,214,1.636,323,1.9,481,2.448,639,2.848,1189,3.307,1192,3.927,1319,1.864,1322,3.382,1460,3.382,1461,4.194,1462,4.87,1463,4.194,1464,4.194,1465,4.194,1466,4.194,1467,4.194,1468,4.194]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":73,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["0.05",{"_index":315,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["0.1.0",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":295,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["0.5*255",{"_index":161,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.5.0",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1103,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.8",{"_index":111,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.9*255",{"_index":103,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0/1",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":163,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"changelog.html":{}}}],["1.0",{"_index":147,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":984,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":922,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["1.6875389974302382e",{"_index":331,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["1.7.0",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["1/37",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["10.0",{"_index":286,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10.0.0",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":261,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10x",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["11.5",{"_index":349,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["12",{"_index":610,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":83,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["14",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":292,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["15.126.1",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["17,0,0",{"_index":330,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17,0.076,0,0.49,0.034,0.11,1",{"_index":332,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2",{"_index":379,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.0",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":770,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":759,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":703,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":307,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2019",{"_index":1074,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":84,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["24",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":85,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["26",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["3.0",{"_index":1360,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":678,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1381,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":82,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["31",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":322,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["4",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["4.17.1",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["8.9",{"_index":378,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["85",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1456,"title":{},"body":{"overview.html":{}}}],["9.5",{"_index":298,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["90",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["_dragevent(info",{"_index":392,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_lighting",{"_index":156,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["_onclick(info",{"_index":363,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondrag(info",{"_index":388,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragend(info",{"_index":390,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragstart(info",{"_index":385,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onhover(e",{"_index":355,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onviewstatechange(event",{"_index":371,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["aabb",{"_index":405,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["ability",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1130,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1446,"title":{},"body":{"license.html":{}}}],["actions",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1458,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1364,"title":{},"body":{"index.html":{}}}],["ambientlight",{"_index":190,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["analytics",{"_index":822,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":919,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomicalstructuresurl",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1417,"title":{},"body":{"license.html":{}}}],["angular",{"_index":655,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":619,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":1373,"title":{},"body":{"index.html":{}}}],["appear",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["appropriate",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1450,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":761,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":300,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["attempts",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1439,"title":{},"body":{"license.html":{}}}],["autohighlight",{"_index":79,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["automatic",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":303,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["award",{"_index":1392,"title":{},"body":{"index.html":{}}}],["b_3d_models_extraction_sites.csv",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b_3d_models_mapping.csv",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1127,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":426,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["before",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":200,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["behaviorsubject([0",{"_index":232,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["being",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":683,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":198,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["block",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":7,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":226,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer",{"_index":1,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer.gltfcache",{"_index":135,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["bodyuiprops",{"_index":173,"title":{"interfaces/BodyUIProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuiviewstateprops",{"_index":209,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["boolean",{"_index":114,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":1079,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1356,"title":{},"body":{"index.html":{}}}],["builds",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1397,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1244,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["cacheable",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":176,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cancelregistration",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":407,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["canvas",{"_index":177,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["card",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["casttoglobaltype",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["casttoglobaltype(value",{"_index":1329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ccf",{"_index":225,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":539,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["cell",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":483,"title":{},"body":{"interfaces/ProcessedNode.html":{},"index.html":{}}}],["change",{"_index":845,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":590,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1403,"title":{},"body":{"license.html":{}}}],["child",{"_index":488,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["child.bbox.clone",{"_index":513,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames",{"_index":1193,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["childnames(child",{"_index":492,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(node.node).map(n",{"_index":510,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(scene",{"_index":486,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1442,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BodyUILayer.html":{},"overview.html":{}}}],["cleanup",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":1377,"title":{},"body":{"index.html":{}}}],["code",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["collider",{"_index":64,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["collider.ts",{"_index":397,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collision",{"_index":395,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"coverage.html":{}}}],["collisioning",{"_index":413,"title":{},"body":{"interfaces/Collision.html":{}}}],["collisions",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":102,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["colorizing",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":540,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["common",{"_index":591,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":614,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["compositelayer",{"_index":12,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["comunica/query",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1424,"title":{},"body":{"license.html":{}}}],["config",{"_index":787,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["config.csv",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1452,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":464,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('data",{"_index":336,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('results",{"_index":335,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('starting",{"_index":412,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":478,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":1398,"title":{},"body":{"license.html":{}}}],["const",{"_index":107,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["constructor(private",{"_index":252,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["container",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1354,"title":{},"body":{"index.html":{}}}],["context",{"_index":538,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["contract",{"_index":1447,"title":{},"body":{"license.html":{}}}],["control",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":262,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convenience",{"_index":223,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convention",{"_index":155,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["coordinate",{"_index":217,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":44,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinate_system.cartesian",{"_index":87,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinatesystem",{"_index":86,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["copies",{"_index":1419,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1406,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1396,"title":{},"body":{"license.html":{}}}],["cors",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1086,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["creation_date",{"_index":541,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator",{"_index":542,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_first_name",{"_index":543,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_last_name",{"_index":544,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["credits",{"_index":1383,"title":{},"body":{"index.html":{}}}],["css",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["csv.ts",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csvreport",{"_index":468,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":470,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvtext",{"_index":1340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlclick",{"_index":222,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ctrlkey",{"_index":365,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cubegeometry",{"_index":50,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cubes",{"_index":122,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cuboid",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["currentstate",{"_index":375,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.data",{"_index":381,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.zoomopacity",{"_index":380,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cursor",{"_index":250,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cyberinfrastructure",{"_index":1385,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":98,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["d.scenegraph",{"_index":118,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["d.sphere",{"_index":117,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d.unpickable",{"_index":120,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d.wireframe",{"_index":119,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["damages",{"_index":1443,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":67,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.concat(object.values(results",{"_index":338,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.length",{"_index":72,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.push",{"_index":339,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.ts",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data?.length",{"_index":311,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["database",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["datasets",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1408,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1453,"title":{},"body":{"license.html":{}}}],["debugscenenodeprocessing",{"_index":178,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["debugscenenodeprocessing(data",{"_index":319,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["december",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["deck",{"_index":191,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck(props",{"_index":288,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/core",{"_index":45,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":196,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/geo",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":48,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deckprops",{"_index":253,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.camera",{"_index":257,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.interactive",{"_index":263,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.legacylighting",{"_index":283,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.maxrotationx",{"_index":293,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.minrotationx",{"_index":291,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.rotation",{"_index":296,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.target",{"_index":294,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.zoom",{"_index":297,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["decompress",{"_index":436,"title":{},"body":{"interfaces/Collision.html":{}}}],["decorator",{"_index":199,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deeply",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["delete",{"_index":515,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["demo",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":828,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["depthmask",{"_index":162,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["derivescenegraph",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["derivescenegraph(scenegraphnodename",{"_index":1331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["details",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1384,"title":{},"body":{"index.html":{}}}],["developments",{"_index":1113,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["didzoom",{"_index":312,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["different",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["dimension_units",{"_index":545,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["direct",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":89,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["display",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1415,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":62,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["docollisions(scene",{"_index":411,"title":{},"body":{"interfaces/Collision.html":{},"miscellaneous/functions.html":{}}}],["docollisions(state.data",{"_index":127,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["document",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":673,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["done",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["dracoloader",{"_index":401,"title":{},"body":{"interfaces/Collision.html":{}}}],["during",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":37,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.info",{"_index":168,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["e.isdragging",{"_index":280,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object",{"_index":358,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object['@id",{"_index":359,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.picked",{"_index":356,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e?.srcevent?.ctrlkey",{"_index":370,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["easier",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":846,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":479,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["entities",{"_index":1342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":1194,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityid",{"_index":424,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["es",{"_index":408,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["eslint",{"_index":88,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["eslint/naming",{"_index":154,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["eslint/no",{"_index":93,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["etc",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":620,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1438,"title":{},"body":{"license.html":{}}}],["event.interactionstate?.iszooming",{"_index":374,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate",{"_index":382,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.rotationx",{"_index":384,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.zoom",{"_index":377,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["expanded",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":94,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["exploration",{"_index":1358,"title":{},"body":{"index.html":{}}}],["export",{"_index":104,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["express",{"_index":1264,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["external",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":737,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extraction_set",{"_index":546,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["extractionsitesurl",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":80,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["favor",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":563,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["fetch",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_format",{"_index":581,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["files",{"_index":1407,"title":{},"body":{"license.html":{}}}],["filter",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["filter(d",{"_index":415,"title":{},"body":{"interfaces/Collision.html":{}}}],["filter(l",{"_index":164,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["final",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":308,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["finishing",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["firstfieldname",{"_index":1337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fit",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1434,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["fixes.ts",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixes/performance",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["flipy",{"_index":259,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["fly",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1423,"title":{},"body":{"license.html":{}}}],["form",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":592,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":1402,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":65,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1320,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1390,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1422,"title":{},"body":{"license.html":{}}}],["further",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["getcolor",{"_index":101,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getcursor",{"_index":277,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["getpickinginfo",{"_index":20,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":32,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getting",{"_index":588,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettransformmatrix",{"_index":97,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["github",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["gltf",{"_index":61,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltf.scenes",{"_index":439,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["gltf.ts",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gltf:${processednode['@id",{"_index":502,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfcache",{"_index":17,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gltfloader",{"_index":403,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltfnode",{"_index":503,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes",{"_index":495,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes.push",{"_index":501,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfoverride",{"_index":1347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfpromise",{"_index":1335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfscene",{"_index":438,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltftransform",{"_index":328,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["gltfurl",{"_index":320,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["good",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":821,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["grab",{"_index":282,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["grabbing",{"_index":281,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["granted",{"_index":1401,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":474,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":477,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":476,"title":{},"body":{"interfaces/Collision.html":{}}}],["halfsize",{"_index":524,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["hand",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["helmet",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1400,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["highlightcolor",{"_index":81,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["highlights",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":469,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":475,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":473,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":472,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":398,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":459,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":456,"title":{},"body":{"interfaces/Collision.html":{}}}],["holders",{"_index":1440,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["htmlcanvaselement",{"_index":187,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["htmlelement",{"_index":188,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["http://localhost:8080/source_data/asct",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/reference",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://beta",{"_index":1361,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":1372,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1365,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":321,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":326,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["https://old",{"_index":1367,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1363,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":714,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["icon",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":76,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1431,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["improve",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1426,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":713,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1388,"title":{},"body":{"index.html":{}}}],["individual",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{}}}],["info.object",{"_index":367,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.object['@id",{"_index":368,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.picked",{"_index":366,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info?.object?.['@id",{"_index":393,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["information",{"_index":870,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":301,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["initializestate",{"_index":21,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["instead",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":285,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interact",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":372,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interactive",{"_index":179,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interest",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":172,"title":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":174,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["isdragging",{"_index":278,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["issue",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":373,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["it's",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":656,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":484,"title":{},"body":{"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["jsonld.ts",{"_index":536,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["jsonld/jsonld",{"_index":566,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["jsonldobj",{"_index":537,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["july",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":69,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["keyboard",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1430,"title":{},"body":{"license.html":{}}}],["known",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":165,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["label",{"_index":547,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["labs/data",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["lasthovered",{"_index":251,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["latest",{"_index":625,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layer",{"_index":205,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["layer.ts",{"_index":10,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["layer.ts:35",{"_index":31,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:36",{"_index":29,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:38",{"_index":40,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:44",{"_index":42,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:91",{"_index":33,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layername",{"_index":18,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers",{"_index":49,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["lb",{"_index":518,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["lb.clone().vadd(halfsize",{"_index":528,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ld",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":564,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["left/right",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["legacylighting",{"_index":180,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["level",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1444,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1441,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":653,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["library/vh_female/united/vhf_united_color.glb",{"_index":325,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["library/vh_male/united/vhm_united_color.glb",{"_index":324,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["license",{"_index":1394,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["lightingeffect",{"_index":192,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["limitation",{"_index":1410,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1051,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":91,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["link",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":690,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":25,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":399,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{}}}],["load(model.scenegraph",{"_index":435,"title":{},"body":{"interfaces/Collision.html":{}}}],["loaded",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":400,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":402,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":404,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loadgltf",{"_index":57,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf(model",{"_index":1333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadgltf({scenegraph",{"_index":494,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["loadgltf2",{"_index":58,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf2(model.scenegraphnode",{"_index":151,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["loadgltf2(scenegraphnodename",{"_index":1334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["location",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1382,"title":{},"body":{"index.html":{}}}],["logging",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":304,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["lowerbound",{"_index":419,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lowerbound[i",{"_index":432,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lru",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":52,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["m",{"_index":129,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraph",{"_index":130,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraphnode",{"_index":131,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["made",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":562,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["managers",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["map(model",{"_index":416,"title":{},"body":{"interfaces/Collision.html":{}}}],["march",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":417,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint",{"_index":420,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":422,"title":{},"body":{"interfaces/Collision.html":{}}}],["match",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":170,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":197,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":466,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(n",{"_index":431,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["math.min(math.max(1",{"_index":376,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["math.min(n",{"_index":428,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["matrix",{"_index":345,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix.gettranslation",{"_index":348,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4",{"_index":189,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e",{"_index":329,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(matrix4.identity",{"_index":530,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(model.transformmatrix",{"_index":418,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(modelmatrix",{"_index":500,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":346,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(worldmatrix",{"_index":496,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4.identity",{"_index":497,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["maxhits",{"_index":465,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":181,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["mc",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1433,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1413,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":95,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meshlayer('cubes",{"_index":138,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer('pickablecubes",{"_index":139,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer('pickablespheres",{"_index":137,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer('spheres",{"_index":136,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer('wireframes",{"_index":140,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer(id",{"_index":66,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["minor",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":182,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["miscellaneous",{"_index":1319,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1395,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":149,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["model._lighting",{"_index":157,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.color",{"_index":160,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.entityid",{"_index":425,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.opacity",{"_index":146,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraph",{"_index":153,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraphnode",{"_index":150,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.tooltip",{"_index":423,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":159,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.unpickable",{"_index":148,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.zoombasedopacity",{"_index":144,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model['@id",{"_index":142,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["modelmatrix",{"_index":441,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":449,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":448,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["models",{"_index":125,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["models.map((model",{"_index":141,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["modify",{"_index":1412,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1454,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1351,"title":{},"body":{"index.html":{}}}],["more",{"_index":1020,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouseevent",{"_index":220,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["moved",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1352,"title":{},"body":{"index.html":{}}}],["n.bbox",{"_index":509,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["n3",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":487,"title":{},"body":{"interfaces/ProcessedNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names.push(child.name",{"_index":491,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["navigation",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["near",{"_index":260,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["needed",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1386,"title":{},"body":{"index.html":{}}}],["new",{"_index":75,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":90,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["ng5",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1391,"title":{},"body":{"index.html":{}}}],["node",{"_index":56,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["node.bbox",{"_index":512,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.extend(child.bbox",{"_index":514,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.lowerbound",{"_index":519,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.upperbound",{"_index":521,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.center",{"_index":527,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.id",{"_index":499,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.mesh",{"_index":442,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives",{"_index":443,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives.length",{"_index":444,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.name",{"_index":451,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.size",{"_index":522,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.transformmatrix",{"_index":529,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.ts",{"_index":583,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["node.zoomtoonload",{"_index":313,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclick",{"_index":236,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclickevent",{"_index":221,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodeclicksubject",{"_index":228,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedrag",{"_index":246,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragend",{"_index":248,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragendsubject",{"_index":235,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragevent",{"_index":219,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodedragstart",{"_index":244,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragstartsubject",{"_index":233,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragsubject",{"_index":234,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstart",{"_index":238,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstartsubject",{"_index":229,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstop",{"_index":240,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstopsubject",{"_index":230,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodes",{"_index":208,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["nodes.ts",{"_index":482,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodes[n]).filter(n",{"_index":511,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[node['@id",{"_index":516,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[processednode['@id",{"_index":507,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["noninfringement",{"_index":1437,"title":{},"body":{"license.html":{}}}],["note",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":964,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":100,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["numeric",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":214,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.hasownproperty.call(url2gltf",{"_index":132,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.values(nodes",{"_index":517,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(nodes).filter(n",{"_index":508,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(results",{"_index":337,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["obtaining",{"_index":1405,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1366,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":267,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondrag",{"_index":273,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragend",{"_index":275,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragstart",{"_index":271,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["one",{"_index":1008,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["onhover",{"_index":265,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["online",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["ontology/objects/vhf_united_v01_060420.glb",{"_index":327,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["onviewstatechange",{"_index":269,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["opacities",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":143,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["openapi",{"_index":704,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1378,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1380,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1379,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":68,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["orbitaxis",{"_index":210,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["orbitview",{"_index":193,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["organ",{"_index":639,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["organs/anatomical",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["orthographic",{"_index":258,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["orthographicview",{"_index":194,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ot2od026671",{"_index":1393,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1449,"title":{},"body":{"license.html":{}}}],["out",{"_index":1451,"title":{},"body":{"license.html":{}}}],["over",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1455,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":659,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["parameters['getpickinginfo']>[0",{"_index":166,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["parent",{"_index":183,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["parsecsv",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsv(sourceurl",{"_index":1336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsecsvtext",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsvtext(csvtext",{"_index":1339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":254,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["particular",{"_index":1435,"title":{},"body":{"license.html":{}}}],["partly",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["pbr",{"_index":158,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["performance",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1399,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1420,"title":{},"body":{"license.html":{}}}],["person",{"_index":1404,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1421,"title":{},"body":{"license.html":{}}}],["pickable",{"_index":77,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["pickablecubes",{"_index":123,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["pickablespheres",{"_index":121,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["picked",{"_index":218,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["pickinfo",{"_index":213,"title":{"interfaces/PickInfo.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["placeholder",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":548,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["placement_date",{"_index":568,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["player",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":357,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["popup",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":715,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1428,"title":{},"body":{"license.html":{}}}],["position",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["postprocess",{"_index":437,"title":{},"body":{"interfaces/Collision.html":{}}}],["preferences",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["primitive",{"_index":445,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position",{"_index":446,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position.min",{"_index":447,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["priority",{"_index":584,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["private",{"_index":227,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["process",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["processanatomicalstructures",{"_index":1186,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processanatomicalstructures(sourceurl",{"_index":1341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processed",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["processednode",{"_index":480,"title":{"interfaces/ProcessedNode.html":{}},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["processednode.bbox",{"_index":506,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processednode['@id",{"_index":504,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processextractionsites",{"_index":1188,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processextractionsites(sourceurl",{"_index":1343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processing",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["processreferencedata",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processreferencedata(refentities",{"_index":1344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processscenenodes",{"_index":206,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processscenenodes(gltfurl",{"_index":333,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities(parent",{"_index":1346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":674,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1353,"title":{},"body":{"index.html":{}}}],["projects/.../body",{"_index":1325,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../global",{"_index":1321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../load",{"_index":1323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../parse",{"_index":1326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../process",{"_index":1322,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene",{"_index":1328,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../simplify",{"_index":1327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../spatial",{"_index":1324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":106,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["promise(r",{"_index":305,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["props",{"_index":255,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["props.effects",{"_index":284,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["provided",{"_index":1154,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1414,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1436,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":654,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["r.hits.length",{"_index":467,"title":{},"body":{"interfaces/Collision.html":{}}}],["rc.1",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["real",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["rectify",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["refentities",{"_index":1345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":323,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":549,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["referencedataconfig",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["referenceorganconfigurl",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refernced",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["registergltfloaders",{"_index":59,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registration",{"_index":736,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["renderlayers",{"_index":22,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["report",{"_index":452,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":460,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":1350,"title":{},"body":{"index.html":{}}}],["representation_of",{"_index":550,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["required",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["resets",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1409,"title":{},"body":{"license.html":{}}}],["result",{"_index":169,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":171,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":74,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["returns",{"_index":38,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":39,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["returntype['getpickinginfo",{"_index":167,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rgb",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":565,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["rights",{"_index":1411,"title":{},"body":{"license.html":{}}}],["root",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":184,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotation_units",{"_index":576,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rotationorbit",{"_index":211,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotationx",{"_index":212,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["round",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":612,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["rui_rank",{"_index":551,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rxjs",{"_index":202,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":204,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sad",{"_index":453,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":463,"title":{},"body":{"interfaces/Collision.html":{}}}],["sample",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["scale(halfsize.toarray",{"_index":532,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scaling_units",{"_index":572,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["scene",{"_index":55,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scene.children",{"_index":490,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.filter(d",{"_index":434,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":489,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.ts",{"_index":1199,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scenegraph",{"_index":134,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphlayer",{"_index":46,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["scenegraphnode",{"_index":341,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["scenegraphnodename",{"_index":1332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scenerotation",{"_index":242,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenerotationsubject",{"_index":231,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenetraversalvisitor",{"_index":1459,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scheduled",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1387,"title":{},"body":{"index.html":{}}}],["search",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":774,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1418,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["setinteractive(value",{"_index":354,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotation(value",{"_index":350,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotationx(value",{"_index":351,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setscene(data",{"_index":310,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settarget(value",{"_index":353,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settimeout(r",{"_index":306,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setup",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["setzoom(value",{"_index":352,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sex",{"_index":552,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sexes",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1425,"title":{},"body":{"license.html":{}}}],["share",{"_index":203,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["shared",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["shared/spatial",{"_index":54,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["shortest",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":553,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sides",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["simplemeshlayer",{"_index":47,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["simplifies",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["simplifyscene",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["simplifyscene(nodes",{"_index":1348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sites",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["sites.ts",{"_index":1187,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizable",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":485,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["size.clone().vmul(new",{"_index":525,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["slice_count",{"_index":554,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slice_thickness",{"_index":555,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slider",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1355,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceboxes",{"_index":414,"title":{},"body":{"interfaces/Collision.html":{}}}],["sources",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["sourceurl",{"_index":1338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sparc",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["spatial",{"_index":535,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialentityjsonld",{"_index":533,"title":{"interfaces/SpatialEntityJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialobjectreferencejsonld",{"_index":560,"title":{"interfaces/SpatialObjectReferenceJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialplacementjsonld",{"_index":561,"title":{"interfaces/SpatialPlacementJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialscenenode",{"_index":53,"title":{"interfaces/SpatialSceneNode.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["spec",{"_index":567,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1376,"title":{},"body":{"index.html":{}}}],["specific",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1375,"title":{},"body":{"index.html":{}}}],["speed",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["sphere",{"_index":585,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["spheregeometry",{"_index":51,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["spheres",{"_index":115,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["spinning",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":454,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":455,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":461,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":462,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":364,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["stage",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":675,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":1374,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1359,"title":{},"body":{"index.html":{}}}],["started",{"_index":589,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":112,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.data.filter(d",{"_index":116,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.docollisions",{"_index":126,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.zoomopacity",{"_index":145,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["statements",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["stay",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["structures.ts",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":201,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"license.html":{}}}],["subject.next",{"_index":394,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sublicense",{"_index":1416,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1427,"title":{},"body":{"license.html":{}}}],["support",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["switched",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":185,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["target.name",{"_index":458,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":457,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes",{"_index":433,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":450,"title":{},"body":{"interfaces/Collision.html":{}}}],["technologies",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":340,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["testing",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["this._dragevent(info",{"_index":386,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onclick",{"_index":268,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondrag",{"_index":274,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragend",{"_index":276,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragstart",{"_index":272,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onhover",{"_index":266,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onviewstatechange",{"_index":270,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer",{"_index":264,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.setstate",{"_index":317,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.state",{"_index":302,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.cursor",{"_index":279,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.debugscenenodeprocessing(data",{"_index":318,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck",{"_index":287,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.finalize",{"_index":309,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.props.viewstate",{"_index":347,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.setprops",{"_index":289,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deckprops.debugscenenodeprocessing",{"_index":316,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.lasthovered",{"_index":361,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.next",{"_index":369,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":237,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject",{"_index":391,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject.pipe(share",{"_index":249,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject",{"_index":387,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject.pipe(share",{"_index":245,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject",{"_index":389,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject.pipe(share",{"_index":247,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":362,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":239,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":360,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":241,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.props",{"_index":108,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.scenerotationsubject.next([deckprops.rotation",{"_index":299,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.next([event.viewstate.rotationorbit",{"_index":383,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.pipe(share",{"_index":243,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.setstate",{"_index":109,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.state",{"_index":113,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.zoomto(node",{"_index":314,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["through",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":471,"title":{},"body":{"interfaces/Collision.html":{},"changelog.html":{}}}],["tissues",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["tool",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":505,"title":{},"body":{"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":1448,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["transformmatrix",{"_index":99,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["translate(center.toarray",{"_index":531,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["translation_units",{"_index":580,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["transparency",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["traversal",{"_index":410,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["traversal.ts",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["traversescene",{"_index":409,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["traversescene(gltfscene",{"_index":440,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":498,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["travisci",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":78,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["try",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1457,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":92,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["ub",{"_index":520,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ub.clone().vsub(lb",{"_index":523,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ufl",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":9,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1362,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1371,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1368,"title":{},"body":{"index.html":{}}}],["ui.ts",{"_index":175,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/organ",{"_index":1370,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1369,"title":{},"body":{"index.html":{}}}],["ui/src/global",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/body",{"_index":8,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/shared/ccf",{"_index":534,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["ui/src/lib/shared/spatial",{"_index":582,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["ui/src/lib/util/load",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/parse",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/process",{"_index":481,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui/src/lib/util/scene",{"_index":1196,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/simplify",{"_index":1198,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/spatial",{"_index":396,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":71,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/functions.html":{}}}],["university",{"_index":1389,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":70,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["unnecessary",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":586,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["unselect",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["updated_date",{"_index":556,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["updates",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["upperbound",{"_index":421,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["upperbound[i",{"_index":429,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["url",{"_index":105,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf",{"_index":128,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[m.scenegraph",{"_index":133,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[model.scenegraph",{"_index":152,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["use",{"_index":780,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":593,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["util/load",{"_index":60,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["util/process",{"_index":207,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["util/spatial",{"_index":63,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["utilities",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1460,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec3",{"_index":406,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...lowerbound.map((n",{"_index":427,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...upperbound.map((n",{"_index":430,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(0.5",{"_index":526,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["version",{"_index":706,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["vhf_kidney_l_low1').then((results",{"_index":334,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["vhf_kidney_r_low",{"_index":342,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["via",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":256,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["viewstate",{"_index":290,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["viewstateprops",{"_index":195,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["visitor",{"_index":1349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["visual",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":41,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1432,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1429,"title":{},"body":{"license.html":{}}}],["web",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1357,"title":{},"body":{"index.html":{}}}],["week",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1445,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["wireframe",{"_index":96,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["wireframes",{"_index":124,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["within",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":734,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["worldmatrix",{"_index":493,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["wrapper",{"_index":224,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x",{"_index":215,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x_dimension",{"_index":557,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_rotation",{"_index":573,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_scaling",{"_index":569,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_translation",{"_index":577,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y",{"_index":216,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["y_dimension",{"_index":558,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_rotation",{"_index":574,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_scaling",{"_index":570,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_translation",{"_index":578,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["yes",{"_index":1330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youtube",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["z_dimension",{"_index":559,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_rotation",{"_index":575,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_scaling",{"_index":571,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_translation",{"_index":579,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["zone.js",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":186,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoombasedopacity",{"_index":343,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomopacity",{"_index":110,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomto(node",{"_index":344,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomtoonload",{"_index":587,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                gltfCache\n                            \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        gltfCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        layerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BodyUILayer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPickingInfo\n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReturnType<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderLayers\n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     []\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { CubeGeometry, SphereGeometry } from '@luma.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: new CubeGeometry() as any,\n        wireframe: false,\n        getTransformMatrix: (d) => (d as { transformMatrix: number[][] }).transformMatrix,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise } = {};\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as { data: SpatialSceneNode[]; zoomOpacity: number; doCollisions: boolean };\n    const spheres = state.data.filter(d => d.sphere && !d.scenegraph && !d.wireframe && d.unpickable);\n    const pickableSpheres = state.data.filter(d => d.sphere && !d.scenegraph && !d.wireframe && !d.unpickable);\n    const cubes = state.data.filter(d => !d.sphere && !d.scenegraph && !d.wireframe && d.unpickable);\n    const pickableCubes = state.data.filter(d => !d.sphere && !d.scenegraph && !d.wireframe && !d.unpickable);\n    const wireframes = state.data.filter(d => !d.sphere && !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise } = {};\n    for (const m of models) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    return [\n      meshLayer('spheres', spheres, { wireframe: false, pickable: false, mesh: new SphereGeometry() }),\n      meshLayer('pickableSpheres', pickableSpheres, { wireframe: false, pickable: true, mesh: new SphereGeometry() }),\n      meshLayer('cubes', cubes, { wireframe: false, pickable: false }),\n      meshLayer('pickableCubes', pickableCubes, { wireframe: false, pickable: true }),\n      meshLayer('wireframes', wireframes, { wireframe: true, pickable: false }),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : (model.opacity !== undefined ? model.opacity : 1.0),\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string]) :\n            model.scenegraph as unknown as URL,\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          _lighting: model._lighting, // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color ?? [0, 255, 0, 0.5*255],\n          parameters: { depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1) }\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(\n    e: Parameters['getPickingInfo']>[0]\n  ): ReturnType['getPickingInfo']> {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debugSceneNodeProcessing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            legacyLighting\n                                        \n                                \n                                \n                                        \n                                            maxRotationX\n                                        \n                                \n                                \n                                        \n                                            minRotationX\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugSceneNodeProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugSceneNodeProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyLighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyLighting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orbitAxis\n                                        \n                                \n                                \n                                        \n                                            rotationOrbit\n                                        \n                                \n                                \n                                        \n                                            rotationX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationOrbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationOrbit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\n/* eslint-disable  */\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && !d.wireframe)\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickInfo.html":{"url":"interfaces/PickInfo.html","title":"interface - PickInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picked\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedNode.html":{"url":"interfaces/ProcessedNode.html","title":"interface - ProcessedNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SpatialSceneNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            jsonld\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:     AABB\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AABB\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonld:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\n\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n/* eslint-disable  */\nfunction childNames(scene, names: string[] = []): string[] {\n  for (const child of (scene.nodes || scene.children || [])) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string\n    ): Promise {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({scenegraph: gltfUrl, scenegraphNode} as SpatialSceneNode);\n  const nodes: {[node: string]: ProcessedNode} = {};\n  const gltfNodes: ProcessedNode[] = [];\n  for (const scene of gltf.scenes) {\n    worldMatrix = new Matrix4(worldMatrix || Matrix4.IDENTITY);\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        wireframe: true,\n        node\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter(n => !n.bbox)) {\n    for (const child of childNames(node.node).map(n => nodes[n]).filter(n => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = node.size = ub.clone().vsub(lb);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = node.center = lb.clone().vadd(halfSize);\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY)\n      .translate(center.toArray())\n      .scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntityJsonLd.html":{"url":"interfaces/SpatialEntityJsonLd.html","title":"interface - SpatialEntityJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialEntityJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            ccf_annotations\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            creation_date\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            creator_first_name\n                                        \n                                \n                                \n                                        \n                                            creator_last_name\n                                        \n                                \n                                \n                                        \n                                            dimension_units\n                                        \n                                \n                                \n                                        \n                                            extraction_set\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                                \n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                        \n                                            rui_rank\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slice_count\n                                        \n                                \n                                \n                                        \n                                            slice_thickness\n                                        \n                                \n                                \n                                        \n                                            updated_date\n                                        \n                                \n                                \n                                        \n                                            x_dimension\n                                        \n                                \n                                \n                                        \n                                            y_dimension\n                                        \n                                \n                                \n                                        \n                                            z_dimension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccf_annotations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ccf_annotations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraction_set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraction_set:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReferenceJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReferenceJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"Left\" | \"Right\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Left\" | \"Right\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReferenceJsonLd.html":{"url":"interfaces/SpatialObjectReferenceJsonLd.html","title":"interface - SpatialObjectReferenceJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialObjectReferenceJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            file_format\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacementJsonLd.html":{"url":"interfaces/SpatialPlacementJsonLd.html","title":"interface - SpatialPlacementJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialPlacementJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            placement_date\n                                        \n                                \n                                \n                                        \n                                            rotation_units\n                                        \n                                \n                                \n                                        \n                                            scaling_units\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            translation_units\n                                        \n                                \n                                \n                                        \n                                            x_rotation\n                                        \n                                \n                                \n                                        \n                                            x_scaling\n                                        \n                                \n                                \n                                        \n                                            x_translation\n                                        \n                                \n                                \n                                        \n                                            y_rotation\n                                        \n                                \n                                \n                                        \n                                            y_scaling\n                                        \n                                \n                                \n                                        \n                                            y_translation\n                                        \n                                \n                                \n                                        \n                                            z_rotation\n                                        \n                                \n                                \n                                        \n                                            z_scaling\n                                        \n                                \n                                \n                                        \n                                            z_translation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _lighting\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraphNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sphere\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            transformMatrix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            wireframe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomBasedOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToOnLoad\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sphere\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sphere:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  sphere?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui/src/global-fixes.ts\n            \n            function\n            castToGlobalType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            class\n            BodyUILayer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            meshLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            class\n            BodyUI\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIProps\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIViewStateProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            PickInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialEntityJsonLd\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialObjectReferenceJsonLd\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialPlacementJsonLd\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n            \n            interface\n            SpatialSceneNode\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            deriveScenegraph\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            registerGLTFLoaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSVText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n            \n            function\n            processAnatomicalStructures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n            \n            function\n            processExtractionSites\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            function\n            processReferenceData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            variable\n            referenceDataConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            interface\n            ProcessedNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            childNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            processSceneNodes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n            \n            function\n            processSpatialEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n            \n            function\n            traverseScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n            \n            function\n            simplifyScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            function\n            doCollisions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            castToGlobalType   (projects/.../global-fixes.ts)\n                        \n                        \n                            childNames   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            deriveScenegraph   (projects/.../load-gltf.ts)\n                        \n                        \n                            doCollisions   (projects/.../spatial-scene-collider.ts)\n                        \n                        \n                            loadGLTF   (projects/.../load-gltf.ts)\n                        \n                        \n                            loadGLTF2   (projects/.../load-gltf.ts)\n                        \n                        \n                            meshLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            parseCSV   (projects/.../parse-csv.ts)\n                        \n                        \n                            parseCSVText   (projects/.../parse-csv.ts)\n                        \n                        \n                            processAnatomicalStructures   (projects/.../process-anatomical-structures.ts)\n                        \n                        \n                            processExtractionSites   (projects/.../process-extraction-sites.ts)\n                        \n                        \n                            processReferenceData   (projects/.../process-reference-data.ts)\n                        \n                        \n                            processSceneNodes   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            processSpatialEntities   (projects/.../process-spatial-entities.ts)\n                        \n                        \n                            registerGLTFLoaders   (projects/.../load-gltf.ts)\n                        \n                        \n                            simplifyScene   (projects/.../simplify-scene.ts)\n                        \n                        \n                            traverseScene   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/global-fixes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        castToGlobalType\n                        \n                    \n                \n            \n            \n                \ncastToGlobalType(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        childNames\n                        \n                    \n                \n            \n            \n                \nchildNames(scene, names)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    names\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSceneNodes\n                        \n                    \n                \n            \n            \n                \nprocessSceneNodes(gltfUrl, worldMatrix?, scenegraphNode?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gltfUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    scenegraphNode\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/load-gltf.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deriveScenegraph\n                        \n                    \n                \n            \n            \n                \nderiveScenegraph(scenegraphNodeName, gltf)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltf\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF\n                        \n                    \n                \n            \n            \n                \nloadGLTF(model, cache?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cache\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF2\n                        \n                    \n                \n            \n            \n                \nloadGLTF2(scenegraphNodeName, gltfPromise)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfPromise\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerGLTFLoaders\n                        \n                    \n                \n            \n            \n                \nregisterGLTFLoaders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doCollisions\n                        \n                    \n                \n            \n            \n                \ndoCollisions(scene)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/body-ui-layer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meshLayer\n                        \n                    \n                \n            \n            \n                \nmeshLayer(id, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SimpleMeshLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/parse-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseCSV\n                        \n                    \n                \n            \n            \n                \nparseCSV(sourceUrl, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCSVText\n                        \n                    \n                \n            \n            \n                \nparseCSVText(csvText, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    csvText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processAnatomicalStructures\n                        \n                    \n                \n            \n            \n                \nprocessAnatomicalStructures(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processExtractionSites\n                        \n                    \n                \n            \n            \n                \nprocessExtractionSites(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processReferenceData\n                        \n                    \n                \n            \n            \n                \nprocessReferenceData(refEntities, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refEntities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSpatialEntities\n                        \n                    \n                \n            \n            \n                \nprocessSpatialEntities(parent, gltfOverride?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfOverride\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        simplifyScene\n                        \n                    \n                \n            \n            \n                \nsimplifyScene(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        traverseScene\n                        \n                    \n                \n            \n            \n                \ntraverseScene(scene, worldMatrix, visitor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    visitor\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeClickEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            NodeDragEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            SceneTraversalVisitor   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/body-ui.ts\n    \n    \n        \n            \n                \n                    \n                    NodeClickEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeDragEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n    \n        \n            \n                \n                    \n                    SceneTraversalVisitor\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            referenceDataConfig   (projects/.../process-reference-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        referenceDataConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  extractionSitesUrl: 'http://localhost:8080/source_data/ASCT-B_3D_Models_Extraction_Sites.csv',\n  anatomicalStructuresUrl: 'http://localhost:8080/source_data/ASCT-B_3D_Models_Mapping.csv',\n  referenceOrganConfigUrl: 'http://localhost:8080/source_data/reference-organ-config.csv'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
