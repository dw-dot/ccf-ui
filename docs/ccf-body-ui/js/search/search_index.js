var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BodyUILayer.html",[0,1.249,1,1.249]],["body/classes/BodyUILayer.html",[0,1.072,1,1.909,2,1.945,3,0.474,4,0.634,5,0.474,6,0.66,7,0.43,8,1.835,9,1.612,10,1.638,11,1.168,12,3.952,13,0.339,14,0.778,15,4.703,16,2.745,17,3.952,18,3.952,19,3.408,20,3.952,21,4.295,22,4.295,23,0.555,24,0.052,25,1.408,26,2.314,27,1.515,28,3.654,29,2.412,30,1.073,31,2.412,32,2.412,33,2.412,34,2.749,35,1.408,36,0.827,37,1.989,38,3.187,39,2.412,40,2.412,41,1.73,42,2.412,43,1.235,44,2.412,45,1.225,46,3.408,47,3.187,48,1.945,49,1.225,50,3.408,51,1.945,52,1.291,53,1.072,54,0.895,55,0.941,56,1.989,57,1.638,58,1.989,59,2.412,60,1.408,61,2.683,62,2.412,63,2.412,64,1.225,65,1.945,66,2.194,67,2.314,68,2.412,69,1.909,70,1.553,71,2.412,72,1.542,73,2.916,74,1.355,75,0.67,76,4.531,77,1.756,78,2.412,79,2.822,80,2.412,81,1.945,82,2.412,83,2.412,84,2.3,85,3.408,86,3.408,87,1.756,88,1.756,89,2.006,90,2.307,91,2.006,92,1.989,93,1.989,94,2.412,95,2.916,96,3.408,97,2.507,98,1.515,99,1.453,100,3.408,101,1.33,102,2.412,103,0.634,104,3.952,105,1.33,106,2.194,107,2.412,108,2.412,109,1.989,110,2.412,111,2.412,112,2.412,113,1.072,114,3.408,115,4.295,116,3.464,117,3.187,118,3.408,119,3.408,120,3.408,121,3.952,122,2.412,123,2.412,124,2.412,125,2.412,126,3.952,127,2.412,128,2.412,129,2.412,130,1.515,131,2.412,132,2.412,133,2.412,134,2.412,135,2.412,136,1.945,137,1.638,138,3.408,139,2.412,140,4.295,141,1.225,142,2.412,143,1.408,144,2.412,145,2.412,146,2.412,147,2.412,148,1.408,149,1.408,150,1.072,151,2.412,152,1.225,153,2.412,154,2.412,155,2.412,156,2.412,157,1.638,158,2.412,159,2.412,160,2.412,161,2.412,162,2.412,163,0.022,164,0.031,165,0.022]],["title/interfaces/BodyUIProps.html",[166,0.024,167,1.427]],["body/interfaces/BodyUIProps.html",[0,1.14,1,1.4,3,0.619,4,0.432,5,0.324,6,0.231,7,0.288,8,0.642,9,0.879,11,0.564,13,0.36,14,0.585,16,2.9,23,0.697,24,0.052,27,1.714,30,1.094,36,1.219,37,2.756,41,2.545,43,1.191,45,0.835,49,0.835,52,1.326,53,0.731,54,0.674,55,1.594,66,1.96,69,1.4,70,1.219,72,1.721,74,1.718,75,0.758,77,1.14,79,1.839,84,2.074,87,1.714,88,1.714,89,1.958,90,2.251,91,1.302,92,0.961,93,0.961,97,0.961,98,0.731,99,1.605,101,1.001,103,1.013,105,0.642,106,2.059,109,2.837,113,2.228,130,0.731,141,0.835,148,0.961,149,0.961,150,0.731,152,0.835,163,0.015,164,0.023,165,0.023,166,0.027,167,1.302,168,0.324,169,0.835,170,2.773,171,2.415,172,2.415,173,2.415,174,2.415,175,2.618,176,2.618,177,1.806,178,2.415,179,1.721,180,2.995,181,2.139,182,2.139,183,1.714,184,2.139,185,2.139,186,1.741,187,1.741,188,1.741,189,1.741,190,1.117,191,0.642,192,2.575,193,0.961,194,1.117,195,2.646,196,0.961,197,1.117,198,1.117,199,1.741,200,0.835,201,1.117,202,0.835,203,2.24,204,2.139,205,2.415,206,2.415,207,2.165,208,1.388,209,1.117,210,2.139,211,0.835,212,1.741,213,0.961,214,2.618,215,0.961,216,1.741,217,1.117,218,1.117,219,0.835,220,0.961,221,3.432,222,1.117,223,1.117,224,1.117,225,1.117,226,1.117,227,1.117,228,1.117,229,1.117,230,1.117,231,1.117,232,1.117,233,1.117,234,1.117,235,1.117,236,1.117,237,1.117,238,1.117,239,1.117,240,1.117,241,1.117,242,1.117,243,1.117,244,1.117,245,2.618,246,1.117,247,1.741,248,1.117,249,1.117,250,0.961,251,1.741,252,0.961,253,1.117,254,1.117,255,1.117,256,1.741,257,1.741,258,1.117,259,1.117,260,1.117,261,1.117,262,1.117,263,1.117,264,1.117,265,1.117,266,1.117,267,1.117,268,1.117,269,1.117,270,1.117,271,1.117,272,1.117,273,1.741,274,1.117,275,1.117,276,1.117,277,1.117,278,1.117,279,1.117,280,1.117,281,1.117,282,1.117,283,2.995,284,2.995,285,1.117,286,1.741,287,1.117,288,1.117,289,1.497,290,1.741,291,1.117,292,1.117,293,1.117,294,0.835,295,1.117,296,2.139,297,1.302,298,1.117,299,1.117,300,1.117,301,1.741,302,1.117,303,1.117,304,1.117,305,1.117,306,2.139,307,1.117,308,1.117,309,1.741,310,1.117,311,2.139,312,1.117,313,1.117,314,1.806,315,1.497,316,1.497,317,1.001,318,1.117,319,1.117,320,1.117,321,1.117,322,2.139,323,1.117,324,1.117,325,1.117,326,1.117,327,0.835,328,1.117,329,1.117,330,1.117,331,1.117,332,1.117,333,1.117,334,1.497,335,0.731,336,1.117,337,0.835,338,1.117,339,1.117,340,1.117,341,2.618,342,1.117,343,1.117,344,1.117,345,1.117,346,1.117,347,1.117,348,1.117,349,1.117,350,1.741,351,1.117,352,2.139,353,1.117,354,1.741,355,1.741,356,1.117,357,1.117,358,1.117,359,1.117,360,1.117,361,2.139,362,1.117,363,1.117,364,1.117,365,1.117,366,1.117,367,1.117,368,1.117,369,1.117,370,1.117,371,1.117,372,1.117,373,0.731,374,1.117,375,1.117,376,1.117,377,1.117,378,1.117,379,1.117,380,2.139,381,1.117,382,1.117,383,1.117,384,1.117,385,1.117,386,1.117,387,1.117,388,1.117]],["title/interfaces/BodyUIViewStateProps.html",[166,0.024,203,1.427]],["body/interfaces/BodyUIViewStateProps.html",[0,1.166,1,1.426,3,0.631,4,0.445,5,0.333,6,0.238,7,0.293,8,0.661,9,0.899,11,0.899,13,0.368,14,0.599,16,2.917,23,0.642,24,0.053,27,1.737,30,1.066,36,1.239,37,2.777,41,2.559,43,1.201,45,0.86,49,0.86,52,1.339,53,0.753,54,0.689,55,1.613,66,1.98,69,1.426,70,1.239,72,1.738,74,1.728,75,0.516,77,1.166,79,1.874,84,2.099,87,1.737,88,1.737,89,1.985,90,2.282,91,1.332,92,0.989,93,0.989,97,0.989,98,0.753,99,1.601,101,1.024,103,1.027,105,0.661,106,2.076,109,2.856,113,2.076,130,0.753,141,0.86,148,0.989,149,0.989,150,0.753,152,0.86,163,0.015,164,0.024,165,0.024,166,0.028,167,0.86,168,0.333,169,0.86,170,2.807,171,1.151,172,1.151,173,1.151,174,1.151,175,1.781,176,1.781,177,0.86,178,1.151,179,1.738,180,3.025,181,1.151,182,1.151,183,1.737,184,2.179,185,2.179,186,1.781,187,1.781,188,1.781,189,2.179,190,1.151,191,0.661,192,2.6,193,0.989,194,1.151,195,2.669,196,0.989,197,1.151,198,1.151,199,1.781,200,0.86,201,1.151,202,0.86,203,2.322,204,2.807,205,2.927,206,2.927,207,2.189,208,1.41,209,1.151,210,2.179,211,0.86,212,1.781,213,0.989,214,2.654,215,0.989,216,1.781,217,1.151,218,1.151,219,0.86,220,0.989,221,3.45,222,1.151,223,1.151,224,1.151,225,1.151,226,1.151,227,1.151,228,1.151,229,1.151,230,1.151,231,1.151,232,1.151,233,1.151,234,1.151,235,1.151,236,1.151,237,1.151,238,1.151,239,1.151,240,1.151,241,1.151,242,1.151,243,1.151,244,1.151,245,2.654,246,1.151,247,1.781,248,1.151,249,1.151,250,0.989,251,1.781,252,0.989,253,1.151,254,1.151,255,1.151,256,1.781,257,1.781,258,1.151,259,1.151,260,1.151,261,1.151,262,1.151,263,1.151,264,1.151,265,1.151,266,1.151,267,1.151,268,1.151,269,1.151,270,1.151,271,1.151,272,1.151,273,1.781,274,1.151,275,1.151,276,1.151,277,1.151,278,1.151,279,1.151,280,1.151,281,1.151,282,1.151,283,3.025,284,3.025,285,1.151,286,1.781,287,1.151,288,1.151,289,1.531,290,1.781,291,1.151,292,1.151,293,1.151,294,0.86,295,1.151,296,2.179,297,1.332,298,1.151,299,1.151,300,1.151,301,1.781,302,1.151,303,1.151,304,1.151,305,1.151,306,2.179,307,1.151,308,1.151,309,1.781,310,1.151,311,2.179,312,1.151,313,1.151,314,1.835,315,1.531,316,1.531,317,1.024,318,1.151,319,1.151,320,1.151,321,1.151,322,2.179,323,1.151,324,1.151,325,1.151,326,1.151,327,0.86,328,1.151,329,1.151,330,1.151,331,1.151,332,1.151,333,1.151,334,1.531,335,0.753,336,1.151,337,0.86,338,1.151,339,1.151,340,1.151,341,2.654,342,1.151,343,1.151,344,1.151,345,1.151,346,1.151,347,1.151,348,1.151,349,1.151,350,1.781,351,1.151,352,2.179,353,1.151,354,1.781,355,1.781,356,1.151,357,1.151,358,1.151,359,1.151,360,1.151,361,2.179,362,1.151,363,1.151,364,1.151,365,1.151,366,1.151,367,1.151,368,1.151,369,1.151,370,1.151,371,1.151,372,1.151,373,0.753,374,1.151,375,1.151,376,1.151,377,1.151,378,1.151,379,1.151,380,2.179,381,1.151,382,1.151,383,1.151,384,1.151,385,1.151,386,1.151,387,1.151,388,1.151]],["title/interfaces/Collision.html",[166,0.024,389,1.908]],["body/interfaces/Collision.html",[3,0.521,4,0.697,5,0.521,6,0.372,7,0.242,13,0.372,14,0.831,23,0.658,24,0.052,25,2.126,30,1.233,35,3.14,43,1.304,52,1.095,53,1.179,54,1.176,55,1.421,60,2.427,64,1.347,69,1.848,72,1.421,73,2.823,74,1.732,75,1.052,77,1.848,87,1.618,88,1.179,103,0.697,105,1.035,106,2.428,116,2.937,117,2.139,136,2.937,143,1.548,157,3.185,163,0.024,164,0.033,165,0.024,166,0.023,168,0.521,179,1.035,183,1.179,191,1.035,294,1.347,297,1.347,389,2.823,390,1.801,391,1.801,392,4.846,393,1.801,394,2.139,395,3.641,396,2.139,397,3.641,398,2.139,399,3.609,400,2.139,401,1.801,402,1.801,403,1.548,404,2.139,405,2.139,406,2.652,407,2.652,408,4.158,409,2.652,410,2.652,411,2.652,412,3.641,413,3.609,414,2.652,415,3.609,416,2.652,417,2.652,418,3.353,419,3.641,420,3.353,421,2.937,422,2.937,423,2.937,424,2.937,425,2.937,426,2.937,427,4.158,428,2.652,429,2.652,430,2.652,431,2.652,432,2.652,433,2.139,434,2.652,435,2.139,436,2.139,437,2.937,438,2.139,439,2.139,440,2.139,441,2.139,442,2.139,443,2.139,444,2.652,445,2.139,446,4.476,447,3.641,448,2.652,449,2.652,450,2.652,451,2.652,452,2.652,453,2.652,454,2.652,455,2.652,456,2.652,457,2.652,458,2.652,459,2.652,460,2.652,461,2.652,462,2.652,463,4.691,464,3.641,465,3.609,466,3.641,467,3.641,468,2.652,469,2.652,470,2.652,471,2.652,472,2.652,473,2.139]],["title/interfaces/PickInfo.html",[166,0.024,207,1.427]],["body/interfaces/PickInfo.html",[0,1.17,1,1.431,3,0.633,4,0.447,5,0.335,6,0.239,7,0.294,8,0.664,9,0.902,11,0.584,13,0.55,14,0.601,16,2.92,23,0.626,24,0.052,27,1.741,30,0.945,36,1.242,37,2.78,41,2.562,43,1.203,45,0.864,49,0.864,52,1.341,53,0.757,54,0.692,55,1.616,66,1.983,69,1.431,70,1.242,72,1.741,74,1.729,75,0.518,77,1.17,79,1.879,84,2.103,87,1.741,88,1.741,89,1.989,90,2.287,91,1.337,92,0.994,93,0.994,97,1.879,98,0.757,99,1.592,101,1.027,103,1.029,105,0.664,106,2.079,109,2.859,113,2.149,130,0.757,141,0.864,148,0.994,149,0.994,150,0.757,152,0.864,163,0.016,164,0.024,165,0.024,166,0.028,167,0.864,168,0.335,169,0.864,170,2.186,171,1.156,172,1.156,173,1.156,174,1.156,175,1.788,176,1.788,177,0.864,178,1.156,179,1.529,180,2.66,181,1.156,182,1.156,183,1.431,184,2.186,185,2.186,186,1.788,187,1.788,188,1.788,189,1.788,190,1.156,191,0.664,192,2.605,193,0.994,194,1.156,195,2.673,196,0.994,197,1.156,198,1.156,199,2.66,200,0.864,201,1.156,202,0.864,203,2.265,204,2.186,205,2.46,206,2.46,207,2.265,208,1.685,209,2.46,210,2.812,211,1.839,212,2.66,213,0.994,214,2.66,215,0.994,216,1.788,217,1.156,218,1.156,219,0.864,220,0.994,221,3.453,222,1.156,223,1.156,224,1.156,225,1.156,226,1.156,227,1.156,228,1.156,229,1.156,230,1.156,231,1.156,232,1.156,233,1.156,234,1.156,235,1.156,236,1.156,237,1.156,238,1.156,239,1.156,240,1.156,241,1.156,242,1.156,243,1.156,244,1.156,245,2.66,246,1.156,247,1.788,248,1.156,249,1.156,250,0.994,251,1.788,252,0.994,253,1.156,254,1.156,255,1.156,256,1.788,257,1.788,258,1.156,259,1.156,260,1.156,261,1.156,262,1.156,263,1.156,264,1.156,265,1.156,266,1.156,267,1.156,268,1.156,269,1.156,270,1.156,271,1.156,272,1.156,273,1.788,274,1.156,275,1.156,276,1.156,277,1.156,278,1.156,279,1.156,280,1.156,281,1.156,282,1.156,283,3.029,284,3.029,285,1.156,286,1.788,287,1.156,288,1.156,289,1.537,290,1.788,291,1.156,292,1.156,293,1.156,294,0.864,295,1.156,296,2.186,297,1.337,298,1.156,299,1.156,300,1.156,301,1.788,302,1.156,303,1.156,304,1.156,305,1.156,306,2.186,307,1.156,308,1.156,309,1.788,310,1.156,311,2.186,312,1.156,313,1.156,314,1.839,315,1.537,316,1.537,317,1.027,318,1.156,319,1.156,320,1.156,321,1.156,322,2.186,323,1.156,324,1.156,325,1.156,326,1.156,327,0.864,328,1.156,329,1.156,330,1.156,331,1.156,332,1.156,333,1.156,334,1.537,335,0.757,336,1.156,337,0.864,338,1.156,339,1.156,340,1.156,341,2.66,342,1.156,343,1.156,344,1.156,345,1.156,346,1.156,347,1.156,348,1.156,349,1.156,350,1.788,351,1.156,352,2.186,353,1.156,354,1.788,355,1.788,356,1.156,357,1.156,358,1.156,359,1.156,360,1.156,361,2.186,362,1.156,363,1.156,364,1.156,365,1.156,366,1.156,367,1.156,368,1.156,369,1.156,370,1.156,371,1.156,372,1.156,373,0.757,374,1.156,375,1.156,376,1.156,377,1.156,378,1.156,379,1.156,380,2.186,381,1.156,382,1.156,383,1.156,384,1.156,385,1.156,386,1.156,387,1.156,388,1.156]],["title/interfaces/ProcessedNode.html",[166,0.024,474,1.908]],["body/interfaces/ProcessedNode.html",[3,0.534,4,0.713,5,0.534,6,0.381,7,0.248,11,1.268,13,0.381,14,0.844,23,0.664,24,0.052,30,1.14,43,1.242,52,1.359,53,1.207,54,1.187,55,2.083,56,1.585,58,2.16,60,2.16,64,1.879,69,1.644,72,1.06,73,2.858,74,1.712,75,0.727,77,1.871,84,2.295,87,1.644,88,1.207,95,1.844,98,1.644,101,1.06,103,0.972,105,1.06,106,2.427,130,1.207,150,1.207,152,1.379,163,0.025,164,0.034,165,0.025,166,0.024,168,0.534,183,1.871,191,1.06,202,1.879,289,2.16,294,1.379,297,1.379,314,1.879,327,1.379,335,1.871,337,1.379,393,1.844,399,3.814,400,4.027,401,1.844,402,1.844,403,1.585,404,2.19,413,2.984,415,2.984,420,3.645,421,2.19,422,2.19,423,2.19,424,2.19,425,2.19,426,2.19,433,2.19,435,2.19,436,2.19,437,2.984,438,2.19,439,2.19,440,2.19,441,2.19,442,2.19,443,2.19,445,2.984,473,2.19,474,3.539,475,1.585,476,1.844,477,3.814,478,3.645,479,4.73,480,2.19,481,2.858,482,3.701,483,2.716,484,2.716,485,2.716,486,2.716,487,3.395,488,2.716,489,3.701,490,3.701,491,3.701,492,2.19,493,3.701,494,2.716,495,2.716,496,2.716,497,2.716,498,2.716,499,2.19,500,2.716,501,2.716,502,2.716,503,3.701,504,2.716,505,2.716,506,4.209,507,2.716,508,2.716,509,2.716,510,3.701,511,2.716,512,2.716,513,2.716,514,2.716,515,2.716,516,2.716,517,2.716,518,2.716,519,2.716,520,2.716,521,2.716,522,2.716,523,2.716,524,2.716,525,2.716,526,2.716]],["title/interfaces/SpatialEntityJsonLd.html",[166,0.024,527,1.427]],["body/interfaces/SpatialEntityJsonLd.html",[3,0.537,4,0.976,5,0.731,6,0.384,7,0.25,11,1.553,13,0.384,14,0.848,23,0.786,24,0.052,30,1.301,43,0.718,70,1.676,75,0.961,99,1.675,103,1.109,163,0.025,164,0.034,165,0.025,166,0.037,168,0.537,179,1.067,208,1.768,527,1.887,528,1.596,529,1.388,530,1.596,531,3.218,532,3.218,533,3.077,534,3.077,535,3.077,536,3.077,537,3.077,538,3.077,539,3.077,540,3.077,541,3.077,542,2.767,543,2.646,544,2.646,545,3.077,546,2.646,547,2.646,548,3.077,549,3.077,550,3.077,551,3.077,552,3.077,553,3.077,554,2.301,555,2.584,556,2.868,557,2.868,558,2.465,559,2.465,560,1.856,561,1.596,562,1.856,563,1.856,564,1.856,565,1.856,566,1.856,567,1.856,568,1.856,569,1.856,570,1.856,571,1.856,572,1.856,573,1.856,574,1.856,575,1.856]],["title/interfaces/SpatialObjectReferenceJsonLd.html",[166,0.024,554,1.427]],["body/interfaces/SpatialObjectReferenceJsonLd.html",[3,0.655,4,1.112,5,0.994,6,0.467,7,0.304,11,1.678,13,0.467,14,0.966,23,0.763,24,0.051,30,1.299,43,0.875,70,1.451,75,1.016,99,1.663,103,1.222,163,0.03,164,0.039,165,0.03,166,0.041,168,0.655,179,1.299,208,1.299,527,1.691,528,1.944,529,1.691,530,1.944,531,3.432,532,2.874,533,2.261,534,2.261,535,2.261,536,2.261,537,2.261,538,2.261,539,2.261,540,2.261,541,2.261,542,2.95,543,1.944,544,1.944,545,2.261,546,1.944,547,1.944,548,2.261,549,2.261,550,2.261,551,2.261,552,2.261,553,2.261,554,2.362,555,2.623,556,2.261,557,2.261,558,1.944,559,1.944,560,2.261,561,1.944,562,2.261,563,2.261,564,2.261,565,2.261,566,2.261,567,2.261,568,2.261,569,2.261,570,2.261,571,2.261,572,2.261,573,2.261,574,2.261,575,3.324]],["title/interfaces/SpatialPlacementJsonLd.html",[166,0.024,555,1.427]],["body/interfaces/SpatialPlacementJsonLd.html",[3,0.581,4,1.278,5,0.77,6,0.415,7,0.27,11,1.603,13,0.415,14,0.894,23,0.783,24,0.052,30,1.298,36,1.603,43,0.777,70,1.343,75,0.983,99,1.696,103,1.154,163,0.027,164,0.036,165,0.027,166,0.038,168,0.581,179,1.825,208,1.153,527,1.501,528,1.726,529,1.501,530,1.726,531,3.305,532,3.305,533,2.007,534,2.007,535,2.007,536,2.007,537,2.007,538,2.007,539,2.007,540,2.007,541,2.007,542,2.287,543,1.726,544,1.726,545,2.007,546,1.726,547,1.726,548,2.007,549,2.007,550,2.007,551,2.007,552,2.007,553,2.007,554,1.989,555,2.471,556,2.007,557,2.007,558,1.726,559,1.726,560,2.007,561,1.726,562,3.177,563,3.177,564,3.177,565,3.177,566,3.177,567,3.177,568,3.177,569,3.177,570,3.177,571,3.177,572,3.177,573,3.177,574,3.177,575,2.007]],["title/interfaces/SpatialSceneNode.html",[52,0.845,166,0.024]],["body/interfaces/SpatialSceneNode.html",[3,0.622,4,0.832,5,0.622,6,0.444,7,0.289,13,0.444,14,0.935,23,0.785,24,0.051,30,1.289,35,2.804,36,1.936,43,0.832,52,1.232,54,0.832,75,0.944,95,3.262,98,2.135,99,1.668,101,1.874,103,0.832,113,2.412,130,2.135,137,3.262,150,2.135,163,0.029,164,0.037,165,0.029,166,0.028,168,0.622,183,2.135,191,1.235,335,2.135,337,2.439,418,3.874,499,3.874,543,2.804,544,2.804,576,2.553,577,2.553,578,4.804,579,4.804,580,4.804]],["title/changelog.html",[581,1.61,582,1.384,583,1.61]],["body/changelog.html",[3,0.739,7,0.373,9,1.478,14,0.275,23,0.169,24,0.039,26,0.819,28,0.973,36,0.413,54,1.033,66,2.199,67,0.819,74,1.398,75,0.237,81,1.611,89,1.908,91,1.014,99,0.363,101,1.16,137,0.819,141,1.996,157,1.356,163,0.011,164,0.018,165,0.036,166,0.033,168,0.237,177,0.612,211,0.612,219,2.557,250,1.492,252,0.704,316,2.702,317,1.751,334,0.704,373,1.321,393,1.736,465,3.68,481,0.819,542,0.704,546,1.166,547,0.704,558,0.704,559,0.704,561,2.194,582,1.492,583,1.356,584,1.611,585,0.973,586,3.171,587,1.997,588,1.997,589,2.556,590,2.972,591,5.518,592,3.55,593,2.397,594,3.932,595,1.206,596,1.206,597,2.972,598,1.206,599,1.997,600,4.311,601,2.556,602,3.55,603,1.206,604,1.997,605,2.556,606,1.206,607,1.206,608,3.42,609,2.556,610,1.206,611,2.556,612,4.245,613,1.206,614,1.997,615,1.206,616,1.997,617,4.563,618,1.206,619,1.206,620,1.206,621,4.563,622,1.206,623,1.206,624,1.206,625,1.206,626,2.656,627,1.206,628,1.206,629,1.997,630,0.973,631,1.206,632,1.997,633,2.972,634,2.972,635,1.206,636,1.997,637,2.556,638,1.206,639,1.206,640,1.997,641,1.206,642,1.206,643,3.55,644,2.41,645,2.656,646,2.061,647,1.206,648,4.203,649,4.203,650,3.294,651,3.294,652,2.656,653,1.206,654,1.997,655,1.206,656,2.556,657,3.171,658,4.489,659,3.55,660,1.997,661,1.206,662,1.206,663,1.997,664,4.311,665,2.061,666,1.206,667,3.55,668,3.294,669,1.206,670,1.206,671,3.294,672,1.206,673,1.206,674,1.206,675,1.206,676,2.556,677,1.206,678,1.611,679,1.997,680,1.206,681,3.171,682,1.206,683,4.103,684,1.206,685,1.206,686,3.294,687,2.061,688,1.206,689,1.206,690,1.206,691,2.656,692,2.769,693,2.656,694,1.206,695,1.997,696,1.206,697,1.206,698,2.556,699,1.997,700,1.206,701,1.997,702,1.206,703,1.997,704,1.997,705,1.997,706,3.55,707,1.997,708,1.206,709,2.556,710,1.206,711,1.206,712,0.973,713,1.206,714,2.061,715,1.356,716,1.997,717,1.206,718,1.206,719,1.206,720,4.791,721,1.206,722,1.997,723,1.997,724,1.997,725,2.972,726,1.997,727,1.206,728,1.206,729,1.206,730,2.556,731,1.206,732,1.997,733,1.206,734,2.556,735,1.206,736,1.997,737,3.55,738,1.997,739,1.206,740,0.973,741,1.206,742,1.206,743,3.294,744,2.972,745,1.206,746,2.556,747,1.997,748,3.55,749,1.611,750,2.972,751,1.206,752,1.206,753,1.611,754,2.972,755,3.294,756,3.55,757,1.206,758,1.206,759,1.206,760,0.973,761,1.206,762,1.997,763,1.997,764,1.206,765,1.997,766,1.206,767,0.973,768,1.997,769,1.206,770,1.997,771,1.206,772,1.206,773,2.972,774,1.206,775,1.206,776,1.206,777,1.206,778,1.206,779,1.997,780,1.206,781,1.206,782,1.206,783,1.206,784,1.206,785,1.206,786,1.997,787,1.206,788,1.206,789,1.206,790,1.206,791,1.206,792,1.997,793,1.206,794,3.55,795,1.206,796,2.556,797,1.997,798,1.206,799,1.997,800,1.206,801,0.973,802,0.973,803,1.206,804,1.997,805,1.997,806,1.206,807,1.206,808,2.018,809,1.206,810,1.206,811,1.997,812,1.997,813,1.206,814,1.206,815,1.997,816,1.997,817,1.206,818,1.997,819,2.972,820,2.556,821,1.206,822,1.206,823,1.206,824,1.206,825,0.973,826,0.973,827,1.206,828,1.997,829,1.206,830,1.206,831,1.206,832,1.206,833,1.997,834,2.972,835,1.206,836,1.206,837,1.206,838,1.206,839,3.55,840,2.556,841,1.997,842,1.206,843,1.206,844,2.556,845,1.997,846,1.997,847,1.997,848,2.972,849,1.206,850,0.973,851,1.206,852,1.206,853,1.997,854,1.206,855,1.206,856,1.206,857,1.206,858,1.206,859,2.972,860,1.206,861,2.556,862,2.972,863,1.206,864,2.556,865,3.294,866,1.997,867,1.997,868,1.997,869,1.997,870,1.997,871,2.556,872,2.972,873,3.294,874,1.997,875,2.556,876,1.206,877,1.206,878,3.758,879,2.556,880,1.206,881,2.972,882,2.972,883,4.078,884,1.206,885,1.206,886,1.206,887,1.206,888,1.206,889,1.206,890,1.997,891,1.206,892,1.997,893,1.206,894,1.206,895,1.206,896,1.206,897,1.997,898,1.206,899,1.736,900,1.206,901,1.997,902,2.061,903,1.997,904,2.556,905,1.206,906,1.206,907,1.206,908,1.997,909,1.206,910,1.206,911,1.206,912,1.206,913,1.206,914,1.206,915,1.206,916,1.997,917,1.206,918,1.206,919,2.972,920,3.55,921,1.997,922,2.556,923,2.972,924,1.997,925,2.972,926,1.206,927,1.206,928,1.206,929,1.206,930,2.556,931,1.206,932,1.206,933,1.206,934,1.997,935,1.997,936,1.997,937,1.997,938,2.556,939,1.206,940,1.206,941,1.206,942,1.206,943,1.206,944,1.206,945,1.206,946,0.973,947,1.206,948,1.206,949,1.206,950,1.206,951,1.997,952,1.206,953,1.206,954,1.997,955,1.206,956,1.206,957,1.206,958,1.206,959,1.206,960,1.206,961,1.206,962,1.206,963,1.206,964,1.206,965,3.932,966,1.206,967,2.061,968,2.556,969,2.972,970,1.997,971,2.556,972,1.206,973,1.997,974,1.206,975,1.206,976,1.206,977,1.997,978,1.997,979,1.997,980,1.206,981,1.206,982,1.206,983,1.206,984,1.997,985,1.206,986,2.556,987,1.206,988,1.206,989,1.206,990,1.206,991,0.973,992,1.206,993,1.206,994,1.206,995,1.206,996,1.206,997,1.206,998,1.206,999,1.206,1000,1.206,1001,1.206,1002,1.206,1003,2.397,1004,3.294,1005,1.206,1006,1.206,1007,1.206,1008,1.206,1009,1.206,1010,1.206,1011,1.206,1012,1.206,1013,1.206,1014,1.206,1015,1.206,1016,1.206,1017,1.206,1018,1.206,1019,1.997,1020,1.206,1021,1.997,1022,1.206,1023,1.997,1024,1.997,1025,2.972,1026,2.972,1027,1.997,1028,1.997,1029,1.206,1030,1.206,1031,1.206,1032,2.556,1033,1.206,1034,0.973,1035,1.206,1036,1.206,1037,1.206,1038,1.206,1039,1.206,1040,1.206,1041,1.997,1042,4.203,1043,2.556,1044,1.997,1045,1.206,1046,1.997,1047,1.206,1048,1.206,1049,1.206,1050,1.206,1051,1.206,1052,1.206,1053,1.206,1054,1.206,1055,1.206,1056,1.997,1057,3.031,1058,1.997,1059,1.206,1060,1.206,1061,1.206,1062,1.611,1063,1.206,1064,2.972,1065,1.206,1066,1.997,1067,1.206,1068,1.206,1069,2.018,1070,1.206,1071,1.997,1072,1.206,1073,1.206,1074,1.206,1075,1.997,1076,1.997,1077,1.206,1078,1.206,1079,1.206,1080,1.206,1081,1.997,1082,2.556,1083,1.997,1084,1.206,1085,1.206,1086,1.611,1087,1.206,1088,1.206,1089,1.206,1090,1.206,1091,1.206,1092,1.206,1093,1.206,1094,1.206,1095,1.206,1096,0.973,1097,1.206,1098,1.206,1099,1.997,1100,1.206,1101,1.206,1102,1.206,1103,1.206,1104,1.206,1105,1.206,1106,1.206,1107,1.997,1108,1.997,1109,1.206,1110,0.973,1111,1.206,1112,1.206,1113,0.973,1114,1.206,1115,1.206,1116,1.206,1117,1.997,1118,1.206,1119,1.206,1120,1.206,1121,1.206,1122,1.206,1123,1.206,1124,1.206,1125,1.206,1126,1.206,1127,1.206,1128,1.206,1129,1.206,1130,1.997,1131,1.206,1132,1.206,1133,1.206,1134,1.206,1135,1.997,1136,1.206,1137,1.206,1138,0.973,1139,1.206,1140,1.206,1141,1.206,1142,1.206,1143,1.206,1144,1.206,1145,1.206,1146,1.206]],["title/coverage.html",[1069,2.571]],["body/coverage.html",[0,1.733,1,1.305,5,0.577,6,0.788,7,0.513,8,1.948,9,1.336,10,2.648,23,0.412,24,0.051,52,0.882,54,1.311,56,1.714,57,1.993,58,1.714,61,1.993,64,2.787,72,2.189,74,1.006,163,0.027,164,0.036,165,0.027,166,0.046,167,1.49,169,2.369,200,1.49,203,1.49,207,1.49,220,1.714,317,1.521,373,1.305,389,1.993,390,2.648,391,2.648,403,1.714,474,1.993,475,3.02,476,2.973,527,1.49,528,2.556,529,2.369,530,2.556,554,1.49,555,1.49,576,2.367,577,2.367,644,1.993,715,1.993,899,1.993,1069,1.993,1147,2.936,1148,2.936,1149,2.367,1150,2.367,1151,2.367,1152,5.507,1153,4.379,1154,2.367,1155,2.936,1156,2.936,1157,2.936,1158,2.936,1159,2.936,1160,3.9,1161,3.762,1162,3.762,1163,2.367,1164,3.145,1165,3.145,1166,2.367,1167,2.367,1168,2.367,1169,2.367,1170,2.367,1171,2.367,1172,2.648,1173,2.367,1174,2.936,1175,2.367,1176,2.367,1177,2.367,1178,2.367,1179,1.993,1180,1.993,1181,2.367,1182,2.367,1183,2.367,1184,2.936,1185,2.936,1186,2.936]],["title/dependencies.html",[630,1.912,808,2.286]],["body/dependencies.html",[5,0.615,7,0.286,24,0.052,25,1.827,45,1.589,48,2.525,49,2.065,51,2.525,55,1.221,143,1.827,163,0.029,164,0.037,165,0.029,191,1.221,192,1.827,193,1.827,196,1.827,394,2.525,396,2.525,398,2.525,401,2.125,402,2.125,478,2.525,626,2.525,652,2.525,678,2.525,749,2.525,801,2.525,802,2.525,808,2.125,826,3.28,902,2.525,967,3.28,1062,3.28,1187,3.13,1188,3.13,1189,3.13,1190,5.387,1191,3.13,1192,3.13,1193,3.13,1194,3.13,1195,3.13,1196,3.13,1197,3.13,1198,3.13,1199,4.068,1200,3.13,1201,3.13,1202,3.13,1203,3.13,1204,4.958,1205,3.13,1206,3.13,1207,4.519,1208,3.13,1209,3.13,1210,3.13,1211,3.13,1212,3.13,1213,4.068,1214,4.519,1215,3.13,1216,3.13,1217,3.13,1218,3.13,1219,3.28,1220,3.13,1221,3.13,1222,3.13,1223,4.068,1224,3.13,1225,3.13,1226,3.13,1227,3.13,1228,3.13,1229,3.13,1230,3.13,1231,3.13,1232,3.13,1233,3.13,1234,3.13,1235,3.13,1236,3.13,1237,3.13,1238,3.13,1239,4.068,1240,2.525,1241,3.13,1242,3.13,1243,3.13,1244,3.13,1245,3.13,1246,4.068,1247,3.13,1248,3.13,1249,3.13,1250,3.13,1251,3.13,1252,3.13,1253,3.13,1254,3.13,1255,3.13,1256,3.13,1257,3.13,1258,3.13,1259,3.13,1260,3.13,1261,3.13,1262,3.13,1263,3.13,1264,3.13,1265,3.13,1266,3.13,1267,3.13,1268,3.13,1269,4.068,1270,3.13,1271,3.13,1272,3.13,1273,3.13,1274,3.13,1275,3.13,1276,3.13,1277,3.13,1278,3.13,1279,3.13,1280,3.13,1281,4.068,1282,3.13,1283,3.13,1284,3.13,1285,3.13,1286,3.13,1287,3.13,1288,3.13,1289,3.13,1290,3.13,1291,3.13,1292,3.13,1293,3.13,1294,3.13]],["title/miscellaneous/functions.html",[1295,1.054,1296,2.715]],["body/miscellaneous/functions.html",[6,0.749,7,0.488,8,1.104,9,1.304,10,2.583,13,0.397,24,0.051,27,1.257,30,0.646,34,4.393,35,3.18,36,1.867,38,4.393,41,1.436,47,2.282,54,1.348,56,2.221,57,2.583,58,2.509,60,2.221,61,2.583,65,2.282,66,1.691,67,2.583,70,0.97,75,0.556,105,2.067,113,1.257,143,1.652,163,0.026,164,0.035,165,0.026,177,1.436,200,1.932,202,1.436,314,1.436,317,1.484,327,1.436,335,1.691,390,1.921,391,2.583,403,2.221,405,2.282,475,2.8,476,2.919,480,2.282,481,2.583,487,3.707,492,2.282,529,1.932,715,2.583,767,3.068,899,2.583,1149,2.282,1150,3.068,1151,3.068,1154,3.068,1161,2.282,1162,3.868,1163,3.068,1164,2.282,1165,3.467,1166,3.068,1167,3.068,1168,3.068,1169,3.068,1170,3.068,1171,3.068,1172,2.583,1173,3.068,1176,3.068,1177,3.068,1178,3.068,1179,1.921,1180,2.583,1181,2.282,1182,3.068,1183,3.068,1219,3.068,1295,1.257,1296,2.282,1297,2.829,1298,3.984,1299,4.597,1300,2.829,1301,2.282,1302,3.805,1303,2.829,1304,2.282,1305,2.829,1306,4.94,1307,2.829,1308,3.805,1309,2.829,1310,2.829,1311,3.805,1312,2.829,1313,4.597,1314,4.299,1315,2.829,1316,2.829,1317,2.829,1318,4.597,1319,2.829,1320,2.829,1321,2.829,1322,2.829,1323,3.805,1324,2.829,1325,3.805]],["title/index.html",[13,0.333,581,1.61,582,1.384]],["body/index.html",[3,1.019,9,1.242,24,0.041,163,0.033,164,0.041,165,0.033,166,0.039,168,0.713,211,2.266,219,2.852,315,2.946,477,2.923,583,2.461,584,3.599,585,3.599,586,3.9,593,2.923,608,3.283,612,3.599,645,4.07,646,3.9,657,3.599,665,2.923,681,2.923,683,3.9,687,2.923,692,3.426,693,2.923,714,2.923,753,3.599,825,2.923,850,3.599,991,2.923,1003,3.599,1086,2.923,1096,2.923,1110,2.923,1326,4.463,1327,3.625,1328,3.625,1329,3.625,1330,3.625,1331,3.599,1332,3.625,1333,3.625,1334,3.625,1335,4.463,1336,4.463,1337,4.463,1338,4.836,1339,3.625,1340,3.625,1341,4.836,1342,3.625,1343,3.625,1344,4.463,1345,3.625,1346,3.625,1347,3.625,1348,3.625,1349,3.625,1350,3.625,1351,3.625,1352,3.625,1353,3.625,1354,3.625,1355,3.625,1356,3.625,1357,3.625,1358,3.625,1359,3.625]],["title/license.html",[581,1.61,582,1.384,1360,1.912]],["body/license.html",[24,0.042,163,0.035,164,0.042,165,0.035,195,2.215,644,2.577,691,3.702,692,2.577,712,3.979,740,3.061,760,3.702,946,3.702,1034,3.061,1057,3.061,1113,3.061,1138,3.061,1240,3.061,1331,4.422,1360,3.061,1361,3.795,1362,4.935,1363,3.795,1364,3.795,1365,4.59,1366,3.795,1367,3.795,1368,3.795,1369,3.795,1370,3.795,1371,3.795,1372,4.59,1373,3.795,1374,3.795,1375,3.795,1376,3.795,1377,3.795,1378,3.795,1379,3.795,1380,3.795,1381,3.795,1382,3.795,1383,3.795,1384,3.795,1385,4.59,1386,3.795,1387,3.795,1388,3.795,1389,3.795,1390,3.795,1391,4.59,1392,3.795,1393,3.795,1394,3.795,1395,3.795,1396,3.795,1397,3.795,1398,3.795,1399,3.795,1400,3.795,1401,3.795,1402,3.795,1403,3.795,1404,3.795,1405,3.795,1406,3.795,1407,3.795,1408,3.795,1409,3.795,1410,3.795,1411,3.795,1412,3.795,1413,3.795,1414,3.795,1415,3.795,1416,3.795,1417,3.795,1418,3.795,1419,3.795]],["title/modules.html",[1420,3.054]],["body/modules.html",[24,0.046,163,0.04,164,0.046,165,0.04,1420,3.557]],["title/overview.html",[1421,3.054]],["body/overview.html",[2,3.532,24,0.046,163,0.04,164,0.046,165,0.04,168,0.861,373,1.946,1421,3.532,1422,4.38]],["title/miscellaneous/typealiases.html",[1295,1.054,1423,3.367]],["body/miscellaneous/typealiases.html",[6,0.684,7,0.446,8,1.64,13,0.59,23,0.723,24,0.045,25,2.846,64,2.134,163,0.038,164,0.045,165,0.038,169,2.615,213,2.846,215,2.846,1179,2.854,1180,3.311,1295,1.868,1301,3.933,1304,3.39,1424,4.203,1425,4.876]],["title/miscellaneous/variables.html",[1295,1.054,1426,2.715]],["body/miscellaneous/variables.html",[6,0.588,7,0.383,13,0.588,23,0.588,24,0.05,26,2.844,27,1.862,163,0.038,164,0.044,165,0.038,208,1.634,317,1.899,475,2.445,608,2.844,1172,3.304,1175,3.925,1295,1.862,1298,3.378,1426,3.378,1427,4.189,1428,4.867,1429,4.189,1430,4.189,1431,4.189,1432,4.189,1433,4.189,1434,4.189]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["0.05",{"_index":309,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["0.1.0",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":289,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["0.5*255",{"_index":155,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.5.0",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1086,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.8",{"_index":110,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.9*255",{"_index":102,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0/1",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":157,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"changelog.html":{}}}],["1.0",{"_index":141,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["1.19.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":967,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":902,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["1.6875389974302382e",{"_index":325,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["1.7.0",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["1/37",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["10.0",{"_index":280,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10.0.0",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":255,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10x",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["11.5",{"_index":343,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["12",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["12.0.1",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":82,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["15",{"_index":286,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["15.126.1",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["17,0,0",{"_index":324,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17,0.076,0,0.49,0.034,0.11,1",{"_index":326,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2",{"_index":373,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.0",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":749,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":678,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":301,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2019",{"_index":1057,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":83,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["24",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":84,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["26",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["3.0",{"_index":1336,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":652,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":81,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["31",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":316,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["4",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["4.17.1",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["8.9",{"_index":372,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["85",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1422,"title":{},"body":{"overview.html":{}}}],["9.5",{"_index":292,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["90",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["_dragevent(info",{"_index":386,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_lighting",{"_index":150,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["_onclick(info",{"_index":357,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondrag(info",{"_index":382,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragend(info",{"_index":384,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragstart(info",{"_index":379,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onhover(e",{"_index":349,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onviewstatechange(event",{"_index":365,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["aabb",{"_index":399,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["ability",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1113,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1412,"title":{},"body":{"license.html":{}}}],["actions",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1340,"title":{},"body":{"index.html":{}}}],["ambientlight",{"_index":184,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["analytics",{"_index":802,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":899,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomicalstructuresurl",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1383,"title":{},"body":{"license.html":{}}}],["angular",{"_index":626,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["appear",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["appropriate",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1416,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":740,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":294,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["attempts",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1405,"title":{},"body":{"license.html":{}}}],["autohighlight",{"_index":78,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["automatic",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":297,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["award",{"_index":1358,"title":{},"body":{"index.html":{}}}],["b_3d_models_extraction_sites.csv",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b_3d_models_mapping.csv",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1110,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":420,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["before",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":194,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["behaviorsubject([0",{"_index":226,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["being",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":657,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":192,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["block",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":7,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":220,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer",{"_index":1,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer.gltfcache",{"_index":131,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["bodyuiprops",{"_index":167,"title":{"interfaces/BodyUIProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuiviewstateprops",{"_index":203,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["boolean",{"_index":113,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":1062,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1332,"title":{},"body":{"index.html":{}}}],["builds",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1363,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1219,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["cacheable",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":170,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cancelregistration",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":401,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["canvas",{"_index":171,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["card",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["casttoglobaltype",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["casttoglobaltype(value",{"_index":1305,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ccf",{"_index":219,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":533,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["cell",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":477,"title":{},"body":{"interfaces/ProcessedNode.html":{},"index.html":{}}}],["change",{"_index":825,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":583,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1369,"title":{},"body":{"license.html":{}}}],["child",{"_index":482,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["child.bbox.clone",{"_index":507,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["childnames(child",{"_index":486,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(node.node).map(n",{"_index":504,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(scene",{"_index":480,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1408,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BodyUILayer.html":{},"overview.html":{}}}],["cleanup",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["collider",{"_index":63,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["collider.ts",{"_index":391,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collision",{"_index":389,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"coverage.html":{}}}],["collisioning",{"_index":407,"title":{},"body":{"interfaces/Collision.html":{}}}],["collisions",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":101,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["colorizing",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":534,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["common",{"_index":584,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":687,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["compositelayer",{"_index":12,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["concat",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1390,"title":{},"body":{"license.html":{}}}],["config",{"_index":767,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["config.csv",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1418,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":458,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('data",{"_index":330,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('results",{"_index":329,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('starting",{"_index":406,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":472,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":1364,"title":{},"body":{"license.html":{}}}],["const",{"_index":106,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["constructor(private",{"_index":246,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["container",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1330,"title":{},"body":{"index.html":{}}}],["context",{"_index":532,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["contract",{"_index":1413,"title":{},"body":{"license.html":{}}}],["control",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":256,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convenience",{"_index":217,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convention",{"_index":149,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["coordinate",{"_index":211,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":44,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinate_system.cartesian",{"_index":86,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinatesystem",{"_index":85,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["copies",{"_index":1385,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1372,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1362,"title":{},"body":{"license.html":{}}}],["cors",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1069,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["creation_date",{"_index":535,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator",{"_index":536,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_first_name",{"_index":537,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_last_name",{"_index":538,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["credits",{"_index":1349,"title":{},"body":{"index.html":{}}}],["css",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["csv.ts",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csvreport",{"_index":462,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":464,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvtext",{"_index":1316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlclick",{"_index":216,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ctrlkey",{"_index":359,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cubegeometry",{"_index":50,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cubes",{"_index":114,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cuboid",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["currentstate",{"_index":369,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.data",{"_index":375,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.zoomopacity",{"_index":374,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cursor",{"_index":244,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cyberinfrastructure",{"_index":1351,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":97,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["d.scenegraph",{"_index":116,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["d.unpickable",{"_index":118,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d.wireframe",{"_index":117,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["damages",{"_index":1409,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":66,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.concat(object.values(results",{"_index":332,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.length",{"_index":71,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.push",{"_index":333,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.ts",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data?.length",{"_index":305,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["database",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["datasets",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1374,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1419,"title":{},"body":{"license.html":{}}}],["debugscenenodeprocessing",{"_index":172,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["debugscenenodeprocessing(data",{"_index":313,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["december",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["deck",{"_index":185,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck(props",{"_index":282,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/core",{"_index":45,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":190,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/geo",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":48,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deckprops",{"_index":247,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.camera",{"_index":251,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.interactive",{"_index":257,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.legacylighting",{"_index":277,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.maxrotationx",{"_index":287,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.minrotationx",{"_index":285,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.rotation",{"_index":290,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.target",{"_index":288,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.zoom",{"_index":291,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["decompress",{"_index":430,"title":{},"body":{"interfaces/Collision.html":{}}}],["decorator",{"_index":193,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deeply",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["delete",{"_index":509,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["demo",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":808,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["depthmask",{"_index":156,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["derivescenegraph",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["derivescenegraph(scenegraphnodename",{"_index":1307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["details",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1350,"title":{},"body":{"index.html":{}}}],["developments",{"_index":1096,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["didzoom",{"_index":306,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["different",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["dimension_units",{"_index":539,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["direct",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":88,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["display",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1381,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":61,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["docollisions(scene",{"_index":405,"title":{},"body":{"interfaces/Collision.html":{},"miscellaneous/functions.html":{}}}],["docollisions(state.data",{"_index":123,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["document",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":644,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["done",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["dracoloader",{"_index":395,"title":{},"body":{"interfaces/Collision.html":{}}}],["during",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":37,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.info",{"_index":162,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["e.isdragging",{"_index":274,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object",{"_index":352,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object['@id",{"_index":353,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.picked",{"_index":350,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e?.srcevent?.ctrlkey",{"_index":364,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["easier",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":826,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":473,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["entities",{"_index":1318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityid",{"_index":418,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["es",{"_index":402,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["eslint",{"_index":87,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["eslint/naming",{"_index":148,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["eslint/no",{"_index":92,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["etc",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":683,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1404,"title":{},"body":{"license.html":{}}}],["event.interactionstate?.iszooming",{"_index":368,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate",{"_index":376,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.rotationx",{"_index":378,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.zoom",{"_index":371,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["expanded",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":93,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["exploration",{"_index":1334,"title":{},"body":{"index.html":{}}}],["export",{"_index":103,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["express",{"_index":1240,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["external",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":715,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extraction_set",{"_index":540,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["extractionsitesurl",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":79,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["favor",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":557,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["fetch",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_format",{"_index":575,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["files",{"_index":1373,"title":{},"body":{"license.html":{}}}],["filter",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["filter(d",{"_index":409,"title":{},"body":{"interfaces/Collision.html":{}}}],["filter(l",{"_index":158,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["final",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":302,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["finishing",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["firstfieldname",{"_index":1313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fit",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1400,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["fixes.ts",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixes/performance",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["flipy",{"_index":253,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["fly",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1389,"title":{},"body":{"license.html":{}}}],["form",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":585,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":1368,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":64,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1296,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1356,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1388,"title":{},"body":{"license.html":{}}}],["further",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["getcolor",{"_index":100,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getcursor",{"_index":271,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["getpickinginfo",{"_index":20,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":32,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getting",{"_index":581,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettransformmatrix",{"_index":96,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["github",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["gltf",{"_index":60,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltf.scenes",{"_index":433,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["gltf.ts",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gltf:${processednode['@id",{"_index":496,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfcache",{"_index":17,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gltfloader",{"_index":397,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltfnode",{"_index":497,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes",{"_index":489,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes.push",{"_index":495,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfoverride",{"_index":1323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfpromise",{"_index":1311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfscene",{"_index":432,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltftransform",{"_index":322,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["gltfurl",{"_index":314,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["good",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":801,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["grab",{"_index":276,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["grabbing",{"_index":275,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["granted",{"_index":1367,"title":{},"body":{"license.html":{}}}],["graphology",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":468,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":471,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":470,"title":{},"body":{"interfaces/Collision.html":{}}}],["halfsize",{"_index":518,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["hand",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["helmet",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1366,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["highlightcolor",{"_index":80,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["highlights",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":463,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":469,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":467,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":466,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":392,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":453,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":450,"title":{},"body":{"interfaces/Collision.html":{}}}],["holders",{"_index":1406,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["htmlcanvaselement",{"_index":181,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["htmlelement",{"_index":182,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["http://localhost:8080/source_data/asct",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/reference",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://beta",{"_index":1337,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1341,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":315,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":320,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["https://old",{"_index":1343,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1339,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":692,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["icon",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":75,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1397,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["improve",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1392,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":691,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1354,"title":{},"body":{"index.html":{}}}],["individual",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{}}}],["info.object",{"_index":361,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.object['@id",{"_index":362,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.picked",{"_index":360,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info?.object?.['@id",{"_index":387,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["information",{"_index":850,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":295,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["initializestate",{"_index":21,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["instead",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":279,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interact",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":366,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interactive",{"_index":173,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interest",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":166,"title":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":168,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["isdragging",{"_index":272,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["issue",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":367,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["it's",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":478,"title":{},"body":{"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["jsonld.ts",{"_index":530,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["jsonld/jsonld",{"_index":560,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["jsonldobj",{"_index":531,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["july",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":68,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["keyboard",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1396,"title":{},"body":{"license.html":{}}}],["known",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":159,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["label",{"_index":541,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["labs/data",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["lasthovered",{"_index":245,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["latest",{"_index":593,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layer",{"_index":199,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["layer.ts",{"_index":10,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["layer.ts:35",{"_index":31,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:36",{"_index":29,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:38",{"_index":40,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:44",{"_index":42,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:87",{"_index":33,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layername",{"_index":18,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers",{"_index":49,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["lb",{"_index":512,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["lb.clone().vadd(halfsize",{"_index":522,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ld",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":558,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["left/right",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["legacylighting",{"_index":174,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["level",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1410,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1407,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["library/vh_female/united/vhf_united_color.glb",{"_index":319,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["library/vh_male/united/vhm_united_color.glb",{"_index":318,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["license",{"_index":1360,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["lightingeffect",{"_index":186,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["limitation",{"_index":1376,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1034,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":90,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["link",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":665,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":25,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":393,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{}}}],["load(model.scenegraph",{"_index":429,"title":{},"body":{"interfaces/Collision.html":{}}}],["loaded",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":394,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":396,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":398,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loadgltf",{"_index":56,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf(model",{"_index":1309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadgltf({scenegraph",{"_index":488,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["loadgltf2",{"_index":57,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf2(model.scenegraphnode",{"_index":145,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["loadgltf2(scenegraphnodename",{"_index":1310,"title":{},"body":{"miscellaneous/functions.html":{}}}],["location",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1348,"title":{},"body":{"index.html":{}}}],["logging",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":298,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["lowerbound",{"_index":413,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lowerbound[i",{"_index":426,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lru",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":51,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["m",{"_index":125,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraph",{"_index":126,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraphnode",{"_index":127,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["made",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":556,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["managers",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["map(model",{"_index":410,"title":{},"body":{"interfaces/Collision.html":{}}}],["march",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":411,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint",{"_index":414,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":416,"title":{},"body":{"interfaces/Collision.html":{}}}],["match",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":164,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":191,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":460,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(n",{"_index":425,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["math.min(math.max(1",{"_index":370,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["math.min(n",{"_index":422,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["matrix",{"_index":339,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix.gettranslation",{"_index":342,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4",{"_index":183,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e",{"_index":323,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(matrix4.identity",{"_index":524,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(model.transformmatrix",{"_index":412,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(modelmatrix",{"_index":494,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":340,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(worldmatrix",{"_index":490,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4.identity",{"_index":491,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["maxhits",{"_index":459,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":175,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["mc",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1399,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1379,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":94,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meshlayer('cubes",{"_index":132,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer('pickablecubes",{"_index":133,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer('wireframes",{"_index":134,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer(id",{"_index":65,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["minor",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":176,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["miscellaneous",{"_index":1295,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1361,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":143,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["model._lighting",{"_index":151,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.color",{"_index":154,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.entityid",{"_index":419,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.opacity",{"_index":140,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraph",{"_index":147,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraphnode",{"_index":144,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.tooltip",{"_index":417,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":153,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.unpickable",{"_index":142,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.zoombasedopacity",{"_index":138,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model['@id",{"_index":136,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["modelmatrix",{"_index":435,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":443,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":442,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["models",{"_index":121,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["models.map((model",{"_index":135,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["modify",{"_index":1378,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1420,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1327,"title":{},"body":{"index.html":{}}}],["more",{"_index":1003,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouseevent",{"_index":214,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["moved",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1328,"title":{},"body":{"index.html":{}}}],["n.bbox",{"_index":503,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["n3",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":481,"title":{},"body":{"interfaces/ProcessedNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names.push(child.name",{"_index":485,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["navigation",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["near",{"_index":254,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["needed",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1352,"title":{},"body":{"index.html":{}}}],["new",{"_index":74,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":89,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["ng5",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1357,"title":{},"body":{"index.html":{}}}],["node",{"_index":55,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["node.bbox",{"_index":506,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.extend(child.bbox",{"_index":508,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.lowerbound",{"_index":513,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.upperbound",{"_index":515,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.center",{"_index":521,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.id",{"_index":493,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.mesh",{"_index":436,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives",{"_index":437,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives.length",{"_index":438,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.name",{"_index":445,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.size",{"_index":516,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.transformmatrix",{"_index":523,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.ts",{"_index":577,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["node.zoomtoonload",{"_index":307,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclick",{"_index":230,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclickevent",{"_index":215,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodeclicksubject",{"_index":222,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedrag",{"_index":240,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragend",{"_index":242,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragendsubject",{"_index":229,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragevent",{"_index":213,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodedragstart",{"_index":238,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragstartsubject",{"_index":227,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragsubject",{"_index":228,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstart",{"_index":232,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstartsubject",{"_index":223,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstop",{"_index":234,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstopsubject",{"_index":224,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodes",{"_index":202,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["nodes.ts",{"_index":476,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodes[n]).filter(n",{"_index":505,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[node['@id",{"_index":510,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[processednode['@id",{"_index":501,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["noninfringement",{"_index":1403,"title":{},"body":{"license.html":{}}}],["note",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":946,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":99,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["numeric",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":208,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.hasownproperty.call(url2gltf",{"_index":128,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.values(nodes",{"_index":511,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(nodes).filter(n",{"_index":502,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(results",{"_index":331,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["obtaining",{"_index":1371,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1342,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":261,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondrag",{"_index":267,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragend",{"_index":269,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragstart",{"_index":265,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["one",{"_index":991,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["onhover",{"_index":259,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["online",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["ontology/objects/vhf_united_v01_060420.glb",{"_index":321,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["onviewstatechange",{"_index":263,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["opacities",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":137,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["openapi",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":67,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["orbitaxis",{"_index":204,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["orbitview",{"_index":187,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["organ",{"_index":608,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["organs/anatomical",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["orthographic",{"_index":252,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["orthographicview",{"_index":188,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ot2od026671",{"_index":1359,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1415,"title":{},"body":{"license.html":{}}}],["out",{"_index":1417,"title":{},"body":{"license.html":{}}}],["over",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1421,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":630,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["parameters['getpickinginfo']>[0",{"_index":160,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["parent",{"_index":177,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["parsecsv",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsv(sourceurl",{"_index":1312,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsecsvtext",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsvtext(csvtext",{"_index":1315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":248,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["particular",{"_index":1401,"title":{},"body":{"license.html":{}}}],["partly",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["pbr",{"_index":152,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["performance",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1365,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1386,"title":{},"body":{"license.html":{}}}],["person",{"_index":1370,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1387,"title":{},"body":{"license.html":{}}}],["pickable",{"_index":76,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["pickablecubes",{"_index":119,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["picked",{"_index":212,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["pickinfo",{"_index":207,"title":{"interfaces/PickInfo.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["placeholder",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":542,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["placement_date",{"_index":562,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["player",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":351,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["popup",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":693,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1394,"title":{},"body":{"license.html":{}}}],["position",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["postprocess",{"_index":431,"title":{},"body":{"interfaces/Collision.html":{}}}],["preferences",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["primitive",{"_index":439,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position",{"_index":440,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position.min",{"_index":441,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["priority",{"_index":578,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["private",{"_index":221,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["process",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["processanatomicalstructures",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processanatomicalstructures(sourceurl",{"_index":1317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processed",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["processednode",{"_index":474,"title":{"interfaces/ProcessedNode.html":{}},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["processednode.bbox",{"_index":500,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processednode['@id",{"_index":498,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processextractionsites",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processextractionsites(sourceurl",{"_index":1319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processing",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["processreferencedata",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processreferencedata(refentities",{"_index":1320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processscenenodes",{"_index":200,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processscenenodes(gltfurl",{"_index":327,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities(parent",{"_index":1322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":645,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1329,"title":{},"body":{"index.html":{}}}],["projects/.../body",{"_index":1301,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../global",{"_index":1297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../load",{"_index":1299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../parse",{"_index":1302,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../process",{"_index":1298,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene",{"_index":1304,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../simplify",{"_index":1303,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../spatial",{"_index":1300,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":105,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["promise(r",{"_index":299,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["props",{"_index":249,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["props.effects",{"_index":278,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["provided",{"_index":1138,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1380,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1402,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["r.hits.length",{"_index":461,"title":{},"body":{"interfaces/Collision.html":{}}}],["rc.1",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["real",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["rectify",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["refentities",{"_index":1321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":317,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":543,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["referencedataconfig",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["referenceorganconfigurl",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refernced",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["registergltfloaders",{"_index":58,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registration",{"_index":714,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["renderlayers",{"_index":22,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["report",{"_index":446,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":454,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":1326,"title":{},"body":{"index.html":{}}}],["representation_of",{"_index":544,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["required",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["resets",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1375,"title":{},"body":{"license.html":{}}}],["result",{"_index":163,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":165,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":73,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["returns",{"_index":38,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":39,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["returntype['getpickinginfo",{"_index":161,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rgb",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":559,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["rights",{"_index":1377,"title":{},"body":{"license.html":{}}}],["root",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":178,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotation_units",{"_index":570,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rotationorbit",{"_index":205,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotationx",{"_index":206,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["round",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":612,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["rui_rank",{"_index":545,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rxjs",{"_index":196,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":198,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sad",{"_index":447,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":457,"title":{},"body":{"interfaces/Collision.html":{}}}],["sample",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["scale(halfsize.toarray",{"_index":526,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scaling_units",{"_index":566,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["scene",{"_index":54,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scene.children",{"_index":484,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.filter(d",{"_index":428,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":483,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.ts",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scenegraph",{"_index":130,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphlayer",{"_index":46,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["scenegraphnode",{"_index":335,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["scenegraphnodename",{"_index":1308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scenerotation",{"_index":236,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenerotationsubject",{"_index":225,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenetraversalvisitor",{"_index":1425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scheduled",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1353,"title":{},"body":{"index.html":{}}}],["search",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":753,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1384,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["setinteractive(value",{"_index":348,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotation(value",{"_index":344,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotationx(value",{"_index":345,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setscene(data",{"_index":304,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settarget(value",{"_index":347,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settimeout(r",{"_index":300,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setup",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["setzoom(value",{"_index":346,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sex",{"_index":546,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sexes",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1391,"title":{},"body":{"license.html":{}}}],["share",{"_index":197,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["shared",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["shared/spatial",{"_index":53,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["shortest",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":547,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sides",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["simplemeshlayer",{"_index":47,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["simplifies",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["simplifyscene",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["simplifyscene(nodes",{"_index":1324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sites",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["sites.ts",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizable",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":479,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["size.clone().vmul(new",{"_index":519,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["slice_count",{"_index":548,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slice_thickness",{"_index":549,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slider",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1331,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceboxes",{"_index":408,"title":{},"body":{"interfaces/Collision.html":{}}}],["sources",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["sourceurl",{"_index":1314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sparc",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["spatial",{"_index":529,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialentityjsonld",{"_index":527,"title":{"interfaces/SpatialEntityJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialobjectreferencejsonld",{"_index":554,"title":{"interfaces/SpatialObjectReferenceJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialplacementjsonld",{"_index":555,"title":{"interfaces/SpatialPlacementJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialscenenode",{"_index":52,"title":{"interfaces/SpatialSceneNode.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["spec",{"_index":561,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["specific",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["speed",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":448,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":449,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":455,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":456,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":358,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["stage",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":646,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1335,"title":{},"body":{"index.html":{}}}],["started",{"_index":582,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":111,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.data.filter(d",{"_index":115,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.docollisions",{"_index":122,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.zoomopacity",{"_index":139,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["statements",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["stay",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["structures.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":195,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"license.html":{}}}],["subject.next",{"_index":388,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sublicense",{"_index":1382,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1393,"title":{},"body":{"license.html":{}}}],["support",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["switched",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":179,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["target.name",{"_index":452,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":451,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes",{"_index":427,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":444,"title":{},"body":{"interfaces/Collision.html":{}}}],["technologies",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":334,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["testing",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["this._dragevent(info",{"_index":380,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onclick",{"_index":262,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondrag",{"_index":268,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragend",{"_index":270,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragstart",{"_index":266,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onhover",{"_index":260,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onviewstatechange",{"_index":264,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer",{"_index":258,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.setstate",{"_index":311,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.state",{"_index":296,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.cursor",{"_index":273,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.debugscenenodeprocessing(data",{"_index":312,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck",{"_index":281,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.finalize",{"_index":303,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.props.viewstate",{"_index":341,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.setprops",{"_index":283,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deckprops.debugscenenodeprocessing",{"_index":310,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.lasthovered",{"_index":355,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.next",{"_index":363,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":231,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject",{"_index":385,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject.pipe(share",{"_index":243,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject",{"_index":381,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject.pipe(share",{"_index":239,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject",{"_index":383,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject.pipe(share",{"_index":241,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":356,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":233,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":354,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":235,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.props",{"_index":107,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.scenerotationsubject.next([deckprops.rotation",{"_index":293,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.next([event.viewstate.rotationorbit",{"_index":377,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.pipe(share",{"_index":237,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.setstate",{"_index":108,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.state",{"_index":112,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.zoomto(node",{"_index":308,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["through",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":465,"title":{},"body":{"interfaces/Collision.html":{},"changelog.html":{}}}],["tissues",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["tool",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":499,"title":{},"body":{"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":1414,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["transformmatrix",{"_index":98,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["translate(center.toarray",{"_index":525,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["translation_units",{"_index":574,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["transparency",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["traversal",{"_index":404,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["traversal.ts",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["traversescene",{"_index":403,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["traversescene(gltfscene",{"_index":434,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":492,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["travisci",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":77,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["try",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1423,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":91,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["typing",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["ub",{"_index":514,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ub.clone().vsub(lb",{"_index":517,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ufl",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":9,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1338,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1347,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1344,"title":{},"body":{"index.html":{}}}],["ui.ts",{"_index":169,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/organ",{"_index":1346,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1345,"title":{},"body":{"index.html":{}}}],["ui/src/global",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/body",{"_index":8,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/shared/ccf",{"_index":528,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["ui/src/lib/shared/spatial",{"_index":576,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["ui/src/lib/util/load",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/parse",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/process",{"_index":475,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui/src/lib/util/scene",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/simplify",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/spatial",{"_index":390,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":70,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/functions.html":{}}}],["university",{"_index":1355,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":69,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["unnecessary",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":579,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["unselect",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["updated_date",{"_index":550,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["updates",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["upperbound",{"_index":415,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["upperbound[i",{"_index":423,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["url",{"_index":104,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf",{"_index":124,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[m.scenegraph",{"_index":129,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[model.scenegraph",{"_index":146,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["use",{"_index":760,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":586,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["util/load",{"_index":59,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["util/process",{"_index":201,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["util/spatial",{"_index":62,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["utilities",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1426,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec3",{"_index":400,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...lowerbound.map((n",{"_index":421,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...upperbound.map((n",{"_index":424,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(0.5",{"_index":520,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["version",{"_index":681,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["vhf_kidney_l_low1').then((results",{"_index":328,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["vhf_kidney_r_low",{"_index":336,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["via",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":250,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["viewstate",{"_index":284,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["viewstateprops",{"_index":189,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["visitor",{"_index":1325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["visual",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":41,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1398,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1395,"title":{},"body":{"license.html":{}}}],["web",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1333,"title":{},"body":{"index.html":{}}}],["week",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1411,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["wireframe",{"_index":95,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["wireframes",{"_index":120,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["within",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":712,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["worldmatrix",{"_index":487,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["wrapper",{"_index":218,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x",{"_index":209,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x_dimension",{"_index":551,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_rotation",{"_index":567,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_scaling",{"_index":563,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_translation",{"_index":571,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y",{"_index":210,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["y_dimension",{"_index":552,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_rotation",{"_index":568,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_scaling",{"_index":564,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_translation",{"_index":572,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["yes",{"_index":1306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youtube",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["z_dimension",{"_index":553,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_rotation",{"_index":569,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_scaling",{"_index":565,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_translation",{"_index":573,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["zone.js",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoombasedopacity",{"_index":337,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomopacity",{"_index":109,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomto(node",{"_index":338,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomtoonload",{"_index":580,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                gltfCache\n                            \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        gltfCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        layerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BodyUILayer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPickingInfo\n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReturnType<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderLayers\n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     []\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { CubeGeometry } from '@luma.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: new CubeGeometry() as any,\n        wireframe: false,\n        getTransformMatrix: (d) => (d as { transformMatrix: number[][] }).transformMatrix,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise } = {};\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as { data: SpatialSceneNode[]; zoomOpacity: number; doCollisions: boolean };\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe && d.unpickable);\n    const pickableCubes = state.data.filter(d => !d.scenegraph && !d.wireframe && !d.unpickable);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise } = {};\n    for (const m of models) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    return [\n      meshLayer('cubes', cubes, { wireframe: false, pickable: false }),\n      meshLayer('pickableCubes', pickableCubes, { wireframe: false, pickable: true }),\n      meshLayer('wireframes', wireframes, { wireframe: true, pickable: false }),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : (model.opacity !== undefined ? model.opacity : 1.0),\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string]) :\n            model.scenegraph as unknown as URL,\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          _lighting: model._lighting, // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color ?? [0, 255, 0, 0.5*255],\n          parameters: { depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1) }\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(\n    e: Parameters['getPickingInfo']>[0]\n  ): ReturnType['getPickingInfo']> {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debugSceneNodeProcessing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            legacyLighting\n                                        \n                                \n                                \n                                        \n                                            maxRotationX\n                                        \n                                \n                                \n                                        \n                                            minRotationX\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugSceneNodeProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugSceneNodeProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyLighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyLighting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orbitAxis\n                                        \n                                \n                                \n                                        \n                                            rotationOrbit\n                                        \n                                \n                                \n                                        \n                                            rotationX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationOrbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationOrbit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\n/* eslint-disable  */\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && !d.wireframe)\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickInfo.html":{"url":"interfaces/PickInfo.html","title":"interface - PickInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picked\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedNode.html":{"url":"interfaces/ProcessedNode.html","title":"interface - ProcessedNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SpatialSceneNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            jsonld\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:     AABB\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AABB\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonld:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\n\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n/* eslint-disable  */\nfunction childNames(scene, names: string[] = []): string[] {\n  for (const child of (scene.nodes || scene.children || [])) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string\n    ): Promise {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({scenegraph: gltfUrl, scenegraphNode} as SpatialSceneNode);\n  const nodes: {[node: string]: ProcessedNode} = {};\n  const gltfNodes: ProcessedNode[] = [];\n  for (const scene of gltf.scenes) {\n    worldMatrix = new Matrix4(worldMatrix || Matrix4.IDENTITY);\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        wireframe: true,\n        node\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter(n => !n.bbox)) {\n    for (const child of childNames(node.node).map(n => nodes[n]).filter(n => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = node.size = ub.clone().vsub(lb);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = node.center = lb.clone().vadd(halfSize);\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY)\n      .translate(center.toArray())\n      .scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntityJsonLd.html":{"url":"interfaces/SpatialEntityJsonLd.html","title":"interface - SpatialEntityJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialEntityJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            ccf_annotations\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            creation_date\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            creator_first_name\n                                        \n                                \n                                \n                                        \n                                            creator_last_name\n                                        \n                                \n                                \n                                        \n                                            dimension_units\n                                        \n                                \n                                \n                                        \n                                            extraction_set\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                                \n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                        \n                                            rui_rank\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slice_count\n                                        \n                                \n                                \n                                        \n                                            slice_thickness\n                                        \n                                \n                                \n                                        \n                                            updated_date\n                                        \n                                \n                                \n                                        \n                                            x_dimension\n                                        \n                                \n                                \n                                        \n                                            y_dimension\n                                        \n                                \n                                \n                                        \n                                            z_dimension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccf_annotations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ccf_annotations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraction_set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraction_set:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReferenceJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReferenceJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"Left\" | \"Right\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Left\" | \"Right\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReferenceJsonLd.html":{"url":"interfaces/SpatialObjectReferenceJsonLd.html","title":"interface - SpatialObjectReferenceJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialObjectReferenceJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            file_format\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacementJsonLd.html":{"url":"interfaces/SpatialPlacementJsonLd.html","title":"interface - SpatialPlacementJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialPlacementJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            placement_date\n                                        \n                                \n                                \n                                        \n                                            rotation_units\n                                        \n                                \n                                \n                                        \n                                            scaling_units\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            translation_units\n                                        \n                                \n                                \n                                        \n                                            x_rotation\n                                        \n                                \n                                \n                                        \n                                            x_scaling\n                                        \n                                \n                                \n                                        \n                                            x_translation\n                                        \n                                \n                                \n                                        \n                                            y_rotation\n                                        \n                                \n                                \n                                        \n                                            y_scaling\n                                        \n                                \n                                \n                                        \n                                            y_translation\n                                        \n                                \n                                \n                                        \n                                            z_rotation\n                                        \n                                \n                                \n                                        \n                                            z_scaling\n                                        \n                                \n                                \n                                        \n                                            z_translation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _lighting\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraphNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            transformMatrix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            wireframe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomBasedOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToOnLoad\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui/src/global-fixes.ts\n            \n            function\n            castToGlobalType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            class\n            BodyUILayer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            meshLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            class\n            BodyUI\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIProps\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIViewStateProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            PickInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialEntityJsonLd\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialObjectReferenceJsonLd\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialPlacementJsonLd\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n            \n            interface\n            SpatialSceneNode\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            deriveScenegraph\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            registerGLTFLoaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSVText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n            \n            function\n            processAnatomicalStructures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n            \n            function\n            processExtractionSites\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            function\n            processReferenceData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            variable\n            referenceDataConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            interface\n            ProcessedNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            childNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            processSceneNodes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n            \n            function\n            processSpatialEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n            \n            function\n            traverseScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n            \n            function\n            simplifyScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            function\n            doCollisions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.5.7\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.7\n        \n            @math.gl/core : ^3.5.5\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.1\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : ^5.1.1\n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^10.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^6.0.0\n        \n            n3 : ^1.8.1\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            castToGlobalType   (projects/.../global-fixes.ts)\n                        \n                        \n                            childNames   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            deriveScenegraph   (projects/.../load-gltf.ts)\n                        \n                        \n                            doCollisions   (projects/.../spatial-scene-collider.ts)\n                        \n                        \n                            loadGLTF   (projects/.../load-gltf.ts)\n                        \n                        \n                            loadGLTF2   (projects/.../load-gltf.ts)\n                        \n                        \n                            meshLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            parseCSV   (projects/.../parse-csv.ts)\n                        \n                        \n                            parseCSVText   (projects/.../parse-csv.ts)\n                        \n                        \n                            processAnatomicalStructures   (projects/.../process-anatomical-structures.ts)\n                        \n                        \n                            processExtractionSites   (projects/.../process-extraction-sites.ts)\n                        \n                        \n                            processReferenceData   (projects/.../process-reference-data.ts)\n                        \n                        \n                            processSceneNodes   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            processSpatialEntities   (projects/.../process-spatial-entities.ts)\n                        \n                        \n                            registerGLTFLoaders   (projects/.../load-gltf.ts)\n                        \n                        \n                            simplifyScene   (projects/.../simplify-scene.ts)\n                        \n                        \n                            traverseScene   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/global-fixes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        castToGlobalType\n                        \n                    \n                \n            \n            \n                \ncastToGlobalType(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        childNames\n                        \n                    \n                \n            \n            \n                \nchildNames(scene, names)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    names\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSceneNodes\n                        \n                    \n                \n            \n            \n                \nprocessSceneNodes(gltfUrl, worldMatrix?, scenegraphNode?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gltfUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    scenegraphNode\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/load-gltf.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deriveScenegraph\n                        \n                    \n                \n            \n            \n                \nderiveScenegraph(scenegraphNodeName, gltf)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltf\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF\n                        \n                    \n                \n            \n            \n                \nloadGLTF(model, cache?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cache\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF2\n                        \n                    \n                \n            \n            \n                \nloadGLTF2(scenegraphNodeName, gltfPromise)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfPromise\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerGLTFLoaders\n                        \n                    \n                \n            \n            \n                \nregisterGLTFLoaders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doCollisions\n                        \n                    \n                \n            \n            \n                \ndoCollisions(scene)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/body-ui-layer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meshLayer\n                        \n                    \n                \n            \n            \n                \nmeshLayer(id, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SimpleMeshLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/parse-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseCSV\n                        \n                    \n                \n            \n            \n                \nparseCSV(sourceUrl, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCSVText\n                        \n                    \n                \n            \n            \n                \nparseCSVText(csvText, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    csvText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processAnatomicalStructures\n                        \n                    \n                \n            \n            \n                \nprocessAnatomicalStructures(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processExtractionSites\n                        \n                    \n                \n            \n            \n                \nprocessExtractionSites(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processReferenceData\n                        \n                    \n                \n            \n            \n                \nprocessReferenceData(refEntities, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refEntities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSpatialEntities\n                        \n                    \n                \n            \n            \n                \nprocessSpatialEntities(parent, gltfOverride?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfOverride\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        simplifyScene\n                        \n                    \n                \n            \n            \n                \nsimplifyScene(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        traverseScene\n                        \n                    \n                \n            \n            \n                \ntraverseScene(scene, worldMatrix, visitor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    visitor\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeClickEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            NodeDragEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            SceneTraversalVisitor   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/body-ui.ts\n    \n    \n        \n            \n                \n                    \n                    NodeClickEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeDragEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n    \n        \n            \n                \n                    \n                    SceneTraversalVisitor\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            referenceDataConfig   (projects/.../process-reference-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        referenceDataConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  extractionSitesUrl: 'http://localhost:8080/source_data/ASCT-B_3D_Models_Extraction_Sites.csv',\n  anatomicalStructuresUrl: 'http://localhost:8080/source_data/ASCT-B_3D_Models_Mapping.csv',\n  referenceOrganConfigUrl: 'http://localhost:8080/source_data/reference-organ-config.csv'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
