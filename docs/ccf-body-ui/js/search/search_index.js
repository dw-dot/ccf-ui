var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BodyUILayer.html",[0,1.249,1,1.249]],["body/classes/BodyUILayer.html",[0,1.077,1,1.913,2,1.954,3,0.476,4,0.637,5,0.476,6,0.661,7,0.43,8,1.838,9,1.614,10,1.645,11,1.172,12,3.963,13,0.34,14,0.78,15,4.71,16,2.749,17,3.963,18,3.963,19,3.42,20,3.963,21,4.304,22,4.304,23,0.556,24,0.052,25,1.415,26,2.322,27,1.52,28,3.66,29,2.424,30,1.075,31,2.424,32,2.424,33,2.424,34,2.758,35,1.415,36,0.831,37,1.996,38,3.196,39,2.424,40,2.424,41,1.736,42,2.424,43,1.237,44,2.424,45,1.23,46,3.42,47,3.196,48,1.954,49,1.23,50,3.42,51,1.954,52,1.294,53,1.077,54,0.898,55,0.946,56,1.996,57,1.645,58,1.996,59,2.424,60,1.415,61,2.69,62,2.424,63,2.424,64,1.23,65,1.954,66,2.197,67,2.322,68,2.424,69,1.913,70,1.556,71,2.424,72,1.546,73,2.922,74,1.358,75,0.672,76,4.539,77,1.761,78,2.424,79,2.826,80,2.424,81,1.954,82,2.424,83,2.424,84,2.304,85,3.42,86,3.42,87,1.761,88,1.761,89,2.012,90,2.313,91,1.761,92,1.996,93,1.996,94,2.424,95,2.922,96,3.42,97,2.512,98,1.52,99,1.455,100,3.42,101,1.334,102,2.424,103,0.637,104,3.963,105,1.334,106,2.197,107,2.424,108,2.424,109,1.996,110,2.424,111,2.424,112,2.424,113,1.077,114,3.42,115,4.304,116,3.471,117,3.196,118,3.42,119,3.42,120,3.42,121,3.963,122,2.424,123,2.424,124,2.424,125,2.424,126,3.963,127,2.424,128,2.424,129,2.424,130,1.52,131,2.424,132,2.424,133,2.424,134,2.424,135,2.424,136,1.954,137,1.645,138,3.42,139,2.424,140,4.304,141,1.23,142,2.424,143,1.415,144,2.424,145,2.424,146,2.424,147,2.424,148,1.415,149,1.415,150,1.077,151,2.424,152,1.23,153,2.424,154,2.424,155,2.424,156,2.424,157,1.645,158,2.424,159,2.424,160,2.424,161,2.424,162,2.424,163,0.022,164,0.031,165,0.022]],["title/interfaces/BodyUIProps.html",[166,0.024,167,1.427]],["body/interfaces/BodyUIProps.html",[0,1.145,1,1.406,3,0.622,4,0.435,5,0.326,6,0.232,7,0.289,8,0.646,9,0.883,11,0.568,13,0.362,14,0.588,16,2.904,23,0.698,24,0.053,27,1.719,30,1.096,36,1.224,37,2.76,41,2.549,43,1.193,45,0.841,49,0.841,52,1.329,53,0.736,54,0.677,55,1.598,66,1.965,69,1.406,70,1.224,72,1.725,74,1.72,75,0.76,77,1.145,79,1.847,84,2.079,87,1.719,88,1.719,89,1.964,90,2.258,91,1.145,92,0.967,93,0.967,97,0.967,98,0.736,99,1.606,101,1.006,103,1.016,105,0.646,106,2.063,109,2.841,113,2.231,130,0.736,141,0.841,148,0.967,149,0.967,150,0.736,152,0.841,163,0.015,164,0.024,165,0.024,166,0.028,167,1.309,168,0.326,169,0.841,170,2.781,171,2.424,172,2.424,173,2.424,174,2.424,175,2.626,176,2.626,177,1.812,178,2.424,179,1.725,180,3.002,181,2.148,182,2.148,183,1.719,184,2.148,185,2.148,186,1.75,187,1.75,188,1.75,189,1.75,190,1.125,191,0.646,192,2.581,193,0.967,194,1.125,195,2.651,196,0.967,197,1.125,198,1.125,199,1.75,200,0.841,201,1.125,202,0.841,203,2.245,204,2.148,205,2.424,206,2.424,207,2.171,208,1.393,209,1.125,210,2.148,211,0.841,212,1.75,213,0.967,214,2.626,215,0.967,216,1.75,217,1.125,218,1.125,219,0.841,220,0.967,221,3.436,222,1.125,223,1.125,224,1.125,225,1.125,226,1.125,227,1.125,228,1.125,229,1.125,230,1.125,231,1.125,232,1.125,233,1.125,234,1.125,235,1.125,236,1.125,237,1.125,238,1.125,239,1.125,240,1.125,241,1.125,242,1.125,243,1.125,244,1.125,245,2.626,246,1.125,247,1.75,248,1.125,249,1.125,250,0.967,251,1.75,252,0.967,253,1.125,254,1.125,255,1.125,256,1.75,257,1.75,258,1.125,259,1.125,260,1.125,261,1.125,262,1.125,263,1.125,264,1.125,265,1.125,266,1.125,267,1.125,268,1.125,269,1.125,270,1.125,271,1.125,272,1.125,273,1.75,274,1.125,275,1.125,276,1.125,277,1.125,278,1.125,279,1.125,280,1.125,281,1.125,282,1.125,283,3.002,284,3.002,285,1.125,286,1.75,287,1.125,288,1.125,289,1.505,290,1.75,291,1.125,292,1.125,293,1.125,294,0.841,295,1.125,296,2.148,297,1.309,298,1.125,299,1.125,300,1.125,301,1.75,302,1.125,303,1.125,304,1.125,305,1.125,306,2.148,307,1.125,308,1.125,309,1.75,310,1.125,311,2.148,312,1.125,313,1.125,314,1.812,315,1.505,316,1.505,317,1.006,318,1.125,319,1.125,320,1.125,321,1.125,322,2.148,323,1.125,324,1.125,325,1.125,326,1.125,327,0.841,328,1.125,329,1.125,330,1.125,331,1.125,332,1.125,333,1.125,334,1.505,335,0.736,336,1.125,337,0.841,338,1.125,339,1.125,340,1.125,341,2.626,342,1.125,343,1.125,344,1.125,345,1.125,346,1.125,347,1.125,348,1.125,349,1.125,350,1.75,351,1.125,352,2.148,353,1.125,354,1.75,355,1.75,356,1.125,357,1.125,358,1.125,359,1.125,360,1.125,361,2.148,362,1.125,363,1.125,364,1.125,365,1.125,366,1.125,367,1.125,368,1.125,369,1.125,370,1.125,371,1.125,372,1.125,373,0.736,374,1.125,375,1.125,376,1.125,377,1.125,378,1.125,379,1.125,380,2.148,381,1.125,382,1.125,383,1.125,384,1.125,385,1.125,386,1.125,387,1.125,388,1.125]],["title/interfaces/BodyUIViewStateProps.html",[166,0.024,203,1.427]],["body/interfaces/BodyUIViewStateProps.html",[0,1.172,1,1.432,3,0.634,4,0.448,5,0.335,6,0.239,7,0.295,8,0.665,9,0.904,11,0.904,13,0.37,14,0.602,16,2.921,23,0.643,24,0.053,27,1.742,30,1.068,36,1.243,37,2.781,41,2.563,43,1.203,45,0.866,49,0.866,52,1.342,53,0.758,54,0.693,55,1.617,66,1.984,69,1.432,70,1.243,72,1.742,74,1.73,75,0.518,77,1.172,79,1.881,84,2.104,87,1.742,88,1.742,89,1.991,90,2.289,91,1.172,92,0.996,93,0.996,97,0.996,98,0.758,99,1.602,101,1.029,103,1.03,105,0.665,106,2.08,109,2.86,113,2.08,130,0.758,141,0.866,148,0.996,149,0.996,150,0.758,152,0.866,163,0.016,164,0.024,165,0.024,166,0.028,167,0.866,168,0.335,169,0.866,170,2.814,171,1.158,172,1.158,173,1.158,174,1.158,175,1.79,176,1.79,177,0.866,178,1.158,179,1.742,180,3.031,181,1.158,182,1.158,183,1.742,184,2.188,185,2.188,186,1.79,187,1.79,188,1.79,189,2.188,190,1.158,191,0.665,192,2.606,193,0.996,194,1.158,195,2.675,196,0.996,197,1.158,198,1.158,199,1.79,200,0.866,201,1.158,202,0.866,203,2.326,204,2.814,205,2.934,206,2.934,207,2.194,208,1.415,209,1.158,210,2.188,211,0.866,212,1.79,213,0.996,214,2.662,215,0.996,216,1.79,217,1.158,218,1.158,219,0.866,220,0.996,221,3.454,222,1.158,223,1.158,224,1.158,225,1.158,226,1.158,227,1.158,228,1.158,229,1.158,230,1.158,231,1.158,232,1.158,233,1.158,234,1.158,235,1.158,236,1.158,237,1.158,238,1.158,239,1.158,240,1.158,241,1.158,242,1.158,243,1.158,244,1.158,245,2.662,246,1.158,247,1.79,248,1.158,249,1.158,250,0.996,251,1.79,252,0.996,253,1.158,254,1.158,255,1.158,256,1.79,257,1.79,258,1.158,259,1.158,260,1.158,261,1.158,262,1.158,263,1.158,264,1.158,265,1.158,266,1.158,267,1.158,268,1.158,269,1.158,270,1.158,271,1.158,272,1.158,273,1.79,274,1.158,275,1.158,276,1.158,277,1.158,278,1.158,279,1.158,280,1.158,281,1.158,282,1.158,283,3.031,284,3.031,285,1.158,286,1.79,287,1.158,288,1.158,289,1.539,290,1.79,291,1.158,292,1.158,293,1.158,294,0.866,295,1.158,296,2.188,297,1.339,298,1.158,299,1.158,300,1.158,301,1.79,302,1.158,303,1.158,304,1.158,305,1.158,306,2.188,307,1.158,308,1.158,309,1.79,310,1.158,311,2.188,312,1.158,313,1.158,314,1.841,315,1.539,316,1.539,317,1.029,318,1.158,319,1.158,320,1.158,321,1.158,322,2.188,323,1.158,324,1.158,325,1.158,326,1.158,327,0.866,328,1.158,329,1.158,330,1.158,331,1.158,332,1.158,333,1.158,334,1.539,335,0.758,336,1.158,337,0.866,338,1.158,339,1.158,340,1.158,341,2.662,342,1.158,343,1.158,344,1.158,345,1.158,346,1.158,347,1.158,348,1.158,349,1.158,350,1.79,351,1.158,352,2.188,353,1.158,354,1.79,355,1.79,356,1.158,357,1.158,358,1.158,359,1.158,360,1.158,361,2.188,362,1.158,363,1.158,364,1.158,365,1.158,366,1.158,367,1.158,368,1.158,369,1.158,370,1.158,371,1.158,372,1.158,373,0.758,374,1.158,375,1.158,376,1.158,377,1.158,378,1.158,379,1.158,380,2.188,381,1.158,382,1.158,383,1.158,384,1.158,385,1.158,386,1.158,387,1.158,388,1.158]],["title/interfaces/Collision.html",[166,0.024,389,1.908]],["body/interfaces/Collision.html",[3,0.524,4,0.7,5,0.524,6,0.374,7,0.243,13,0.374,14,0.833,23,0.659,24,0.052,25,2.132,30,1.234,35,3.142,43,1.305,52,1.098,53,1.184,54,1.178,55,1.425,60,2.432,64,1.352,69,1.852,72,1.425,73,2.829,74,1.734,75,1.053,77,1.852,87,1.623,88,1.184,103,0.7,105,1.039,106,2.429,116,2.945,117,2.148,136,2.945,143,1.555,157,3.189,163,0.024,164,0.033,165,0.024,166,0.023,168,0.524,179,1.039,183,1.184,191,1.039,294,1.352,297,1.352,389,2.829,390,1.808,391,1.808,392,4.852,393,1.808,394,2.148,395,3.652,396,2.148,397,3.652,398,2.148,399,3.616,400,2.148,401,1.808,402,1.808,403,1.555,404,2.148,405,2.148,406,2.664,407,2.664,408,4.167,409,2.664,410,2.664,411,2.664,412,3.652,413,3.616,414,2.664,415,3.616,416,2.664,417,2.664,418,3.361,419,3.652,420,3.361,421,2.945,422,2.945,423,2.945,424,2.945,425,2.945,426,2.945,427,4.167,428,2.664,429,2.664,430,2.664,431,2.664,432,2.664,433,2.148,434,2.664,435,2.148,436,2.148,437,2.945,438,2.148,439,2.148,440,2.148,441,2.148,442,2.148,443,2.148,444,2.664,445,2.148,446,4.484,447,3.652,448,2.664,449,2.664,450,2.664,451,2.664,452,2.664,453,2.664,454,2.664,455,2.664,456,2.664,457,2.664,458,2.664,459,2.664,460,2.664,461,2.664,462,2.664,463,4.698,464,3.652,465,3.616,466,3.652,467,3.652,468,2.664,469,2.664,470,2.664,471,2.664,472,2.664,473,2.148]],["title/interfaces/PickInfo.html",[166,0.024,207,1.427]],["body/interfaces/PickInfo.html",[0,1.176,1,1.437,3,0.636,4,0.45,5,0.337,6,0.241,7,0.295,8,0.669,9,0.907,11,0.587,13,0.551,14,0.604,16,2.924,23,0.628,24,0.053,27,1.746,30,0.948,36,1.246,37,2.785,41,2.565,43,1.205,45,0.87,49,0.87,52,1.344,53,0.762,54,0.695,55,1.62,66,1.987,69,1.437,70,1.246,72,1.744,74,1.731,75,0.52,77,1.176,79,1.887,84,2.108,87,1.746,88,1.746,89,1.995,90,2.294,91,1.176,92,1,93,1,97,1.887,98,0.762,99,1.593,101,1.032,103,1.032,105,0.669,106,2.083,109,2.863,113,2.152,130,0.762,141,0.87,148,1,149,1,150,0.762,152,0.87,163,0.016,164,0.024,165,0.024,166,0.028,167,0.87,168,0.337,169,0.87,170,2.195,171,1.164,172,1.164,173,1.164,174,1.164,175,1.797,176,1.797,177,0.87,178,1.164,179,1.533,180,2.668,181,1.164,182,1.164,183,1.437,184,2.195,185,2.195,186,1.797,187,1.797,188,1.797,189,1.797,190,1.164,191,0.669,192,2.61,193,1,194,1.164,195,2.678,196,1,197,1.164,198,1.164,199,2.668,200,0.87,201,1.164,202,0.87,203,2.27,204,2.195,205,2.468,206,2.468,207,2.27,208,1.689,209,2.468,210,2.82,211,1.846,212,2.668,213,1,214,2.668,215,1,216,1.797,217,1.164,218,1.164,219,0.87,220,1,221,3.456,222,1.164,223,1.164,224,1.164,225,1.164,226,1.164,227,1.164,228,1.164,229,1.164,230,1.164,231,1.164,232,1.164,233,1.164,234,1.164,235,1.164,236,1.164,237,1.164,238,1.164,239,1.164,240,1.164,241,1.164,242,1.164,243,1.164,244,1.164,245,2.668,246,1.164,247,1.797,248,1.164,249,1.164,250,1,251,1.797,252,1,253,1.164,254,1.164,255,1.164,256,1.797,257,1.797,258,1.164,259,1.164,260,1.164,261,1.164,262,1.164,263,1.164,264,1.164,265,1.164,266,1.164,267,1.164,268,1.164,269,1.164,270,1.164,271,1.164,272,1.164,273,1.797,274,1.164,275,1.164,276,1.164,277,1.164,278,1.164,279,1.164,280,1.164,281,1.164,282,1.164,283,3.036,284,3.036,285,1.164,286,1.797,287,1.164,288,1.164,289,1.545,290,1.797,291,1.164,292,1.164,293,1.164,294,0.87,295,1.164,296,2.195,297,1.344,298,1.164,299,1.164,300,1.164,301,1.797,302,1.164,303,1.164,304,1.164,305,1.164,306,2.195,307,1.164,308,1.164,309,1.797,310,1.164,311,2.195,312,1.164,313,1.164,314,1.846,315,1.545,316,1.545,317,1.032,318,1.164,319,1.164,320,1.164,321,1.164,322,2.195,323,1.164,324,1.164,325,1.164,326,1.164,327,0.87,328,1.164,329,1.164,330,1.164,331,1.164,332,1.164,333,1.164,334,1.545,335,0.762,336,1.164,337,0.87,338,1.164,339,1.164,340,1.164,341,2.668,342,1.164,343,1.164,344,1.164,345,1.164,346,1.164,347,1.164,348,1.164,349,1.164,350,1.797,351,1.164,352,2.195,353,1.164,354,1.797,355,1.797,356,1.164,357,1.164,358,1.164,359,1.164,360,1.164,361,2.195,362,1.164,363,1.164,364,1.164,365,1.164,366,1.164,367,1.164,368,1.164,369,1.164,370,1.164,371,1.164,372,1.164,373,0.762,374,1.164,375,1.164,376,1.164,377,1.164,378,1.164,379,1.164,380,2.195,381,1.164,382,1.164,383,1.164,384,1.164,385,1.164,386,1.164,387,1.164,388,1.164]],["title/interfaces/ProcessedNode.html",[166,0.024,474,1.908]],["body/interfaces/ProcessedNode.html",[3,0.536,4,0.716,5,0.536,6,0.383,7,0.249,11,1.272,13,0.383,14,0.847,23,0.665,24,0.052,30,1.141,43,1.244,52,1.361,53,1.212,54,1.189,55,2.084,56,1.592,58,2.166,60,2.166,64,1.884,69,1.649,72,1.064,73,2.864,74,1.713,75,0.729,77,1.874,84,2.299,87,1.649,88,1.212,95,1.851,98,1.649,101,1.064,103,0.975,105,1.064,106,2.428,130,1.212,150,1.212,152,1.384,163,0.025,164,0.034,165,0.025,166,0.024,168,0.536,183,1.874,191,1.064,202,1.884,289,2.166,294,1.384,297,1.384,314,1.884,327,1.384,335,1.874,337,1.384,393,1.851,399,3.82,400,4.032,401,1.851,402,1.851,403,1.592,404,2.199,413,2.993,415,2.993,420,3.651,421,2.199,422,2.199,423,2.199,424,2.199,425,2.199,426,2.199,433,2.199,435,2.199,436,2.199,437,2.993,438,2.199,439,2.199,440,2.199,441,2.199,442,2.199,443,2.199,445,2.993,473,2.199,474,3.542,475,1.592,476,1.851,477,3.82,478,3.651,479,4.736,480,2.199,481,2.864,482,3.711,483,2.727,484,2.727,485,2.727,486,2.727,487,3.402,488,2.727,489,3.711,490,3.711,491,3.711,492,2.199,493,3.711,494,2.727,495,2.727,496,2.727,497,2.727,498,2.727,499,2.199,500,2.727,501,2.727,502,2.727,503,3.711,504,2.727,505,2.727,506,4.218,507,2.727,508,2.727,509,2.727,510,3.711,511,2.727,512,2.727,513,2.727,514,2.727,515,2.727,516,2.727,517,2.727,518,2.727,519,2.727,520,2.727,521,2.727,522,2.727,523,2.727,524,2.727,525,2.727,526,2.727]],["title/interfaces/SpatialEntityJsonLd.html",[166,0.024,527,1.427]],["body/interfaces/SpatialEntityJsonLd.html",[3,0.54,4,0.979,5,0.733,6,0.385,7,0.251,11,1.556,13,0.385,14,0.85,23,0.787,24,0.052,30,1.301,43,0.721,70,1.678,75,0.962,99,1.676,103,1.112,163,0.025,164,0.034,165,0.025,166,0.037,168,0.54,179,1.071,208,1.771,527,1.892,528,1.602,529,1.393,530,1.602,531,3.223,532,3.223,533,3.082,534,3.082,535,3.082,536,3.082,537,3.082,538,3.082,539,3.082,540,3.082,541,3.082,542,2.771,543,2.65,544,2.65,545,3.082,546,2.65,547,2.65,548,3.082,549,3.082,550,3.082,551,3.082,552,3.082,553,3.082,554,2.305,555,2.587,556,2.874,557,2.874,558,2.47,559,2.47,560,1.863,561,1.602,562,1.863,563,1.863,564,1.863,565,1.863,566,1.863,567,1.863,568,1.863,569,1.863,570,1.863,571,1.863,572,1.863,573,1.863,574,1.863,575,1.863]],["title/interfaces/SpatialObjectReferenceJsonLd.html",[166,0.024,554,1.427]],["body/interfaces/SpatialObjectReferenceJsonLd.html",[3,0.656,4,1.114,5,0.994,6,0.469,7,0.305,11,1.68,13,0.469,14,0.967,23,0.764,24,0.051,30,1.299,43,0.877,70,1.453,75,1.016,99,1.663,103,1.224,163,0.03,164,0.039,165,0.03,166,0.041,168,0.656,179,1.303,208,1.303,527,1.695,528,1.949,529,1.695,530,1.949,531,3.434,532,2.879,533,2.267,534,2.267,535,2.267,536,2.267,537,2.267,538,2.267,539,2.267,540,2.267,541,2.267,542,2.953,543,1.949,544,1.949,545,2.267,546,1.949,547,1.949,548,2.267,549,2.267,550,2.267,551,2.267,552,2.267,553,2.267,554,2.365,555,2.624,556,2.267,557,2.267,558,1.949,559,1.949,560,2.267,561,1.949,562,2.267,563,2.267,564,2.267,565,2.267,566,2.267,567,2.267,568,2.267,569,2.267,570,2.267,571,2.267,572,2.267,573,2.267,574,2.267,575,3.327]],["title/interfaces/SpatialPlacementJsonLd.html",[166,0.024,555,1.427]],["body/interfaces/SpatialPlacementJsonLd.html",[3,0.583,4,1.28,5,0.772,6,0.416,7,0.271,11,1.606,13,0.416,14,0.896,23,0.784,24,0.052,30,1.298,36,1.606,43,0.779,70,1.346,75,0.984,99,1.696,103,1.156,163,0.027,164,0.036,165,0.027,166,0.038,168,0.583,179,1.828,208,1.158,527,1.506,528,1.732,529,1.506,530,1.732,531,3.309,532,3.309,533,2.014,534,2.014,535,2.014,536,2.014,537,2.014,538,2.014,539,2.014,540,2.014,541,2.014,542,2.292,543,1.732,544,1.732,545,2.014,546,1.732,547,1.732,548,2.014,549,2.014,550,2.014,551,2.014,552,2.014,553,2.014,554,1.994,555,2.474,556,2.014,557,2.014,558,1.732,559,1.732,560,2.014,561,1.732,562,3.181,563,3.181,564,3.181,565,3.181,566,3.181,567,3.181,568,3.181,569,3.181,570,3.181,571,3.181,572,3.181,573,3.181,574,3.181,575,2.014]],["title/interfaces/SpatialSceneNode.html",[52,0.845,166,0.024]],["body/interfaces/SpatialSceneNode.html",[3,0.624,4,0.834,5,0.624,6,0.446,7,0.29,13,0.446,14,0.937,23,0.785,24,0.051,30,1.289,35,2.808,36,1.936,43,0.834,52,1.234,54,0.834,75,0.946,95,3.266,98,2.137,99,1.668,101,1.877,103,0.834,113,2.413,130,2.137,137,3.266,150,2.137,163,0.029,164,0.037,165,0.029,166,0.028,168,0.624,183,2.137,191,1.239,335,2.137,337,2.442,418,3.879,499,3.879,543,2.808,544,2.808,576,2.561,577,2.561,578,4.81,579,4.81,580,4.81]],["title/changelog.html",[581,1.61,582,1.384,583,1.61]],["body/changelog.html",[3,0.735,7,0.371,9,1.472,14,0.272,23,0.167,24,0.039,26,0.809,28,0.961,36,0.408,54,1.028,66,2.194,67,1.343,74,1.391,75,0.234,81,1.595,89,1.898,91,0.879,99,0.358,101,1.151,137,0.809,141,1.986,157,1.343,163,0.011,164,0.018,165,0.036,166,0.033,168,0.234,177,0.605,211,0.605,219,2.589,250,1.48,252,0.696,316,2.694,317,1.745,334,0.696,373,1.311,393,2.003,465,3.668,481,0.809,542,0.696,546,1.154,547,0.696,558,0.696,559,0.696,561,2.182,582,1.48,583,1.343,584,1.595,585,0.961,586,3.155,587,1.978,588,2.95,589,3.272,590,1.192,591,5.525,592,1.978,593,3.272,594,1.978,595,3.529,596,1.978,597,1.192,598,1.192,599,3.529,600,1.192,601,4.294,602,1.978,603,3.015,604,1.978,605,4.249,606,3.529,607,2.379,608,3.738,609,1.192,610,3.272,611,3.738,612,3.015,613,4.113,614,1.192,615,1.192,616,1.978,617,2.95,618,2.379,619,3.913,620,1.192,621,1.192,622,2.95,623,1.192,624,1.978,625,4.294,626,2.535,627,1.192,628,1.978,629,2.535,630,1.192,631,1.192,632,3.413,633,2.535,634,1.192,635,2.535,636,1.978,637,1.192,638,1.978,639,4.548,640,1.192,641,1.192,642,1.192,643,4.548,644,1.192,645,1.192,646,0.961,647,0.961,648,2.222,649,0.961,650,1.192,651,1.978,652,0.961,653,1.192,654,1.978,655,2.95,656,2.95,657,1.192,658,1.978,659,2.535,660,1.192,661,1.192,662,1.978,663,1.192,664,1.192,665,3.529,666,2.396,667,2.639,668,2.044,669,1.192,670,4.186,671,2.639,672,1.192,673,1.978,674,1.192,675,2.535,676,3.155,677,4.474,678,1.978,679,1.192,680,1.192,681,1.978,682,4.294,683,2.044,684,1.192,685,3.529,686,3.272,687,1.192,688,1.192,689,3.272,690,1.192,691,1.192,692,1.192,693,1.192,694,2.535,695,1.192,696,1.595,697,1.595,698,1.192,699,3.155,700,1.192,701,1.192,702,1.192,703,1.192,704,1.192,705,1.192,706,2.639,707,2.756,708,2.639,709,1.192,710,1.978,711,1.192,712,1.192,713,2.535,714,1.978,715,1.192,716,1.978,717,1.192,718,1.978,719,1.978,720,1.978,721,3.529,722,1.978,723,1.192,724,2.535,725,1.192,726,1.192,727,0.961,728,1.192,729,2.044,730,1.343,731,1.978,732,1.192,733,1.192,734,1.192,735,4.778,736,1.192,737,1.978,738,1.978,739,1.978,740,2.95,741,1.978,742,1.192,743,1.192,744,1.192,745,2.535,746,1.192,747,1.978,748,1.192,749,1.192,750,1.978,751,3.529,752,1.595,753,1.192,754,0.961,755,1.192,756,1.192,757,3.272,758,2.95,759,1.192,760,2.535,761,1.978,762,3.529,763,1.595,764,2.95,765,1.192,766,1.192,767,1.595,768,2.95,769,3.272,770,1.192,771,1.192,772,1.192,773,0.961,774,1.192,775,1.978,776,1.978,777,1.192,778,1.978,779,1.192,780,0.961,781,1.978,782,1.192,783,1.978,784,1.192,785,1.192,786,2.95,787,1.192,788,1.192,789,1.192,790,1.192,791,1.192,792,1.978,793,1.192,794,1.192,795,1.192,796,1.192,797,1.192,798,1.192,799,1.978,800,1.192,801,1.192,802,1.192,803,1.192,804,1.192,805,1.978,806,1.192,807,3.529,808,1.192,809,2.535,810,1.978,811,1.192,812,1.978,813,1.192,814,0.961,815,0.961,816,1.192,817,1.978,818,1.978,819,1.192,820,1.192,821,2.003,822,1.192,823,1.192,824,1.978,825,1.978,826,1.192,827,1.192,828,1.978,829,1.978,830,1.192,831,1.978,832,2.95,833,2.535,834,1.192,835,1.192,836,1.192,837,1.192,838,0.961,839,0.961,840,1.192,841,1.978,842,1.192,843,1.192,844,1.192,845,1.192,846,1.978,847,2.95,848,1.192,849,1.192,850,1.192,851,1.192,852,3.529,853,2.535,854,1.978,855,1.192,856,1.192,857,2.535,858,1.978,859,1.978,860,1.978,861,2.95,862,1.192,863,0.961,864,1.192,865,1.192,866,1.978,867,1.192,868,1.192,869,1.192,870,1.192,871,1.192,872,2.95,873,1.192,874,2.535,875,2.95,876,1.192,877,2.535,878,3.272,879,1.978,880,1.978,881,1.978,882,1.978,883,1.978,884,2.535,885,2.95,886,3.272,887,1.978,888,2.535,889,1.192,890,1.192,891,3.738,892,2.535,893,1.192,894,2.95,895,2.95,896,4.06,897,1.192,898,1.192,899,1.192,900,1.192,901,1.192,902,1.192,903,1.978,904,1.192,905,1.978,906,1.192,907,1.192,908,1.192,909,1.192,910,1.978,911,1.192,912,1.721,913,1.192,914,1.978,915,2.044,916,1.978,917,2.535,918,1.192,919,1.192,920,1.192,921,1.978,922,1.192,923,1.192,924,1.192,925,1.192,926,1.192,927,1.192,928,1.192,929,1.978,930,1.192,931,1.192,932,2.95,933,3.529,934,1.978,935,2.535,936,1.978,937,2.95,938,1.192,939,1.192,940,1.192,941,1.192,942,2.535,943,1.192,944,1.192,945,1.192,946,1.978,947,1.978,948,1.978,949,1.978,950,2.535,951,1.192,952,1.192,953,1.192,954,1.192,955,1.192,956,1.192,957,0.961,958,1.192,959,1.192,960,1.192,961,1.978,962,1.192,963,1.192,964,1.978,965,1.192,966,1.192,967,1.192,968,1.192,969,1.192,970,1.192,971,1.192,972,1.192,973,1.192,974,1.192,975,3.913,976,1.192,977,2.044,978,2.535,979,2.95,980,1.978,981,2.535,982,1.192,983,1.978,984,1.192,985,1.192,986,1.192,987,1.978,988,1.978,989,1.978,990,1.192,991,1.192,992,1.192,993,1.192,994,1.978,995,1.192,996,2.535,997,1.192,998,1.192,999,1.192,1000,1.192,1001,0.961,1002,1.192,1003,1.192,1004,1.192,1005,1.192,1006,1.192,1007,1.192,1008,1.192,1009,1.192,1010,1.192,1011,1.192,1012,1.192,1013,2.379,1014,3.272,1015,1.192,1016,1.192,1017,1.192,1018,1.192,1019,1.192,1020,1.192,1021,1.192,1022,1.192,1023,1.192,1024,1.192,1025,1.192,1026,1.192,1027,1.192,1028,1.192,1029,1.978,1030,1.192,1031,1.978,1032,1.192,1033,1.978,1034,1.978,1035,2.95,1036,2.95,1037,1.978,1038,1.978,1039,1.192,1040,1.192,1041,1.192,1042,2.535,1043,1.192,1044,0.961,1045,1.192,1046,1.192,1047,1.192,1048,1.192,1049,1.192,1050,1.192,1051,1.978,1052,4.186,1053,2.535,1054,1.978,1055,1.192,1056,1.978,1057,1.192,1058,1.192,1059,1.192,1060,1.192,1061,1.192,1062,1.192,1063,1.192,1064,1.192,1065,1.192,1066,1.978,1067,3.015,1068,1.978,1069,1.192,1070,1.192,1071,1.192,1072,1.595,1073,1.192,1074,2.95,1075,1.192,1076,1.978,1077,1.192,1078,1.192,1079,2.003,1080,1.192,1081,1.978,1082,1.192,1083,1.192,1084,1.192,1085,1.978,1086,1.978,1087,1.192,1088,1.192,1089,1.192,1090,1.192,1091,1.978,1092,2.535,1093,1.978,1094,1.192,1095,1.192,1096,1.595,1097,1.192,1098,1.192,1099,1.192,1100,1.192,1101,1.192,1102,1.192,1103,1.192,1104,1.192,1105,1.192,1106,0.961,1107,1.192,1108,1.192,1109,1.978,1110,1.192,1111,1.192,1112,1.192,1113,1.192,1114,1.192,1115,1.192,1116,1.192,1117,1.978,1118,1.978,1119,1.192,1120,0.961,1121,1.192,1122,1.192,1123,0.961,1124,1.192,1125,1.192,1126,1.192,1127,1.978,1128,1.192,1129,1.192,1130,1.192,1131,1.192,1132,1.192,1133,1.192,1134,1.192,1135,1.192,1136,1.192,1137,1.192,1138,1.192,1139,1.978,1140,1.192,1141,1.192,1142,1.192,1143,1.192,1144,1.978,1145,1.192,1146,1.192,1147,0.961,1148,1.192,1149,1.192,1150,1.192,1151,1.192,1152,1.192,1153,1.192,1154,1.192,1155,1.192]],["title/coverage.html",[1079,2.571]],["body/coverage.html",[0,1.737,1,1.309,5,0.579,6,0.788,7,0.513,8,1.95,9,1.34,10,2.654,23,0.413,24,0.051,52,0.886,54,1.313,56,1.72,57,2,58,1.72,61,2,64,2.788,72,2.189,74,1.01,163,0.027,164,0.036,165,0.027,166,0.046,167,1.496,169,2.372,200,1.496,203,1.496,207,1.496,220,1.72,317,1.525,373,1.309,389,2,390,2.654,391,2.654,403,1.72,474,2,475,3.022,476,2.978,527,1.496,528,2.561,529,2.372,530,2.561,554,1.496,555,1.496,576,2.376,577,2.376,666,2,730,2,912,2,1079,2,1156,2.946,1157,2.946,1158,2.376,1159,2.376,1160,2.376,1161,5.509,1162,4.387,1163,2.376,1164,2.946,1165,2.946,1166,2.946,1167,2.946,1168,2.946,1169,3.909,1170,3.768,1171,3.768,1172,2.376,1173,3.152,1174,3.152,1175,2.376,1176,2.376,1177,2.376,1178,2.376,1179,2.376,1180,2.376,1181,2.654,1182,2.376,1183,2.946,1184,2.376,1185,2.376,1186,2.376,1187,2.376,1188,2,1189,2,1190,2.376,1191,2.376,1192,2.376,1193,2.946,1194,2.946,1195,2.946]],["title/dependencies.html",[652,1.912,821,2.286]],["body/dependencies.html",[5,0.613,7,0.285,24,0.052,25,1.822,45,1.584,48,2.517,49,2.061,51,2.517,55,1.218,143,1.822,163,0.028,164,0.037,165,0.028,191,1.218,192,1.822,193,1.822,196,1.822,394,2.517,396,2.517,398,2.517,401,2.119,402,2.119,478,2.517,648,2.119,671,2.517,696,2.517,752,2.517,763,2.517,814,2.517,815,2.517,821,2.119,839,3.274,915,2.517,977,3.274,1072,3.274,1196,3.121,1197,3.121,1198,3.121,1199,5.385,1200,3.121,1201,3.121,1202,3.121,1203,3.121,1204,3.121,1205,3.121,1206,3.121,1207,3.121,1208,4.059,1209,3.121,1210,3.121,1211,3.121,1212,3.121,1213,3.121,1214,3.121,1215,3.121,1216,4.954,1217,3.121,1218,3.121,1219,4.512,1220,3.121,1221,3.121,1222,3.121,1223,3.121,1224,3.121,1225,4.059,1226,4.512,1227,3.121,1228,3.121,1229,3.121,1230,3.121,1231,3.274,1232,3.121,1233,3.121,1234,3.121,1235,4.059,1236,3.121,1237,3.121,1238,3.121,1239,3.121,1240,3.121,1241,3.121,1242,3.121,1243,3.121,1244,3.121,1245,3.121,1246,3.121,1247,3.121,1248,3.121,1249,3.121,1250,3.121,1251,4.059,1252,2.517,1253,3.121,1254,3.121,1255,3.121,1256,3.121,1257,3.121,1258,4.059,1259,3.121,1260,3.121,1261,3.121,1262,3.121,1263,3.121,1264,3.121,1265,3.121,1266,3.121,1267,3.121,1268,3.121,1269,3.121,1270,3.121,1271,3.121,1272,3.121,1273,3.121,1274,3.121,1275,3.121,1276,3.121,1277,3.121,1278,3.121,1279,3.121,1280,3.121,1281,4.059,1282,3.121,1283,3.121,1284,3.121,1285,3.121,1286,3.121,1287,3.121,1288,3.121,1289,3.121,1290,3.121,1291,3.121,1292,3.121,1293,4.059,1294,3.121,1295,3.121,1296,3.121,1297,3.121,1298,3.121,1299,3.121,1300,3.121,1301,3.121,1302,3.121,1303,3.121,1304,3.121,1305,3.121,1306,3.121]],["title/miscellaneous/functions.html",[1307,1.054,1308,2.715]],["body/miscellaneous/functions.html",[6,0.75,7,0.488,8,1.108,9,1.307,10,2.59,13,0.399,24,0.051,27,1.262,30,0.648,34,4.395,35,3.181,36,1.868,38,4.395,41,1.442,47,2.29,54,1.349,56,2.227,57,2.59,58,2.514,60,2.227,61,2.59,65,2.29,66,1.695,67,2.59,70,0.973,75,0.558,105,2.069,113,1.262,143,1.658,163,0.026,164,0.035,165,0.026,177,1.442,200,1.936,202,1.442,314,1.442,317,1.488,327,1.442,335,1.695,390,1.928,391,2.59,403,2.227,405,2.29,475,2.804,476,2.924,480,2.29,481,2.59,487,3.713,492,2.29,529,1.936,730,2.59,780,3.076,912,2.59,1158,2.29,1159,3.076,1160,3.076,1163,3.076,1170,2.29,1171,3.873,1172,3.076,1173,2.29,1174,3.473,1175,3.076,1176,3.076,1177,3.076,1178,3.076,1179,3.076,1180,3.076,1181,2.59,1182,3.076,1185,3.076,1186,3.076,1187,3.076,1188,1.928,1189,2.59,1190,2.29,1191,3.076,1192,3.076,1231,3.076,1307,1.262,1308,2.29,1309,2.84,1310,3.988,1311,4.604,1312,2.84,1313,2.29,1314,3.814,1315,2.84,1316,2.29,1317,2.84,1318,4.945,1319,2.84,1320,3.814,1321,2.84,1322,2.84,1323,3.814,1324,2.84,1325,4.604,1326,4.307,1327,2.84,1328,2.84,1329,2.84,1330,4.604,1331,2.84,1332,2.84,1333,2.84,1334,2.84,1335,3.814,1336,2.84,1337,3.814]],["title/index.html",[13,0.333,581,1.61,582,1.384]],["body/index.html",[3,1.005,9,1.185,24,0.04,91,1.537,163,0.032,164,0.04,165,0.032,166,0.038,168,0.68,211,2.2,219,2.87,315,2.897,477,2.789,583,2.348,584,3.495,585,3.495,586,3.818,603,2.789,605,3.495,607,2.789,612,4.003,613,3.818,618,2.789,632,3.214,646,2.789,647,2.789,648,2.348,649,2.789,667,4.122,668,4.003,676,3.495,683,2.789,697,3.495,699,2.789,707,3.37,708,2.789,729,2.789,767,3.495,838,2.789,863,3.495,1001,2.789,1013,3.495,1096,2.789,1106,2.789,1120,2.789,1338,4.334,1339,3.458,1340,3.458,1341,3.458,1342,3.458,1343,3.495,1344,3.458,1345,3.458,1346,3.458,1347,4.334,1348,4.334,1349,4.334,1350,4.734,1351,3.458,1352,3.458,1353,4.734,1354,3.458,1355,3.458,1356,4.334,1357,3.458,1358,3.458,1359,3.458,1360,4.334,1361,3.458,1362,3.458,1363,3.458,1364,3.458,1365,4.963,1366,3.458,1367,3.458,1368,3.458,1369,3.458,1370,3.458,1371,3.458,1372,3.458,1373,3.458,1374,3.458,1375,3.458,1376,3.458,1377,3.458,1378,3.458,1379,3.458,1380,3.458,1381,3.458]],["title/license.html",[581,1.61,582,1.384,1382,1.912]],["body/license.html",[24,0.042,163,0.035,164,0.042,165,0.035,195,2.219,666,2.581,706,3.705,707,2.581,727,3.982,754,3.065,773,3.705,957,3.705,1044,3.065,1067,3.065,1123,3.065,1147,3.065,1252,3.065,1343,4.423,1382,3.065,1383,3.801,1384,4.938,1385,3.801,1386,3.801,1387,4.594,1388,3.801,1389,3.801,1390,3.801,1391,3.801,1392,3.801,1393,3.801,1394,4.594,1395,3.801,1396,3.801,1397,3.801,1398,3.801,1399,3.801,1400,3.801,1401,3.801,1402,3.801,1403,3.801,1404,3.801,1405,3.801,1406,3.801,1407,4.594,1408,3.801,1409,3.801,1410,3.801,1411,3.801,1412,3.801,1413,4.594,1414,3.801,1415,3.801,1416,3.801,1417,3.801,1418,3.801,1419,3.801,1420,3.801,1421,3.801,1422,3.801,1423,3.801,1424,3.801,1425,3.801,1426,3.801,1427,3.801,1428,3.801,1429,3.801,1430,3.801,1431,3.801,1432,3.801,1433,3.801,1434,3.801,1435,3.801,1436,3.801,1437,3.801,1438,3.801,1439,3.801,1440,3.801,1441,3.801]],["title/modules.html",[1442,3.054]],["body/modules.html",[24,0.046,163,0.04,164,0.046,165,0.04,1442,3.558]],["title/overview.html",[1443,3.054]],["body/overview.html",[2,3.533,24,0.046,163,0.04,164,0.046,165,0.04,168,0.861,373,1.947,1443,3.533,1444,4.381]],["title/miscellaneous/typealiases.html",[1307,1.054,1445,3.367]],["body/miscellaneous/typealiases.html",[6,0.685,7,0.446,8,1.641,13,0.59,23,0.723,24,0.045,25,2.847,64,2.135,163,0.038,164,0.045,165,0.038,169,2.616,213,2.847,215,2.847,1188,2.856,1189,3.312,1307,1.869,1313,3.934,1316,3.392,1446,4.206,1447,4.878]],["title/miscellaneous/variables.html",[1307,1.054,1448,2.715]],["body/miscellaneous/variables.html",[6,0.588,7,0.383,13,0.588,23,0.588,24,0.05,26,2.846,27,1.863,163,0.038,164,0.044,165,0.038,208,1.636,317,1.9,475,2.447,632,2.846,1181,3.306,1184,3.926,1307,1.863,1310,3.381,1448,3.381,1449,4.192,1450,4.869,1451,4.192,1452,4.192,1453,4.192,1454,4.192,1455,4.192,1456,4.192]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":72,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["0.05",{"_index":309,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["0.1.0",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":289,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["0.5*255",{"_index":155,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.5.0",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1096,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.8",{"_index":110,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.9*255",{"_index":102,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0/1",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1169,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":157,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"changelog.html":{}}}],["1.0",{"_index":141,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":977,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":915,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["1.6875389974302382e",{"_index":325,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["1.7.0",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["1/37",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["10.0",{"_index":280,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10.0.0",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":255,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10x",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["11.5",{"_index":343,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["12",{"_index":603,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":82,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["14",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":286,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["15.126.1",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["17,0,0",{"_index":324,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17,0.076,0,0.49,0.034,0.11,1",{"_index":326,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2",{"_index":373,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.0",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":763,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":752,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":696,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":301,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2019",{"_index":1067,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":83,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["24",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":84,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["26",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["3.0",{"_index":1348,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":671,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1369,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":81,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["31",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":316,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["4",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["4.17.1",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["8.9",{"_index":372,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["85",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1444,"title":{},"body":{"overview.html":{}}}],["9.5",{"_index":292,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["90",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["_dragevent(info",{"_index":386,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_lighting",{"_index":150,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["_onclick(info",{"_index":357,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondrag(info",{"_index":382,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragend(info",{"_index":384,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragstart(info",{"_index":379,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onhover(e",{"_index":349,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onviewstatechange(event",{"_index":365,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["aabb",{"_index":399,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["ability",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1123,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1434,"title":{},"body":{"license.html":{}}}],["actions",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1446,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1352,"title":{},"body":{"index.html":{}}}],["ambientlight",{"_index":184,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["analytics",{"_index":815,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":912,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomicalstructuresurl",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1405,"title":{},"body":{"license.html":{}}}],["angular",{"_index":648,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":612,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":1361,"title":{},"body":{"index.html":{}}}],["appear",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["appropriate",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1438,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":754,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":294,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["attempts",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1427,"title":{},"body":{"license.html":{}}}],["autohighlight",{"_index":78,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["automatic",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":297,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["award",{"_index":1380,"title":{},"body":{"index.html":{}}}],["b_3d_models_extraction_sites.csv",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b_3d_models_mapping.csv",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1120,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":420,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["before",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":194,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["behaviorsubject([0",{"_index":226,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["being",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":676,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":192,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["block",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":7,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":220,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer",{"_index":1,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer.gltfcache",{"_index":131,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["bodyuiprops",{"_index":167,"title":{"interfaces/BodyUIProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuiviewstateprops",{"_index":203,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["boolean",{"_index":113,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":1072,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1344,"title":{},"body":{"index.html":{}}}],["builds",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1385,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1231,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["cacheable",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":170,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cancelregistration",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":401,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["canvas",{"_index":171,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["card",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["casttoglobaltype",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["casttoglobaltype(value",{"_index":1317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ccf",{"_index":219,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":533,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["cell",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":477,"title":{},"body":{"interfaces/ProcessedNode.html":{},"index.html":{}}}],["change",{"_index":838,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":583,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1391,"title":{},"body":{"license.html":{}}}],["child",{"_index":482,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["child.bbox.clone",{"_index":507,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["childnames(child",{"_index":486,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(node.node).map(n",{"_index":504,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(scene",{"_index":480,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1430,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BodyUILayer.html":{},"overview.html":{}}}],["cleanup",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":1365,"title":{},"body":{"index.html":{}}}],["code",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["collider",{"_index":63,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["collider.ts",{"_index":391,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collision",{"_index":389,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"coverage.html":{}}}],["collisioning",{"_index":407,"title":{},"body":{"interfaces/Collision.html":{}}}],["collisions",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":101,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["colorizing",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":534,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["common",{"_index":584,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":607,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["compositelayer",{"_index":12,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["comunica/query",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1412,"title":{},"body":{"license.html":{}}}],["config",{"_index":780,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["config.csv",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1440,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":458,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('data",{"_index":330,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('results",{"_index":329,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('starting",{"_index":406,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":472,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":1386,"title":{},"body":{"license.html":{}}}],["const",{"_index":106,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["constructor(private",{"_index":246,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["container",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1342,"title":{},"body":{"index.html":{}}}],["context",{"_index":532,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["contract",{"_index":1435,"title":{},"body":{"license.html":{}}}],["control",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":256,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convenience",{"_index":217,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convention",{"_index":149,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["coordinate",{"_index":211,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":44,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinate_system.cartesian",{"_index":86,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinatesystem",{"_index":85,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["copies",{"_index":1407,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1394,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1384,"title":{},"body":{"license.html":{}}}],["cors",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1079,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["creation_date",{"_index":535,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator",{"_index":536,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_first_name",{"_index":537,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_last_name",{"_index":538,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["credits",{"_index":1371,"title":{},"body":{"index.html":{}}}],["css",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["csv.ts",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csvreport",{"_index":462,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":464,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvtext",{"_index":1328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlclick",{"_index":216,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ctrlkey",{"_index":359,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cubegeometry",{"_index":50,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cubes",{"_index":114,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cuboid",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["currentstate",{"_index":369,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.data",{"_index":375,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.zoomopacity",{"_index":374,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cursor",{"_index":244,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cyberinfrastructure",{"_index":1373,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":97,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["d.scenegraph",{"_index":116,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["d.unpickable",{"_index":118,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d.wireframe",{"_index":117,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["damages",{"_index":1431,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":66,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.concat(object.values(results",{"_index":332,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.length",{"_index":71,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.push",{"_index":333,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.ts",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data?.length",{"_index":305,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["database",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["datasets",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1396,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1441,"title":{},"body":{"license.html":{}}}],["debugscenenodeprocessing",{"_index":172,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["debugscenenodeprocessing(data",{"_index":313,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["december",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["deck",{"_index":185,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck(props",{"_index":282,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/core",{"_index":45,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":190,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/geo",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":48,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deckprops",{"_index":247,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.camera",{"_index":251,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.interactive",{"_index":257,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.legacylighting",{"_index":277,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.maxrotationx",{"_index":287,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.minrotationx",{"_index":285,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.rotation",{"_index":290,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.target",{"_index":288,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.zoom",{"_index":291,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["decompress",{"_index":430,"title":{},"body":{"interfaces/Collision.html":{}}}],["decorator",{"_index":193,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deeply",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["delete",{"_index":509,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["demo",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":821,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["depthmask",{"_index":156,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["derivescenegraph",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["derivescenegraph(scenegraphnodename",{"_index":1319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["details",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1372,"title":{},"body":{"index.html":{}}}],["developments",{"_index":1106,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["didzoom",{"_index":306,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["different",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["dimension_units",{"_index":539,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["direct",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":88,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["display",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1403,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":61,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["docollisions(scene",{"_index":405,"title":{},"body":{"interfaces/Collision.html":{},"miscellaneous/functions.html":{}}}],["docollisions(state.data",{"_index":123,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["document",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":666,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["done",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["dracoloader",{"_index":395,"title":{},"body":{"interfaces/Collision.html":{}}}],["during",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":37,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.info",{"_index":162,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["e.isdragging",{"_index":274,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object",{"_index":352,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object['@id",{"_index":353,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.picked",{"_index":350,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e?.srcevent?.ctrlkey",{"_index":364,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["easier",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":839,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":473,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["entities",{"_index":1330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":1186,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityid",{"_index":418,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["es",{"_index":402,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["eslint",{"_index":87,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["eslint/naming",{"_index":148,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["eslint/no",{"_index":92,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["etc",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":613,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1426,"title":{},"body":{"license.html":{}}}],["event.interactionstate?.iszooming",{"_index":368,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate",{"_index":376,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.rotationx",{"_index":378,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.zoom",{"_index":371,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["expanded",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":93,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["exploration",{"_index":1346,"title":{},"body":{"index.html":{}}}],["export",{"_index":103,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["express",{"_index":1252,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["external",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":730,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extraction_set",{"_index":540,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["extractionsitesurl",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":79,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["favor",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":557,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["fetch",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_format",{"_index":575,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["files",{"_index":1395,"title":{},"body":{"license.html":{}}}],["filter",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["filter(d",{"_index":409,"title":{},"body":{"interfaces/Collision.html":{}}}],["filter(l",{"_index":158,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["final",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":302,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["finishing",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["firstfieldname",{"_index":1325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fit",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1422,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["fixes.ts",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixes/performance",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["flipy",{"_index":253,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["fly",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1411,"title":{},"body":{"license.html":{}}}],["form",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":585,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":1390,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":64,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1308,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1378,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1410,"title":{},"body":{"license.html":{}}}],["further",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["getcolor",{"_index":100,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getcursor",{"_index":271,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["getpickinginfo",{"_index":20,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":32,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getting",{"_index":581,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettransformmatrix",{"_index":96,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["github",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["gltf",{"_index":60,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltf.scenes",{"_index":433,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["gltf.ts",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gltf:${processednode['@id",{"_index":496,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfcache",{"_index":17,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gltfloader",{"_index":397,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltfnode",{"_index":497,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes",{"_index":489,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes.push",{"_index":495,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfoverride",{"_index":1335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfpromise",{"_index":1323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfscene",{"_index":432,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltftransform",{"_index":322,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["gltfurl",{"_index":314,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["good",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":814,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["grab",{"_index":276,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["grabbing",{"_index":275,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["granted",{"_index":1389,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":468,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":471,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":470,"title":{},"body":{"interfaces/Collision.html":{}}}],["halfsize",{"_index":518,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["hand",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["helmet",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1388,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["highlightcolor",{"_index":80,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["highlights",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":463,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":469,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":467,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":466,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":392,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":453,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":450,"title":{},"body":{"interfaces/Collision.html":{}}}],["holders",{"_index":1428,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["htmlcanvaselement",{"_index":181,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["htmlelement",{"_index":182,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["http://localhost:8080/source_data/asct",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/reference",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://beta",{"_index":1349,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":1360,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1353,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":315,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":320,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["https://old",{"_index":1355,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1351,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":707,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["icon",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":75,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1419,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["improve",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1414,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":706,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1376,"title":{},"body":{"index.html":{}}}],["individual",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{}}}],["info.object",{"_index":361,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.object['@id",{"_index":362,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.picked",{"_index":360,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info?.object?.['@id",{"_index":387,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["information",{"_index":863,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":295,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["initializestate",{"_index":21,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["instead",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":279,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interact",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":366,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interactive",{"_index":173,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interest",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":166,"title":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":168,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["isdragging",{"_index":272,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["issue",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":367,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["it's",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":649,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":478,"title":{},"body":{"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["jsonld.ts",{"_index":530,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["jsonld/jsonld",{"_index":560,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["jsonldobj",{"_index":531,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["july",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":68,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["keyboard",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1418,"title":{},"body":{"license.html":{}}}],["known",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":159,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["label",{"_index":541,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["labs/data",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["lasthovered",{"_index":245,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["latest",{"_index":618,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layer",{"_index":199,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["layer.ts",{"_index":10,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["layer.ts:35",{"_index":31,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:36",{"_index":29,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:38",{"_index":40,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:44",{"_index":42,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:87",{"_index":33,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layername",{"_index":18,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers",{"_index":49,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["lb",{"_index":512,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["lb.clone().vadd(halfsize",{"_index":522,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ld",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":558,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["left/right",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["legacylighting",{"_index":174,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["level",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1432,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1429,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":646,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["library/vh_female/united/vhf_united_color.glb",{"_index":319,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["library/vh_male/united/vhm_united_color.glb",{"_index":318,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["license",{"_index":1382,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["lightingeffect",{"_index":186,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["limitation",{"_index":1398,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1044,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":90,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["link",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":683,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":25,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":393,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{}}}],["load(model.scenegraph",{"_index":429,"title":{},"body":{"interfaces/Collision.html":{}}}],["loaded",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":394,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":396,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":398,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loadgltf",{"_index":56,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf(model",{"_index":1321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadgltf({scenegraph",{"_index":488,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["loadgltf2",{"_index":57,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf2(model.scenegraphnode",{"_index":145,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["loadgltf2(scenegraphnodename",{"_index":1322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["location",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1370,"title":{},"body":{"index.html":{}}}],["logging",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":298,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["lowerbound",{"_index":413,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lowerbound[i",{"_index":426,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lru",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":51,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["m",{"_index":125,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraph",{"_index":126,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraphnode",{"_index":127,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["made",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":556,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["managers",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["map(model",{"_index":410,"title":{},"body":{"interfaces/Collision.html":{}}}],["march",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":411,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint",{"_index":414,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":416,"title":{},"body":{"interfaces/Collision.html":{}}}],["match",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":164,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":191,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":460,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(n",{"_index":425,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["math.min(math.max(1",{"_index":370,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["math.min(n",{"_index":422,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["matrix",{"_index":339,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix.gettranslation",{"_index":342,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4",{"_index":183,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e",{"_index":323,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(matrix4.identity",{"_index":524,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(model.transformmatrix",{"_index":412,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(modelmatrix",{"_index":494,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":340,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(worldmatrix",{"_index":490,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4.identity",{"_index":491,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["maxhits",{"_index":459,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":175,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["mc",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1421,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1401,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":94,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meshlayer('cubes",{"_index":132,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer('pickablecubes",{"_index":133,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer('wireframes",{"_index":134,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer(id",{"_index":65,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["minor",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":176,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["miscellaneous",{"_index":1307,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1383,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":143,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["model._lighting",{"_index":151,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.color",{"_index":154,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.entityid",{"_index":419,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.opacity",{"_index":140,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraph",{"_index":147,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraphnode",{"_index":144,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.tooltip",{"_index":417,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":153,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.unpickable",{"_index":142,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.zoombasedopacity",{"_index":138,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model['@id",{"_index":136,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["modelmatrix",{"_index":435,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":443,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":442,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["models",{"_index":121,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["models.map((model",{"_index":135,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["modify",{"_index":1400,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1442,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1339,"title":{},"body":{"index.html":{}}}],["more",{"_index":1013,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouseevent",{"_index":214,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["moved",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1340,"title":{},"body":{"index.html":{}}}],["n.bbox",{"_index":503,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["n3",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":481,"title":{},"body":{"interfaces/ProcessedNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names.push(child.name",{"_index":485,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["navigation",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["near",{"_index":254,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["needed",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1374,"title":{},"body":{"index.html":{}}}],["new",{"_index":74,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":89,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["ng5",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1379,"title":{},"body":{"index.html":{}}}],["node",{"_index":55,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["node.bbox",{"_index":506,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.extend(child.bbox",{"_index":508,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.lowerbound",{"_index":513,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.upperbound",{"_index":515,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.center",{"_index":521,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.id",{"_index":493,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.mesh",{"_index":436,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives",{"_index":437,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives.length",{"_index":438,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.name",{"_index":445,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.size",{"_index":516,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.transformmatrix",{"_index":523,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.ts",{"_index":577,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["node.zoomtoonload",{"_index":307,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclick",{"_index":230,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclickevent",{"_index":215,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodeclicksubject",{"_index":222,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedrag",{"_index":240,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragend",{"_index":242,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragendsubject",{"_index":229,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragevent",{"_index":213,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodedragstart",{"_index":238,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragstartsubject",{"_index":227,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragsubject",{"_index":228,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstart",{"_index":232,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstartsubject",{"_index":223,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstop",{"_index":234,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstopsubject",{"_index":224,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodes",{"_index":202,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["nodes.ts",{"_index":476,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodes[n]).filter(n",{"_index":505,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[node['@id",{"_index":510,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[processednode['@id",{"_index":501,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["noninfringement",{"_index":1425,"title":{},"body":{"license.html":{}}}],["note",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":957,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":99,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["numeric",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":208,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.hasownproperty.call(url2gltf",{"_index":128,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.values(nodes",{"_index":511,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(nodes).filter(n",{"_index":502,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(results",{"_index":331,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["obtaining",{"_index":1393,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1354,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":261,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondrag",{"_index":267,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragend",{"_index":269,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragstart",{"_index":265,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["one",{"_index":1001,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["onhover",{"_index":259,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["online",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["ontology/objects/vhf_united_v01_060420.glb",{"_index":321,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["onviewstatechange",{"_index":263,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["opacities",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":137,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["openapi",{"_index":697,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1366,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1368,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1367,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":67,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["orbitaxis",{"_index":204,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["orbitview",{"_index":187,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["organ",{"_index":632,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["organs/anatomical",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["orthographic",{"_index":252,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["orthographicview",{"_index":188,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ot2od026671",{"_index":1381,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1437,"title":{},"body":{"license.html":{}}}],["out",{"_index":1439,"title":{},"body":{"license.html":{}}}],["over",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1443,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":652,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["parameters['getpickinginfo']>[0",{"_index":160,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["parent",{"_index":177,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["parsecsv",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsv(sourceurl",{"_index":1324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsecsvtext",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsvtext(csvtext",{"_index":1327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":248,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["particular",{"_index":1423,"title":{},"body":{"license.html":{}}}],["partly",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["pbr",{"_index":152,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["performance",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1387,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1408,"title":{},"body":{"license.html":{}}}],["person",{"_index":1392,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1409,"title":{},"body":{"license.html":{}}}],["pickable",{"_index":76,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["pickablecubes",{"_index":119,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["picked",{"_index":212,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["pickinfo",{"_index":207,"title":{"interfaces/PickInfo.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["placeholder",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":542,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["placement_date",{"_index":562,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["player",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":351,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["popup",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1416,"title":{},"body":{"license.html":{}}}],["position",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["postprocess",{"_index":431,"title":{},"body":{"interfaces/Collision.html":{}}}],["preferences",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["primitive",{"_index":439,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position",{"_index":440,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position.min",{"_index":441,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["priority",{"_index":578,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["private",{"_index":221,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["process",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["processanatomicalstructures",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processanatomicalstructures(sourceurl",{"_index":1329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processed",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["processednode",{"_index":474,"title":{"interfaces/ProcessedNode.html":{}},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["processednode.bbox",{"_index":500,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processednode['@id",{"_index":498,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processextractionsites",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processextractionsites(sourceurl",{"_index":1331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processing",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["processreferencedata",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processreferencedata(refentities",{"_index":1332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processscenenodes",{"_index":200,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processscenenodes(gltfurl",{"_index":327,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities",{"_index":1187,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities(parent",{"_index":1334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":667,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1341,"title":{},"body":{"index.html":{}}}],["projects/.../body",{"_index":1313,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../global",{"_index":1309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../load",{"_index":1311,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../parse",{"_index":1314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../process",{"_index":1310,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene",{"_index":1316,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../simplify",{"_index":1315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../spatial",{"_index":1312,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":105,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["promise(r",{"_index":299,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["props",{"_index":249,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["props.effects",{"_index":278,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["provided",{"_index":1147,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1402,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1424,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":647,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["r.hits.length",{"_index":461,"title":{},"body":{"interfaces/Collision.html":{}}}],["rc.1",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["real",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["rectify",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["refentities",{"_index":1333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":317,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":543,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["referencedataconfig",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["referenceorganconfigurl",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refernced",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["registergltfloaders",{"_index":58,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registration",{"_index":729,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["renderlayers",{"_index":22,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["report",{"_index":446,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":454,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":1338,"title":{},"body":{"index.html":{}}}],["representation_of",{"_index":544,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["required",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["resets",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1397,"title":{},"body":{"license.html":{}}}],["result",{"_index":163,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":165,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":73,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["returns",{"_index":38,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":39,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["returntype['getpickinginfo",{"_index":161,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rgb",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":559,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["rights",{"_index":1399,"title":{},"body":{"license.html":{}}}],["root",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":178,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotation_units",{"_index":570,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rotationorbit",{"_index":205,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotationx",{"_index":206,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["round",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":605,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["rui_rank",{"_index":545,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rxjs",{"_index":196,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":198,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sad",{"_index":447,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":457,"title":{},"body":{"interfaces/Collision.html":{}}}],["sample",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["scale(halfsize.toarray",{"_index":526,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scaling_units",{"_index":566,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["scene",{"_index":54,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scene.children",{"_index":484,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.filter(d",{"_index":428,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":483,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.ts",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scenegraph",{"_index":130,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphlayer",{"_index":46,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["scenegraphnode",{"_index":335,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["scenegraphnodename",{"_index":1320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scenerotation",{"_index":236,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenerotationsubject",{"_index":225,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenetraversalvisitor",{"_index":1447,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scheduled",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1375,"title":{},"body":{"index.html":{}}}],["search",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":767,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1406,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["setinteractive(value",{"_index":348,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotation(value",{"_index":344,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotationx(value",{"_index":345,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setscene(data",{"_index":304,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settarget(value",{"_index":347,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settimeout(r",{"_index":300,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setup",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["setzoom(value",{"_index":346,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sex",{"_index":546,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sexes",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1413,"title":{},"body":{"license.html":{}}}],["share",{"_index":197,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["shared",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["shared/spatial",{"_index":53,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["shortest",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":547,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sides",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["simplemeshlayer",{"_index":47,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["simplifies",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["simplifyscene",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["simplifyscene(nodes",{"_index":1336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sites",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["sites.ts",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizable",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":479,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["size.clone().vmul(new",{"_index":519,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["slice_count",{"_index":548,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slice_thickness",{"_index":549,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slider",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1343,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceboxes",{"_index":408,"title":{},"body":{"interfaces/Collision.html":{}}}],["sources",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["sourceurl",{"_index":1326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sparc",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["spatial",{"_index":529,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialentityjsonld",{"_index":527,"title":{"interfaces/SpatialEntityJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialobjectreferencejsonld",{"_index":554,"title":{"interfaces/SpatialObjectReferenceJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialplacementjsonld",{"_index":555,"title":{"interfaces/SpatialPlacementJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialscenenode",{"_index":52,"title":{"interfaces/SpatialSceneNode.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["spec",{"_index":561,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1364,"title":{},"body":{"index.html":{}}}],["specific",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1363,"title":{},"body":{"index.html":{}}}],["speed",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":448,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":449,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":455,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":456,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":358,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["stage",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":668,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":1362,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1347,"title":{},"body":{"index.html":{}}}],["started",{"_index":582,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":111,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.data.filter(d",{"_index":115,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.docollisions",{"_index":122,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.zoomopacity",{"_index":139,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["statements",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["stay",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["structures.ts",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":195,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"license.html":{}}}],["subject.next",{"_index":388,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sublicense",{"_index":1404,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1415,"title":{},"body":{"license.html":{}}}],["support",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["switched",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":179,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["target.name",{"_index":452,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":451,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes",{"_index":427,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":444,"title":{},"body":{"interfaces/Collision.html":{}}}],["technologies",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":334,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["testing",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["this._dragevent(info",{"_index":380,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onclick",{"_index":262,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondrag",{"_index":268,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragend",{"_index":270,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragstart",{"_index":266,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onhover",{"_index":260,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onviewstatechange",{"_index":264,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer",{"_index":258,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.setstate",{"_index":311,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.state",{"_index":296,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.cursor",{"_index":273,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.debugscenenodeprocessing(data",{"_index":312,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck",{"_index":281,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.finalize",{"_index":303,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.props.viewstate",{"_index":341,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.setprops",{"_index":283,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deckprops.debugscenenodeprocessing",{"_index":310,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.lasthovered",{"_index":355,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.next",{"_index":363,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":231,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject",{"_index":385,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject.pipe(share",{"_index":243,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject",{"_index":381,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject.pipe(share",{"_index":239,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject",{"_index":383,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject.pipe(share",{"_index":241,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":356,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":233,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":354,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":235,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.props",{"_index":107,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.scenerotationsubject.next([deckprops.rotation",{"_index":293,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.next([event.viewstate.rotationorbit",{"_index":377,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.pipe(share",{"_index":237,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.setstate",{"_index":108,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.state",{"_index":112,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.zoomto(node",{"_index":308,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["through",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":465,"title":{},"body":{"interfaces/Collision.html":{},"changelog.html":{}}}],["tissues",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["tool",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":499,"title":{},"body":{"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":1436,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["transformmatrix",{"_index":98,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["translate(center.toarray",{"_index":525,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["translation_units",{"_index":574,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["transparency",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["traversal",{"_index":404,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["traversal.ts",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["traversescene",{"_index":403,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["traversescene(gltfscene",{"_index":434,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":492,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["travisci",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":77,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["try",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1445,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":91,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["ub",{"_index":514,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ub.clone().vsub(lb",{"_index":517,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ufl",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":9,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1350,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1359,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1356,"title":{},"body":{"index.html":{}}}],["ui.ts",{"_index":169,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/organ",{"_index":1358,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1357,"title":{},"body":{"index.html":{}}}],["ui/src/global",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/body",{"_index":8,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/shared/ccf",{"_index":528,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["ui/src/lib/shared/spatial",{"_index":576,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["ui/src/lib/util/load",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/parse",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/process",{"_index":475,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui/src/lib/util/scene",{"_index":1188,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/simplify",{"_index":1190,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/spatial",{"_index":390,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":70,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/functions.html":{}}}],["university",{"_index":1377,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":69,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["unnecessary",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":579,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["unselect",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["updated_date",{"_index":550,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["updates",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["upperbound",{"_index":415,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["upperbound[i",{"_index":423,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["url",{"_index":104,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf",{"_index":124,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[m.scenegraph",{"_index":129,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[model.scenegraph",{"_index":146,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["use",{"_index":773,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":586,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["util/load",{"_index":59,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["util/process",{"_index":201,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["util/spatial",{"_index":62,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["utilities",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1448,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec3",{"_index":400,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...lowerbound.map((n",{"_index":421,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...upperbound.map((n",{"_index":424,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(0.5",{"_index":520,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["version",{"_index":699,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["vhf_kidney_l_low1').then((results",{"_index":328,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["vhf_kidney_r_low",{"_index":336,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["via",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":250,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["viewstate",{"_index":284,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["viewstateprops",{"_index":189,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["visitor",{"_index":1337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["visual",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":41,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1420,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1417,"title":{},"body":{"license.html":{}}}],["web",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1345,"title":{},"body":{"index.html":{}}}],["week",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1433,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["wireframe",{"_index":95,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["wireframes",{"_index":120,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["within",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":727,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["worldmatrix",{"_index":487,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["wrapper",{"_index":218,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x",{"_index":209,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x_dimension",{"_index":551,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_rotation",{"_index":567,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_scaling",{"_index":563,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_translation",{"_index":571,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y",{"_index":210,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["y_dimension",{"_index":552,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_rotation",{"_index":568,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_scaling",{"_index":564,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_translation",{"_index":572,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["yes",{"_index":1318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youtube",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["z_dimension",{"_index":553,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_rotation",{"_index":569,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_scaling",{"_index":565,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_translation",{"_index":573,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["zone.js",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoombasedopacity",{"_index":337,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomopacity",{"_index":109,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomto(node",{"_index":338,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomtoonload",{"_index":580,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                gltfCache\n                            \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        gltfCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        layerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BodyUILayer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPickingInfo\n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReturnType<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderLayers\n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     []\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { CubeGeometry } from '@luma.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: new CubeGeometry() as any,\n        wireframe: false,\n        getTransformMatrix: (d) => (d as { transformMatrix: number[][] }).transformMatrix,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise } = {};\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as { data: SpatialSceneNode[]; zoomOpacity: number; doCollisions: boolean };\n    const cubes = state.data.filter(d => !d.scenegraph && !d.wireframe && d.unpickable);\n    const pickableCubes = state.data.filter(d => !d.scenegraph && !d.wireframe && !d.unpickable);\n    const wireframes = state.data.filter(d => !d.scenegraph && d.wireframe);\n    const models = state.data.filter(d => !!d.scenegraph);\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise } = {};\n    for (const m of models) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    return [\n      meshLayer('cubes', cubes, { wireframe: false, pickable: false }),\n      meshLayer('pickableCubes', pickableCubes, { wireframe: false, pickable: true }),\n      meshLayer('wireframes', wireframes, { wireframe: true, pickable: false }),\n      ...models.map((model) =>\n        new ScenegraphLayer({\n          id: 'models-' + model['@id'],\n          opacity: model.zoomBasedOpacity ? state.zoomOpacity : (model.opacity !== undefined ? model.opacity : 1.0),\n          pickable: !model.unpickable,\n          coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n          data: [model],\n          scenegraph: model.scenegraphNode ?\n            loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string]) :\n            model.scenegraph as unknown as URL,\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          _lighting: model._lighting, // 'pbr' | undefined\n          getTransformMatrix: model.transformMatrix as unknown as number[][],\n          getColor: model.color ?? [0, 255, 0, 0.5*255],\n          parameters: { depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1) }\n        })\n      )\n    ].filter(l => !!l);\n  }\n\n  getPickingInfo(\n    e: Parameters['getPickingInfo']>[0]\n  ): ReturnType['getPickingInfo']> {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debugSceneNodeProcessing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            legacyLighting\n                                        \n                                \n                                \n                                        \n                                            maxRotationX\n                                        \n                                \n                                \n                                        \n                                            minRotationX\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugSceneNodeProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugSceneNodeProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyLighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyLighting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orbitAxis\n                                        \n                                \n                                \n                                        \n                                            rotationOrbit\n                                        \n                                \n                                \n                                        \n                                            rotationX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationOrbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationOrbit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\n/* eslint-disable  */\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && !d.wireframe)\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickInfo.html":{"url":"interfaces/PickInfo.html","title":"interface - PickInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picked\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedNode.html":{"url":"interfaces/ProcessedNode.html","title":"interface - ProcessedNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SpatialSceneNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            jsonld\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:     AABB\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AABB\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonld:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\n\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n/* eslint-disable  */\nfunction childNames(scene, names: string[] = []): string[] {\n  for (const child of (scene.nodes || scene.children || [])) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string\n    ): Promise {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({scenegraph: gltfUrl, scenegraphNode} as SpatialSceneNode);\n  const nodes: {[node: string]: ProcessedNode} = {};\n  const gltfNodes: ProcessedNode[] = [];\n  for (const scene of gltf.scenes) {\n    worldMatrix = new Matrix4(worldMatrix || Matrix4.IDENTITY);\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        wireframe: true,\n        node\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter(n => !n.bbox)) {\n    for (const child of childNames(node.node).map(n => nodes[n]).filter(n => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = node.size = ub.clone().vsub(lb);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = node.center = lb.clone().vadd(halfSize);\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY)\n      .translate(center.toArray())\n      .scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntityJsonLd.html":{"url":"interfaces/SpatialEntityJsonLd.html","title":"interface - SpatialEntityJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialEntityJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            ccf_annotations\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            creation_date\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            creator_first_name\n                                        \n                                \n                                \n                                        \n                                            creator_last_name\n                                        \n                                \n                                \n                                        \n                                            dimension_units\n                                        \n                                \n                                \n                                        \n                                            extraction_set\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                                \n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                        \n                                            rui_rank\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slice_count\n                                        \n                                \n                                \n                                        \n                                            slice_thickness\n                                        \n                                \n                                \n                                        \n                                            updated_date\n                                        \n                                \n                                \n                                        \n                                            x_dimension\n                                        \n                                \n                                \n                                        \n                                            y_dimension\n                                        \n                                \n                                \n                                        \n                                            z_dimension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccf_annotations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ccf_annotations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraction_set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraction_set:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReferenceJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReferenceJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"Left\" | \"Right\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Left\" | \"Right\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReferenceJsonLd.html":{"url":"interfaces/SpatialObjectReferenceJsonLd.html","title":"interface - SpatialObjectReferenceJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialObjectReferenceJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            file_format\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacementJsonLd.html":{"url":"interfaces/SpatialPlacementJsonLd.html","title":"interface - SpatialPlacementJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialPlacementJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            placement_date\n                                        \n                                \n                                \n                                        \n                                            rotation_units\n                                        \n                                \n                                \n                                        \n                                            scaling_units\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            translation_units\n                                        \n                                \n                                \n                                        \n                                            x_rotation\n                                        \n                                \n                                \n                                        \n                                            x_scaling\n                                        \n                                \n                                \n                                        \n                                            x_translation\n                                        \n                                \n                                \n                                        \n                                            y_rotation\n                                        \n                                \n                                \n                                        \n                                            y_scaling\n                                        \n                                \n                                \n                                        \n                                            y_translation\n                                        \n                                \n                                \n                                        \n                                            z_rotation\n                                        \n                                \n                                \n                                        \n                                            z_scaling\n                                        \n                                \n                                \n                                        \n                                            z_translation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _lighting\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraphNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            transformMatrix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            wireframe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomBasedOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToOnLoad\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wireframe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wireframe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\n\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  wireframe?: boolean;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui/src/global-fixes.ts\n            \n            function\n            castToGlobalType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            class\n            BodyUILayer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            meshLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            class\n            BodyUI\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIProps\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIViewStateProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            PickInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialEntityJsonLd\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialObjectReferenceJsonLd\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialPlacementJsonLd\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n            \n            interface\n            SpatialSceneNode\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            deriveScenegraph\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            registerGLTFLoaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSVText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n            \n            function\n            processAnatomicalStructures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n            \n            function\n            processExtractionSites\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            function\n            processReferenceData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            variable\n            referenceDataConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            interface\n            ProcessedNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            childNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            processSceneNodes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n            \n            function\n            processSpatialEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n            \n            function\n            traverseScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n            \n            function\n            simplifyScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            function\n            doCollisions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.5.7\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.7\n        \n            @math.gl/core : ^3.5.5\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.1\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : ^5.1.1\n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^10.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^6.0.0\n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            castToGlobalType   (projects/.../global-fixes.ts)\n                        \n                        \n                            childNames   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            deriveScenegraph   (projects/.../load-gltf.ts)\n                        \n                        \n                            doCollisions   (projects/.../spatial-scene-collider.ts)\n                        \n                        \n                            loadGLTF   (projects/.../load-gltf.ts)\n                        \n                        \n                            loadGLTF2   (projects/.../load-gltf.ts)\n                        \n                        \n                            meshLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            parseCSV   (projects/.../parse-csv.ts)\n                        \n                        \n                            parseCSVText   (projects/.../parse-csv.ts)\n                        \n                        \n                            processAnatomicalStructures   (projects/.../process-anatomical-structures.ts)\n                        \n                        \n                            processExtractionSites   (projects/.../process-extraction-sites.ts)\n                        \n                        \n                            processReferenceData   (projects/.../process-reference-data.ts)\n                        \n                        \n                            processSceneNodes   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            processSpatialEntities   (projects/.../process-spatial-entities.ts)\n                        \n                        \n                            registerGLTFLoaders   (projects/.../load-gltf.ts)\n                        \n                        \n                            simplifyScene   (projects/.../simplify-scene.ts)\n                        \n                        \n                            traverseScene   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/global-fixes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        castToGlobalType\n                        \n                    \n                \n            \n            \n                \ncastToGlobalType(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        childNames\n                        \n                    \n                \n            \n            \n                \nchildNames(scene, names)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    names\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSceneNodes\n                        \n                    \n                \n            \n            \n                \nprocessSceneNodes(gltfUrl, worldMatrix?, scenegraphNode?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gltfUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    scenegraphNode\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/load-gltf.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deriveScenegraph\n                        \n                    \n                \n            \n            \n                \nderiveScenegraph(scenegraphNodeName, gltf)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltf\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF\n                        \n                    \n                \n            \n            \n                \nloadGLTF(model, cache?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cache\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF2\n                        \n                    \n                \n            \n            \n                \nloadGLTF2(scenegraphNodeName, gltfPromise)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfPromise\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerGLTFLoaders\n                        \n                    \n                \n            \n            \n                \nregisterGLTFLoaders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doCollisions\n                        \n                    \n                \n            \n            \n                \ndoCollisions(scene)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/body-ui-layer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meshLayer\n                        \n                    \n                \n            \n            \n                \nmeshLayer(id, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SimpleMeshLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/parse-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseCSV\n                        \n                    \n                \n            \n            \n                \nparseCSV(sourceUrl, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCSVText\n                        \n                    \n                \n            \n            \n                \nparseCSVText(csvText, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    csvText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processAnatomicalStructures\n                        \n                    \n                \n            \n            \n                \nprocessAnatomicalStructures(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processExtractionSites\n                        \n                    \n                \n            \n            \n                \nprocessExtractionSites(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processReferenceData\n                        \n                    \n                \n            \n            \n                \nprocessReferenceData(refEntities, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refEntities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSpatialEntities\n                        \n                    \n                \n            \n            \n                \nprocessSpatialEntities(parent, gltfOverride?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfOverride\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        simplifyScene\n                        \n                    \n                \n            \n            \n                \nsimplifyScene(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        traverseScene\n                        \n                    \n                \n            \n            \n                \ntraverseScene(scene, worldMatrix, visitor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    visitor\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeClickEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            NodeDragEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            SceneTraversalVisitor   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/body-ui.ts\n    \n    \n        \n            \n                \n                    \n                    NodeClickEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeDragEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n    \n        \n            \n                \n                    \n                    SceneTraversalVisitor\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            referenceDataConfig   (projects/.../process-reference-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        referenceDataConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  extractionSitesUrl: 'http://localhost:8080/source_data/ASCT-B_3D_Models_Extraction_Sites.csv',\n  anatomicalStructuresUrl: 'http://localhost:8080/source_data/ASCT-B_3D_Models_Mapping.csv',\n  referenceOrganConfigUrl: 'http://localhost:8080/source_data/reference-organ-config.csv'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
