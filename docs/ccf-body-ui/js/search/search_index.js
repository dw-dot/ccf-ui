var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BodyUILayer.html",[0,1.249,1,1.249]],["body/classes/BodyUILayer.html",[0,0.933,1,1.79,2,1.693,3,0.413,4,0.552,5,0.413,6,0.63,7,0.41,8,1.75,9,1.538,10,1.426,11,1.057,12,3.655,13,0.295,14,0.704,15,4.486,16,2.619,17,3.655,18,3.655,19,3.084,20,3.655,21,4.028,22,4.028,23,0.513,24,0.053,25,1.226,26,2.482,27,1.37,28,3.461,29,2.1,30,1.108,31,2.1,32,2.1,33,2.1,34,2.487,35,1.226,36,0.72,37,1.8,38,2.948,39,2.1,40,2.1,41,1.566,42,2.1,43,1.249,44,2.1,45,1.066,46,2.482,47,1.693,48,3.084,49,2.948,50,1.693,51,1.566,52,3.084,53,3.084,54,3.084,55,3.35,56,3.084,57,1.693,58,0.819,59,0.72,60,1.29,61,0.933,62,0.704,63,1.203,64,1.8,65,1.426,66,1.8,67,2.1,68,1.226,69,2.482,70,2.1,71,2.1,72,1.566,73,1.693,74,2.223,75,2.735,76,3.084,77,1.994,78,1.63,79,3.084,80,1.572,81,3.046,82,4.637,83,2.1,84,2.1,85,4.028,86,2.094,87,1.63,88,4.028,89,2.094,90,2.094,91,2.482,92,0.719,93,4.757,94,1.907,95,2.1,96,2.776,97,2.1,98,1.693,99,2.1,100,2.1,101,2.178,102,3.084,103,3.084,104,1.624,105,1.624,106,1.856,107,2.134,108,1.624,109,1.8,110,1.8,111,2.278,112,3.084,113,2.92,114,1.37,115,1.536,116,3.655,117,1.572,118,2.1,119,1.693,120,2.1,121,2.948,122,2.1,123,2.1,124,2.735,125,2.1,126,0.552,127,3.655,128,1.203,129,2.193,130,2.1,131,2.1,132,1.8,133,2.1,134,2.1,135,2.1,136,0.933,137,2.1,138,2.1,139,1.79,140,2.1,141,2.1,142,2.1,143,2.1,144,2.1,145,2.1,146,2.1,147,2.1,148,2.1,149,3.655,150,2.1,151,2.1,152,2.1,153,2.1,154,1.624,155,2.1,156,1.8,157,2.1,158,2.1,159,1.693,160,1.426,161,3.084,162,2.1,163,4.028,164,1.066,165,2.1,166,2.1,167,2.1,168,2.1,169,2.1,170,1.226,171,1.226,172,0.933,173,2.1,174,1.066,175,2.1,176,2.1,177,2.1,178,2.1,179,1.426,180,2.1,181,4.028,182,4.028,183,2.1,184,3.084,185,2.1,186,2.1,187,2.1,188,2.1,189,2.1,190,2.1,191,2.1,192,2.1,193,0.019,194,0.028,195,0.019]],["title/interfaces/BodyUIProps.html",[196,0.024,197,1.427]],["body/interfaces/BodyUIProps.html",[0,1.165,1,1.425,3,0.63,4,0.444,5,0.333,6,0.237,7,0.293,8,0.66,9,0.898,11,0.58,13,0.368,14,0.598,16,2.916,23,0.701,24,0.053,27,1.736,30,1.102,36,1.238,37,2.776,41,2.559,43,1.201,45,0.859,51,0.859,58,1.524,59,0.58,60,1.338,61,0.752,62,0.598,63,1.612,74,1.979,77,1.425,78,1.238,80,1.737,87,1.727,92,0.768,94,1.165,96,1.872,101,2.098,104,1.736,105,1.736,106,1.983,107,2.28,108,1.165,109,0.988,110,0.988,113,0.988,114,0.752,115,1.61,117,1.022,126,1.026,128,0.66,129,2.075,132,2.855,136,2.24,139,0.752,154,0.752,164,0.859,170,0.988,171,0.988,172,0.752,174,0.859,193,0.015,194,0.024,195,0.024,196,0.028,197,1.33,198,0.333,199,0.859,200,2.805,201,2.452,202,2.452,203,2.452,204,2.452,205,2.652,206,2.652,207,1.833,208,2.452,209,1.737,210,3.023,211,2.177,212,2.177,213,2.177,214,2.177,215,1.779,216,1.779,217,1.779,218,1.779,219,1.149,220,2.599,221,0.988,222,1.149,223,2.668,224,0.988,225,1.149,226,1.149,227,1.779,228,0.859,229,1.149,230,2.261,231,2.177,232,2.452,233,2.452,234,2.188,235,1.409,236,1.149,237,2.177,238,0.859,239,1.779,240,0.988,241,2.652,242,0.988,243,1.779,244,1.149,245,1.149,246,0.859,247,0.988,248,3.449,249,1.149,250,1.149,251,1.149,252,1.149,253,1.149,254,1.149,255,1.149,256,1.149,257,1.149,258,1.149,259,1.149,260,1.149,261,1.149,262,1.149,263,1.149,264,1.149,265,1.149,266,1.149,267,1.149,268,1.149,269,1.149,270,1.149,271,1.149,272,2.652,273,1.149,274,1.779,275,1.149,276,1.149,277,0.988,278,1.779,279,0.988,280,1.149,281,1.149,282,1.149,283,1.779,284,1.779,285,1.149,286,1.149,287,1.149,288,1.149,289,1.149,290,1.149,291,1.149,292,1.149,293,1.149,294,1.149,295,1.149,296,1.149,297,1.149,298,1.149,299,1.149,300,1.779,301,1.149,302,1.149,303,1.149,304,1.149,305,1.149,306,1.149,307,1.149,308,1.149,309,1.149,310,3.023,311,3.023,312,1.149,313,1.779,314,1.149,315,1.149,316,1.53,317,1.779,318,1.149,319,1.149,320,1.149,321,0.859,322,1.149,323,2.177,324,1.33,325,1.149,326,1.149,327,1.149,328,1.779,329,1.149,330,1.149,331,1.149,332,1.149,333,2.177,334,1.149,335,1.149,336,1.779,337,1.149,338,2.177,339,1.149,340,1.149,341,1.833,342,1.53,343,1.53,344,1.022,345,1.149,346,1.149,347,1.149,348,1.149,349,2.177,350,1.149,351,1.149,352,1.149,353,1.149,354,0.859,355,1.149,356,1.149,357,1.149,358,1.149,359,1.149,360,1.149,361,1.53,362,0.752,363,1.149,364,0.859,365,1.149,366,1.149,367,1.149,368,2.652,369,1.149,370,1.149,371,1.149,372,1.149,373,1.149,374,1.149,375,1.149,376,1.149,377,1.779,378,1.149,379,2.177,380,1.149,381,1.779,382,1.779,383,1.149,384,1.149,385,1.149,386,1.149,387,1.149,388,2.177,389,1.149,390,1.149,391,1.149,392,1.149,393,1.149,394,1.149,395,1.149,396,1.149,397,1.149,398,1.149,399,1.149,400,0.752,401,1.149,402,1.149,403,1.149,404,1.149,405,1.149,406,1.149,407,2.177,408,1.149,409,1.149,410,1.149,411,1.149,412,1.149,413,1.149,414,1.149,415,1.149]],["title/interfaces/BodyUIViewStateProps.html",[196,0.024,230,1.427]],["body/interfaces/BodyUIViewStateProps.html",[0,1.191,1,1.451,3,0.642,4,0.457,5,0.342,6,0.244,7,0.298,8,0.68,9,0.918,11,0.918,13,0.376,14,0.611,16,2.933,23,0.647,24,0.053,27,1.759,30,1.074,36,1.257,37,2.796,41,2.572,43,1.211,45,0.884,51,0.884,58,1.544,59,0.597,60,1.351,61,0.774,62,0.611,63,1.631,74,1.997,77,1.451,78,1.257,80,1.754,87,1.737,92,0.527,94,1.191,96,1.906,101,2.122,104,1.759,105,1.759,106,2.01,107,2.311,108,1.191,109,1.017,110,1.017,113,1.017,114,0.774,115,1.606,117,1.045,126,1.04,128,0.68,129,2.092,132,2.873,136,2.092,139,0.774,154,0.774,164,0.884,170,1.017,171,1.017,172,0.774,174,0.884,193,0.016,194,0.024,195,0.024,196,0.028,197,0.884,198,0.342,199,0.884,200,2.838,201,1.183,202,1.183,203,1.183,204,1.183,205,1.819,206,1.819,207,0.884,208,1.183,209,1.754,210,3.052,211,1.183,212,1.183,213,2.217,214,2.217,215,1.819,216,1.819,217,1.819,218,2.217,219,1.183,220,2.624,221,1.017,222,1.183,223,2.691,224,1.017,225,1.183,226,1.183,227,1.819,228,0.884,229,1.183,230,2.341,231,2.838,232,2.956,233,2.956,234,2.211,235,1.431,236,1.183,237,2.217,238,0.884,239,1.819,240,1.017,241,2.688,242,1.017,243,1.819,244,1.183,245,1.183,246,0.884,247,1.017,248,3.466,249,1.183,250,1.183,251,1.183,252,1.183,253,1.183,254,1.183,255,1.183,256,1.183,257,1.183,258,1.183,259,1.183,260,1.183,261,1.183,262,1.183,263,1.183,264,1.183,265,1.183,266,1.183,267,1.183,268,1.183,269,1.183,270,1.183,271,1.183,272,2.688,273,1.183,274,1.819,275,1.183,276,1.183,277,1.017,278,1.819,279,1.017,280,1.183,281,1.183,282,1.183,283,1.819,284,1.819,285,1.183,286,1.183,287,1.183,288,1.183,289,1.183,290,1.183,291,1.183,292,1.183,293,1.183,294,1.183,295,1.183,296,1.183,297,1.183,298,1.183,299,1.183,300,1.819,301,1.183,302,1.183,303,1.183,304,1.183,305,1.183,306,1.183,307,1.183,308,1.183,309,1.183,310,3.052,311,3.052,312,1.183,313,1.819,314,1.183,315,1.183,316,1.564,317,1.819,318,1.183,319,1.183,320,1.183,321,0.884,322,1.183,323,2.217,324,1.36,325,1.183,326,1.183,327,1.183,328,1.819,329,1.183,330,1.183,331,1.183,332,1.183,333,2.217,334,1.183,335,1.183,336,1.819,337,1.183,338,2.217,339,1.183,340,1.183,341,1.862,342,1.564,343,1.564,344,1.045,345,1.183,346,1.183,347,1.183,348,1.183,349,2.217,350,1.183,351,1.183,352,1.183,353,1.183,354,0.884,355,1.183,356,1.183,357,1.183,358,1.183,359,1.183,360,1.183,361,1.564,362,0.774,363,1.183,364,0.884,365,1.183,366,1.183,367,1.183,368,2.688,369,1.183,370,1.183,371,1.183,372,1.183,373,1.183,374,1.183,375,1.183,376,1.183,377,1.819,378,1.183,379,2.217,380,1.183,381,1.819,382,1.819,383,1.183,384,1.183,385,1.183,386,1.183,387,1.183,388,2.217,389,1.183,390,1.183,391,1.183,392,1.183,393,1.183,394,1.183,395,1.183,396,1.183,397,1.183,398,1.183,399,1.183,400,0.774,401,1.183,402,1.183,403,1.183,404,1.183,405,1.183,406,1.183,407,2.217,408,1.183,409,1.183,410,1.183,411,1.183,412,1.183,413,1.183,414,1.183,415,1.183]],["title/interfaces/Collision.html",[196,0.024,416,1.908]],["body/interfaces/Collision.html",[3,0.53,4,0.708,5,0.53,6,0.378,7,0.246,13,0.378,14,0.84,23,0.662,24,0.052,25,2.149,30,1.236,35,3.147,43,1.309,58,1.051,59,0.924,60,1.106,61,1.197,62,1.028,63,1.436,68,2.447,72,1.368,77,1.863,80,1.436,81,2.846,87,1.739,92,1.054,94,1.863,104,1.636,105,1.197,111,1.368,126,0.708,128,1.051,129,2.432,156,1.573,159,2.968,179,3.202,193,0.025,194,0.034,195,0.025,196,0.023,198,0.53,209,1.051,321,1.368,324,1.368,416,2.846,417,1.83,418,1.83,419,4.869,420,1.83,421,2.173,422,3.681,423,2.173,424,3.681,425,2.173,426,3.633,427,2.173,428,1.83,429,1.83,430,1.573,431,2.173,432,2.173,433,2.695,434,2.695,435,4.192,436,2.695,437,3.681,438,2.695,439,2.695,440,2.695,441,3.681,442,3.633,443,2.695,444,3.633,445,2.695,446,2.695,447,3.381,448,3.681,449,3.381,450,2.968,451,2.968,452,2.968,453,2.968,454,2.968,455,2.968,456,4.192,457,2.695,458,2.695,459,2.695,460,2.695,461,2.695,462,2.173,463,2.695,464,2.173,465,2.173,466,2.968,467,2.173,468,2.173,469,2.173,470,2.173,471,2.173,472,2.173,473,2.695,474,2.173,475,4.505,476,3.681,477,2.695,478,2.695,479,2.695,480,2.695,481,2.695,482,2.695,483,2.695,484,2.695,485,2.695,486,2.695,487,2.695,488,2.695,489,2.695,490,2.695,491,2.695,492,4.717,493,3.681,494,3.633,495,3.681,496,3.681,497,2.695,498,2.695,499,2.695,500,2.695,501,2.695,502,2.173]],["title/interfaces/PickInfo.html",[196,0.024,234,1.427]],["body/interfaces/PickInfo.html",[0,1.195,1,1.455,3,0.644,4,0.46,5,0.344,6,0.246,7,0.299,8,0.683,9,0.922,11,0.6,13,0.557,14,0.614,16,2.935,23,0.632,24,0.053,27,1.763,30,0.956,36,1.26,37,2.799,41,2.575,43,1.213,45,0.888,51,0.888,58,1.278,59,0.6,60,1.353,61,0.778,62,0.614,63,1.634,74,2,77,1.455,78,1.26,80,1.756,87,1.738,92,0.529,94,1.195,96,1.912,101,2.126,104,1.763,105,1.763,106,2.014,107,2.316,108,1.195,109,1.021,110,1.021,113,1.912,114,0.778,115,1.597,117,1.049,126,1.042,128,0.683,129,2.095,132,2.876,136,2.162,139,0.778,154,0.778,164,0.888,170,1.021,171,1.021,172,0.778,174,0.888,193,0.016,194,0.025,195,0.025,196,0.029,197,0.888,198,0.344,199,0.888,200,2.224,201,1.188,202,1.188,203,1.188,204,1.188,205,1.826,206,1.826,207,0.888,208,1.188,209,1.548,210,2.693,211,1.188,212,1.188,213,2.224,214,2.224,215,1.826,216,1.826,217,1.826,218,1.826,219,1.188,220,2.628,221,1.021,222,1.188,223,2.695,224,1.021,225,1.188,226,1.188,227,2.693,228,0.888,229,1.188,230,2.285,231,2.224,232,2.496,233,2.496,234,2.285,235,1.702,236,2.496,237,2.843,238,1.866,239,2.693,240,1.021,241,2.693,242,1.021,243,1.826,244,1.188,245,1.188,246,0.888,247,1.021,248,3.469,249,1.188,250,1.188,251,1.188,252,1.188,253,1.188,254,1.188,255,1.188,256,1.188,257,1.188,258,1.188,259,1.188,260,1.188,261,1.188,262,1.188,263,1.188,264,1.188,265,1.188,266,1.188,267,1.188,268,1.188,269,1.188,270,1.188,271,1.188,272,2.693,273,1.188,274,1.826,275,1.188,276,1.188,277,1.021,278,1.826,279,1.021,280,1.188,281,1.188,282,1.188,283,1.826,284,1.826,285,1.188,286,1.188,287,1.188,288,1.188,289,1.188,290,1.188,291,1.188,292,1.188,293,1.188,294,1.188,295,1.188,296,1.188,297,1.188,298,1.188,299,1.188,300,1.826,301,1.188,302,1.188,303,1.188,304,1.188,305,1.188,306,1.188,307,1.188,308,1.188,309,1.188,310,3.056,311,3.056,312,1.188,313,1.826,314,1.188,315,1.188,316,1.57,317,1.826,318,1.188,319,1.188,320,1.188,321,0.888,322,1.188,323,2.224,324,1.365,325,1.188,326,1.188,327,1.188,328,1.826,329,1.188,330,1.188,331,1.188,332,1.188,333,2.224,334,1.188,335,1.188,336,1.826,337,1.188,338,2.224,339,1.188,340,1.188,341,1.866,342,1.57,343,1.57,344,1.049,345,1.188,346,1.188,347,1.188,348,1.188,349,2.224,350,1.188,351,1.188,352,1.188,353,1.188,354,0.888,355,1.188,356,1.188,357,1.188,358,1.188,359,1.188,360,1.188,361,1.57,362,0.778,363,1.188,364,0.888,365,1.188,366,1.188,367,1.188,368,2.693,369,1.188,370,1.188,371,1.188,372,1.188,373,1.188,374,1.188,375,1.188,376,1.188,377,1.826,378,1.188,379,2.224,380,1.188,381,1.826,382,1.826,383,1.188,384,1.188,385,1.188,386,1.188,387,1.188,388,2.224,389,1.188,390,1.188,391,1.188,392,1.188,393,1.188,394,1.188,395,1.188,396,1.188,397,1.188,398,1.188,399,1.188,400,0.778,401,1.188,402,1.188,403,1.188,404,1.188,405,1.188,406,1.188,407,2.224,408,1.188,409,1.188,410,1.188,411,1.188,412,1.188,413,1.188,414,1.188,415,1.188]],["title/interfaces/ProcessedNode.html",[196,0.024,503,1.908]],["body/interfaces/ProcessedNode.html",[3,0.543,4,0.726,5,0.543,6,0.388,7,0.252,11,1.283,13,0.388,14,0.854,23,0.668,24,0.052,30,1.145,43,1.25,55,1.876,58,1.657,59,0.947,60,1.368,61,1.228,62,1.039,63,2.088,64,1.613,66,2.185,68,2.185,72,1.901,77,1.664,80,1.078,81,2.883,87,1.719,92,0.736,94,1.664,101,2.311,104,1.664,105,1.228,111,1.403,114,1.664,117,1.078,126,0.983,128,1.078,129,2.431,139,1.228,154,1.664,172,1.228,174,1.403,193,0.025,194,0.034,195,0.025,196,0.024,198,0.543,316,2.185,321,1.403,324,1.403,341,1.901,354,1.403,362,1.887,364,1.403,420,1.876,426,3.837,427,4.046,428,1.876,429,1.876,430,1.613,431,2.228,442,3.019,444,3.019,449,3.671,450,2.228,451,2.228,452,2.228,453,2.228,454,2.228,455,2.228,462,2.228,464,2.228,465,2.228,466,3.019,467,2.228,468,2.228,469,2.228,470,2.228,471,2.228,472,2.228,474,3.019,502,2.228,503,3.551,504,1.613,505,1.876,506,3.837,507,3.671,508,4.758,509,2.228,510,2.883,511,3.744,512,2.763,513,2.763,514,2.763,515,2.763,516,3.425,517,2.763,518,3.744,519,3.744,520,3.744,521,2.228,522,3.744,523,2.763,524,2.763,525,2.763,526,2.763,527,2.763,528,2.228,529,2.763,530,2.763,531,2.763,532,3.744,533,2.763,534,2.763,535,4.247,536,2.763,537,2.763,538,2.763,539,3.744,540,2.763,541,2.763,542,2.763,543,2.763,544,2.763,545,2.763,546,2.763,547,2.763,548,2.763,549,2.763,550,2.763,551,2.763,552,2.763,553,2.763,554,2.763,555,2.763]],["title/interfaces/SpatialEntityJsonLd.html",[196,0.024,556,1.427]],["body/interfaces/SpatialEntityJsonLd.html",[3,0.547,4,0.988,5,0.739,6,0.39,7,0.254,11,1.564,13,0.39,14,0.858,23,0.787,24,0.052,30,1.302,43,0.73,78,1.684,92,0.966,115,1.678,126,1.119,193,0.025,194,0.034,195,0.025,196,0.037,198,0.547,209,1.085,235,1.781,556,1.909,557,1.623,558,1.412,559,1.623,560,3.237,561,3.237,562,3.099,563,3.099,564,3.099,565,3.099,566,3.099,567,3.099,568,3.099,569,3.099,570,3.099,571,2.783,572,2.664,573,2.664,574,3.099,575,2.664,576,2.664,577,3.099,578,3.099,579,3.099,580,3.099,581,3.099,582,3.099,583,2.317,584,2.595,585,2.893,586,2.893,587,2.487,588,2.487,589,1.888,590,1.623,591,1.888,592,1.888,593,1.888,594,1.888,595,1.888,596,1.888,597,1.888,598,1.888,599,1.888,600,1.888,601,1.888,602,1.888,603,1.888,604,1.888]],["title/interfaces/SpatialObjectReferenceJsonLd.html",[196,0.024,583,1.427]],["body/interfaces/SpatialObjectReferenceJsonLd.html",[3,0.662,4,1.12,5,0.997,6,0.473,7,0.308,11,1.685,13,0.473,14,0.973,23,0.765,24,0.051,30,1.299,43,0.885,78,1.461,92,1.018,115,1.665,126,1.228,193,0.031,194,0.039,195,0.031,196,0.041,198,0.662,209,1.314,235,1.314,556,1.71,557,1.966,558,1.71,559,1.966,560,3.443,561,2.894,562,2.287,563,2.287,564,2.287,565,2.287,566,2.287,567,2.287,568,2.287,569,2.287,570,2.287,571,2.96,572,1.966,573,1.966,574,2.287,575,1.966,576,1.966,577,2.287,578,2.287,579,2.287,580,2.287,581,2.287,582,2.287,583,2.374,584,2.63,585,2.287,586,2.287,587,1.966,588,1.966,589,2.287,590,1.966,591,2.287,592,2.287,593,2.287,594,2.287,595,2.287,596,2.287,597,2.287,598,2.287,599,2.287,600,2.287,601,2.287,602,2.287,603,2.287,604,3.338]],["title/interfaces/SpatialPlacementJsonLd.html",[196,0.024,584,1.427]],["body/interfaces/SpatialPlacementJsonLd.html",[3,0.59,4,1.285,5,0.778,6,0.421,7,0.274,11,1.613,13,0.421,14,0.903,23,0.784,24,0.052,30,1.299,36,1.613,43,0.788,78,1.356,92,0.987,115,1.697,126,1.163,193,0.027,194,0.036,195,0.027,196,0.039,198,0.59,209,1.836,235,1.171,556,1.523,557,1.752,558,1.523,559,1.752,560,3.321,561,3.321,562,2.037,563,2.037,564,2.037,565,2.037,566,2.037,567,2.037,568,2.037,569,2.037,570,2.037,571,2.309,572,1.752,573,1.752,574,2.037,575,1.752,576,1.752,577,2.037,578,2.037,579,2.037,580,2.037,581,2.037,582,2.037,583,2.009,584,2.483,585,2.037,586,2.037,587,1.752,588,1.752,589,2.037,590,1.752,591,3.195,592,3.195,593,3.195,594,3.195,595,3.195,596,3.195,597,3.195,598,3.195,599,3.195,600,3.195,601,3.195,602,3.195,603,3.195,604,2.037]],["title/interfaces/SpatialSceneNode.html",[60,0.845,196,0.024]],["body/interfaces/SpatialSceneNode.html",[3,0.611,4,0.816,5,0.611,6,0.436,7,0.284,13,0.436,14,0.924,23,0.786,24,0.052,30,1.291,35,2.785,36,1.937,43,0.816,55,3.239,58,1.861,59,1.065,60,1.217,62,0.709,86,2.11,89,2.11,90,2.11,91,2.11,92,0.938,111,1.578,114,2.12,115,1.665,117,1.861,124,3.359,126,1.063,136,2.353,139,2.12,160,3.239,172,2.12,193,0.028,194,0.037,195,0.028,196,0.027,198,0.611,362,2.12,364,2.422,447,3.847,528,3.847,572,2.785,573,2.785,605,2.11,606,2.11,607,4.77,608,4.77,609,4.77,610,3.847]],["title/changelog.html",[611,1.61,612,1.384,613,1.61]],["body/changelog.html",[3,0.743,7,0.374,9,1.484,14,0.279,23,0.171,24,0.04,26,0.83,28,0.985,36,0.419,62,0.902,74,2.204,75,1.371,87,1.404,92,0.24,98,1.628,106,1.919,108,0.897,115,0.367,117,1.169,121,0.985,160,0.83,164,2.007,179,1.371,193,0.011,194,0.018,195,0.036,196,0.033,198,0.24,207,0.62,238,0.62,246,2.599,277,1.506,279,0.713,343,2.711,344,1.758,361,0.713,400,1.331,420,2.034,494,3.693,510,0.83,571,0.713,575,1.178,576,0.713,587,0.713,588,0.713,590,2.206,612,1.506,613,1.371,614,1.628,615,0.985,616,3.187,617,2.019,618,2.996,619,3.317,620,1.222,621,5.533,622,2.019,623,3.317,624,2.019,625,3.572,626,2.019,627,1.222,628,1.222,629,3.572,630,1.222,631,4.329,632,2.019,633,3.048,634,2.019,635,4.261,636,3.572,637,2.416,638,3.78,639,1.222,640,3.317,641,3.78,642,3.048,643,4.129,644,1.222,645,1.222,646,2.019,647,2.996,648,2.416,649,3.952,650,1.222,651,1.222,652,2.996,653,1.222,654,2.019,655,4.329,656,2.58,657,1.222,658,2.019,659,2.58,660,1.222,661,1.222,662,3.428,663,2.58,664,2.58,665,2.019,666,1.222,667,2.019,668,4.579,669,1.222,670,1.222,671,1.222,672,4.579,673,1.222,674,1.222,675,0.985,676,0.985,677,2.252,678,0.985,679,1.222,680,2.019,681,0.985,682,1.222,683,2.019,684,2.996,685,2.996,686,1.222,687,2.019,688,2.58,689,1.222,690,1.222,691,2.019,692,1.222,693,1.222,694,3.572,695,2.425,696,2.675,697,2.08,698,1.222,699,4.222,700,2.675,701,1.222,702,2.019,703,1.222,704,2.58,705,3.187,706,4.506,707,2.019,708,1.222,709,1.222,710,2.019,711,4.329,712,2.08,713,1.222,714,3.572,715,3.317,716,1.222,717,1.222,718,3.317,719,1.222,720,1.222,721,1.222,722,1.222,723,2.58,724,1.222,725,1.628,726,1.628,727,1.222,728,3.187,729,1.222,730,1.222,731,1.222,732,1.222,733,1.222,734,1.222,735,2.675,736,2.782,737,2.675,738,1.222,739,2.019,740,1.222,741,1.222,742,2.58,743,2.019,744,1.222,745,2.019,746,1.222,747,2.019,748,2.019,749,2.019,750,3.572,751,2.019,752,1.222,753,2.58,754,1.222,755,1.222,756,0.985,757,1.222,758,2.08,759,1.371,760,2.019,761,1.222,762,1.222,763,1.222,764,4.805,765,1.222,766,2.019,767,2.019,768,2.019,769,2.996,770,2.019,771,1.222,772,1.222,773,1.222,774,2.58,775,1.222,776,2.019,777,1.222,778,1.222,779,2.019,780,3.572,781,1.628,782,1.222,783,0.985,784,1.222,785,1.222,786,3.317,787,2.996,788,1.222,789,2.58,790,2.019,791,3.572,792,1.628,793,2.996,794,1.222,795,1.222,796,1.628,797,2.996,798,3.317,799,1.222,800,1.222,801,1.222,802,0.985,803,1.222,804,2.019,805,2.019,806,1.222,807,2.019,808,1.222,809,0.985,810,2.019,811,1.222,812,2.019,813,1.222,814,1.222,815,2.996,816,1.222,817,1.222,818,1.222,819,1.222,820,1.222,821,2.019,822,1.222,823,1.222,824,1.222,825,1.222,826,1.222,827,1.222,828,2.019,829,1.222,830,1.222,831,1.222,832,1.222,833,1.222,834,2.019,835,1.222,836,3.572,837,1.222,838,2.58,839,2.019,840,1.222,841,2.019,842,1.222,843,0.985,844,0.985,845,1.222,846,2.019,847,2.019,848,1.222,849,1.222,850,2.034,851,1.222,852,1.222,853,2.019,854,2.019,855,1.222,856,1.222,857,2.019,858,2.019,859,1.222,860,2.019,861,2.996,862,2.58,863,1.222,864,1.222,865,1.222,866,1.222,867,0.985,868,0.985,869,1.222,870,2.019,871,1.222,872,1.222,873,1.222,874,1.222,875,2.019,876,2.996,877,1.222,878,1.222,879,1.222,880,1.222,881,3.572,882,2.58,883,2.019,884,1.222,885,1.222,886,2.58,887,2.019,888,2.019,889,2.019,890,2.996,891,1.222,892,0.985,893,1.222,894,1.222,895,2.019,896,1.222,897,1.222,898,1.222,899,1.222,900,1.222,901,2.996,902,1.222,903,2.58,904,2.996,905,1.222,906,2.58,907,3.317,908,2.019,909,2.019,910,2.019,911,2.019,912,2.019,913,2.58,914,2.996,915,3.317,916,2.019,917,2.58,918,1.222,919,1.222,920,3.78,921,2.58,922,1.222,923,2.996,924,2.996,925,4.098,926,1.222,927,1.222,928,1.222,929,1.222,930,1.222,931,1.222,932,2.019,933,1.222,934,2.019,935,1.222,936,1.222,937,1.222,938,1.222,939,2.019,940,1.222,941,1.751,942,1.222,943,2.019,944,2.08,945,2.019,946,2.58,947,1.222,948,1.222,949,1.222,950,2.019,951,1.222,952,1.222,953,1.222,954,1.222,955,1.222,956,1.222,957,1.222,958,2.019,959,1.222,960,1.222,961,2.996,962,3.572,963,2.019,964,2.58,965,2.019,966,2.996,967,1.222,968,1.222,969,1.222,970,1.222,971,2.58,972,1.222,973,1.222,974,1.222,975,2.019,976,2.019,977,2.019,978,2.019,979,2.58,980,1.222,981,1.222,982,1.222,983,1.222,984,1.222,985,1.222,986,0.985,987,1.222,988,1.222,989,1.222,990,2.019,991,1.222,992,1.222,993,2.019,994,1.222,995,1.222,996,1.222,997,1.222,998,1.222,999,1.222,1000,1.222,1001,1.222,1002,1.222,1003,1.222,1004,3.952,1005,1.222,1006,2.08,1007,2.58,1008,2.996,1009,2.019,1010,2.58,1011,1.222,1012,2.019,1013,1.222,1014,1.222,1015,1.222,1016,2.019,1017,2.019,1018,2.019,1019,1.222,1020,1.222,1021,1.222,1022,1.222,1023,2.019,1024,1.222,1025,2.58,1026,1.222,1027,1.222,1028,1.222,1029,1.222,1030,0.985,1031,1.222,1032,1.222,1033,1.222,1034,1.222,1035,1.222,1036,1.222,1037,1.222,1038,1.222,1039,1.222,1040,1.222,1041,1.222,1042,2.416,1043,3.317,1044,1.222,1045,1.222,1046,1.222,1047,1.222,1048,1.222,1049,1.222,1050,1.222,1051,1.222,1052,1.222,1053,1.222,1054,1.222,1055,1.222,1056,1.222,1057,1.222,1058,2.019,1059,1.222,1060,2.019,1061,1.222,1062,2.019,1063,2.019,1064,2.996,1065,2.996,1066,2.019,1067,2.019,1068,1.222,1069,1.222,1070,1.222,1071,2.58,1072,1.222,1073,0.985,1074,1.222,1075,1.222,1076,1.222,1077,1.222,1078,1.222,1079,1.222,1080,2.019,1081,4.222,1082,2.58,1083,2.019,1084,1.222,1085,2.019,1086,1.222,1087,1.222,1088,1.222,1089,1.222,1090,1.222,1091,1.222,1092,1.222,1093,1.222,1094,1.222,1095,2.019,1096,3.048,1097,2.019,1098,1.222,1099,1.222,1100,1.222,1101,1.628,1102,1.222,1103,2.996,1104,1.222,1105,2.019,1106,1.222,1107,1.222,1108,2.034,1109,1.222,1110,2.019,1111,1.222,1112,1.222,1113,1.222,1114,2.019,1115,2.019,1116,1.222,1117,1.222,1118,1.222,1119,1.222,1120,2.019,1121,2.58,1122,2.019,1123,1.222,1124,1.222,1125,1.628,1126,1.222,1127,1.222,1128,1.222,1129,1.222,1130,1.222,1131,1.222,1132,1.222,1133,1.222,1134,1.222,1135,0.985,1136,1.222,1137,1.222,1138,2.019,1139,1.222,1140,1.222,1141,1.222,1142,1.222,1143,1.222,1144,1.222,1145,1.222,1146,2.019,1147,2.019,1148,1.222,1149,0.985,1150,1.222,1151,1.222,1152,0.985,1153,1.222,1154,1.222,1155,1.222,1156,2.019,1157,1.222,1158,1.222,1159,1.222,1160,1.222,1161,1.222,1162,1.222,1163,1.222,1164,1.222,1165,1.222,1166,1.222,1167,1.222,1168,2.019,1169,1.222,1170,1.222,1171,1.222,1172,1.222,1173,2.019,1174,1.222,1175,1.222,1176,0.985,1177,1.222,1178,1.222,1179,1.222,1180,1.222,1181,1.222,1182,1.222,1183,1.222,1184,1.222]],["title/coverage.html",[1108,2.571]],["body/coverage.html",[0,1.737,1,1.309,5,0.579,6,0.789,7,0.514,8,1.989,9,1.503,10,2.978,23,0.414,24,0.051,46,2.001,60,0.886,62,1.14,64,1.72,65,2.001,66,1.72,69,2.001,72,2.797,80,2.192,87,1.01,193,0.027,194,0.036,195,0.027,196,0.046,197,1.496,199,2.372,228,1.496,230,1.496,234,1.496,247,1.72,344,1.525,400,1.309,416,2.001,417,2.654,418,2.654,430,1.72,503,2.001,504,3.022,505,2.978,556,1.496,557,2.561,558,2.372,559,2.561,583,1.496,584,1.496,605,2.001,606,2.001,695,2.001,759,2.001,941,2.001,1108,2.001,1185,2.947,1186,2.947,1187,2.376,1188,2.376,1189,2.376,1190,5.524,1191,4.387,1192,2.376,1193,2.947,1194,2.947,1195,2.947,1196,2.947,1197,2.947,1198,2.947,1199,2.947,1200,3.768,1201,3.768,1202,2.376,1203,3.153,1204,3.153,1205,2.376,1206,2.376,1207,2.376,1208,2.376,1209,2.376,1210,2.376,1211,2.654,1212,2.376,1213,2.947,1214,2.376,1215,2.376,1216,2.376,1217,2.376,1218,2.001,1219,2.001,1220,2.376,1221,2.376,1222,2.376,1223,2.947,1224,2.947,1225,2.947]],["title/dependencies.html",[681,1.912,850,2.286]],["body/dependencies.html",[5,0.615,7,0.286,24,0.052,25,1.827,45,1.589,47,2.524,50,2.524,51,2.065,57,2.524,59,1.073,63,1.221,156,1.827,193,0.029,194,0.037,195,0.029,220,1.827,221,2.374,224,1.827,421,2.524,423,2.524,425,2.524,428,2.125,429,2.125,507,2.524,677,2.125,700,2.524,725,2.524,781,2.524,792,2.524,843,2.524,844,2.524,850,2.125,868,3.28,944,2.524,1006,3.28,1101,3.28,1226,3.13,1227,3.13,1228,3.13,1229,5.387,1230,3.13,1231,3.13,1232,3.13,1233,3.13,1234,3.13,1235,3.13,1236,3.13,1237,3.13,1238,4.067,1239,3.13,1240,3.13,1241,3.13,1242,3.13,1243,3.13,1244,3.13,1245,3.13,1246,4.518,1247,3.13,1248,3.13,1249,4.518,1250,3.13,1251,3.13,1252,3.13,1253,3.13,1254,4.067,1255,3.13,1256,3.13,1257,3.13,1258,3.13,1259,3.13,1260,4.067,1261,4.067,1262,3.13,1263,3.13,1264,3.13,1265,3.13,1266,3.13,1267,3.28,1268,3.13,1269,3.13,1270,4.067,1271,3.13,1272,3.13,1273,3.13,1274,3.13,1275,3.13,1276,3.13,1277,3.13,1278,3.13,1279,3.13,1280,3.13,1281,3.13,1282,3.13,1283,3.13,1284,3.13,1285,3.13,1286,3.13,1287,2.524,1288,3.13,1289,3.13,1290,3.13,1291,3.13,1292,3.13,1293,3.13,1294,4.067,1295,3.13,1296,3.13,1297,3.13,1298,3.13,1299,3.13,1300,3.13,1301,3.13,1302,3.13,1303,3.13,1304,3.13,1305,3.13,1306,3.13,1307,3.13,1308,3.13,1309,3.13,1310,3.13,1311,3.13,1312,3.13,1313,3.13,1314,3.13,1315,3.13,1316,4.067,1317,3.13,1318,3.13,1319,3.13,1320,3.13,1321,3.13,1322,3.13,1323,3.13,1324,3.13,1325,3.13,1326,3.13,1327,3.13,1328,4.067,1329,3.13,1330,3.13,1331,3.13,1332,3.13,1333,3.13,1334,3.13,1335,3.13,1336,3.13,1337,3.13,1338,3.13,1339,3.13,1340,3.13,1341,3.13]],["title/miscellaneous/functions.html",[1342,1.054,1343,2.715]],["body/miscellaneous/functions.html",[6,0.748,7,0.487,8,1.098,9,1.469,10,2.91,13,0.395,24,0.052,27,1.25,30,0.642,34,4.406,35,3.189,36,1.873,38,4.406,41,1.428,46,2.91,49,2.269,62,1.169,64,2.212,65,2.573,66,2.502,68,2.212,69,2.573,73,2.269,74,2.038,75,3.114,78,1.299,92,0.745,119,2.269,128,2.065,136,1.25,154,1.25,156,1.642,193,0.026,194,0.035,195,0.026,207,1.428,228,1.924,341,1.428,344,1.479,354,1.428,362,1.684,417,1.91,418,2.573,430,2.212,432,2.269,504,2.795,505,2.91,509,2.269,510,2.573,516,3.699,521,2.269,558,1.924,759,2.573,809,3.057,941,2.573,1187,2.269,1188,3.057,1189,3.057,1192,3.057,1200,2.269,1201,3.861,1202,3.057,1203,2.269,1204,3.457,1205,3.057,1206,3.057,1207,3.057,1208,3.057,1209,3.057,1210,3.057,1211,2.573,1212,3.057,1215,3.057,1216,3.057,1217,3.057,1218,1.91,1219,2.573,1220,2.269,1221,3.057,1222,3.057,1267,3.057,1342,1.25,1343,2.269,1344,2.813,1345,3.977,1346,4.586,1347,2.269,1348,3.057,1349,3.79,1350,2.813,1351,2.269,1352,2.813,1353,4.932,1354,2.813,1355,3.79,1356,2.813,1357,2.813,1358,3.79,1359,2.813,1360,4.586,1361,4.286,1362,2.813,1363,2.813,1364,2.813,1365,4.586,1366,2.813,1367,2.813,1368,2.813,1369,2.813,1370,3.79,1371,2.813,1372,3.79]],["title/index.html",[13,0.333,611,1.61,612,1.384]],["body/index.html",[3,1.007,9,1.194,24,0.04,108,1.548,193,0.032,194,0.04,195,0.032,196,0.038,198,0.685,238,2.211,246,2.871,342,2.905,506,2.81,613,2.366,614,3.512,615,3.512,616,3.831,633,2.81,635,3.512,637,2.81,642,4.014,643,3.831,648,2.81,662,3.226,675,2.81,676,2.81,677,2.366,678,2.81,696,4.132,697,4.014,705,3.512,712,2.81,726,3.512,728,2.81,736,3.379,737,2.81,758,2.81,796,3.512,867,2.81,892,3.512,1030,2.81,1042,3.512,1125,2.81,1135,2.81,1149,2.81,1373,4.355,1374,3.484,1375,3.484,1376,3.484,1377,3.484,1378,3.512,1379,3.484,1380,3.484,1381,3.484,1382,4.355,1383,4.355,1384,4.355,1385,4.751,1386,3.484,1387,3.484,1388,4.751,1389,3.484,1390,3.484,1391,4.355,1392,3.484,1393,3.484,1394,3.484,1395,4.355,1396,3.484,1397,3.484,1398,3.484,1399,3.484,1400,4.977,1401,3.484,1402,3.484,1403,3.484,1404,3.484,1405,3.484,1406,3.484,1407,3.484,1408,3.484,1409,3.484,1410,3.484,1411,3.484,1412,3.484,1413,3.484,1414,3.484,1415,3.484,1416,3.484]],["title/license.html",[611,1.61,612,1.384,1417,1.912]],["body/license.html",[24,0.042,193,0.035,194,0.042,195,0.035,223,2.23,695,2.594,735,3.716,736,2.594,756,3.991,783,3.081,802,3.716,986,3.716,1073,3.081,1096,3.081,1152,3.081,1176,3.081,1287,3.081,1378,4.426,1417,3.081,1418,3.82,1419,4.949,1420,3.82,1421,3.82,1422,4.608,1423,3.82,1424,3.82,1425,3.82,1426,3.82,1427,3.82,1428,3.82,1429,4.608,1430,3.82,1431,3.82,1432,3.82,1433,3.82,1434,3.82,1435,3.82,1436,3.82,1437,3.82,1438,3.82,1439,3.82,1440,3.82,1441,3.82,1442,4.608,1443,3.82,1444,3.82,1445,3.82,1446,3.82,1447,3.82,1448,4.608,1449,3.82,1450,3.82,1451,3.82,1452,3.82,1453,3.82,1454,3.82,1455,3.82,1456,3.82,1457,3.82,1458,3.82,1459,3.82,1460,3.82,1461,3.82,1462,3.82,1463,3.82,1464,3.82,1465,3.82,1466,3.82,1467,3.82,1468,3.82,1469,3.82,1470,3.82,1471,3.82,1472,3.82,1473,3.82,1474,3.82,1475,3.82,1476,3.82]],["title/modules.html",[1477,3.054]],["body/modules.html",[24,0.046,193,0.04,194,0.046,195,0.04,1477,3.559]],["title/overview.html",[1478,3.054]],["body/overview.html",[2,3.535,24,0.046,193,0.04,194,0.046,195,0.04,198,0.862,400,1.948,1478,3.535,1479,4.384]],["title/miscellaneous/typealiases.html",[1342,1.054,1480,3.367]],["body/miscellaneous/typealiases.html",[6,0.714,7,0.465,8,1.59,13,0.572,23,0.714,24,0.05,25,2.796,62,1.093,72,2.069,86,2.768,89,2.768,90,2.768,91,2.768,111,2.069,124,2.768,193,0.037,194,0.044,195,0.037,199,2.582,240,2.796,242,2.796,605,2.768,606,3.252,610,3.863,1218,2.768,1219,3.252,1342,1.811,1347,3.287,1348,3.863,1351,3.287,1481,4.076,1482,4.79]],["title/miscellaneous/variables.html",[1342,1.054,1483,2.715]],["body/miscellaneous/variables.html",[6,0.586,7,0.381,13,0.586,23,0.586,24,0.05,26,2.834,27,1.855,193,0.038,194,0.044,195,0.038,235,1.628,344,1.895,504,2.436,662,2.834,1211,3.297,1214,3.916,1342,1.855,1345,3.366,1483,3.366,1484,4.174,1485,4.856,1486,4.174,1487,4.174,1488,4.174,1489,4.174,1490,4.856,1491,4.174,1492,4.174,1493,4.174,1494,4.174]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["0.05",{"_index":336,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["0.1.0",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":316,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["0.5*255",{"_index":177,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.5.0",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1125,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.8",{"_index":133,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0.9*255",{"_index":118,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["0/1",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1223,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":179,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"changelog.html":{}}}],["1.0",{"_index":164,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["1.0.0",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1006,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":944,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["1.6875389974302382e",{"_index":352,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["1.7.0",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["1/37",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["10.0",{"_index":307,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10.0.0",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":282,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["10x",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["11.5",{"_index":370,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["12",{"_index":633,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["136",{"_index":99,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["14",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":313,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["15.126.1",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["17,0,0",{"_index":351,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["17,0.076,0,0.49,0.034,0.11,1",{"_index":353,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2",{"_index":400,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["2.0.0",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":792,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":781,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":725,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":328,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["2019",{"_index":1096,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":100,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["24",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["255",{"_index":101,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["26",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["3.0",{"_index":1383,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":700,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1404,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":98,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["31",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":343,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["4",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["4.0.2",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["8.9",{"_index":399,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["85",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":1479,"title":{},"body":{"overview.html":{}}}],["9.5",{"_index":319,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["90",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["_dragevent(info",{"_index":413,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_lighting",{"_index":172,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["_onclick(info",{"_index":384,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondrag(info",{"_index":409,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragend(info",{"_index":411,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_ondragstart(info",{"_index":406,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onhover(e",{"_index":376,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["_onviewstatechange(event",{"_index":392,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["aabb",{"_index":426,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["ability",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1152,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1469,"title":{},"body":{"license.html":{}}}],["actions",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1481,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1387,"title":{},"body":{"index.html":{}}}],["ambientlight",{"_index":213,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["analytics",{"_index":844,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":941,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomicalstructuresurl",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1440,"title":{},"body":{"license.html":{}}}],["angular",{"_index":677,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":642,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":1396,"title":{},"body":{"index.html":{}}}],["appear",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["appropriate",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":1473,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":783,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":321,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["attempts",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1462,"title":{},"body":{"license.html":{}}}],["autohighlight",{"_index":95,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["automatic",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":324,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["award",{"_index":1415,"title":{},"body":{"index.html":{}}}],["b_3d_models_extraction_sites.csv",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b_3d_models_mapping.csv",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1149,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":449,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["before",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":222,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["behaviorsubject([0",{"_index":253,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["being",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":705,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":220,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["block",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["bmi",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":7,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bodyui",{"_index":247,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer",{"_index":1,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuilayer.gltfcache",{"_index":153,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["bodyuiprops",{"_index":197,"title":{"interfaces/BodyUIProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["bodyuiviewstateprops",{"_index":230,"title":{"interfaces/BodyUIViewStateProps.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["boolean",{"_index":136,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["box",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["break",{"_index":88,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["breaking",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":1101,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1379,"title":{},"body":{"index.html":{}}}],["builds",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1420,"title":{},"body":{"license.html":{}}}],["cache",{"_index":1267,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["cacheable",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["callback",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":200,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cancelregistration",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":428,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["canvas",{"_index":201,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["card",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":85,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cases",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["casttoglobaltype",{"_index":1189,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["casttoglobaltype(value",{"_index":1352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ccf",{"_index":246,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":562,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["cell",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":506,"title":{},"body":{"interfaces/ProcessedNode.html":{},"index.html":{}}}],["change",{"_index":867,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":613,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1426,"title":{},"body":{"license.html":{}}}],["child",{"_index":511,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["child.bbox.clone",{"_index":536,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames",{"_index":1215,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["childnames(child",{"_index":515,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(node.node).map(n",{"_index":533,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["childnames(scene",{"_index":509,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1465,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/BodyUILayer.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BodyUILayer.html":{},"overview.html":{}}}],["cleanup",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":1400,"title":{},"body":{"index.html":{}}}],["code",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["collider",{"_index":71,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["collider.ts",{"_index":418,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["collision",{"_index":416,"title":{"interfaces/Collision.html":{}},"body":{"interfaces/Collision.html":{},"coverage.html":{}}}],["collisioning",{"_index":434,"title":{},"body":{"interfaces/Collision.html":{}}}],["collisions",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":117,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["colorizing",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["comment",{"_index":563,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["common",{"_index":614,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":637,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["compositelayer",{"_index":12,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["comunica/query",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1447,"title":{},"body":{"license.html":{}}}],["cone",{"_index":89,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["conegeometry",{"_index":52,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["config",{"_index":809,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["config.csv",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1475,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":487,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log('data",{"_index":357,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('results",{"_index":356,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["console.log('starting",{"_index":433,"title":{},"body":{"interfaces/Collision.html":{}}}],["console.log(csvreport",{"_index":501,"title":{},"body":{"interfaces/Collision.html":{}}}],["consortium",{"_index":1421,"title":{},"body":{"license.html":{}}}],["const",{"_index":129,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["constructor(private",{"_index":273,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["container",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1377,"title":{},"body":{"index.html":{}}}],["context",{"_index":561,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["contract",{"_index":1470,"title":{},"body":{"license.html":{}}}],["control",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":283,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convenience",{"_index":244,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["convention",{"_index":171,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["coordinate",{"_index":238,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["coordinate_system",{"_index":44,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinate_system.cartesian",{"_index":103,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["coordinatesystem",{"_index":102,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["copies",{"_index":1442,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1429,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1419,"title":{},"body":{"license.html":{}}}],["cors",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1108,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["creation_date",{"_index":564,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator",{"_index":565,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_first_name",{"_index":566,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["creator_last_name",{"_index":567,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["credits",{"_index":1406,"title":{},"body":{"index.html":{}}}],["css",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["csv.ts",{"_index":1204,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["csvreport",{"_index":491,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvreport.push",{"_index":493,"title":{},"body":{"interfaces/Collision.html":{}}}],["csvtext",{"_index":1363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctrlclick",{"_index":243,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ctrlkey",{"_index":386,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cube",{"_index":91,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cubegeometry",{"_index":53,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["cuboid",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["currentstate",{"_index":396,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.data",{"_index":402,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["currentstate.zoomopacity",{"_index":401,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cursor",{"_index":271,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["cyberinfrastructure",{"_index":1408,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["cylinder",{"_index":90,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["cylindergeometry",{"_index":54,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["d",{"_index":113,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["d.geometry",{"_index":438,"title":{},"body":{"interfaces/Collision.html":{}}}],["d.scenegraph",{"_index":437,"title":{},"body":{"interfaces/Collision.html":{}}}],["damages",{"_index":1466,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":74,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["data.concat(object.values(results",{"_index":359,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.length",{"_index":79,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.map(d",{"_index":120,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["data.push",{"_index":360,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["data.ts",{"_index":1211,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["data?.length",{"_index":332,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["database",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["datasets",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1431,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1476,"title":{},"body":{"license.html":{}}}],["debugscenenodeprocessing",{"_index":202,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["debugscenenodeprocessing(data",{"_index":340,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["december",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["deck",{"_index":214,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck(props",{"_index":309,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/core",{"_index":45,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deck.gl/core/lib/deck",{"_index":219,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deck.gl/geo",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":47,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deck.gl/mesh",{"_index":50,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["deckprops",{"_index":274,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.camera",{"_index":278,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.interactive",{"_index":284,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.legacylighting",{"_index":304,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.maxrotationx",{"_index":314,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.minrotationx",{"_index":312,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.rotation",{"_index":317,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.target",{"_index":315,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["deckprops.zoom",{"_index":318,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["decompress",{"_index":459,"title":{},"body":{"interfaces/Collision.html":{}}}],["decorator",{"_index":221,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["deeply",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":26,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["delete",{"_index":538,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["demo",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":850,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["depthmask",{"_index":178,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["derivescenegraph",{"_index":1202,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["derivescenegraph(scenegraphnodename",{"_index":1354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["details",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1407,"title":{},"body":{"index.html":{}}}],["developments",{"_index":1135,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["didzoom",{"_index":333,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["different",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["dimension_units",{"_index":568,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["direct",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":105,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["display",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1438,"title":{},"body":{"license.html":{}}}],["doc",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["docollisions",{"_index":69,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["docollisions(scene",{"_index":432,"title":{},"body":{"interfaces/Collision.html":{},"miscellaneous/functions.html":{}}}],["docollisions(state.data",{"_index":187,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["document",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":695,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["done",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["dracoloader",{"_index":422,"title":{},"body":{"interfaces/Collision.html":{}}}],["during",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":37,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.info",{"_index":192,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["e.isdragging",{"_index":301,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object",{"_index":379,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.object['@id",{"_index":380,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e.picked",{"_index":377,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["e?.srcevent?.ctrlkey",{"_index":391,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["easier",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":868,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":502,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["entities",{"_index":1365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":1216,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["entityid",{"_index":447,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{}}}],["es",{"_index":429,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["eslint",{"_index":104,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["eslint/naming",{"_index":170,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["eslint/no",{"_index":109,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["etc",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":643,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1461,"title":{},"body":{"license.html":{}}}],["event.interactionstate?.iszooming",{"_index":395,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate",{"_index":403,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.rotationx",{"_index":405,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["event.viewstate.zoom",{"_index":398,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["expanded",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["explicit",{"_index":110,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["exploration",{"_index":1381,"title":{},"body":{"index.html":{}}}],["export",{"_index":126,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["express",{"_index":1287,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":11,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["external",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":759,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extraction_set",{"_index":569,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["extractionsitesconfigurl",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractionsitesurl",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":96,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["favor",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":586,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["fetch",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_format",{"_index":604,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["files",{"_index":1430,"title":{},"body":{"license.html":{}}}],["filter",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["filter(d",{"_index":436,"title":{},"body":{"interfaces/Collision.html":{}}}],["final",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["finalize",{"_index":329,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["finishing",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["firstfieldname",{"_index":1360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fit",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1457,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["fixes.ts",{"_index":1188,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixes/performance",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["flipy",{"_index":280,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["fly",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1446,"title":{},"body":{"license.html":{}}}],["form",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["frame",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":615,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":1425,"title":{},"body":{"license.html":{}}}],["fs",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":72,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1343,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":1413,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1445,"title":{},"body":{"license.html":{}}}],["further",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["geometries",{"_index":137,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph",{"_index":148,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries.scenegraph.push(node",{"_index":143,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry",{"_index":144,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometries[geometry].push(node",{"_index":145,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["geometry",{"_index":55,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["getcolor",{"_index":116,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getcursor",{"_index":298,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["getpickinginfo",{"_index":20,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getpickinginfo(e",{"_index":32,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getposition",{"_index":125,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gettext",{"_index":123,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["getting",{"_index":611,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettransformmatrix",{"_index":112,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["github",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["gltf",{"_index":68,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["gltf.scenes",{"_index":462,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["gltf.ts",{"_index":1201,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gltf:${processednode['@id",{"_index":525,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfcache",{"_index":17,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["gltfloader",{"_index":424,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltfnode",{"_index":526,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes",{"_index":518,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfnodes.push",{"_index":524,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["gltfoverride",{"_index":1370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfpromise",{"_index":1358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gltfscene",{"_index":461,"title":{},"body":{"interfaces/Collision.html":{}}}],["gltftransform",{"_index":349,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["gltfurl",{"_index":341,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["good",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":843,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["grab",{"_index":303,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["grabbing",{"_index":302,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["granted",{"_index":1424,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":497,"title":{},"body":{"interfaces/Collision.html":{}}}],["h.name",{"_index":500,"title":{},"body":{"interfaces/Collision.html":{}}}],["h['@id",{"_index":499,"title":{},"body":{"interfaces/Collision.html":{}}}],["halfsize",{"_index":547,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["hand",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["happen",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["helmet",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1423,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["highlightcolor",{"_index":97,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["highlights",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":492,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.hits",{"_index":498,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit.name",{"_index":496,"title":{},"body":{"interfaces/Collision.html":{}}}],["hit['@id",{"_index":495,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits",{"_index":419,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.length",{"_index":482,"title":{},"body":{"interfaces/Collision.html":{}}}],["hits.push({'@id",{"_index":479,"title":{},"body":{"interfaces/Collision.html":{}}}],["holders",{"_index":1463,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["htmlcanvaselement",{"_index":211,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["htmlelement",{"_index":212,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["http://localhost:8080/source_data/asct",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/extraction",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8080/source_data/reference",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://beta",{"_index":1384,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":1395,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":1388,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":342,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":347,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["https://old",{"_index":1390,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1386,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":736,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["icon",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":92,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["idb",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1454,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["improve",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1449,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":735,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1411,"title":{},"body":{"index.html":{}}}],["individual",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{}}}],["info.object",{"_index":388,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.object['@id",{"_index":389,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info.picked",{"_index":387,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["info?.object?.['@id",{"_index":414,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["information",{"_index":892,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":322,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["initializestate",{"_index":21,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["instead",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["intensity",{"_index":306,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interact",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["interactionstate",{"_index":393,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interactive",{"_index":203,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["interest",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":196,"title":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":198,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["isdragging",{"_index":299,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["issue",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["iszooming",{"_index":394,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["it's",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":678,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["jsonld",{"_index":507,"title":{},"body":{"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["jsonld.ts",{"_index":559,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["jsonld/jsonld",{"_index":589,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["jsonldobj",{"_index":560,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["july",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":76,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["keyboard",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1453,"title":{},"body":{"license.html":{}}}],["known",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":189,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["label",{"_index":570,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["labs/data",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["labs/dispatch",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["lasthovered",{"_index":272,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["latest",{"_index":648,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layer",{"_index":227,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["layer.ts",{"_index":10,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["layer.ts:143",{"_index":33,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:71",{"_index":31,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:72",{"_index":29,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:74",{"_index":40,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layer.ts:80",{"_index":42,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layername",{"_index":18,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers",{"_index":51,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["layers.filter(l",{"_index":188,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push",{"_index":157,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(`${geometry}pickable",{"_index":185,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(meshlayer(geometry",{"_index":184,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('text",{"_index":180,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["layers.push(textlayer('textpickable",{"_index":183,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["lb",{"_index":541,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["lb.clone().vadd(halfsize",{"_index":551,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ld",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":587,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["left/right",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["legacylighting",{"_index":204,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["level",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1467,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1464,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":675,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["library/vh_female/united/vhf_united_color.glb",{"_index":346,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["library/vh_male/united/vhm_united_color.glb",{"_index":345,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["license",{"_index":1417,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["lightingeffect",{"_index":215,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["limitation",{"_index":1433,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1073,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":107,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["link",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":712,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":25,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":420,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{}}}],["load(model.scenegraph",{"_index":458,"title":{},"body":{"interfaces/Collision.html":{}}}],["loaded",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":421,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/draco",{"_index":423,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":425,"title":{},"body":{"interfaces/Collision.html":{},"dependencies.html":{}}}],["loadgltf",{"_index":64,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf(model",{"_index":1356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadgltf({scenegraph",{"_index":517,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["loadgltf2",{"_index":65,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadgltf2(model.scenegraphnode",{"_index":167,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["loadgltf2(scenegraphnodename",{"_index":1357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["location",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1405,"title":{},"body":{"index.html":{}}}],["logging",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["loop",{"_index":325,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["lowerbound",{"_index":442,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lowerbound[i",{"_index":455,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["lru",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":57,"title":{},"body":{"classes/BodyUILayer.html":{},"dependencies.html":{}}}],["m",{"_index":147,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraph",{"_index":149,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["m.scenegraphnode",{"_index":150,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["made",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":585,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["managers",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["map(model",{"_index":439,"title":{},"body":{"interfaces/Collision.html":{}}}],["march",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["mat",{"_index":440,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint",{"_index":443,"title":{},"body":{"interfaces/Collision.html":{}}}],["mat.transformaspoint([1",{"_index":445,"title":{},"body":{"interfaces/Collision.html":{}}}],["match",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":194,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.gl/core",{"_index":59,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["math.max(...report.map(r",{"_index":489,"title":{},"body":{"interfaces/Collision.html":{}}}],["math.max(n",{"_index":454,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["math.min(math.max(1",{"_index":397,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["math.min(n",{"_index":451,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["matrix",{"_index":366,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix.gettranslation",{"_index":369,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4",{"_index":58,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e",{"_index":350,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(d.transformmatrix).gettranslation",{"_index":122,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["matrix4(matrix4.identity",{"_index":553,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(model.transformmatrix",{"_index":441,"title":{},"body":{"interfaces/Collision.html":{}}}],["matrix4(modelmatrix",{"_index":523,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4(node.transformmatrix",{"_index":367,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["matrix4(worldmatrix",{"_index":519,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["matrix4.identity",{"_index":520,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["maxhits",{"_index":488,"title":{},"body":{"interfaces/Collision.html":{}}}],["maxrotationx",{"_index":205,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["mc",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1456,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1436,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":82,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["meshlayer",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["meshlayer(id",{"_index":73,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["minor",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["minrotationx",{"_index":206,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["miscellaneous",{"_index":1342,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1418,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":156,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["model._lighting",{"_index":173,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.color",{"_index":176,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.entityid",{"_index":448,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.opacity",{"_index":163,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraph",{"_index":169,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.scenegraphnode",{"_index":166,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.tooltip",{"_index":446,"title":{},"body":{"interfaces/Collision.html":{}}}],["model.transformmatrix",{"_index":175,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.unpickable",{"_index":165,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model.zoombasedopacity",{"_index":161,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["model['@id",{"_index":159,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{}}}],["modelmatrix",{"_index":464,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.max",{"_index":472,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["modelmatrix.transformaspoint(primitive.attributes.position.min",{"_index":471,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["models",{"_index":158,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["modify",{"_index":1435,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1477,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1374,"title":{},"body":{"index.html":{}}}],["more",{"_index":1042,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mouseevent",{"_index":241,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["moved",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1375,"title":{},"body":{"index.html":{}}}],["n.bbox",{"_index":532,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["n.unpickable",{"_index":182,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["n3",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":35,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":510,"title":{},"body":{"interfaces/ProcessedNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names.push(child.name",{"_index":514,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["navigation",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["near",{"_index":281,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["needed",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1409,"title":{},"body":{"index.html":{}}}],["new",{"_index":87,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":106,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["ng5",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1414,"title":{},"body":{"index.html":{}}}],["node",{"_index":63,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"dependencies.html":{}}}],["node.bbox",{"_index":535,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.extend(child.bbox",{"_index":537,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.lowerbound",{"_index":542,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.bbox.upperbound",{"_index":544,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.center",{"_index":550,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.geometry",{"_index":141,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.id",{"_index":522,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.mesh",{"_index":465,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives",{"_index":466,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.mesh.primitives.length",{"_index":467,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.name",{"_index":474,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["node.scenegraph",{"_index":142,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["node.size",{"_index":545,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.transformmatrix",{"_index":552,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["node.ts",{"_index":606,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["node.zoomtoonload",{"_index":334,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclick",{"_index":257,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodeclickevent",{"_index":242,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodeclicksubject",{"_index":249,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedrag",{"_index":267,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragend",{"_index":269,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragendsubject",{"_index":256,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragevent",{"_index":240,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nodedragstart",{"_index":265,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragstartsubject",{"_index":254,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodedragsubject",{"_index":255,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstart",{"_index":259,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstartsubject",{"_index":250,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstop",{"_index":261,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodehoverstopsubject",{"_index":251,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["nodes",{"_index":154,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["nodes.filter(n",{"_index":181,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["nodes.ts",{"_index":505,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["nodes[n]).filter(n",{"_index":534,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[node['@id",{"_index":539,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["nodes[processednode['@id",{"_index":530,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["noninfringement",{"_index":1460,"title":{},"body":{"license.html":{}}}],["note",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":986,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":115,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["numeric",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":235,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/variables.html":{}}}],["object.entries(geometries",{"_index":155,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.prototype.hasownproperty.call(url2gltf",{"_index":151,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["object.values(nodes",{"_index":540,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(nodes).filter(n",{"_index":531,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["object.values(results",{"_index":358,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["obtaining",{"_index":1428,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1389,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":288,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondrag",{"_index":294,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragend",{"_index":296,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ondragstart",{"_index":292,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["one",{"_index":1030,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["onhover",{"_index":286,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["online",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["ontology/objects/vhf_united_v01_060420.glb",{"_index":348,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["onviewstatechange",{"_index":290,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["opacities",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":160,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["openapi",{"_index":726,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1401,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1403,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1402,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":36,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":75,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options.geometry",{"_index":84,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["orbitaxis",{"_index":231,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["orbitview",{"_index":216,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["organ",{"_index":662,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["organs/anatomical",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["orthographic",{"_index":279,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["orthographicview",{"_index":217,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["ot2od026671",{"_index":1416,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1472,"title":{},"body":{"license.html":{}}}],["out",{"_index":1474,"title":{},"body":{"license.html":{}}}],["over",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1478,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":681,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["parameters['getpickinginfo']>[0",{"_index":190,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["parent",{"_index":207,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["parsecsv",{"_index":1205,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsv(sourceurl",{"_index":1359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsecsvtext",{"_index":1206,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsecsvtext(csvtext",{"_index":1362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":275,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["particular",{"_index":1458,"title":{},"body":{"license.html":{}}}],["partly",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["pbr",{"_index":174,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["performance",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1422,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1443,"title":{},"body":{"license.html":{}}}],["person",{"_index":1427,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1444,"title":{},"body":{"license.html":{}}}],["pickable",{"_index":93,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["picked",{"_index":239,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["pickinfo",{"_index":234,"title":{"interfaces/PickInfo.html":{}},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{}}}],["placeholder",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["placement",{"_index":571,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["placement_date",{"_index":591,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["player",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":378,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["popup",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":737,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1451,"title":{},"body":{"license.html":{}}}],["position",{"_index":121,"title":{},"body":{"classes/BodyUILayer.html":{},"changelog.html":{}}}],["possible",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["postprocess",{"_index":460,"title":{},"body":{"interfaces/Collision.html":{}}}],["preferences",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["primitive",{"_index":468,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position",{"_index":469,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["primitive.attributes.position.min",{"_index":470,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["priority",{"_index":607,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["private",{"_index":248,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["process",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["processanatomicalstructures",{"_index":1208,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processanatomicalstructures(sourceurl",{"_index":1364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processed",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["processednode",{"_index":503,"title":{"interfaces/ProcessedNode.html":{}},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{}}}],["processednode.bbox",{"_index":529,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processednode['@id",{"_index":527,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["processextractionsites",{"_index":1210,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processextractionsites(sourceurl",{"_index":1366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processing",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["processreferencedata",{"_index":1212,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processreferencedata(refentities",{"_index":1367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["processscenenodes",{"_index":228,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["processscenenodes(gltfurl",{"_index":354,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities",{"_index":1217,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["processspatialentities(parent",{"_index":1369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":696,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1376,"title":{},"body":{"index.html":{}}}],["projects/.../body",{"_index":1348,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../global",{"_index":1344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../load",{"_index":1346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../parse",{"_index":1349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../process",{"_index":1345,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene",{"_index":1351,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../simplify",{"_index":1350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../spatial",{"_index":1347,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":128,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["promise(r",{"_index":326,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{}}}],["props",{"_index":276,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["props.effects",{"_index":305,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["provided",{"_index":1176,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1437,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1459,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":676,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["r.hits.length",{"_index":490,"title":{},"body":{"interfaces/Collision.html":{}}}],["rc.1",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["real",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":138,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rectify",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["refentities",{"_index":1368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reference",{"_index":344,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reference_organ",{"_index":572,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["referencedataconfig",{"_index":1214,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["referenceorganconfigurl",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refernced",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["registergltfloaders",{"_index":66,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["registration",{"_index":758,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["reliability",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["renderlayers",{"_index":22,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["report",{"_index":475,"title":{},"body":{"interfaces/Collision.html":{}}}],["report.push",{"_index":483,"title":{},"body":{"interfaces/Collision.html":{}}}],["repository",{"_index":1373,"title":{},"body":{"index.html":{}}}],["representation_of",{"_index":573,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["required",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["resets",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":1432,"title":{},"body":{"license.html":{}}}],["result",{"_index":193,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":195,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["returns",{"_index":38,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":39,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["returntype['getpickinginfo",{"_index":191,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["rgb",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":588,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["rights",{"_index":1434,"title":{},"body":{"license.html":{}}}],["root",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":208,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotation_units",{"_index":599,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rotationorbit",{"_index":232,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["rotationx",{"_index":233,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["round",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":635,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["rui_rank",{"_index":574,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["rxjs",{"_index":224,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":226,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sad",{"_index":476,"title":{},"body":{"interfaces/Collision.html":{}}}],["sad.push(src",{"_index":486,"title":{},"body":{"interfaces/Collision.html":{}}}],["sample",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["scale(halfsize.toarray",{"_index":555,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scaling_units",{"_index":595,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["scene",{"_index":62,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["scene.children",{"_index":513,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.filter(d",{"_index":457,"title":{},"body":{"interfaces/Collision.html":{}}}],["scene.nodes",{"_index":512,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["scene.ts",{"_index":1221,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["scenegraph",{"_index":139,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["scenegraphlayer",{"_index":48,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["scenegraphnode",{"_index":362,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["scenegraphnodename",{"_index":1355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scenerotation",{"_index":263,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenerotationsubject",{"_index":252,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["scenetraversalvisitor",{"_index":1482,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scheduled",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1410,"title":{},"body":{"index.html":{}}}],["search",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":796,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1441,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["setinteractive(value",{"_index":375,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotation(value",{"_index":371,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setrotationx(value",{"_index":372,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setscene(data",{"_index":331,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settarget(value",{"_index":374,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["settimeout(r",{"_index":327,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["setup",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["setzoom(value",{"_index":373,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sex",{"_index":575,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sexes",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1448,"title":{},"body":{"license.html":{}}}],["share",{"_index":225,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["shared",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["shared/spatial",{"_index":61,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["shortest",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":576,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["sides",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["simplemeshlayer",{"_index":49,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["simplifies",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["simplifyscene",{"_index":1222,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["simplifyscene(nodes",{"_index":1371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["site",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sites",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["sites.ts",{"_index":1209,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizable",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":508,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["size.clone().vmul(new",{"_index":548,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["slice_count",{"_index":577,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slice_thickness",{"_index":578,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["slider",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1378,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{}}}],["sourceboxes",{"_index":435,"title":{},"body":{"interfaces/Collision.html":{}}}],["sources",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["sourceurl",{"_index":1361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sparc",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["spatial",{"_index":558,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialentityjsonld",{"_index":556,"title":{"interfaces/SpatialEntityJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialobjectreferencejsonld",{"_index":583,"title":{"interfaces/SpatialObjectReferenceJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialplacementjsonld",{"_index":584,"title":{"interfaces/SpatialPlacementJsonLd.html":{}},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["spatialscenegeometry",{"_index":610,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spatialscenenode",{"_index":60,"title":{"interfaces/SpatialSceneNode.html":{}},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"coverage.html":{}}}],["spec",{"_index":590,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1399,"title":{},"body":{"index.html":{}}}],["specific",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1398,"title":{},"body":{"index.html":{}}}],["speed",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["sphere",{"_index":86,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["spheregeometry",{"_index":56,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["spinning",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":477,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.bbox.overlaps(target.bbox",{"_index":478,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.entityid",{"_index":484,"title":{},"body":{"interfaces/Collision.html":{}}}],["src.name",{"_index":485,"title":{},"body":{"interfaces/Collision.html":{}}}],["srcevent",{"_index":385,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["stage",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":697,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":1397,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1382,"title":{},"body":{"index.html":{}}}],["started",{"_index":612,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":134,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.data",{"_index":140,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.docollisions",{"_index":186,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["state.zoomopacity",{"_index":162,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["statements",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":15,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["stay",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["structures.ts",{"_index":1207,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":223,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"license.html":{}}}],["subject.next",{"_index":415,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["sublicense",{"_index":1439,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1450,"title":{},"body":{"license.html":{}}}],["support",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":83,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["switched",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1224,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":209,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["target.name",{"_index":481,"title":{},"body":{"interfaces/Collision.html":{}}}],["target['@id",{"_index":480,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes",{"_index":456,"title":{},"body":{"interfaces/Collision.html":{}}}],["targetboxes.push",{"_index":473,"title":{},"body":{"interfaces/Collision.html":{}}}],["technologies",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":361,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["testing",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":124,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["textlayer",{"_index":46,"title":{},"body":{"classes/BodyUILayer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textlayer(id",{"_index":119,"title":{},"body":{"classes/BodyUILayer.html":{},"miscellaneous/functions.html":{}}}],["theme",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["this._dragevent(info",{"_index":407,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onclick",{"_index":289,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondrag",{"_index":295,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragend",{"_index":297,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._ondragstart",{"_index":293,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onhover",{"_index":287,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this._onviewstatechange",{"_index":291,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer",{"_index":285,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.setstate",{"_index":338,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.bodyuilayer.state",{"_index":323,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.cursor",{"_index":300,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.debugscenenodeprocessing(data",{"_index":339,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck",{"_index":308,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.finalize",{"_index":330,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.props.viewstate",{"_index":368,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deck.setprops",{"_index":310,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.deckprops.debugscenenodeprocessing",{"_index":337,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.lasthovered",{"_index":382,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.next",{"_index":390,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodeclicksubject.pipe(share",{"_index":258,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject",{"_index":412,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragendsubject.pipe(share",{"_index":270,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject",{"_index":408,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragstartsubject.pipe(share",{"_index":266,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject",{"_index":410,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodedragsubject.pipe(share",{"_index":268,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.next(e.object",{"_index":383,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstartsubject.pipe(share",{"_index":260,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.next(lasthovered",{"_index":381,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.nodehoverstopsubject.pipe(share",{"_index":262,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.props",{"_index":130,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.scenerotationsubject.next([deckprops.rotation",{"_index":320,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.next([event.viewstate.rotationorbit",{"_index":404,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.scenerotationsubject.pipe(share",{"_index":264,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["this.setstate",{"_index":131,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.state",{"_index":135,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["this.zoomto(node",{"_index":335,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["through",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["thumbnails",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":494,"title":{},"body":{"interfaces/Collision.html":{},"changelog.html":{}}}],["tissues",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["tmc",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["tool",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":528,"title":{},"body":{"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["tort",{"_index":1471,"title":{},"body":{"license.html":{}}}],["tracking/telemetry",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["transformmatrix",{"_index":114,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["translate(center.toarray",{"_index":554,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["translation_units",{"_index":603,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["transparency",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["traversal",{"_index":431,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["traversal.ts",{"_index":1219,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["traversescene",{"_index":430,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["traversescene(gltfscene",{"_index":463,"title":{},"body":{"interfaces/Collision.html":{}}}],["traversescene(scene",{"_index":521,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["travisci",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":94,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["try",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"interfaces/SpatialSceneNode.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1480,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":108,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["ub",{"_index":543,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ub.clone().vsub(lb",{"_index":546,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["ufl",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":9,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1385,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1394,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1391,"title":{},"body":{"index.html":{}}}],["ui.ts",{"_index":199,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/organ",{"_index":1393,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1392,"title":{},"body":{"index.html":{}}}],["ui/src/global",{"_index":1187,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/body",{"_index":8,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/shared/ccf",{"_index":557,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"coverage.html":{}}}],["ui/src/lib/shared/spatial",{"_index":605,"title":{},"body":{"interfaces/SpatialSceneNode.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/load",{"_index":1200,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/parse",{"_index":1203,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/process",{"_index":504,"title":{},"body":{"interfaces/ProcessedNode.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui/src/lib/util/scene",{"_index":1218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["ui/src/lib/util/simplify",{"_index":1220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ui/src/lib/util/spatial",{"_index":417,"title":{},"body":{"interfaces/Collision.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":78,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{},"miscellaneous/functions.html":{}}}],["university",{"_index":1412,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/Collision.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{}}}],["unnecessary",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":608,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}],["unselect",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["updated_date",{"_index":579,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["updates",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["upperbound",{"_index":444,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["upperbound[i",{"_index":452,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["url",{"_index":127,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf",{"_index":146,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[m.scenegraph",{"_index":152,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["url2gltf[model.scenegraph",{"_index":168,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["use",{"_index":802,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["util/load",{"_index":67,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["util/process",{"_index":229,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["util/spatial",{"_index":70,"title":{},"body":{"classes/BodyUILayer.html":{}}}],["utilities",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":27,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1483,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vec3",{"_index":427,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...lowerbound.map((n",{"_index":450,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(...upperbound.map((n",{"_index":453,"title":{},"body":{"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{}}}],["vec3(0.5",{"_index":549,"title":{},"body":{"interfaces/ProcessedNode.html":{}}}],["version",{"_index":728,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["vhf_kidney_l_low1').then((results",{"_index":355,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["vhf_kidney_r_low",{"_index":363,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["via",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":277,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"changelog.html":{}}}],["viewstate",{"_index":311,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["viewstateprops",{"_index":218,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["visitor",{"_index":1372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["visual",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":41,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1455,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1452,"title":{},"body":{"license.html":{}}}],["web",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1380,"title":{},"body":{"index.html":{}}}],["week",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1468,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["wireframe",{"_index":111,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/Collision.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{},"miscellaneous/typealiases.html":{}}}],["within",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":756,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["workflows",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["worldmatrix",{"_index":516,"title":{},"body":{"interfaces/ProcessedNode.html":{},"miscellaneous/functions.html":{}}}],["wrapper",{"_index":245,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x",{"_index":236,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["x_dimension",{"_index":580,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_rotation",{"_index":596,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_scaling",{"_index":592,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["x_translation",{"_index":600,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y",{"_index":237,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["y_dimension",{"_index":581,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_rotation",{"_index":597,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_scaling",{"_index":593,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["y_translation",{"_index":601,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["yes",{"_index":1353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["youtube",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["z_dimension",{"_index":582,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_rotation",{"_index":598,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_scaling",{"_index":594,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["z_translation",{"_index":602,"title":{},"body":{"interfaces/SpatialEntityJsonLd.html":{},"interfaces/SpatialObjectReferenceJsonLd.html":{},"interfaces/SpatialPlacementJsonLd.html":{}}}],["zone.js",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":210,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoombasedopacity",{"_index":364,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{},"interfaces/ProcessedNode.html":{},"interfaces/SpatialSceneNode.html":{}}}],["zoomopacity",{"_index":132,"title":{},"body":{"classes/BodyUILayer.html":{},"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomto(node",{"_index":365,"title":{},"body":{"interfaces/BodyUIProps.html":{},"interfaces/BodyUIViewStateProps.html":{},"interfaces/PickInfo.html":{}}}],["zoomtoonload",{"_index":609,"title":{},"body":{"interfaces/SpatialSceneNode.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BodyUILayer.html":{"url":"classes/BodyUILayer.html","title":"class - BodyUILayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BodyUILayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui-layer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CompositeLayer\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                gltfCache\n                            \n                            \n                                    Static\n                                    Readonly\n                                layerName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPickingInfo\n                            \n                            \n                                initializeState\n                            \n                            \n                                renderLayers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        gltfCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        layerName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'BodyUILayer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPickingInfo\n                        \n                    \n                \n            \n            \n                \ngetPickingInfo(e)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ReturnType<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderLayers\n                        \n                    \n                \n            \n            \n                \nrenderLayers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-body-ui/src/lib/body-ui-layer.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     []\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CompositeLayer, COORDINATE_SYSTEM } from '@deck.gl/core';\nimport { TextLayer } from '@deck.gl/layers';\nimport { ScenegraphLayer, SimpleMeshLayer } from '@deck.gl/mesh-layers';\nimport { ConeGeometry, CubeGeometry, CylinderGeometry, Geometry, SphereGeometry } from '@luma.gl/core';\nimport { Matrix4 } from '@math.gl/core';\n\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { loadGLTF, loadGLTF2, registerGLTFLoaders } from './util/load-gltf';\nimport { doCollisions } from './util/spatial-scene-collider';\n\n\nfunction meshLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): SimpleMeshLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    let mesh: Geometry;\n    switch (options.geometry) {\n      case 'sphere':\n        mesh = new SphereGeometry();\n        break;\n      case 'cone':\n        mesh = new ConeGeometry();\n        break;\n      case 'cylinder':\n        mesh = new CylinderGeometry();\n        break;\n      case 'cube':\n      default:\n        mesh = new CubeGeometry();\n        break;\n    }\n    return new SimpleMeshLayer({\n      ...{\n        id,\n        pickable: true,\n        autoHighlight: false,\n        highlightColor: [30, 136, 229, 255],\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        mesh: mesh as any,\n        wireframe: false,\n        getTransformMatrix: (d) => (d as { transformMatrix: number[][] }).transformMatrix,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color || [255, 255, 255, 0.9*255]\n      },\n      ...options\n    });\n  }\n}\n\nfunction textLayer(id: string, data: SpatialSceneNode[], options: { [key: string]: unknown }): TextLayer | undefined {\n  if (!data || data.length === 0) {\n    return undefined;\n  } else {\n    return new TextLayer({\n      ...{\n        id,\n        pickable: true,\n        data: data.map(d => ({ ...d, position: new Matrix4(d.transformMatrix).getTranslation() })),\n        getText: (d) => (d as { text: string }).text,\n        getPosition: (d) => (d as { position: [number, number] }).position,\n        getColor: (d) => (d as { color: [number, number, number, number] }).color\n      },\n      ...options\n    });\n  }\n}\n\nexport class BodyUILayer extends CompositeLayer {\n  static readonly layerName = 'BodyUILayer';\n  static readonly gltfCache: { [url: string]: Promise } = {};\n\n  initializeState(): void {\n    const { data } = this.props;\n    this.setState({ data: data ?? [], zoomOpacity: 0.8, doCollisions: false });\n    registerGLTFLoaders();\n  }\n\n  renderLayers(): unknown[] {\n    const state = this.state as { data: SpatialSceneNode[]; zoomOpacity: number; doCollisions: boolean };\n    const geometries: Record = {\n      'sphere': [], 'cone': [], 'cylinder': [], 'cube': [], 'text': [], 'wireframe': [], 'scenegraph': []\n    };\n\n    for (const node of state.data) {\n      const geometry = node.geometry ?? 'cube';\n      if (node.scenegraph) {\n        geometries.scenegraph.push(node);\n      } else if (geometries[geometry] !== undefined) {\n        geometries[geometry].push(node);\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const url2gltf: { [url: string]: Promise } = {};\n    for (const m of geometries.scenegraph) {\n      if (m.scenegraph && m.scenegraphNode && !Object.prototype.hasOwnProperty.call(url2gltf, m.scenegraph)) {\n        url2gltf[m.scenegraph] = loadGLTF({ scenegraph: m.scenegraph } as SpatialSceneNode, BodyUILayer.gltfCache);\n      }\n    }\n\n    const layers: unknown[] = [];\n    for (const [geometry, nodes] of Object.entries(geometries)) {\n      if (geometry === 'scenegraph') {\n        for (const model of nodes) {\n          layers.push(\n            new ScenegraphLayer({\n              id: 'models-' + model['@id'],\n              opacity: model.zoomBasedOpacity ? state.zoomOpacity : (model.opacity !== undefined ? model.opacity : 1.0),\n              pickable: !model.unpickable,\n              coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n              data: [model],\n              scenegraph: model.scenegraphNode ?\n                loadGLTF2(model.scenegraphNode, url2gltf[model.scenegraph as string]) :\n                model.scenegraph as unknown as URL,\n              // eslint-disable-next-line @typescript-eslint/naming-convention\n              _lighting: model._lighting, // 'pbr' | undefined\n              getTransformMatrix: model.transformMatrix as unknown as number[][],\n              getColor: model.color ?? [0, 255, 0, 0.5*255],\n              parameters: { depthMask: !model.zoomBasedOpacity && (model.opacity === undefined || model.opacity === 1) }\n            })\n          );\n        }\n      } else if (geometry === 'text') {\n        layers.push(textLayer('text', nodes.filter(n => n.unpickable), { pickable: false }));\n        layers.push(textLayer('textPickable', nodes.filter(n => !n.unpickable), { pickable: true }));\n      } else if (geometry === 'wireframe') {\n        layers.push(meshLayer(geometry, nodes, { wireframe: true, pickable: false, geometry }));\n      } else {\n        layers.push(meshLayer(geometry, nodes.filter(n => n.unpickable), { wireframe: false, pickable: false, geometry }));\n        layers.push(meshLayer(`${geometry}Pickable`, nodes.filter(n => !n.unpickable), { wireframe: false, pickable: true, geometry }));\n      }\n    }\n\n    if (state.doCollisions) {\n      doCollisions(state.data);\n    }\n\n    return layers.filter(l => !!l);\n  }\n\n  getPickingInfo(\n    e: Parameters['getPickingInfo']>[0]\n  ): ReturnType['getPickingInfo']> {\n    return e.info;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIProps.html":{"url":"interfaces/BodyUIProps.html","title":"interface - BodyUIProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            canvas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debugSceneNodeProcessing\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interactive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            legacyLighting\n                                        \n                                \n                                \n                                        \n                                            maxRotationX\n                                        \n                                \n                                \n                                        \n                                            minRotationX\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canvas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canvas:     string | HTMLCanvasElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | HTMLCanvasElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugSceneNodeProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugSceneNodeProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyLighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyLighting:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minRotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BodyUIViewStateProps.html":{"url":"interfaces/BodyUIViewStateProps.html","title":"interface - BodyUIViewStateProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BodyUIViewStateProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ViewStateProps\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orbitAxis\n                                        \n                                \n                                \n                                        \n                                            rotationOrbit\n                                        \n                                \n                                \n                                        \n                                            rotationX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            zoom\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orbitAxis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orbitAxis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationOrbit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationOrbit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotationX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotationX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     Matrix4 | number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4 | number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Collision.html":{"url":"interfaces/Collision.html","title":"interface - Collision","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Collision\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { load } from '@loaders.gl/core';\nimport { DracoLoader } from '@loaders.gl/draco';\nimport { GLTFLoader } from '@loaders.gl/gltf';\nimport { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\nimport { traverseScene } from './scene-traversal';\n\n\ninterface Collision {\n  '@id': string;\n  name: string;\n  hits: { '@id': string; name: string }[];\n}\n\n/* eslint-disable  */\nexport async function doCollisions(scene: SpatialSceneNode[]): Promise {\n  console.log('Starting Collisioning');\n  const sourceBoxes = scene\n    .filter(d => !d.scenegraph && d.geometry !== 'wireframe')\n    .map(model => {\n      const mat = new Matrix4(model.transformMatrix);\n      const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n      const upperBound = mat.transformAsPoint([1, 1, 1], []);\n      return {\n        '@id': model['@id'],\n        name: model.tooltip,\n        entityId: model.entityId,\n        bbox: new AABB({\n          lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n          upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n        })\n      };\n    });\n\n  const targetBoxes: {'@id': string, name: string, entityId?: string; bbox: AABB, gltf: unknown}[] = [];\n  for (const model of scene.filter(d => !!d.scenegraph)) {\n    const gltf = await load(model.scenegraph as string, GLTFLoader, {DracoLoader, decompress: true, postProcess: true});\n    for (const gltfScene of gltf.scenes) {\n      traverseScene(gltfScene, new Matrix4(model.transformMatrix), (node, modelMatrix) => {\n        if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n          for (const primitive of node.mesh.primitives) {\n            if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n              const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n              const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n              targetBoxes.push({\n                '@id': model['@id'],\n                name: node.name,\n                entityId: model.entityId,\n                bbox: new AABB({\n                  lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n                  upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n                }),\n                gltf\n              });\n            }\n          }\n        }\n        return true;\n      });\n    }\n  }\n\n  const report: Collision[] = [];\n  const sad: unknown[] = [];\n  for (const src of sourceBoxes) {\n    const hits: {'@id': string, name: string}[] = [];\n    for (const target of targetBoxes) {\n      if (src.bbox.overlaps(target.bbox)) {\n        hits.push({'@id': target['@id'], name: target.name});\n      }\n    }\n    if (hits.length > 0) {\n      report.push({\n        '@id': src.entityId as string,\n        name: src.name as string,\n        hits\n      });\n    } else {\n      sad.push(src);\n    }\n  }\n\n  console.log({ sourceBoxes, targetBoxes, report, sad, maxHits: Math.max(...report.map(r => r.hits.length)) });\n\n  const csvReport: unknown[] = [];\n  for (const hit of report) {\n    csvReport.push({\n      'Tissue ID': hit['@id'],\n      'Tissue Name': hit.name,\n      'Hit ID': '',\n      'Hit Name': ''\n    });\n    for (const h of hit.hits) {\n      csvReport.push({\n        'Tissue ID': hit['@id'],\n        'Tissue Name': hit.name,\n        'Hit ID': h['@id'],\n        'Hit Name': h.name\n      });\n    }\n  }\n  console.log(csvReport);\n\n  return report;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PickInfo.html":{"url":"interfaces/PickInfo.html","title":"interface - PickInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PickInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/body-ui.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            coordinate\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            layer\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picked\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        coordinate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coordinate:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        layer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        layer:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:     D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AmbientLight, Deck, LightingEffect, OrbitView, OrthographicView } from '@deck.gl/core';\nimport { ViewStateProps } from '@deck.gl/core/lib/deck';\nimport { Matrix4 } from '@math.gl/core';\nimport bind from 'bind-decorator';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { BodyUILayer } from './body-ui-layer';\nimport { SpatialSceneNode } from './shared/spatial-scene-node';\nimport { processSceneNodes } from './util/process-scene-nodes';\n\n\ninterface BodyUIViewStateProps extends ViewStateProps {\n  orbitAxis?: string;\n  target?: Matrix4 | number[];\n  zoom: number;\n  rotationOrbit: number;\n  rotationX: number;\n  camera: string;\n}\n\nexport interface BodyUIProps {\n  id: string;\n  canvas: string | HTMLCanvasElement;\n  parent: HTMLElement;\n  debugSceneNodeProcessing?: boolean;\n  target: Matrix4 | number[];\n  interactive: boolean;\n  rotation: number;\n  minRotationX: number;\n  maxRotationX: number;\n  zoom: number;\n  legacyLighting?: boolean;\n  camera: string;\n}\n\nexport interface PickInfo {\n  layer: unknown;\n  index: number;\n  object: D;\n  x: number;\n  y: number;\n  coordinate?: unknown;\n  picked?: boolean;\n}\n\nexport type NodeDragEvent = { node: SpatialSceneNode; info: PickInfo; e: MouseEvent };\n\nexport type NodeClickEvent = { node: SpatialSceneNode; ctrlClick: boolean };\n\n/**\n * A convenience wrapper class for the CCF Body UI\n */\nexport class BodyUI {\n  deck: Deck;\n  private readonly bodyUILayer = new BodyUILayer({});\n\n  private readonly nodeClickSubject = new Subject();\n  private readonly nodeHoverStartSubject = new Subject();\n  private readonly nodeHoverStopSubject = new Subject();\n  private readonly sceneRotationSubject = new BehaviorSubject([0, 0]);\n  private readonly nodeDragStartSubject = new Subject();\n  private readonly nodeDragSubject = new Subject();\n  private readonly nodeDragEndSubject = new Subject();\n\n  readonly nodeClick$ = this.nodeClickSubject.pipe(share());\n  readonly nodeHoverStart$ = this.nodeHoverStartSubject.pipe(share());\n  readonly nodeHoverStop$ = this.nodeHoverStopSubject.pipe(share());\n  readonly sceneRotation$ = this.sceneRotationSubject.pipe(share());\n  readonly nodeDragStart$ = this.nodeDragStartSubject.pipe(share());\n  readonly nodeDrag$ = this.nodeDragSubject.pipe(share());\n  readonly nodeDragEnd$ = this.nodeDragEndSubject.pipe(share());\n\n  private cursor?: string;\n  private lastHovered?: SpatialSceneNode;\n\n  constructor(private deckProps: Partial) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const props: any = {\n      ...deckProps,\n      views: [ deckProps.camera === 'orthographic' ? new OrthographicView({\n        flipY: false,\n        near: -1000\n      }) : new OrbitView({ orbitAxis: 'Y' }) ],\n      controller: deckProps.interactive !== undefined ? deckProps.interactive : true,\n      layers: [ this.bodyUILayer ],\n      onHover: this._onHover,\n      onClick: this._onClick,\n      onViewStateChange: this._onViewStateChange,\n      onDragStart: this._onDragStart,\n      onDrag: this._onDrag,\n      onDragEnd: this._onDragEnd,\n      getCursor: (e: { isDragging: boolean }) => this.cursor ?? (e.isDragging ? 'grabbing' : 'grab')\n    };\n    if (deckProps.legacyLighting) {\n      // eslint-disable-next-line\n      props.effects = [\n        new LightingEffect({\n          ambientLight: new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 10.0\n          })\n        })\n      ];\n    }\n    // eslint-disable-next-line\n    this.deck = new Deck(props);\n    this.deck.setProps({\n      viewState: {\n        orbitAxis: 'Y',\n        minRotationX: deckProps.minRotationX ?? -15,\n        maxRotationX: deckProps.maxRotationX ?? 15,\n        target: deckProps.target ?? [0.5, 0.5, 0],\n        rotationX: 0,\n        rotationOrbit: deckProps.rotation ?? 0,\n        zoom: deckProps.zoom ?? 9.5,\n        camera: deckProps.camera\n      } as BodyUIViewStateProps\n    });\n    if (deckProps.rotation) {\n      this.sceneRotationSubject.next([deckProps.rotation, 0]);\n    }\n  }\n\n  async initialize(): Promise {\n    while (!this.bodyUILayer.state) {\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(r => {\n        setTimeout(r, 200);\n      });\n    }\n  }\n\n  finalize(): void {\n    this.deck.finalize();\n  }\n\n  setScene(data: SpatialSceneNode[]): void {\n    if (data?.length > 0) {\n      let zoomOpacity = (this.bodyUILayer.state as { zoomOpacity: number }).zoomOpacity;\n      let didZoom = false;\n      for (const node of data) {\n        if (node.zoomToOnLoad) {\n          this.zoomTo(node);\n          didZoom = true;\n        }\n      }\n      zoomOpacity = didZoom ? 0.05 : zoomOpacity;\n      if (!this.deckProps.debugSceneNodeProcessing) {\n        this.bodyUILayer.setState({ data, zoomOpacity });\n      } else {\n        this.debugSceneNodeProcessing(data, zoomOpacity);\n      }\n    }\n  }\n\n  debugSceneNodeProcessing(data: SpatialSceneNode[], zoomOpacity: number): void {\n    // const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Male/United/VHM_United_Color.glb';\n    const gltfUrl = 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/VH_Female/United/VHF_United_Color.glb';\n    // const gltfUrl = 'https://hubmapconsortium.github.io/hubmap-ontology/objects/VHF_United_v01_060420.glb';\n    const gltfTransform = new Matrix4([0.076,0,0,0,0,0.076,1.6875389974302382e-17,0,0,-1.6875389974302382e-17,0.076,0,0.49,0.034,0.11,1]);\n    processSceneNodes(gltfUrl, gltfTransform, 'VHF_Kidney_L_Low1').then((results) => {\n      console.log('results', results);\n      console.log('data', data);\n      // data = Object.values(results);\n      data = data.concat(Object.values(results));\n      data.push({\n        '@id': 'TEST',\n        '@type': 'TEST',\n        scenegraph: gltfUrl,\n        scenegraphNode: 'VHF_Kidney_R_Low',\n        transformMatrix: gltfTransform,\n        color: [255, 255, 255, 200],\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _lighting: 'pbr',\n        zoomBasedOpacity: false\n      });\n      this.bodyUILayer.setState({ data, zoomOpacity });\n    });\n  }\n\n  zoomTo(node: SpatialSceneNode): void {\n    const matrix = new Matrix4(node.transformMatrix);\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: matrix.getTranslation(),\n        rotationX: 0,\n        rotationOrbit: 0,\n        zoom: 11.5,\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotation(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationOrbit: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setRotationX(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        rotationX: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setZoom(value: number): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        zoom: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setTarget(value: number[]): void {\n    this.deck.setProps({\n      viewState: {\n        ...this.deck.props.viewState,\n        target: value\n      } as BodyUIViewStateProps\n    });\n  }\n\n  setInteractive(value: boolean): void {\n    this.deck.setProps({\n      controller: value\n    });\n  }\n\n  @bind\n  private _onHover(e: { picked: boolean; object: SpatialSceneNode }): void {\n    const { lastHovered } = this;\n    this.cursor = e.picked ? 'pointer' : undefined;\n    if (e.picked && e.object && e.object['@id']) {\n      if (lastHovered !== e.object) {\n        if (lastHovered) {\n          this.nodeHoverStopSubject.next(lastHovered);\n        }\n        this.lastHovered = e.object;\n        this.nodeHoverStartSubject.next(e.object);\n      }\n    } else if (lastHovered) {\n      this.nodeHoverStopSubject.next(lastHovered);\n      this.lastHovered = undefined;\n    }\n  }\n\n  @bind\n  private _onClick(info: PickInfo, e: { srcEvent: { ctrlKey: boolean } }): void {\n    if (info.picked && info.object && info.object['@id']) {\n      this.nodeClickSubject.next({ node: info.object, ctrlClick: e?.srcEvent?.ctrlKey ?? undefined });\n    }\n  }\n\n  @bind\n  private _onViewStateChange(event: { interactionState: { isZooming: boolean }; viewState: BodyUIViewStateProps }): void {\n    if (event.interactionState?.isZooming) {\n      const currentState = this.bodyUILayer.state as { zoomOpacity: number; data: unknown };\n      const zoomOpacity = Math.min(Math.max(1 - (event.viewState.zoom - 8.9) / 2, 0.05), 1.0);\n      if (currentState.zoomOpacity !== zoomOpacity) {\n        this.bodyUILayer.setState({ data: currentState.data, zoomOpacity });\n      }\n    }\n    this.deck.setProps({ viewState: { ...event.viewState } });\n    this.sceneRotationSubject.next([event.viewState.rotationOrbit, event.viewState.rotationX]);\n  }\n\n  @bind\n  private _onDragStart(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragStartSubject);\n  }\n\n  @bind\n  private _onDrag(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragSubject);\n  }\n\n  @bind\n  private _onDragEnd(info: PickInfo, e: MouseEvent): void {\n    this._dragEvent(info, e, this.nodeDragEndSubject);\n  }\n\n  private _dragEvent(info: PickInfo, e: MouseEvent, subject: Subject): void {\n    if (info?.object?.['@id']) {\n      subject.next({ node: info.object, info, e });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessedNode.html":{"url":"interfaces/ProcessedNode.html","title":"interface - ProcessedNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessedNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SpatialSceneNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bbox\n                                        \n                                \n                                \n                                        \n                                            center\n                                        \n                                \n                                \n                                        \n                                            jsonld\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bbox\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bbox:     AABB\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AABB\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        center\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        center:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jsonld:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     Vec3\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vec3\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\nimport { AABB, Vec3 } from 'cannon-es';\n\nimport { loadGLTF, registerGLTFLoaders } from './load-gltf';\nimport { traverseScene } from './scene-traversal';\nimport { SpatialSceneNode } from '../shared/spatial-scene-node';\n\n\nexport interface ProcessedNode extends SpatialSceneNode {\n  bbox: AABB;\n  jsonld: unknown;\n  node: unknown;\n  size: Vec3;\n  center: Vec3;\n}\n\n/* eslint-disable  */\nfunction childNames(scene, names: string[] = []): string[] {\n  for (const child of (scene.nodes || scene.children || [])) {\n    names.push(child.name);\n    childNames(child, names);\n  }\n  return names;\n}\n\nexport async function processSceneNodes(gltfUrl: string, worldMatrix?: Matrix4, scenegraphNode?: string\n    ): Promise {\n  registerGLTFLoaders();\n  const gltf = await loadGLTF({scenegraph: gltfUrl, scenegraphNode} as SpatialSceneNode);\n  const nodes: {[node: string]: ProcessedNode} = {};\n  const gltfNodes: ProcessedNode[] = [];\n  for (const scene of gltf.scenes) {\n    worldMatrix = new Matrix4(worldMatrix || Matrix4.IDENTITY);\n    traverseScene(scene, worldMatrix, (node, modelMatrix: Matrix4) => {\n      const processedNode: ProcessedNode = {\n        '@id': (node.name || node.id) as string,\n        '@type': 'ProcessedNode',\n        transformMatrix: new Matrix4(modelMatrix),\n        geometry: 'wireframe',\n        node\n      } as ProcessedNode;\n      gltfNodes.push({\n        '@id': `GLTF:${processedNode['@id']}`,\n        '@type': 'GLTFNode',\n        scenegraph: gltfUrl,\n        scenegraphNode: processedNode['@id'],\n        transformMatrix: new Matrix4(worldMatrix || Matrix4.IDENTITY),\n        tooltip: (node.name || node.id) as string,\n        color: [255, 255, 255, 255],\n        _lighting: 'pbr',\n        zoomBasedOpacity: true,\n        node\n      } as ProcessedNode);\n      if (node.mesh && node.mesh.primitives && node.mesh.primitives.length > 0) {\n        for (const primitive of node.mesh.primitives) {\n          if (primitive.attributes.POSITION && primitive.attributes.POSITION.min) {\n            const lowerBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.min, []);\n            const upperBound = modelMatrix.transformAsPoint(primitive.attributes.POSITION.max, []);\n            processedNode.bbox = new AABB({\n              lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n              upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n            });\n          }\n        }\n      }\n      nodes[processedNode['@id']] = processedNode;\n      return true;\n    });\n  }\n\n  for (const node of Object.values(nodes).filter(n => !n.bbox)) {\n    for (const child of childNames(node.node).map(n => nodes[n]).filter(n => n.bbox)) {\n      if (!node.bbox) {\n        node.bbox = child.bbox.clone();\n      } else {\n        node.bbox.extend(child.bbox);\n      }\n    }\n    if (!node.bbox) {\n      delete nodes[node['@id']];\n    }\n  }\n  for (const node of Object.values(nodes)) {\n    const lb = node.bbox.lowerBound;\n    const ub = node.bbox.upperBound;\n    const size = node.size = ub.clone().vsub(lb);\n    const halfSize = size.clone().vmul(new Vec3(0.5, 0.5, 0.5));\n    const center = node.center = lb.clone().vadd(halfSize);\n\n    node.transformMatrix = new Matrix4(Matrix4.IDENTITY)\n      .translate(center.toArray())\n      .scale(halfSize.toArray());\n  }\n  for (const node of gltfNodes) {\n    nodes[node['@id']] = node;\n  }\n  return nodes;\n}\n/* eslint-enable */\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialEntityJsonLd.html":{"url":"interfaces/SpatialEntityJsonLd.html","title":"interface - SpatialEntityJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialEntityJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            ccf_annotations\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            creation_date\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            creator_first_name\n                                        \n                                \n                                \n                                        \n                                            creator_last_name\n                                        \n                                \n                                \n                                        \n                                            dimension_units\n                                        \n                                \n                                \n                                        \n                                            extraction_set\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                                \n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                        \n                                            rui_rank\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slice_count\n                                        \n                                \n                                \n                                        \n                                            slice_thickness\n                                        \n                                \n                                \n                                        \n                                            updated_date\n                                        \n                                \n                                \n                                        \n                                            x_dimension\n                                        \n                                \n                                \n                                        \n                                            y_dimension\n                                        \n                                \n                                \n                                        \n                                            z_dimension\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ccf_annotations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ccf_annotations:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creation_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator_last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator_last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dimension_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dimension_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extraction_set\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extraction_set:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         SpatialObjectReferenceJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialObjectReferenceJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd | SpatialPlacementJsonLd[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rui_rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rui_rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"Male\" | \"Female\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Male\" | \"Female\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"Left\" | \"Right\" | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Left\" | \"Right\" | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slice_thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slice_thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_dimension\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_dimension:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialObjectReferenceJsonLd.html":{"url":"interfaces/SpatialObjectReferenceJsonLd.html","title":"interface - SpatialObjectReferenceJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialObjectReferenceJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            file_format\n                                        \n                                \n                                \n                                        \n                                            placement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file_format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file_format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement:         SpatialPlacementJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialPlacementJsonLd\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialPlacementJsonLd.html":{"url":"interfaces/SpatialPlacementJsonLd.html","title":"interface - SpatialPlacementJsonLd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialPlacementJsonLd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    JsonLdObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            @context\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                        \n                                            placement_date\n                                        \n                                \n                                \n                                        \n                                            rotation_units\n                                        \n                                \n                                \n                                        \n                                            scaling_units\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            translation_units\n                                        \n                                \n                                \n                                        \n                                            x_rotation\n                                        \n                                \n                                \n                                        \n                                            x_scaling\n                                        \n                                \n                                \n                                        \n                                            x_translation\n                                        \n                                \n                                \n                                        \n                                            y_rotation\n                                        \n                                \n                                \n                                        \n                                            y_scaling\n                                        \n                                \n                                \n                                        \n                                            y_translation\n                                        \n                                \n                                \n                                        \n                                            z_rotation\n                                        \n                                \n                                \n                                        \n                                            z_scaling\n                                        \n                                \n                                \n                                        \n                                            z_translation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        @context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placement_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placement_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaling_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scaling_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation_units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        translation_units:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_rotation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_scaling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_scaling:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z_translation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z_translation:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JsonLdObj } from 'jsonld/jsonld-spec';\n\n\nexport interface SpatialPlacementJsonLd extends JsonLdObj {\n  '@context'?: string;\n  '@id': string;\n  '@type': string;\n  source?: string;\n  target: string;\n  placement_date: string;\n  x_scaling: number;\n  y_scaling: number;\n  z_scaling: number;\n  scaling_units: string;\n  x_rotation: number;\n  y_rotation: number;\n  z_rotation: number;\n  rotation_units: string;\n  x_translation: number;\n  y_translation: number;\n  z_translation: number;\n  translation_units: string;\n}\n\nexport interface SpatialObjectReferenceJsonLd extends JsonLdObj {\n  '@id': string;\n  '@type': string;\n  file: string;\n  file_format: string;\n  placement: SpatialPlacementJsonLd;\n}\n\nexport interface SpatialEntityJsonLd extends JsonLdObj {\n  '@context': string;\n  '@id': string;\n  '@type': string | string[];\n  label: string;\n  comment: string;\n  creator: string;\n  creator_first_name: string;\n  creator_last_name: string;\n  creation_date: string;\n  updated_date: string;\n  ccf_annotations: string[];\n  representation_of: string;\n  reference_organ: string;\n  extraction_set: string;\n  sex: 'Male' | 'Female' | undefined;\n  side: 'Left' | 'Right' | undefined;\n  rui_rank: number;\n  slice_thickness: number;\n  slice_count: number;\n  x_dimension: number;\n  y_dimension: number;\n  z_dimension: number;\n  dimension_units: string;\n  object: SpatialObjectReferenceJsonLd;\n  placement: SpatialPlacementJsonLd | SpatialPlacementJsonLd[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSceneNode.html":{"url":"interfaces/SpatialSceneNode.html","title":"interface - SpatialSceneNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSceneNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _lighting\n                                        \n                                \n                                \n                                        \n                                            @id\n                                        \n                                \n                                \n                                        \n                                            @type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            geometry\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reference_organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            representation_of\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scenegraphNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            transformMatrix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpickable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomBasedOpacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zoomToOnLoad\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _lighting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _lighting:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        @type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        @type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        geometry:         SpatialSceneGeometry\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpatialSceneGeometry\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reference_organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reference_organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        representation_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        representation_of:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraph:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenegraphNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scenegraphNode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transformMatrix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transformMatrix:     Matrix4\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Matrix4\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpickable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpickable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomBasedOpacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomBasedOpacity:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zoomToOnLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zoomToOnLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Matrix4 } from '@math.gl/core';\n\nexport type SpatialSceneGeometry = 'sphere' | 'cube' | 'wireframe' | 'text' | 'cone' | 'cylinder';\n\nexport interface SpatialSceneNode {\n  '@id': string;\n  '@type': string;\n  entityId?: string;\n  representation_of?: string;\n  reference_organ?: string;\n  unpickable?: boolean;\n  geometry?: SpatialSceneGeometry;\n  text?: string;\n  _lighting?: string;\n  scenegraph?: string;\n  scenegraphNode?: string;\n  zoomBasedOpacity?: boolean;\n  zoomToOnLoad?: boolean;\n  color?: [number, number, number, number];\n  opacity?: number;\n  transformMatrix: Matrix4;\n  name?: string;\n  tooltip?: string;\n  priority?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-body-ui/src/global-fixes.ts\n            \n            function\n            castToGlobalType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            class\n            BodyUILayer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            meshLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui-layer.ts\n            \n            function\n            textLayer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            class\n            BodyUI\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIProps\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            BodyUIViewStateProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/body-ui.ts\n            \n            interface\n            PickInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialEntityJsonLd\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialObjectReferenceJsonLd\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/ccf-spatial-jsonld.ts\n            \n            interface\n            SpatialPlacementJsonLd\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n            \n            interface\n            SpatialSceneNode\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            deriveScenegraph\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            loadGLTF2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/load-gltf.ts\n            \n            function\n            registerGLTFLoaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/parse-csv.ts\n            \n            function\n            parseCSVText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n            \n            function\n            processAnatomicalStructures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n            \n            function\n            processExtractionSites\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            function\n            processReferenceData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n            \n            variable\n            referenceDataConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            interface\n            ProcessedNode\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            childNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n            \n            function\n            processSceneNodes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n            \n            function\n            processSpatialEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n            \n            function\n            traverseScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n            \n            function\n            simplifyScene\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            interface\n            Collision\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n            \n            function\n            doCollisions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            castToGlobalType   (projects/.../global-fixes.ts)\n                        \n                        \n                            childNames   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            deriveScenegraph   (projects/.../load-gltf.ts)\n                        \n                        \n                            doCollisions   (projects/.../spatial-scene-collider.ts)\n                        \n                        \n                            loadGLTF   (projects/.../load-gltf.ts)\n                        \n                        \n                            loadGLTF2   (projects/.../load-gltf.ts)\n                        \n                        \n                            meshLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            parseCSV   (projects/.../parse-csv.ts)\n                        \n                        \n                            parseCSVText   (projects/.../parse-csv.ts)\n                        \n                        \n                            processAnatomicalStructures   (projects/.../process-anatomical-structures.ts)\n                        \n                        \n                            processExtractionSites   (projects/.../process-extraction-sites.ts)\n                        \n                        \n                            processReferenceData   (projects/.../process-reference-data.ts)\n                        \n                        \n                            processSceneNodes   (projects/.../process-scene-nodes.ts)\n                        \n                        \n                            processSpatialEntities   (projects/.../process-spatial-entities.ts)\n                        \n                        \n                            registerGLTFLoaders   (projects/.../load-gltf.ts)\n                        \n                        \n                            simplifyScene   (projects/.../simplify-scene.ts)\n                        \n                        \n                            textLayer   (projects/.../body-ui-layer.ts)\n                        \n                        \n                            traverseScene   (projects/.../scene-traversal.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/global-fixes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        castToGlobalType\n                        \n                    \n                \n            \n            \n                \ncastToGlobalType(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-scene-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        childNames\n                        \n                    \n                \n            \n            \n                \nchildNames(scene, names)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    names\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processSceneNodes\n                        \n                    \n                \n            \n            \n                \nprocessSceneNodes(gltfUrl, worldMatrix?, scenegraphNode?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gltfUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    scenegraphNode\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/load-gltf.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deriveScenegraph\n                        \n                    \n                \n            \n            \n                \nderiveScenegraph(scenegraphNodeName, gltf)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltf\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF\n                        \n                    \n                \n            \n            \n                \nloadGLTF(model, cache?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cache\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGLTF2\n                        \n                    \n                \n            \n            \n                \nloadGLTF2(scenegraphNodeName, gltfPromise)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenegraphNodeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfPromise\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerGLTFLoaders\n                        \n                    \n                \n            \n            \n                \nregisterGLTFLoaders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/spatial-scene-collider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        doCollisions\n                        \n                    \n                \n            \n            \n                \ndoCollisions(scene)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/body-ui-layer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        meshLayer\n                        \n                    \n                \n            \n            \n                \nmeshLayer(id, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SimpleMeshLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textLayer\n                        \n                    \n                \n            \n            \n                \ntextLayer(id, data, options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TextLayer | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/parse-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseCSV\n                        \n                    \n                \n            \n            \n                \nparseCSV(sourceUrl, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseCSVText\n                        \n                    \n                \n            \n            \n                \nparseCSVText(csvText, firstFieldName?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    csvText\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstFieldName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-anatomical-structures.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processAnatomicalStructures\n                        \n                    \n                \n            \n            \n                \nprocessAnatomicalStructures(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-extraction-sites.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processExtractionSites\n                        \n                    \n                \n            \n            \n                \nprocessExtractionSites(sourceUrl, entities)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processReferenceData\n                        \n                    \n                \n            \n            \n                \nprocessReferenceData(refEntities, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refEntities\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/process-spatial-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        processSpatialEntities\n                        \n                    \n                \n            \n            \n                \nprocessSpatialEntities(parent, gltfOverride?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    gltfOverride\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/simplify-scene.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        simplifyScene\n                        \n                    \n                \n            \n            \n                \nsimplifyScene(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        traverseScene\n                        \n                    \n                \n            \n            \n                \ntraverseScene(scene, worldMatrix, visitor)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    worldMatrix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    visitor\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NodeClickEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            NodeDragEvent   (projects/.../body-ui.ts)\n                        \n                        \n                            SceneTraversalVisitor   (projects/.../scene-traversal.ts)\n                        \n                        \n                            SpatialSceneGeometry   (projects/.../spatial-scene-node.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/body-ui.ts\n    \n    \n        \n            \n                \n                    \n                    NodeClickEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeDragEvent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/util/scene-traversal.ts\n    \n    \n        \n            \n                \n                    \n                    SceneTraversalVisitor\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-body-ui/src/lib/shared/spatial-scene-node.ts\n    \n    \n        \n            \n                \n                    \n                    SpatialSceneGeometry\n                \n            \n            \n                \n                        \"sphere\" | \"cube\" | \"wireframe\" | \"text\" | \"cone\" | \"cylinder\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            referenceDataConfig   (projects/.../process-reference-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-body-ui/src/lib/util/process-reference-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        referenceDataConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  extractionSitesUrl: 'http://localhost:8080/source_data/ASCT-B_3D_Models_Extraction_Sites.csv',\n  extractionSitesConfigUrl: 'http://localhost:8080/source_data/extraction-site-config.csv',\n  anatomicalStructuresUrl: 'http://localhost:8080/source_data/ASCT-B_3D_Models_Mapping.csv',\n  referenceOrganConfigUrl: 'http://localhost:8080/source_data/reference-organ-config.csv'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
