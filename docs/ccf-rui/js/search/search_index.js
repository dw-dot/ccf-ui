var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AnatomicalStructureTagState.html",[0,1.271,1,2.49]],["body/injectables/AnatomicalStructureTagState.html",[0,1.51,1,2.958,2,2.038,3,0.067,4,0.083,5,0.067,6,0.12,7,6.788,8,3.827,9,5.288,10,2.869,11,0.832,12,2.149,13,4.57,14,2.958,15,2.509,16,1.971,17,5.379,18,0.336,19,0.572,20,2.147,21,5.379,22,2.689,23,2.819,24,5.04,25,1.3,26,5.901,27,5.187,28,5.376,29,2.866,30,4.57,31,5.187,32,2.626,33,5.245,34,5.379,35,1.079,36,2.869,37,3.77,38,1.951,39,5.187,40,0.964,41,0.989,42,1.726,43,0.01,44,1.065,45,0.777,46,1.344,47,1.214,48,1.472,49,3.481,50,3.21,51,4.57,52,1.95,53,3.875,54,3.574,55,1.611,56,1.226,57,4.57,58,3.574,59,3.416,60,3.618,61,3.618,62,4.57,63,3.574,64,3.574,65,2.22,66,4.164,67,3.574,68,4.57,69,0.907,70,4.684,71,1.53,72,5.292,73,3.574,74,4.57,75,0.007,76,3.16,77,3.992,78,4.164,79,4.164,80,0.007,81,4.57,82,4.258,83,3.618,84,0.006,85,0.665,86,0.699,87,3.574,88,2.388,89,3.574,90,2.106,91,2.194,92,3.481,93,3.574,94,3.574,95,3.574,96,2.703,97,3.574,98,3.574,99,0.314,100,4.57,101,3.149,102,1.81,103,3.149,104,0.172,105,2.626,106,2.22,107,2.089,108,1.53,109,1.53,110,1.44,111,2.66,112,1.879,113,1.015,114,1.579,115,1.217,116,2.235,117,2.131,118,2.66,119,1.955,120,2.131,121,2.869,122,1.398,123,1.398,124,1.398,125,1.321,126,1.44,127,2.66,128,1.631,129,0.347,130,0.121,131,2.66,132,1.484,133,0.118,134,1.377,135,3.149,136,3.149,137,3.149,138,3.618,139,1.251,140,3.663,141,0.916,142,0.94,143,4.411,144,3.149,145,2.869,146,3.149,147,3.149,148,3.149,149,3.639,150,3.149,151,3.149,152,3.149,153,3.149,154,3.149,155,2.698,156,2.089,157,3.149,158,2.354,159,4.57,160,1.067,161,0.54,162,1.53,163,1.631,164,2.354,165,2.038,166,2.354,167,2.354,168,2.235,169,2.354,170,2.354,171,3.149,172,3.149,173,2.235,174,2.235,175,3.149,176,3.149,177,2.493,178,4.57,179,4.57,180,4.57,181,3.416,182,1.814,183,4.57,184,2.493,185,2.493,186,3.149,187,3.149,188,1.154,189,2.354,190,3.149,191,3.149,192,3.149,193,3.149,194,3.149]],["title/interfaces/AnatomicalStructureTagStateModel.html",[129,0.292,131,3.249]],["body/interfaces/AnatomicalStructureTagStateModel.html",[0,1.763,1,2.541,3,0.083,4,0.104,5,0.083,6,0.063,7,3.577,8,2.945,9,2.786,10,3.577,11,0.554,12,2.134,13,3.926,14,2.541,15,2.497,16,1.694,17,5.336,20,1.995,21,3.926,22,2.699,23,2.615,24,4.531,26,3.926,28,3.577,29,1.907,33,5.182,34,3.926,35,1.07,37,3.642,40,0.828,41,0.85,43,0.01,44,0.62,45,0.722,47,1.098,48,1.265,49,3.453,50,3.184,51,3.926,53,3.738,55,0.916,56,1.166,57,3.926,59,2.935,60,3.108,61,3.108,62,3.926,65,1.907,66,3.577,68,3.926,69,0.82,70,4.531,71,1.117,72,5.493,74,3.926,75,0.007,76,2.857,77,3.61,78,3.577,79,3.577,80,0.007,81,3.926,82,4.224,83,3.108,84,0.006,88,2.369,90,1.904,91,2.176,92,3.453,96,2.615,99,0.327,100,5.336,101,3.926,102,2.256,103,3.926,104,0.214,105,3.067,106,2.592,107,2.439,108,1.907,109,1.907,110,1.795,111,3.316,112,2.343,113,1.265,114,1.968,115,1.517,116,2.786,117,2.656,118,3.316,119,2.437,120,2.656,121,3.577,122,1.743,123,1.743,124,1.743,125,1.647,126,1.795,127,3.316,128,2.033,129,0.406,130,0.141,131,4.507,132,1.85,133,0.147,134,1.517,135,3.926,136,3.926,137,3.926,138,4.224,139,1.332,140,4.037,141,1.07,142,1.098,143,4.861,144,3.926,145,3.577,146,3.926,147,3.926,148,3.926,149,4.101,150,3.926,151,3.926,152,3.926,153,3.926,154,3.926,155,2.973,156,2.439,157,3.926,158,2.935,159,5.336,160,1.176,161,0.673,162,1.907,163,2.033,164,2.935,165,2.541,166,2.935,167,2.935,168,2.786,169,2.935,170,2.935,171,3.926,172,3.926,173,2.786,174,2.786,175,3.926,176,3.926,177,3.108,178,5.336,179,5.336,180,5.336,181,3.989,182,2.118,183,5.336,184,3.108,185,3.108,186,3.926,187,3.926,188,1.438,189,2.935,190,3.926,191,3.926,192,3.926,193,3.926,194,3.926,195,1.173]],["title/components/AppComponent.html",[196,0.424,197,1.179]],["body/components/AppComponent.html",[3,0.049,4,0.061,5,0.077,6,0.12,11,0.772,12,0.977,16,0.995,18,0.537,19,0.452,20,1.432,22,1.358,23,1.92,25,1.027,32,2.075,35,0.724,37,3.361,38,1.965,42,1.444,43,0.01,44,0.992,45,0.597,46,1.125,52,1.193,55,1.276,56,1.132,69,1.078,75,0.004,80,0.003,84,0.003,85,1.42,86,1.465,88,2.236,91,2.055,99,0.277,104,0.126,112,1.376,113,0.743,129,0.275,130,0.096,133,0.086,134,0.842,139,0.826,141,1.01,142,0.743,160,0.653,161,1.287,182,1.433,188,1.323,196,0.603,197,1.543,198,1.027,199,0.743,200,0.823,201,0.823,202,0.802,203,1.947,204,2.443,205,1.651,206,2.468,207,3.327,208,0.706,209,1.224,210,1.224,211,2.211,212,1.099,213,1.235,214,1.106,215,4.056,216,1.106,217,3.29,218,4.056,219,3.264,220,4.533,221,4.533,222,3.764,223,3.524,224,3.575,225,4.303,226,4.355,227,4.056,228,3.611,229,4.099,230,2.792,231,3.765,232,4.589,233,3.29,234,3.611,235,4.099,236,4.056,237,2.101,238,5.524,239,4.589,240,4.589,241,3.524,242,3.408,243,3.76,244,3.26,245,2.231,246,2.303,247,2.763,248,3.127,249,4.099,250,2.859,251,3.327,252,2.306,253,3.765,254,4.099,255,4.983,256,1.704,257,2.34,258,2.232,259,1.708,260,1.785,261,4.9,262,3.754,263,2.733,264,2.617,265,4.589,266,4.099,267,4.056,268,4.056,269,3.327,270,4.056,271,3.76,272,3.05,273,3.05,274,3.29,275,3.29,276,2.617,277,2.443,278,1.514,279,2.617,280,2.617,281,2.337,282,3.29,283,2.443,284,4.255,285,4.056,286,3.765,287,2.164,288,2.617,289,3.29,290,2.617,291,2.617,292,3.29,293,2.617,294,2.617,295,3.29,296,2.617,297,1.635,298,2.617,299,2.294,300,1.835,301,2.763,302,2.617,303,2.337,304,2.075,305,2.617,306,2.859,307,2.155,308,1.09,309,1.235,310,3.127,311,3.159,312,2.563,313,2.232,314,2.617,315,3.29,316,2.617,317,3.29,318,2.617,319,2.617,320,2.617,321,0.782,322,1.723,323,1.947,324,1.723,325,2.101,326,0.762,327,1.947,328,2.101,329,1.947,330,1.947,331,1.56,332,1.492,333,0.891,334,1.376,335,1.376,336,1.825,337,0.842,338,2.101,339,2.101,340,3.29,341,2.101,342,2.101,343,2.101,344,2.101,345,3.29,346,2.101,347,1.947,348,2.101,349,2.101,350,1.636,351,2.101,352,2.101,353,1.431,354,2.101,355,2.101,356,2.101,357,1.56,358,2.101,359,0.782,360,2.101,361,2.101,362,2.859,363,2.101,364,2.101,365,2.101,366,2.101,367,2.101,368,2.101,369,5.719,370,2.101,371,4.056,372,2.101,373,5.524,374,2.101,375,1.947,376,2.101,377,5.122,378,1.376,379,2.101,380,3.462,381,2.101,382,2.171,383,3.29,384,3.924,385,1.825,386,2.101,387,1.558,388,3.29,389,1.492,390,1.701,391,3.29,392,2.101,393,1.947,394,2.101,395,1.636,396,4.099,397,5.717,398,5.037,399,0.915,400,1.676,401,2.733,402,2.563,403,2.563,404,2.822,405,1.816,406,1.492,407,2.337,408,1.194,409,1.053,410,2.075,411,2.656,412,2.617,413,1.278,414,1.224,415,2.617,416,2.657,417,2.443,418,2.742,419,2.859,420,2.617,421,2.857,422,5.052,423,2.859,424,1.053,425,2.242,426,2.306,427,2.162,428,2.242,429,1.163,430,2.699,431,1.934,432,1.56,433,2.443,434,2.162,435,1.235,436,1.754,437,1.754,438,3.29,439,2.101,440,2.101,441,1.194,442,2.656,443,2.617,444,1.194,445,1.054,446,2.699,447,1.825,448,2.384,449,3.006,450,0.885,451,2.468,452,4.099,453,0.885,454,1.825,455,2.617,456,2.617,457,1.505,458,1.825,459,3.327,460,4.099,461,2.558,462,2.617,463,2.617,464,1.325,465,2.101,466,1.024,467,1.825,468,0.823,469,1.027,470,0.823,471,1.798,472,0.823,473,0.823,474,0.743,475,0.823,476,0.724,477,1.589,478,0.743,479,0.823,480,1.106,481,1.589,482,0.743,483,0.782,484,0.823,485,0.743,486,0.823,487,0.743,488,0.706,489,0.823,490,0.743,491,0.823,492,0.743,493,0.743,494,0.823,495,0.743,496,0.802,497,0.724,498,0.823,499,0.743,500,1.289,501,0.724,502,0.743,503,0.743,504,1.589,505,0.743,506,1.193,507,1.289,508,0.724,509,0.743,510,0.724,511,0.609,512,0.823,513,0.724,514,0.706,515,0.743,516,0.823,517,0.743,518,0.823,519,0.743,520,0.823,521,0.743,522,1.027,523,0.743,524,1.163,525,0.743,526,0.823,527,0.743,528,1.079,529,0.823,530,0.743,531,0.823,532,0.823]],["title/modules/AppModule.html",[533,1.271,534,3.249]],["body/modules/AppModule.html",[3,0.098,4,0.122,5,0.098,6,0.095,25,1.309,37,3.708,38,1.215,43,0.01,55,1.074,56,1.016,75,0.007,80,0.006,84,0.006,99,0.342,104,0.251,130,0.122,133,0.172,139,0.854,161,0.789,197,2.317,204,3.114,205,2.104,212,0.649,226,2.979,284,3.888,287,1.643,297,1.376,323,3.888,324,3.441,326,1.521,330,3.888,424,1.342,474,2.436,534,6.783,535,1.483,536,1.959,537,4.603,538,4.603,539,4.603,540,5.808,541,5.808,542,5.808,543,5.808,544,5.808,545,5.808,546,5.808,547,2.116,548,1.483,549,5.224,550,2.29,551,6.728,552,2.172,553,7.443,554,5.224,555,6.728,556,2.062,557,5.224,558,4.603,559,6.728,560,4.603,561,2.857,562,2.793,563,2.043,564,6.728,565,5.928,566,4.431,567,3.267,568,5.401,569,4.194,570,5.928,571,6.728,572,3.644,573,5.224,574,5.224,575,5.224,576,5.007,577,5.224,578,5.224,579,5.224,580,3.888,581,6.728,582,5.224,583,4.431,584,4.603,585,5.224,586,3.888,587,5.224,588,3.441,589,5.007,590,5.401,591,3.644,592,4.194,593,4.603,594,5.224,595,5.224,596,2.104,597,6.728,598,5.224,599,4.603,600,5.224,601,3.888]],["title/interfaces/AppOptions.html",[129,0.292,336,3.045]],["body/interfaces/AppOptions.html",[3,0.078,4,0.097,5,0.078,6,0.059,16,2.195,18,0.39,19,0.637,20,1.447,22,1.378,23,1.58,35,0.735,37,3.382,43,0.01,45,0.65,46,1.478,56,1.138,69,1.19,75,0.006,80,0.004,84,0.004,85,0.773,88,2.259,91,2.075,99,0.313,104,0.2,112,2.186,113,1.18,129,0.387,130,0.135,133,0.137,134,1.187,139,1.085,141,1.02,142,0.754,160,0.92,161,1.29,182,1.454,195,1.095,196,0.644,197,1.122,203,3.094,204,2.479,205,1.675,206,2.82,207,3.803,209,1.242,210,1.242,211,1.662,212,0.825,213,1.016,214,1.122,215,3.337,216,1.122,217,3.337,218,3.337,219,3.96,220,5.134,221,5.134,222,3.158,223,2.9,224,3.611,225,4.148,226,4.78,227,3.337,230,2.031,231,2.738,232,3.337,236,3.337,238,5.326,239,4.635,240,4.635,241,2.9,242,3.442,243,3.094,244,3.293,245,2.576,246,2.326,247,2.274,248,3.158,251,2.738,253,2.738,255,4.635,256,1.543,257,2.033,258,1.836,259,1.725,260,1.447,261,4.297,262,3.293,263,2.397,265,3.337,267,3.337,268,3.337,269,2.738,270,3.337,271,3.094,272,3.094,273,3.094,274,3.337,275,3.337,277,2.479,278,1.536,281,2.371,282,3.337,283,2.479,284,4.937,285,4.635,286,4.369,287,2.254,289,3.337,292,3.337,295,3.337,297,1.747,299,2.134,300,1.042,301,3.158,303,2.371,304,2.105,306,2.9,307,2.186,308,0.793,309,1.016,310,2.274,311,3.611,312,2.6,313,1.836,315,3.337,317,3.337,321,1.242,322,2.738,323,3.094,324,2.738,325,3.337,326,1.21,327,3.094,328,3.337,329,3.094,330,3.094,331,2.479,332,2.371,333,1.415,334,2.186,335,2.186,336,4.028,337,1.473,338,3.337,339,3.337,340,4.635,341,3.337,342,3.337,343,3.337,344,3.337,345,4.635,346,3.337,347,3.094,348,3.337,349,3.337,350,2.6,351,3.337,352,3.337,353,2.274,354,3.337,355,3.337,356,3.337,357,2.479,358,3.337,359,1.242,360,3.337,361,3.337,362,2.9,363,3.337,364,3.337,365,3.337,366,3.337,367,3.337,368,3.337,369,6.544,370,3.337,371,5.326,372,3.337,373,6.418,374,3.337,375,3.094,376,3.337,377,5.95,378,2.186,379,3.337,380,4.099,381,3.337,382,2.019,383,4.635,384,4.559,385,2.9,386,3.337,387,2.195,388,4.635,389,2.371,390,2.397,391,4.635,392,3.337,393,3.094,394,3.337,395,2.6]],["title/components/AppWebComponent.html",[196,0.424,474,1.239]],["body/components/AppWebComponent.html",[3,0.076,4,0.095,5,0.106,6,0.124,12,1.351,16,2.153,18,0.38,19,0.625,35,1.001,38,2.018,42,0.941,43,0.01,44,0.986,45,0.804,46,0.733,56,0.856,69,1.219,75,0.006,80,0.004,82,3.952,84,0.004,99,0.3,104,0.194,113,1.149,130,0.181,133,0.133,139,0.662,142,0.733,196,0.635,197,1.092,198,1.638,199,1.608,201,1.272,202,1.24,208,1.092,209,1.692,210,1.692,211,2.27,212,1.13,213,1.598,219,3.724,220,4.306,221,4.306,226,3.729,245,1.454,246,2.854,247,3.875,248,3.875,256,0.941,259,2.576,260,1.42,299,2.932,300,1.638,308,1.08,309,0.989,321,1.208,326,1.178,329,3.011,333,2.701,337,1.664,359,1.208,409,1.039,450,0.874,453,0.874,457,1.065,468,1.272,469,1.42,470,1.272,471,2.228,472,1.272,473,1.272,474,2.011,475,1.272,476,1.12,477,2.056,478,1.149,479,1.272,480,1.53,481,2.056,482,1.149,483,1.208,484,1.272,485,1.149,486,1.272,487,1.149,488,1.092,489,1.272,490,1.149,491,1.272,492,1.149,493,1.149,494,1.272,495,1.149,496,1.24,497,1.12,498,1.272,499,1.149,500,1.782,501,1.12,502,1.149,503,1.149,504,2.056,505,1.149,506,1.65,507,1.782,508,1.12,509,1.149,510,1.12,511,0.941,512,1.272,513,1.12,514,1.092,515,1.149,516,1.272,517,1.149,518,1.272,519,1.149,520,1.272,521,1.149,522,1.42,523,1.149,524,1.608,525,1.149,526,1.272,527,1.149,528,1.492,529,1.272,530,1.149,531,1.272,532,1.272,572,6.083,602,7.001,603,3.248,604,6.539,605,5.666,606,3.898,607,2.282,608,4.088,609,4.666,610,5.687,611,6.241,612,3.129,613,6.241,614,5.272,615,4.046,616,5.666,617,5.666,618,4.046,619,4.561,620,4.046,621,4.306,622,4.046,623,5.761,624,4.046,625,4.046,626,4.046,627,4.046,628,4.046,629,4.866,630,4.046,631,4.046,632,4.046,633,4.046,634,4.046,635,1.976,636,2.049,637,5.666,638,4.046,639,2.049,640,2.049,641,4.992,642,1.732,643,4.046,644,4.046,645,4.046,646,3.248,647,4.046,648,4.046,649,4.046,650,4.046,651,4.046,652,6.539,653,6.539,654,6.539]],["title/interfaces/BlockSize.html",[129,0.292,655,2.388]],["body/interfaces/BlockSize.html",[3,0.099,4,0.124,5,0.099,6,0.075,11,0.658,18,0.497,19,0.748,40,0.984,41,1.009,43,0.01,44,0.944,45,0.679,47,0.959,56,1.025,69,0.716,71,2.177,75,0.007,80,0.006,84,0.006,86,1.035,99,0.257,104,0.254,129,0.502,130,0.158,132,2.197,133,0.223,139,1.109,141,1.199,160,1.193,161,1.131,182,1.85,195,1.394,196,0.767,209,1.581,210,1.581,211,1.326,212,0.843,214,1.429,216,1.429,256,2.101,259,2.57,260,1.326,321,1.581,382,2.855,387,3.104,390,3.389,404,2.507,409,2.21,414,2.026,469,1.326,476,1.465,596,2.132,655,4.32,656,3.691,657,3.485,658,3.155,659,5.049,660,3.435,661,4.464,662,4.504,663,5.978,664,2.816,665,1.502,666,2.816,667,2.654,668,2.011,669,1.955,670,2.507,671,3.939,672,5.573,673,4.504,674,3.939,675,3.485,676,3.485,677,1.502,678,1.664,679,3.278,680,3.939,681,3.485,682,4.663,683,2.654,684,2.265,685,4.242,686,3.155,687,3.858,688,3.939,689,3.485,690,4.663,691,3.691,692,3.485,693,3.309,694,6.598,695,3.939,696,4.663,697,5.978,698,4.663,699,5.978,700,3.939,701,4.663,702,4.663]],["title/components/BlockSizeInputComponent.html",[196,0.424,476,1.209]],["body/components/BlockSizeInputComponent.html",[3,0.069,4,0.086,5,0.099,6,0.112,11,0.771,12,1.263,18,0.345,19,0.584,25,1.327,35,0.65,38,1.796,40,0.985,41,1.01,42,1.232,43,0.01,44,1.137,45,0.68,46,0.96,47,0.96,52,1.071,55,1.089,56,1.025,69,0.919,71,1.555,75,0.006,76,1.736,80,0.004,84,0.004,85,1.154,86,1.406,99,0.2,104,0.177,129,0.355,130,0.124,132,1.527,133,0.247,139,0.866,141,1.096,142,0.667,160,0.988,161,1.086,182,1.852,188,1.709,196,0.749,197,0.993,198,1.327,199,1.044,200,1.157,201,1.157,202,1.127,208,0.993,209,1.582,210,1.582,211,2.254,212,1.124,213,0.899,214,1.43,216,1.43,219,1.934,256,2.078,259,2.584,260,1.701,300,1.555,308,1.01,309,0.899,321,1.099,382,2.373,387,2.58,390,2.817,399,1.286,400,1.43,401,2.576,404,2.508,408,1.679,409,2.317,414,2.027,421,1.527,427,1.575,434,2.267,436,1.575,437,1.575,444,2.416,445,1.482,448,1.736,450,0.795,451,1.797,453,1.144,454,2.566,457,0.969,461,1.863,468,1.157,469,1.802,470,1.157,471,2.134,472,1.157,473,1.157,474,1.044,475,1.157,476,1.879,477,1.951,478,1.044,479,1.157,480,1.43,481,1.951,482,1.044,483,1.099,484,1.157,485,1.044,486,1.157,487,1.044,488,0.993,489,1.157,490,1.044,491,1.157,492,1.044,493,1.044,494,1.157,495,1.044,496,1.127,497,1.018,498,1.157,499,1.044,500,1.665,501,1.018,502,1.044,503,1.044,504,1.951,505,1.044,506,1.542,507,1.665,508,1.018,509,1.044,510,1.018,511,0.856,512,1.157,513,1.018,514,0.993,515,1.044,516,1.157,517,1.044,518,1.157,519,1.044,520,1.157,521,1.044,522,1.327,523,1.044,524,1.503,525,1.044,526,1.157,527,1.044,528,1.395,529,1.157,530,1.044,531,1.157,532,1.157,561,2.012,592,2.953,596,1.482,607,2.5,655,4.097,656,5.51,657,5.203,658,2.193,659,2.738,660,1.863,661,4.288,662,4.402,663,5.467,664,2.576,665,1.044,666,2.198,667,2.655,668,1.398,669,1.359,670,2.293,671,2.738,672,5.052,673,4.102,674,3.941,675,3.488,676,4.087,677,1.503,678,1.951,679,3.279,680,3.941,681,3.488,682,5.467,683,2.427,684,2.267,685,4.498,686,3.157,687,3.659,688,3.941,689,3.488,690,4.666,691,2.566,692,2.423,693,2.3,694,5.467,695,2.738,696,3.242,697,4.666,698,3.242,699,4.666,700,3.941,701,5.98,702,3.242,703,5.296,704,2.587,705,1.755,706,1.934,707,5.296,708,3.242,709,4.666,710,3.679,711,3.242,712,4.251,713,4.087,714,3.242,715,2.566,716,3.242,717,2.3,718,2.012,719,2.566,720,2.193,721,2.566,722,1.934,723,2.566,724,3.242,725,2.953,726,2.566,727,2.3,728,2.423,729,2.423]],["title/modules/BlockSizeInputModule.html",[533,1.271,730,3.045]],["body/modules/BlockSizeInputModule.html",[3,0.12,4,0.149,5,0.12,6,0.091,43,0.01,75,0.008,80,0.007,84,0.007,99,0.335,104,0.307,130,0.149,133,0.21,256,1.486,409,2.093,424,1.641,476,2.515,535,1.813,536,2.219,547,2.397,548,1.813,550,2.594,552,2.062,556,2.336,562,3.164,563,2.499,656,4.456,657,4.207,730,6.168,731,5.628,732,5.628,733,5.628,734,5.128,735,2.594,736,2.739,737,2.174,738,5.673,739,4.754,740,5.317,741,4.456,742,4.169,743,3.494,744,5.128]],["title/modules/ConfigModule.html",[533,1.271,745,3.045]],["body/modules/ConfigModule.html",[3,0.128,4,0.159,5,0.128,6,0.097,43,0.01,75,0.008,80,0.007,84,0.007,99,0.317,104,0.328,130,0.159,133,0.225,212,0.848,326,1.987,535,1.938,556,2.429,588,4.496,589,5.08,745,5.529,746,6.826,747,5.529,748,5.899,749,6.363,750,3.893,751,6.826,752,6.826]],["title/components/ContainerComponent.html",[196,0.424,478,1.239]],["body/components/ContainerComponent.html",[3,0.062,4,0.078,5,0.092,6,0.119,11,0.727,12,1.172,18,0.461,19,0.542,20,2.192,25,1.232,32,2.489,35,0.587,38,1.942,40,0.914,41,0.937,42,1.144,43,0.01,44,0.961,45,0.724,46,0.891,47,0.891,48,1.396,52,1.883,55,1.537,56,0.977,61,2.317,69,0.45,71,1.232,75,0.005,80,0.004,84,0.004,85,1.088,86,1.144,90,1.546,99,0.273,104,0.16,113,0.943,115,1.131,130,0.078,133,0.238,134,1.329,139,1.057,141,1.034,142,0.602,160,1.03,161,0.884,188,1.889,196,0.785,197,0.897,198,1.811,199,0.943,200,1.045,201,1.045,202,1.018,205,1.98,206,2.858,208,0.897,209,1.468,210,1.468,211,2.235,212,1.116,213,0.812,214,1.327,216,1.327,225,4.676,230,3.159,247,3.537,248,3.537,256,1.144,257,2.115,258,2.857,260,1.232,263,3,277,2.931,278,2.39,297,1.969,300,2.123,308,0.937,309,0.812,311,3.659,312,3.074,313,3.717,321,0.992,337,1.329,357,1.981,382,1.162,395,2.077,399,1.162,400,0.897,406,2.803,407,1.894,409,0.853,416,3.601,417,1.981,429,0.943,450,0.718,453,0.718,457,0.875,466,1.923,468,1.045,469,1.73,470,1.045,471,2.034,472,1.045,473,1.045,474,0.943,475,1.045,476,0.92,477,1.84,478,1.836,479,1.045,480,1.864,481,1.84,482,0.943,483,0.992,484,1.045,485,1.836,486,1.045,487,0.943,488,0.897,489,1.045,490,0.943,491,1.045,492,0.943,493,0.943,494,1.045,495,0.943,496,1.018,497,0.92,498,1.045,499,0.943,500,1.546,501,0.92,502,0.943,503,0.943,504,1.84,505,0.943,506,1.431,507,1.546,508,0.92,509,0.943,510,0.92,511,0.773,512,1.045,513,0.92,514,0.897,515,0.943,516,1.045,517,0.943,518,1.045,519,0.943,520,1.045,521,0.943,522,1.232,523,0.943,524,1.396,525,0.943,526,1.045,527,0.943,528,1.294,529,1.045,530,0.943,531,1.045,532,1.045,588,3.238,660,1.682,665,0.943,677,1.396,705,1.629,753,2.667,754,2.931,755,4.697,756,4.331,757,4.916,758,3.392,759,5.852,760,4.916,761,3.15,762,4.355,763,5.852,764,5.852,765,4.756,766,3.946,767,5.192,768,6.467,769,5.852,770,3.946,771,4.916,772,2.585,773,3.372,774,3.238,775,4.916,776,4.916,777,3.303,778,3.322,779,4.331,780,4.916,781,3.238,782,3.659,783,3.659,784,3.322,785,2.171,786,4.916,787,4.916,788,3.322,789,3.322,790,4.916,791,4.916,792,2.858,793,3.322,794,3.238,795,7.479,796,4.916,797,6.467,798,3.322,799,5.192,800,3.946,801,6.467,802,4.916,803,3.322,804,3.946,805,4.331,806,4.916,807,3.322,808,3.322,809,3.322,810,4.331,811,3.322,812,3.322,813,1.232,814,3.322,815,3.322,816,2.667,817,2.667,818,2.472,819,2.188,820,2.317,821,2.927,822,3.946,823,3.322,824,2.927,825,3.322,826,2.927,827,3.854,828,3.854,829,2.927,830,2.927,831,3.322,832,3.322,833,3.322,834,3.322,835,2.188,836,2.667,837,2.927,838,2.472,839,3.322,840,3.322,841,4.331,842,2.077,843,2.689,844,4.331,845,3.322,846,3.322,847,3.322,848,1.816,849,3.322,850,3.322,851,4.916,852,4.916,853,3.322,854,3.322,855,3.322,856,3.322,857,3.322,858,3.322,859,3.322,860,2.472,861,3.322,862,3.322]],["title/components/ContentComponent.html",[196,0.424,480,1.179]],["body/components/ContentComponent.html",[3,0.055,4,0.069,5,0.084,6,0.118,11,0.677,12,1.072,15,2.255,18,0.512,19,0.496,20,1.644,22,2.174,23,2.627,24,3.589,25,1.127,35,0.795,38,1.917,40,0.836,41,0.857,42,1.268,43,0.01,44,1.057,45,0.724,46,0.988,52,0.859,55,1.348,56,1.044,69,0.399,71,1.127,75,0.005,80,0.003,84,0.003,85,1.377,86,1.449,88,2.384,91,2.19,92,3.475,99,0.287,104,0.142,114,1.303,115,1.004,130,0.069,133,0.227,139,0.891,141,0.521,142,0.988,160,1.045,161,1.272,188,0.952,196,0.764,197,0.797,198,1.127,199,0.838,200,0.928,201,0.928,202,0.904,205,1.811,206,2.661,207,3.589,208,0.797,209,1.343,210,1.343,211,2.21,212,1.108,213,1.332,214,1.214,216,1.214,230,2.661,231,4.013,237,2.369,244,3.475,247,3.333,248,3.333,256,1.268,257,2.476,258,1.986,260,1.644,263,1.225,278,1.662,283,1.759,287,1.916,297,0.777,300,1.365,308,1.447,309,0.721,321,0.881,324,1.943,331,1.759,332,1.683,337,0.924,377,4.882,378,1.551,380,3.204,382,2.792,384,3.475,387,2.943,390,3.214,393,2.196,399,1.032,400,1.771,401,2.529,404,2.013,405,1.616,406,1.683,407,2.564,409,0.758,410,1.494,411,1.551,414,1.959,416,3.58,418,2.407,421,1.867,427,1.263,429,1.277,433,2.681,434,1.263,435,1.392,436,1.263,437,1.263,447,2.058,449,1.551,450,1.177,453,0.971,457,0.777,459,1.943,461,3.086,464,1.494,468,0.928,469,1.644,470,0.928,471,1.916,472,0.928,473,0.928,474,0.838,475,0.928,476,0.817,477,1.713,478,0.838,479,0.928,480,1.771,481,1.713,482,0.838,483,0.881,484,0.928,485,0.838,486,0.928,487,0.838,488,0.797,489,0.928,490,0.838,491,0.928,492,0.838,493,0.838,494,0.928,495,0.838,496,0.904,497,0.817,498,0.928,499,0.838,500,1.414,501,0.817,502,0.838,503,0.838,504,1.713,505,0.838,506,1.309,507,1.414,508,0.817,509,0.838,510,0.817,511,0.686,512,0.928,513,0.817,514,0.797,515,0.838,516,0.928,517,0.838,518,0.928,519,0.838,520,0.928,521,0.838,522,1.127,523,0.838,524,1.277,525,0.838,526,0.928,527,0.838,528,1.184,529,0.928,530,0.838,531,0.928,532,0.928,548,1.277,612,2.407,635,2.196,636,2.277,639,1.494,640,1.494,665,0.838,673,1.683,677,1.277,678,1.713,705,1.49,713,2.962,720,1.759,721,2.058,722,1.551,754,3.248,774,2.962,781,2.962,785,2.407,813,1.527,863,2.6,864,4.374,865,3.962,866,5.449,867,5.449,868,6.094,869,6.094,870,6.912,871,5.449,872,4.497,873,5.449,874,4.497,875,3.204,876,6.094,877,4.497,878,4.497,879,4.497,880,2.951,881,5.449,882,2.951,883,2.951,884,2.951,885,6.56,886,2.951,887,2.951,888,1.683,889,2.951,890,2.951,891,2.196,892,2.951,893,2.951,894,3.81,895,3.321,896,1.845,897,4.497,898,4.497,899,4.497,900,4.497,901,6.912,902,4.285,903,4.497,904,4.497,905,4.497,906,4.497,907,4.497,908,4.497,909,2.951,910,2.951,911,3.61,912,4.497,913,6.56,914,3.962,915,3.962,916,4.497,917,4.497,918,2.951,919,2.951,920,5.449,921,3.962,922,4.497,923,4.497,924,4.497,925,4.497,926,4.497,927,4.497,928,2.951,929,5.449,930,2.812,931,2.951,932,2.812,933,4.497,934,2.6,935,2.6,936,2.951,937,2.369,938,2.951,939,2.951,940,2.951,941,3.61,942,3.137,943,1.943,944,2.058,945,1.943,946,1.943,947,1.943,948,2.369,949,1.943,950,4.497,951,6.094,952,6.094,953,3.347,954,1.759,955,3.347,956,4.497,957,4.497,958,4.497,959,4.497,960,3.086,961,2.812,962,2.962,963,1.845,964,1.943,965,1.867,966,2.951,967,3.347,968,2.058,969,1.958,970,2.951,971,2.951,972,1.759,973,2.951,974,2.6,975,2.196,976,2.058,977,2.951]],["title/components/ContentComponent-1.html",[188,1.175,196,0.353,480,0.982]],["body/components/ContentComponent-1.html",[3,0.058,4,0.072,5,0.087,6,0.12,11,0.774,12,1.108,15,1.628,18,0.436,19,0.512,20,2.081,25,1.164,35,0.544,38,1.96,40,0.864,41,0.886,42,1.301,43,0.01,44,0.978,45,0.731,46,1.014,47,0.842,48,1.319,52,1.946,55,1.374,56,1.061,69,0.417,71,1.962,75,0.005,80,0.003,84,0.003,85,1.516,86,1.576,90,1.461,99,0.253,104,0.148,113,0.874,130,0.072,133,0.231,134,1.28,139,1.193,141,0.821,142,0.558,160,1.162,161,0.845,165,2.649,188,1.499,196,0.746,197,0.831,198,1.164,199,1.319,200,0.968,201,0.968,202,0.944,205,1.871,206,2.732,208,0.831,209,1.387,210,1.387,211,2.219,212,1.109,213,0.753,214,1.254,225,4.561,230,3.042,247,3.407,248,3.407,256,0.716,257,1.909,258,2.751,260,1.164,263,2.917,277,2.769,278,1.716,287,2.294,297,1.921,300,2.172,308,0.886,309,0.753,311,3.497,312,2.905,321,0.92,337,1.499,357,1.836,362,2.148,378,1.619,380,2.941,382,1.077,395,1.926,399,1.077,400,0.831,401,1.928,402,1.926,403,1.926,404,1.138,405,1.107,406,1.756,409,1.973,414,2.295,416,3.627,421,1.928,423,2.148,424,0.791,429,2.071,434,1.988,435,1.453,450,1.576,453,1.576,457,0.811,465,2.472,466,1.205,467,2.148,468,0.968,469,1.675,470,0.968,471,1.959,472,0.968,473,0.968,474,0.874,475,0.968,476,0.853,477,1.759,478,0.874,479,0.968,480,1.805,481,1.759,482,0.874,483,0.92,484,0.968,485,1.897,486,0.968,487,0.874,488,0.831,489,0.968,490,0.874,491,0.968,492,0.874,493,0.874,494,0.968,495,0.874,496,0.944,497,0.853,498,0.968,499,0.874,500,1.461,501,0.853,502,0.874,503,0.874,504,1.759,505,0.874,506,1.353,507,1.461,508,0.853,509,0.874,510,0.853,511,0.716,512,0.968,513,0.853,514,0.831,515,0.874,516,0.968,517,0.874,518,0.968,519,0.874,520,0.968,521,0.874,522,1.164,523,0.874,524,1.319,525,0.874,526,0.968,527,0.874,528,1.223,529,0.968,530,0.874,531,0.968,532,0.968,606,1.836,665,0.874,677,1.319,684,2.666,705,1.539,758,3.104,762,4.163,765,3.985,766,3.729,770,3.729,772,2.442,773,3.042,774,3.059,777,3.104,781,3.059,782,3.457,783,3.457,805,4.093,813,1.881,818,2.292,827,4.804,828,4.628,838,2.292,842,1.926,843,1.684,864,4.49,964,2.028,965,1.928,969,3.104,978,2.714,979,4.645,980,7.008,981,5.593,982,6.684,983,5.593,984,5.593,985,6.229,986,4.645,987,4.645,988,4.645,989,6.229,990,6.229,991,6.229,992,4.645,993,3.059,994,4.645,995,5.593,996,4.645,997,4.645,998,5.593,999,4.645,1000,4.645,1001,3.729,1002,3.08,1003,3.729,1004,3.729,1005,3.08,1006,3.08,1007,4.093,1008,3.729,1009,4.645,1010,4.973,1011,3.08,1012,4.645,1013,3.08,1014,3.24,1015,2.052,1016,4.645,1017,6.229,1018,2.292,1019,4.163,1020,2.472,1021,2.472,1022,3.08,1023,3.08,1024,3.08,1025,3.08,1026,3.08,1027,3.08,1028,3.08,1029,2.472,1030,4.645,1031,3.08,1032,4.645,1033,3.08,1034,1.684,1035,2.028,1036,3.08,1037,3.08,1038,3.08,1039,5.593,1040,3.08,1041,3.08,1042,4.645,1043,3.08,1044,3.08,1045,4.645,1046,3.08,1047,3.08,1048,3.08,1049,3.08,1050,2.714]],["title/interfaces/ContentContainerChanged.html",[129,0.292,1051,2.73]],["body/interfaces/ContentContainerChanged.html",[3,0.1,4,0.124,5,0.1,6,0.076,11,0.662,15,1.55,18,0.5,19,0.751,43,0.01,45,0.828,47,1.235,48,1.511,71,1.706,75,0.007,80,0.006,84,0.006,90,2.361,99,0.201,122,2.083,123,2.083,124,2.083,125,1.967,126,2.145,129,0.53,130,0.206,133,0.175,139,0.871,141,1.203,182,2.768,195,1.402,196,0.794,198,1.706,222,2.912,300,2.234,313,3.008,337,1.4,414,2.034,416,3.724,425,3.725,431,2.512,522,1.334,606,3.174,642,3.214,679,2.21,758,3.317,761,2.429,765,4.06,772,2.799,773,3.327,777,3.939,792,3.327,813,1.706,842,3.329,843,3.725,848,1.967,969,2.448,1010,4.259,1014,3.714,1034,2.912,1051,4.696,1052,3.329,1053,4.772,1054,4.75,1055,4.75,1056,4.946,1057,3.714,1058,4.259,1059,3.714,1060,4.514,1061,4.259,1062,4.75,1063,3.962,1064,3.962,1065,4.259,1066,4.259,1067,3.962,1068,3.714,1069,4.75,1070,3.714,1071,3.714,1072,4.107,1073,3.329,1074,3.329]],["title/modules/ContentModule.html",[533,1.271,540,3.045]],["body/modules/ContentModule.html",[3,0.116,4,0.145,5,0.116,6,0.088,43,0.01,75,0.008,80,0.007,84,0.007,99,0.335,104,0.297,130,0.145,133,0.204,212,0.77,309,1.829,326,1.803,424,1.591,457,1.631,480,2.444,524,1.758,535,1.758,536,2.178,540,6.29,547,2.353,548,1.758,550,2.547,552,2.415,556,2.293,562,3.106,563,2.423,735,2.547,736,2.689,737,2.108,740,5.219,741,4.32,817,4.971,1075,5.457,1076,5.457,1077,5.457,1078,5.457,1079,6.06,1080,6.06,1081,6.193,1082,7.482,1083,7.482,1084,4.32,1085,6.193,1086,4.079,1087,4.609,1088,6.193]],["title/modules/CoreModule.html",[533,1.271,541,3.045]],["body/modules/CoreModule.html",[3,0.115,4,0.144,5,0.115,6,0.087,43,0.01,46,1.117,75,0.008,80,0.007,84,0.007,99,0.335,104,0.296,130,0.144,133,0.203,141,1.089,212,0.927,213,1.507,326,1.795,327,4.588,424,1.583,533,2.172,535,1.75,536,2.172,541,6.286,547,2.346,548,1.75,552,2.408,556,2.286,601,4.588,639,3.121,640,3.121,735,2.098,745,6.053,830,5.431,1089,5.431,1090,5.431,1091,6.053,1092,6.053,1093,6.164,1094,7.461,1095,6.164,1096,5.204,1097,7.461,1098,6.164,1099,6.164,1100,6.164,1101,6.164,1102,6.164,1103,6.164,1104,6.164,1105,6.164,1106,4.588,1107,8.024,1108,6.164,1109,4.948,1110,6.164]],["title/interfaces/DefaultIconDefinition.html",[129,0.292,1111,3.249]],["body/interfaces/DefaultIconDefinition.html",[3,0.076,4,0.095,5,0.076,6,0.057,11,0.503,18,0.38,19,0.625,43,0.01,44,1.277,45,0.643,46,1.468,69,1.151,75,0.006,80,0.004,84,0.004,90,1.272,129,0.271,130,0.132,139,0.662,142,1.401,195,1.065,204,5.446,303,5.195,308,0.771,350,5.742,441,3.959,450,1.611,453,1.611,469,1.988,612,3.129,660,2.869,965,1.679,1111,4.866,1112,2.822,1113,3.248,1114,3.248,1115,2.093,1116,3.248,1117,3.565,1118,4.217,1119,4.046,1120,4.046,1121,3.565,1122,4.046,1123,4.046,1124,2.822,1125,3.565,1126,6.829,1127,4.217,1128,5.687,1129,3.732,1130,2.665,1131,3.248,1132,2.822,1133,3.565,1134,8.019,1135,3.565,1136,3.565,1137,3.565,1138,4.992,1139,3.565,1140,3.565,1141,3.565,1142,3.565,1143,3.565,1144,3.565,1145,6.241,1146,6.241,1147,6.57,1148,6.57,1149,3.248,1150,3.565,1151,4.663,1152,3.565,1153,3.565,1154,3.565,1155,4.548,1156,4.548,1157,4.992,1158,3.565,1159,3.565,1160,6.57,1161,3.565,1162,4.992,1163,3.011,1164,3.565,1165,3.565,1166,3.565,1167,3.565,1168,3.565,1169,6.241,1170,3.565,1171,3.565,1172,4.992,1173,3.565,1174,3.565,1175,3.565,1176,3.565,1177,3.565,1178,3.565,1179,4.992,1180,3.248,1181,3.565,1182,3.565,1183,3.565,1184,3.565,1185,3.565,1186,6.241,1187,3.565,1188,3.565,1189,6.241,1190,3.248,1191,3.565,1192,2.822,1193,3.565,1194,3.565,1195,5.761,1196,3.565,1197,4.992,1198,3.565,1199,3.565,1200,3.565,1201,3.565]],["title/components/DetailsLabelComponent.html",[196,0.424,482,1.239]],["body/components/DetailsLabelComponent.html",[3,0.085,4,0.106,5,0.115,6,0.11,11,0.762,12,1.462,18,0.426,19,0.676,25,1.536,38,1.73,42,1.055,43,0.01,44,1.139,45,0.675,46,0.822,52,1.321,55,1.26,69,1.187,75,0.007,80,0.005,84,0.005,85,1.291,86,1.357,99,0.172,104,0.218,130,0.106,133,0.263,134,0.932,142,0.822,156,3.224,160,0.723,161,1.049,196,0.754,197,1.225,198,1.536,199,1.288,200,1.427,201,1.427,202,1.39,208,1.225,209,1.831,210,1.831,211,2.288,212,1.139,213,1.109,214,1.655,216,1.655,256,1.426,259,1.831,260,1.536,300,1.74,304,3.104,308,1.169,309,1.109,321,1.355,399,1.586,400,1.874,404,1.676,409,1.165,411,3.223,441,2.797,445,2.469,450,0.98,453,0.98,457,1.195,466,2.398,468,1.427,469,1.946,470,1.427,471,2.338,472,1.427,473,1.427,474,1.288,475,1.427,476,1.256,477,2.183,478,1.288,479,1.427,480,1.655,481,2.183,482,2.111,483,2.653,484,1.427,485,1.288,486,1.427,487,1.288,488,1.225,489,1.427,490,1.288,491,1.427,492,1.288,493,1.288,494,1.427,495,1.288,496,1.39,497,1.256,498,1.427,499,1.288,500,1.928,501,1.256,502,1.288,503,1.288,504,2.183,505,1.288,506,1.785,507,1.928,508,1.256,509,1.288,510,1.256,511,1.055,512,1.427,513,1.256,514,1.225,515,1.288,516,1.427,517,1.288,518,1.427,519,1.288,520,1.427,521,1.288,522,1.536,523,1.288,524,1.74,525,1.288,526,1.427,527,1.288,528,1.614,529,1.427,530,1.288,531,1.427,532,1.427,607,2.469,665,1.288,677,1.74,678,2.183,705,2.031,1202,6.235,1203,5.78,1204,3.997,1205,5.401,1206,5.401,1207,4.663,1208,7.436,1209,6.13,1210,7.436,1211,6.13,1212,6.943,1213,6.13,1214,6.13,1215,4.537,1216,6.13,1217,6.13,1218,4.537,1219,3.353,1220,6.13,1221,5.401,1222,7.436,1223,6.13,1224,6.13,1225,6.13,1226,4.537,1227,6.13,1228,2.837]],["title/modules/DetailsLabelModule.html",[533,1.271,1229,3.045]],["body/modules/DetailsLabelModule.html",[3,0.124,4,0.155,5,0.124,6,0.094,43,0.01,75,0.008,80,0.007,84,0.007,99,0.313,104,0.318,130,0.155,133,0.218,424,1.701,482,2.59,483,1.977,535,1.879,536,2.267,547,2.448,548,1.879,550,2.65,552,2.137,556,2.386,735,2.65,736,2.798,737,2.253,1202,5.315,1203,4.927,1229,6.212,1230,5.833,1231,5.833,1232,5.833,1233,6.621,1234,6.621]],["title/interfaces/DocumentationContent.html",[129,0.292,1235,3.505]],["body/interfaces/DocumentationContent.html",[3,0.147,4,0.156,5,0.125,6,0.095,8,2.866,11,0.832,18,0.629,19,0.864,43,0.01,45,0.711,69,1.197,75,0.008,80,0.007,84,0.007,129,0.449,130,0.156,195,1.763,416,3.785,717,5.529,1235,6.292,1236,5.9,1237,6.696,1238,4.187,1239,4.984,1240,5.75,1241,5.375,1242,3.819,1243,5.833]],["title/interfaces/DrawerContainersChanged.html",[129,0.292,1058,2.73]],["body/interfaces/DrawerContainersChanged.html",[3,0.099,4,0.123,5,0.099,6,0.075,11,0.656,15,1.538,18,0.496,19,0.747,43,0.01,45,0.829,47,1.228,48,1.499,71,1.698,75,0.007,80,0.006,84,0.006,90,2.131,99,0.2,122,2.066,123,2.066,124,2.066,125,1.952,126,2.127,129,0.529,130,0.206,133,0.174,139,0.864,141,0.933,182,2.76,195,1.391,196,0.766,198,1.874,222,2.889,300,2.249,313,2.993,337,1.393,414,2.024,416,3.378,425,3.706,431,2.492,522,1.323,606,3.149,642,3.202,679,2.812,758,3.305,761,2.41,765,4.865,772,2.777,773,3.309,777,3.935,792,3.309,813,1.698,842,3.302,843,3.706,848,2.504,969,2.435,1010,4.237,1014,4.726,1034,2.889,1051,4.237,1052,3.302,1053,4.762,1054,4.726,1055,4.726,1056,4.927,1057,3.684,1058,4.678,1059,4.726,1060,4.5,1061,4.237,1062,4.726,1063,3.931,1064,3.931,1065,4.237,1066,4.237,1067,3.931,1068,3.684,1069,4.726,1070,3.684,1071,3.684,1072,4.092,1073,3.302,1074,3.302]],["title/interfaces/DrawerInitialized.html",[129,0.292,1065,2.73]],["body/interfaces/DrawerInitialized.html",[3,0.1,4,0.125,5,0.1,6,0.076,11,0.666,15,1.561,18,0.503,19,0.754,43,0.01,45,0.829,47,1.24,48,1.522,71,1.714,75,0.007,80,0.006,84,0.006,90,2.151,99,0.203,122,2.097,123,2.097,124,2.097,125,1.981,126,2.16,129,0.532,130,0.206,133,0.176,139,0.877,141,0.947,182,2.635,195,1.412,196,0.731,198,1.714,222,2.933,300,2.245,313,3.022,337,1.406,414,2.043,416,3.397,425,3.742,431,2.53,522,1.344,606,3.197,642,3.225,679,2.226,758,3.328,761,2.447,765,4.079,772,2.819,773,3.342,777,3.943,792,3.342,813,1.714,842,3.353,843,3.742,848,1.981,969,2.459,1010,4.278,1014,3.74,1034,2.933,1051,4.278,1052,3.353,1053,4.781,1054,4.772,1055,4.772,1056,4.962,1057,3.74,1058,4.278,1059,3.74,1060,4.526,1061,4.278,1062,4.772,1063,5.092,1064,5.092,1065,4.711,1066,4.278,1067,3.991,1068,3.74,1069,4.772,1070,3.74,1071,3.74,1072,4.121,1073,3.353,1074,3.353]],["title/modules/DrawerModule.html",[533,1.271,542,3.045]],["body/modules/DrawerModule.html",[3,0.112,4,0.14,5,0.112,6,0.085,43,0.01,75,0.008,80,0.006,84,0.006,99,0.336,104,0.288,130,0.14,133,0.198,424,1.542,478,2.56,480,2.358,485,2.56,521,2.56,522,1.504,535,1.704,536,2.138,542,6.348,547,2.309,548,1.704,550,2.499,552,1.938,556,2.25,562,3.047,563,2.348,565,6.469,566,4.835,567,3.753,568,5.893,569,4.819,588,3.953,589,4.467,590,4.819,735,2.499,817,4.819,818,4.467,1057,4.187,1244,5.289,1245,5.289,1246,5.289,1247,6.003,1248,4.591,1249,4.591,1250,6.003,1251,4.819,1252,5.289]],["title/interfaces/DrawerToggled.html",[129,0.292,1066,2.73]],["body/interfaces/DrawerToggled.html",[3,0.096,4,0.12,5,0.096,6,0.073,11,0.638,15,1.937,18,0.482,19,0.734,43,0.01,45,0.83,47,1.206,48,1.888,71,2.076,75,0.007,80,0.005,84,0.005,90,2.092,99,0.194,122,2.008,123,2.008,124,2.008,125,1.896,126,2.067,129,0.523,130,0.205,133,0.169,139,0.839,141,0.907,182,2.73,195,1.351,196,0.716,198,1.667,222,3.638,300,2.262,313,2.938,337,1.703,414,2.475,416,3.342,425,4.533,431,3.138,522,1.667,606,3.06,642,3.159,679,2.13,758,3.26,761,2.342,765,3.965,772,3.497,773,3.249,777,3.92,792,3.249,813,1.956,842,3.209,843,3.638,848,1.896,969,2.978,1010,5.182,1014,3.58,1034,2.807,1051,4.159,1052,3.209,1053,4.612,1054,4.64,1055,4.64,1056,4.861,1057,3.58,1058,4.159,1059,3.58,1060,4.452,1061,4.159,1062,4.64,1063,3.82,1064,3.82,1065,4.159,1066,4.615,1067,4.95,1068,4.64,1069,4.64,1070,3.58,1071,3.58,1072,4.036,1073,3.209,1074,3.209]],["title/interfaces/ExtractionSet.html",[129,0.292,1253,2.388]],["body/interfaces/ExtractionSet.html",[3,0.12,4,0.149,5,0.12,6,0.091,11,0.795,18,0.6,19,0.841,43,0.01,44,1.218,45,0.74,46,1.383,69,1.185,75,0.008,80,0.007,84,0.007,99,0.242,129,0.428,130,0.149,142,1.586,195,1.684,299,3.295,488,2.407,528,1.684,686,4.548,891,3.726,1253,4.172,1254,5.635,1255,5.635,1256,6.22,1257,7.628,1258,4.438,1259,7.628,1260,3.498]],["title/components/ExtractionSetDropdownComponent.html",[196,0.424,487,1.239]],["body/components/ExtractionSetDropdownComponent.html",[3,0.069,4,0.087,5,0.1,6,0.114,11,0.775,12,1.271,18,0.348,19,0.588,25,1.335,35,0.656,38,1.842,40,0.991,41,1.016,42,1.24,43,0.01,44,1.102,45,0.702,46,0.966,47,0.966,52,1.08,55,1.281,56,0.805,69,0.502,75,0.006,80,0.004,84,0.004,85,0.991,86,1.411,99,0.236,104,0.178,130,0.087,133,0.247,134,0.763,141,0.656,142,1.666,160,0.849,161,1.09,188,1.198,196,0.7,197,1.002,198,1.335,199,1.053,200,1.167,201,1.167,202,1.137,208,1.002,209,1.591,210,1.591,211,2.255,212,1.125,213,0.907,214,1.438,216,1.438,256,0.863,257,1.137,259,1.591,260,1.335,297,1.403,300,1.562,304,2.698,308,1.016,309,0.907,321,1.108,337,1.095,399,1.297,401,1.54,404,1.371,409,0.953,410,2.698,413,1.812,414,1.862,418,2.353,419,4.349,427,2.28,428,3.41,429,1.053,432,3.176,449,3.278,450,1.151,453,0.801,457,0.977,458,3.716,464,1.879,468,1.167,469,1.808,470,1.167,471,2.143,472,1.167,473,1.167,474,1.053,475,1.167,476,1.027,477,1.96,478,1.053,479,1.167,480,1.438,481,1.96,482,1.053,483,1.108,484,1.167,485,1.053,486,1.167,487,1.934,488,2.446,489,1.167,490,1.053,491,1.167,492,1.053,493,1.053,494,1.167,495,1.053,496,1.137,497,1.027,498,1.167,499,1.053,500,1.675,501,1.027,502,1.053,503,1.053,504,1.96,505,1.053,506,1.551,507,1.675,508,1.027,509,1.053,510,1.027,511,0.863,512,1.167,513,1.027,514,1.002,515,1.053,516,1.167,517,1.053,518,1.167,519,1.053,520,1.167,521,1.053,522,1.335,523,1.053,524,1.513,525,1.053,526,1.167,527,1.053,528,1.403,529,1.167,530,1.053,531,1.167,532,1.167,561,3.727,596,1.494,607,2.146,664,2.588,665,1.053,666,2.212,667,2.665,668,1.41,669,1.371,670,2.304,677,1.513,678,1.96,683,2.439,704,2.602,705,1.766,706,1.951,720,2.212,726,3.716,727,2.32,785,3.418,813,1.335,969,1.915,1240,2.444,1253,4.331,1261,6.473,1262,6.001,1263,3.269,1264,7.21,1265,3.716,1266,6.235,1267,5.328,1268,4.938,1269,5.328,1270,6.814,1271,6.235,1272,5.328,1273,3.71,1274,3.555,1275,3.71,1276,3.328,1277,2.698,1278,5.328,1279,5.328,1280,3.71,1281,3.71,1282,4.277,1283,4.753,1284,4.488,1285,3.176,1286,3.71,1287,3.71,1288,3.71,1289,3.71,1290,3.71,1291,3.71,1292,3.71,1293,5.328,1294,5.328,1295,5.328,1296,3.555,1297,3.555,1298,2.444,1299,2.761,1300,2.978,1301,3.269,1302,3.71,1303,5.328,1304,2.761,1305,3.71,1306,3.71,1307,3.188,1308,5.47,1309,3.71,1310,2.32,1311,3.71,1312,3.71,1313,2.978,1314,3.269,1315,2.761]],["title/modules/ExtractionSetDropdownModule.html",[533,1.271,1316,3.045]],["body/modules/ExtractionSetDropdownModule.html",[3,0.123,4,0.153,5,0.123,6,0.093,43,0.01,75,0.008,80,0.007,84,0.007,99,0.322,104,0.314,130,0.153,133,0.215,142,1.492,424,1.682,487,2.587,488,1.767,535,1.858,536,2.252,547,2.432,548,1.858,550,2.632,552,2.113,556,2.37,735,2.632,736,2.78,737,2.228,1261,5.255,1262,4.872,1316,6.198,1317,5.768,1318,5.768,1319,5.768,1320,6.547,1321,6.815,1322,5.768,1323,6.547]],["title/interfaces/GlobalConfig.html",[129,0.292,245,1.569]],["body/interfaces/GlobalConfig.html",[3,0.1,4,0.125,5,0.1,6,0.076,14,3.894,18,0.502,19,0.753,43,0.01,44,0.744,45,0.822,46,1.667,56,1.031,69,1.221,75,0.007,80,0.006,82,4.763,84,0.006,99,0.285,104,0.257,113,1.518,129,0.358,130,0.176,134,1.099,139,0.874,141,0.945,195,1.408,212,0.664,219,4.168,220,5.221,221,5.221,224,4.957,226,4.521,245,2.849,299,2.929,326,1.556,333,2.788,334,3.59,335,3.59,337,1.825,359,1.597,450,1.155,453,1.155,466,3.331,608,4.957,609,5.221,610,6.364,611,6.985,612,3.502,613,6.985,614,5.9,747,4.763,748,3.978,1015,2.361,1115,1.975,1149,4.291,1151,3.343,1155,4.291,1156,4.291,1180,4.291,1324,3.978,1325,4.705,1326,6.364,1327,4.27,1328,3.978,1329,2.924,1330,3.048,1331,3.048,1332,5.346,1333,4.291,1334,2.439,1335,4.71,1336,5.346]],["title/components/HeaderComponent.html",[196,0.424,490,1.239]],["body/components/HeaderComponent.html",[3,0.082,4,0.102,5,0.112,6,0.112,11,0.743,12,1.426,18,0.411,19,0.66,23,3.081,35,0.773,38,1.784,40,1.112,41,1.14,42,1.018,43,0.01,44,1.128,45,0.696,46,0.793,52,1.274,69,1.038,75,0.006,76,2.822,80,0.005,84,0.005,85,1.112,86,1.169,91,2.632,99,0.226,104,0.21,130,0.102,133,0.261,142,0.793,160,0.697,161,1.029,188,1.412,196,0.744,197,1.181,198,1.498,199,1.242,200,1.376,201,1.376,202,1.341,208,1.181,209,1.786,210,1.786,211,2.282,212,1.137,213,1.069,214,1.615,216,1.615,219,4.452,220,4.488,221,4.488,256,1.018,259,2.035,260,1.498,278,1.616,300,1.707,308,1.14,309,1.069,321,1.307,332,2.495,359,1.786,399,1.53,400,1.978,401,3.183,404,2.834,405,2.149,408,3.109,409,1.97,411,2.3,413,2.137,414,2.188,421,1.816,427,2.917,429,2.079,434,3.135,436,1.872,437,1.872,441,1.996,444,3.342,445,2.951,446,3.939,448,2.822,449,3.144,450,0.945,453,0.945,457,1.152,461,3.028,468,1.376,469,1.922,470,1.376,471,2.303,472,1.376,473,1.376,474,1.242,475,1.376,476,1.211,477,2.143,478,1.242,479,1.376,480,1.615,481,2.143,482,1.242,483,1.307,484,1.376,485,1.242,486,1.376,487,1.242,488,1.181,489,1.376,490,2.079,491,1.376,492,1.242,493,1.242,494,1.376,495,1.242,496,1.341,497,1.211,498,1.376,499,1.242,500,1.881,501,1.211,502,1.242,503,1.242,504,2.143,505,1.242,506,1.741,507,1.881,508,1.211,509,1.242,510,1.211,511,1.018,512,1.376,513,1.211,514,1.181,515,1.242,516,1.376,517,1.242,518,1.376,519,1.242,520,1.376,521,1.242,522,1.498,523,1.242,524,1.698,525,1.242,526,1.376,527,1.242,528,1.575,529,1.376,530,1.242,531,1.376,532,1.376,607,2.409,665,1.242,677,1.698,678,2.143,705,1.982,718,2.393,722,2.3,728,2.881,729,2.881,824,3.855,963,2.735,968,3.051,969,1.572,1019,3.256,1059,3.051,1130,2.881,1221,3.855,1228,4.261,1241,3.512,1315,3.256,1337,3.855,1338,6.814,1339,5.981,1340,3.512,1341,5.981,1342,4.375,1343,5.981,1344,4.375,1345,5.981,1346,4.801,1347,3.512,1348,3.256,1349,3.74,1350,3.051,1351,4.375,1352,3.855,1353,4.375,1354,4.375,1355,4.375,1356,2.881,1357,4.375,1358,4.375,1359,3.855,1360,3.512,1361,4.375,1362,4.375,1363,3.051,1364,5.981]],["title/modules/HeaderModule.html",[533,1.271,543,3.045]],["body/modules/HeaderModule.html",[3,0.123,4,0.153,5,0.123,6,0.093,43,0.01,75,0.008,80,0.007,84,0.007,99,0.328,104,0.314,130,0.153,133,0.215,424,1.682,490,2.587,535,1.858,536,2.252,543,6.198,547,2.432,548,1.858,550,2.632,552,2.113,556,2.37,562,3.21,563,2.561,735,2.632,736,2.78,737,2.228,742,4.23,743,3.581,1365,5.768,1366,5.768,1367,5.768,1368,6.547,1369,6.547]],["title/interfaces/IconDefinition.html",[129,0.292,1370,3.249]],["body/interfaces/IconDefinition.html",[0,1.695,3,0.079,4,0.098,5,0.079,6,0.06,11,0.523,15,2.098,16,1.599,18,0.395,19,0.642,20,1.96,29,1.801,40,0.782,41,0.802,43,0.01,44,1.2,45,0.654,46,1.504,47,0.763,48,1.895,53,2.948,55,1.481,56,0.879,60,2.935,69,1.086,75,0.006,80,0.004,84,0.004,85,1.082,86,0.823,99,0.314,104,0.202,106,2.492,107,2.345,108,1.801,109,1.801,110,1.695,129,0.282,130,0.136,133,0.138,134,1.727,139,1.337,141,1.029,142,1.418,160,1.246,161,0.879,162,1.801,195,1.108,212,0.523,245,2.092,246,2.345,250,2.935,287,2.46,297,1.758,308,1.374,326,1.225,337,1.197,350,5.307,441,4.107,469,2.127,563,1.646,566,2.771,567,2.631,608,3.641,612,3.611,642,2.858,660,2.948,848,2.467,888,4.313,896,3.641,960,3.381,1106,3.131,1109,3.377,1112,2.935,1115,2.151,1116,6.563,1126,6.371,1127,5.629,1128,5.784,1129,3.835,1130,5.153,1132,4.061,1207,2.301,1307,2.572,1356,2.771,1370,5.823,1371,3.131,1372,3.377,1373,4.333,1374,6.348,1375,6.348,1376,5.882,1377,5.13,1378,5.13,1379,2.055,1380,3.707,1381,3.707,1382,2.771,1383,6.894,1384,5.13,1385,3.707,1386,3.707,1387,3.641,1388,3.707,1389,3.707,1390,3.707,1391,3.707,1392,3.707,1393,5.882,1394,3.707,1395,3.707,1396,3.707,1397,3.707,1398,3.707,1399,3.707,1400,3.707,1401,3.707,1402,5.13,1403,3.707,1404,3.707,1405,3.131,1406,5.13,1407,3.707,1408,3.707,1409,3.707,1410,3.707,1411,3.707,1412,5.13,1413,3.707,1414,3.707,1415,3.377,1416,3.707,1417,3.707,1418,3.707,1419,5.882,1420,3.707,1421,3.377,1422,3.707,1423,3.707,1424,3.707,1425,4.674,1426,3.707,1427,3.707,1428,3.707,1429,3.707,1430,3.707,1431,3.707,1432,3.707,1433,3.707,1434,3.131,1435,3.707,1436,3.707]],["title/injectables/IconRegistryState.html",[0,1.271,1382,2.875]],["body/injectables/IconRegistryState.html",[0,1.586,2,2.182,3,0.072,4,0.089,5,0.072,6,0.111,11,0.859,15,2.21,16,2.07,18,0.359,20,2.109,25,1.365,29,2.958,35,0.676,38,1.766,40,1.013,41,1.038,42,1.699,43,0.01,44,1.198,45,0.663,46,1.376,47,0.987,48,2.155,52,1.114,53,3.211,55,1.669,56,0.958,60,3.799,69,0.935,75,0.006,80,0.004,84,0.004,85,1.179,86,0.748,99,0.307,104,0.184,106,2.331,107,2.194,108,1.637,109,1.637,110,1.541,129,0.256,130,0.127,133,0.126,134,1.693,139,1.305,141,0.676,142,1.15,160,1.209,161,0.823,162,1.637,212,0.476,245,2.483,246,2.783,250,3.799,287,2.51,297,1.923,308,1.522,326,1.114,337,1.42,350,4.883,441,4.081,469,2,563,1.497,566,2.52,567,2.392,608,3.406,612,3.588,642,2.714,660,1.937,848,2.343,888,4.552,896,4.321,960,3.698,1106,2.847,1109,4.372,1112,5.447,1115,1.414,1116,6.52,1126,5.941,1127,5.143,1128,4.372,1129,2.52,1130,4.999,1132,3.799,1207,2.979,1307,3.052,1356,3.587,1370,6.318,1371,5.812,1372,3.071,1373,2.847,1374,4.799,1375,4.799,1376,6.687,1377,6.088,1378,5.588,1379,1.869,1380,4.799,1381,3.371,1382,3.587,1383,7.258,1384,6.088,1385,4.799,1386,4.799,1387,4.321,1388,3.371,1389,3.371,1390,3.371,1391,3.371,1392,3.371,1393,5.588,1394,3.371,1395,3.371,1396,3.371,1397,3.371,1398,3.371,1399,3.371,1400,3.371,1401,3.371,1402,4.799,1403,3.371,1404,3.371,1405,4.053,1406,6.088,1407,4.799,1408,3.371,1409,4.799,1410,6.088,1411,4.799,1412,4.799,1413,3.371,1414,3.371,1415,3.071,1416,3.371,1417,3.371,1418,3.371,1419,5.588,1420,3.371,1421,3.071,1422,3.371,1423,3.371,1424,3.371,1425,5.547,1426,5.588,1427,3.371,1428,3.371,1429,3.371,1430,3.371,1431,3.371,1432,3.371,1433,4.799,1434,4.053,1435,5.588,1436,3.371,1437,5.447,1438,3.826,1439,3.826,1440,3.826,1441,3.826,1442,3.826,1443,3.826,1444,3.826,1445,3.826,1446,3.826]],["title/classes/InitializationState.html",[133,0.144,1447,3.505]],["body/classes/InitializationState.html",[3,0.049,4,0.062,5,0.049,6,0.098,11,0.328,15,2.437,18,0.248,19,0.455,20,2.154,25,1.033,38,1.537,40,0.49,41,0.503,42,0.959,43,0.01,45,0.599,47,0.478,48,1.171,55,1.358,56,1.205,65,1.129,71,1.033,75,0.004,80,0.003,84,0.003,85,1.068,86,1.218,90,1.297,99,0.236,104,0.127,113,0.749,122,2.246,123,2.246,124,1.986,125,2.122,126,2.046,130,0.062,133,0.167,134,1.698,139,1.228,141,1.22,142,1.387,160,1.099,161,0.867,182,0.922,196,0.641,198,0.661,200,0.829,205,1.063,206,2.014,209,0.788,210,0.788,211,0.661,212,0.513,214,0.712,216,0.712,222,4.363,225,3.175,230,1.288,244,2.352,247,2.256,248,2.256,257,1.76,258,1.822,259,1.715,260,1.73,263,2.383,277,1.572,278,0.975,281,2.352,283,2.459,287,2.246,297,2.015,300,2.196,306,1.84,310,4.016,311,2.579,312,1.649,321,0.788,322,1.737,337,1.598,357,1.572,378,1.387,380,1.387,395,1.649,413,1.288,414,2.408,417,2.459,421,1.712,423,2.877,424,1.059,425,4.312,429,2.238,430,2.716,435,1.244,439,2.117,440,2.117,450,0.891,453,0.891,459,2.716,466,1.986,467,4.005,469,1.033,485,1.442,522,0.661,606,3.715,642,1.129,664,1.095,665,0.749,666,2.865,677,0.749,686,1.572,720,1.572,755,3.311,756,2.324,758,2.243,761,2.317,762,1.963,767,2.117,770,2.117,773,2.014,774,1.737,777,2.243,779,2.324,781,1.737,783,1.963,785,1.822,792,2.014,794,1.737,810,3.634,813,1.73,827,4.705,828,4.705,835,1.737,836,2.117,837,2.324,838,1.963,841,3.634,969,2.897,980,2.324,1001,2.117,1004,2.117,1010,4.785,1015,1.165,1018,1.963,1019,5.137,1020,2.117,1021,2.117,1029,2.117,1034,2.256,1035,1.737,1061,1.649,1073,3.175,1074,3.175,1115,1.524,1124,1.84,1277,2.571,1447,4.076,1448,2.117,1449,1.963,1450,4.124,1451,5.078,1452,6.903,1453,5.742,1454,4.609,1455,5.742,1456,4.124,1457,5.078,1458,2.638,1459,6.143,1460,4.076,1461,2.638,1462,2.638,1463,2.638,1464,2.638,1465,4.131,1466,3.311,1467,2.638,1468,5.078,1469,2.638,1470,2.638,1471,2.324,1472,4.474,1473,6.082,1474,4.474,1475,4.474,1476,5.82,1477,4.474,1478,5.49,1479,3.634,1480,4.474,1481,4.076,1482,5.49,1483,4.609,1484,3.634,1485,5.059,1486,4.124,1487,2.638,1488,2.638,1489,2.638,1490,2.638,1491,2.638,1492,2.638,1493,2.638,1494,2.638,1495,2.638,1496,4.124,1497,2.638,1498,4.124,1499,2.638,1500,2.638,1501,2.638,1502,2.324,1503,6.231,1504,2.638,1505,2.638,1506,2.638,1507,4.474,1508,2.324,1509,3.634,1510,4.124,1511,2.638,1512,5.742,1513,2.117,1514,4.124,1515,2.638,1516,2.638,1517,2.638,1518,5.078,1519,2.638,1520,2.638,1521,2.638,1522,3.175,1523,2.638,1524,5.078,1525,2.638,1526,1.737,1527,2.638,1528,3.634,1529,2.638,1530,2.638,1531,2.638,1532,6.606,1533,4.124,1534,5.742,1535,4.124,1536,3.634,1537,2.638,1538,5.078,1539,4.124,1540,2.117,1541,2.638,1542,2.638,1543,2.638,1544,4.124,1545,4.124,1546,2.638,1547,2.638,1548,5.078,1549,2.638,1550,2.638,1551,2.638,1552,2.638,1553,4.124,1554,2.638,1555,2.638,1556,1.963,1557,1.963,1558,2.638,1559,1.649,1560,2.638,1561,2.638,1562,5.059,1563,5.078,1564,5.742,1565,4.124,1566,4.124,1567,2.638,1568,2.638,1569,2.638,1570,2.638,1571,2.638,1572,2.638,1573,2.638,1574,6.606,1575,2.877,1576,4.124,1577,2.638,1578,2.638,1579,2.638,1580,2.638,1581,2.638,1582,2.638,1583,2.638,1584,1.84,1585,2.638,1586,2.638,1587,1.84,1588,2.638,1589,2.638,1590,4.124,1591,2.638,1592,2.638,1593,2.638,1594,2.638,1595,2.638,1596,2.638,1597,4.124,1598,5.078,1599,2.638,1600,2.638,1601,4.124,1602,2.638,1603,2.638,1604,2.638,1605,2.638,1606,2.638,1607,2.324,1608,3.027,1609,2.638,1610,2.638,1611,2.638]],["title/components/JsonFileReaderComponent.html",[196,0.424,492,1.239]],["body/components/JsonFileReaderComponent.html",[3,0.073,4,0.091,5,0.171,6,0.116,11,0.684,12,1.312,18,0.364,19,0.607,25,1.378,35,0.685,38,1.864,40,1.023,41,1.049,42,1.28,43,0.01,44,1.115,45,0.711,46,0.997,47,0.997,48,2.164,52,1.601,55,1.131,56,1.05,69,0.865,75,0.006,80,0.004,84,0.004,85,1.188,86,1.249,99,0.208,104,0.186,130,0.091,133,0.251,134,0.797,139,1.2,141,0.972,142,0.703,156,3.158,160,0.876,161,1.109,196,0.713,197,1.047,198,1.378,199,1.101,200,1.22,201,1.22,202,1.189,208,1.047,211,2.263,212,1.128,213,0.948,214,1.485,216,1.485,244,3.644,251,2.555,253,2.555,256,0.902,259,2.393,260,1.742,263,3.165,300,1.601,308,1.049,309,0.948,399,1.356,404,1.433,405,1.394,408,1.77,409,0.996,414,1.159,421,1.61,431,3.463,436,1.66,437,1.66,450,0.838,453,0.838,457,1.021,468,1.22,469,1.839,470,1.22,471,2.186,472,1.22,473,1.22,474,1.101,475,1.22,476,1.074,477,2.01,478,1.101,479,1.22,480,1.485,481,2.01,482,1.101,483,1.159,484,1.22,485,1.101,486,1.22,487,1.101,488,1.047,489,1.22,490,1.101,491,1.22,492,1.974,493,2.511,494,1.22,495,1.101,496,1.189,497,1.074,498,1.22,499,1.101,500,1.73,501,1.074,502,1.101,503,1.101,504,2.01,505,1.101,506,1.601,507,1.73,508,1.074,509,1.101,510,1.074,511,0.902,512,1.22,513,1.074,514,1.047,515,1.101,516,1.22,517,1.101,518,1.22,519,1.101,520,1.22,521,1.101,522,1.378,523,1.101,524,1.561,525,1.101,526,1.22,527,1.101,528,1.448,529,1.22,530,1.101,531,1.22,532,1.22,596,1.563,607,2.216,642,1.66,646,3.114,664,2.653,665,1.101,666,2.283,667,2.72,668,1.474,669,1.433,670,2.361,677,1.561,678,2.01,683,2.5,685,3.996,691,2.706,693,2.426,704,2.687,705,1.823,706,2.04,718,2.122,722,2.04,888,3.137,915,4.846,1020,5.582,1115,2.569,1206,4.846,1228,2.426,1276,3.396,1612,6.541,1613,6.065,1614,3.418,1615,8.011,1616,6.391,1617,5.5,1618,6.391,1619,5.5,1620,6.953,1621,6.391,1622,5.5,1623,6.468,1624,3.879,1625,3.623,1626,5.5,1627,4.846,1628,4.846,1629,5.5,1630,5.5,1631,3.879,1632,5.5,1633,3.879,1634,5.5,1635,4.579,1636,4.846,1637,3.837,1638,4.846,1639,5.5,1640,3.879,1641,5.5,1642,3.114,1643,3.879,1644,3.879,1645,3.879,1646,3.879,1647,3.879,1648,5.5,1649,3.879,1650,3.879,1651,3.879,1652,5.5,1653,3.879,1654,3.879,1655,3.879]],["title/modules/JsonFileReaderModule.html",[533,1.271,1656,3.045]],["body/modules/JsonFileReaderModule.html",[3,0.122,4,0.153,5,0.159,6,0.093,43,0.01,75,0.008,80,0.007,84,0.007,99,0.322,104,0.314,130,0.153,133,0.215,424,1.677,492,2.586,493,1.854,535,1.854,536,2.249,547,2.429,548,1.854,550,2.629,552,2.108,556,2.367,735,2.629,736,2.775,737,2.223,1612,5.242,1613,4.86,1656,6.195,1657,5.754,1658,5.754,1659,5.754,1660,6.531,1661,6.531,1662,5.387,1663,4.555]],["title/components/LabeledSlideToggleComponent.html",[196,0.424,495,1.239]],["body/components/LabeledSlideToggleComponent.html",[3,0.072,4,0.09,5,0.103,6,0.117,11,0.791,12,1.306,15,1.594,18,0.362,19,0.604,25,1.372,32,2.772,35,0.681,38,1.893,40,1.018,41,1.044,42,1.274,43,0.01,44,1.113,45,0.726,46,0.992,47,0.992,52,1.122,55,1.125,56,0.827,69,1.03,75,0.006,80,0.004,84,0.004,85,1.361,86,1.648,99,0.207,104,0.185,130,0.09,133,0.25,134,0.792,139,0.63,141,0.681,142,0.699,156,1.552,160,0.872,161,1.106,196,0.76,197,1.04,198,1.372,199,1.094,200,1.212,201,1.212,202,1.181,208,1.04,209,1.635,210,1.635,211,2.262,212,1.128,213,0.942,214,1.478,216,1.478,256,0.897,259,2.272,260,1.372,287,1.722,300,1.595,308,1.044,309,0.942,321,1.151,337,1.564,399,1.348,409,0.99,410,1.951,411,2.026,421,1.6,429,1.094,436,2.343,437,1.649,450,1.782,453,1.375,457,1.015,468,1.212,469,1.835,470,1.212,471,2.18,472,1.212,473,1.212,474,1.094,475,1.212,476,1.067,477,2.002,478,1.094,479,1.212,480,1.478,481,2.002,482,1.094,483,1.151,484,1.212,485,1.094,486,1.212,487,1.094,488,1.04,489,1.212,490,1.094,491,1.212,492,1.094,493,1.094,494,1.212,495,1.968,496,2.623,497,2.511,498,1.212,499,1.094,500,1.722,501,1.067,502,1.094,503,1.094,504,2.002,505,1.094,506,1.594,507,1.722,508,1.067,509,1.094,510,1.067,511,0.897,512,1.212,513,1.067,514,1.04,515,1.094,516,1.212,517,1.094,518,1.212,519,1.094,520,1.212,521,1.094,522,2.191,523,1.094,524,1.554,525,1.094,526,1.212,527,1.094,528,1.442,529,1.212,530,1.094,531,1.212,532,1.212,596,1.552,607,2.205,664,2.643,665,1.094,666,2.272,667,2.712,668,1.465,669,1.424,670,2.353,677,1.554,678,2.002,683,2.491,684,2.343,704,2.674,705,1.814,706,2.026,722,2.026,813,1.372,965,1.6,969,1.385,1034,2.994,1268,4.535,1274,3.122,1276,3.386,1277,2.772,1282,4.395,1285,4.133,1664,6.623,1665,5.434,1666,3.094,1667,5.475,1668,4.338,1669,5.61,1670,4.824,1671,5.475,1672,5.307,1673,6.933,1674,6.367,1675,5.475,1676,3.395,1677,3.854,1678,4.824,1679,5.878,1680,3.395,1681,5.475,1682,6.703,1683,5.475,1684,5.475,1685,3.854,1686,5.475,1687,5.475,1688,3.854,1689,3.854,1690,5.475,1691,5.475,1692,3.854,1693,3.854,1694,3.854,1695,3.854,1696,3.854,1697,3.854,1698,3.395,1699,3.094,1700,3.854]],["title/modules/LabeledSlideToggleModule.html",[533,1.271,1701,2.73]],["body/modules/LabeledSlideToggleModule.html",[3,0.122,4,0.153,5,0.122,6,0.093,43,0.01,75,0.008,80,0.007,84,0.007,99,0.322,104,0.314,130,0.153,133,0.215,424,1.679,495,2.586,496,2.004,497,2.278,522,1.638,535,1.856,536,2.25,547,2.43,548,1.856,550,2.631,552,2.11,556,2.368,735,2.631,736,2.778,737,2.225,1664,5.249,1665,4.306,1701,5.555,1702,5.761,1703,5.761,1704,5.761,1705,5.761,1706,6.81,1707,5.761,1708,5.761]],["title/components/LeftSidebarComponent.html",[196,0.424,499,1.239]],["body/components/LeftSidebarComponent.html",[3,0.049,4,0.061,5,0.077,6,0.117,11,0.819,12,0.978,15,1.918,18,0.385,19,0.453,22,1.676,23,1.56,25,1.028,35,0.725,38,1.906,42,1.533,43,0.01,44,1.081,45,0.704,46,1.194,52,0.763,55,1.277,56,1.132,69,0.965,75,0.004,76,1.236,80,0.003,84,0.003,85,1.42,86,1.494,88,2.238,91,2.056,96,1.922,99,0.277,104,0.126,112,2.659,113,0.744,114,1.158,115,0.892,128,1.872,130,0.061,133,0.217,141,0.725,142,1.126,156,2.502,160,0.989,161,1.247,185,3.527,188,0.846,196,0.491,197,0.708,198,1.028,199,0.744,200,0.824,201,0.824,202,0.803,208,0.708,209,1.226,210,1.226,211,2.189,212,1.097,213,0.641,214,1.108,216,1.108,219,2.157,223,3.527,256,0.955,257,0.803,259,1.51,260,1.028,263,2.375,287,2.072,297,1.08,299,2.114,300,1.267,301,2.766,307,2.157,308,1.501,309,1.236,310,2.244,313,1.158,321,0.783,331,2.446,332,1.494,333,1.397,337,1.277,353,4.008,382,0.916,387,0.996,399,0.916,400,1.779,401,2.578,402,1.639,403,1.639,404,2.544,405,1.817,406,1.494,408,3.006,409,1.299,410,2.078,413,2.47,414,1.968,416,1.756,418,2.744,427,2.164,428,1.433,429,1.624,432,1.562,433,1.562,434,2.449,435,1.236,442,3.008,444,2.307,445,2.305,448,2.386,449,2.157,450,1.795,451,1.28,453,1.236,457,1.332,459,1.726,461,2.897,464,1.327,467,2.862,468,0.824,469,1.556,470,0.824,471,1.799,472,0.824,473,0.824,474,0.744,475,0.824,476,0.725,477,1.59,478,0.744,479,0.824,480,1.108,481,1.59,482,0.744,483,0.783,484,0.824,485,0.744,486,0.824,487,0.744,488,1.859,489,0.824,490,0.744,491,0.824,492,0.744,493,1.763,494,0.824,495,0.744,496,0.803,497,0.725,498,0.824,499,1.624,500,1.29,501,0.725,502,0.744,503,0.744,504,1.59,505,0.744,506,1.195,507,1.29,508,0.725,509,0.744,510,0.725,511,0.61,512,0.824,513,0.725,514,0.708,515,0.744,516,0.824,517,0.744,518,0.824,519,0.744,520,0.824,521,0.744,522,1.651,523,0.744,524,1.165,525,0.744,526,0.824,527,0.744,528,1.735,529,0.824,530,0.744,531,0.824,532,0.824,580,6.143,607,1.653,621,3.768,635,2.004,636,1.327,665,0.744,677,1.165,678,1.59,684,2.449,705,1.36,715,1.828,717,1.639,718,3.13,719,2.862,727,2.566,728,1.726,729,1.726,785,2.91,813,1.028,843,2.244,848,2.77,860,3.054,875,3.008,888,2.34,932,2.566,937,2.104,963,1.639,965,2.735,968,1.828,969,2.561,1015,3.429,1124,2.862,1192,1.828,1219,2.244,1228,1.639,1240,3.331,1258,3.941,1260,2.766,1268,3.411,1277,2.078,1296,2.34,1297,2.34,1298,1.726,1299,1.95,1307,2.744,1310,2.566,1315,1.95,1329,4.357,1330,3.757,1331,4.179,1340,2.104,1346,4.593,1347,2.104,1348,1.95,1628,3.615,1636,3.615,1637,1.828,1668,3.542,1709,6.626,1710,2.104,1711,6.28,1712,4.456,1713,3.615,1714,5.057,1715,6.212,1716,4.456,1717,5.057,1718,4.456,1719,5.057,1720,3.615,1721,4.103,1722,4.103,1723,4.103,1724,4.103,1725,5.057,1726,4.456,1727,4.103,1728,2.621,1729,2.621,1730,4.103,1731,3.615,1732,2.621,1733,4.103,1734,6.588,1735,4.623,1736,2.621,1737,4.103,1738,2.621,1739,3.615,1740,3.411,1741,2.862,1742,4.593,1743,3.766,1744,4.091,1745,3.991,1746,4.103,1747,2.621,1748,6.212,1749,4.103,1750,4.103,1751,4.103,1752,4.103,1753,2.621,1754,4.103,1755,4.103,1756,3.054,1757,4.103,1758,4.103,1759,4.103,1760,4.103,1761,4.103,1762,4.103,1763,2.621,1764,2.621,1765,3.615,1766,4.593,1767,4.593,1768,3.615,1769,4.103,1770,4.103,1771,2.621,1772,2.621,1773,4.103,1774,3.615,1775,3.615,1776,2.621,1777,4.103,1778,4.103,1779,2.621,1780,2.309,1781,2.621,1782,4.103,1783,2.621,1784,2.621,1785,2.621,1786,4.103,1787,2.621,1788,2.621,1789,3.294,1790,2.766,1791,3.615,1792,3.615,1793,3.615,1794,3.294,1795,2.104,1796,2.309,1797,1.95,1798,6.28,1799,3.054,1800,2.104,1801,2.621,1802,4.103,1803,2.309,1804,2.309,1805,2.621,1806,2.621]],["title/modules/LeftSidebarModule.html",[533,1.271,544,3.045]],["body/modules/LeftSidebarModule.html",[3,0.104,4,0.13,5,0.143,6,0.079,43,0.01,75,0.007,80,0.006,84,0.006,99,0.342,104,0.267,130,0.13,133,0.183,142,1.269,212,0.691,326,1.619,424,1.428,450,1.201,497,1.938,499,2.535,535,1.578,536,2.038,544,6.396,547,2.201,548,1.578,550,2.383,552,2.26,556,2.145,562,2.906,563,2.175,580,4.138,735,2.383,736,2.516,737,1.892,742,3.829,743,3.041,1203,4.138,1229,5.903,1262,4.138,1316,5.903,1613,4.138,1656,5.903,1665,3.662,1701,5.291,1709,4.463,1807,4.899,1808,4.899,1809,4.899,1810,4.899,1811,5.573,1812,5.903,1813,6.115,1814,4.899,1815,6.168,1816,4.899,1817,5.62,1818,4.463,1819,5.56,1820,5.56,1821,5.56,1822,5.56,1823,4.463,1824,5.62,1825,4.899,1826,3.662,1827,4.463,1828,6.168,1829,7.001,1830,4.138,1831,5.56,1832,4.138,1833,4.899,1834,5.56,1835,5.56]],["title/interfaces/Message.html",[129,0.292,777,1.928]],["body/interfaces/Message.html",[0,1.727,3,0.081,4,0.205,5,0.081,6,0.061,11,0.537,18,0.406,19,0.654,20,1.977,35,0.764,40,1.259,41,0.824,43,0.01,45,0.693,46,1.075,47,1.491,48,1.227,55,1.57,56,0.896,71,1.913,75,0.006,80,0.005,84,0.005,85,0.803,96,3.291,99,0.256,104,0.207,113,1.227,115,1.471,129,0.397,130,0.184,133,0.195,134,1.57,139,0.97,141,1.349,155,3.178,160,1.33,161,1.023,195,1.138,199,1.922,205,1.741,206,2.896,213,1.45,230,2.111,278,1.597,297,1.138,337,0.888,359,1.771,429,1.227,642,3.268,750,3.382,758,2.619,761,3.854,772,2.272,773,4.166,777,4.024,792,2.896,794,2.846,813,1.083,819,2.846,835,3.906,993,2.846,1035,3.906,1053,4.498,1060,4.864,1072,2.363,1096,4.136,1238,2.702,1248,2.702,1249,3.708,1274,2.464,1327,3.708,1334,3.484,1387,2.702,1465,4.234,1522,4.234,1575,3.014,1584,3.014,1587,3.014,1608,2.576,1836,2.846,1837,4.556,1838,3.438,1839,4.419,1840,3.906,1841,4.413,1842,2.576,1843,4.799,1844,2.111,1845,3.216,1846,3.216,1847,4.234,1848,3.216,1849,5.326,1850,4.136,1851,2.846,1852,2.846,1853,4.136,1854,3.014,1855,3.216,1856,4.413,1857,3.216,1858,2.702,1859,3.216,1860,3.216,1861,3.216,1862,4.413,1863,3.014,1864,3.216,1865,3.216,1866,3.216,1867,4.413,1868,3.216,1869,4.413,1870,2.846,1871,4.723,1872,3.216,1873,3.216,1874,3.216,1875,3.216,1876,2.702,1877,3.216,1878,3.216,1879,5.039,1880,3.216,1881,3.216,1882,3.216,1883,3.216,1884,3.014,1885,3.216,1886,3.216,1887,3.216,1888,3.216]],["title/classes/MessageChannel.html",[133,0.144,792,2.132]],["body/classes/MessageChannel.html",[0,1.593,3,0.072,4,0.205,5,0.072,6,0.113,11,0.91,18,0.362,19,0.603,20,2.067,25,1.371,35,0.967,38,1.82,40,1.361,41,0.734,42,1.612,43,0.01,44,0.965,45,0.71,46,1.379,47,1.449,48,1.553,55,1.696,56,0.961,71,1.906,75,0.006,80,0.004,84,0.004,85,1.017,86,0.753,96,3.394,99,0.241,104,0.185,113,1.093,115,1.311,129,0.367,130,0.178,133,0.18,134,1.505,139,0.895,141,1.344,155,2.792,160,1.296,161,0.961,199,1.807,205,1.551,206,2.673,213,1.337,230,1.881,278,1.423,297,1.014,337,0.792,359,1.15,429,1.553,642,3.133,750,3.12,758,2.417,761,3.878,772,2.877,773,4.287,777,4.016,792,3.109,794,2.536,813,0.965,819,2.536,835,3.604,993,3.604,1035,3.604,1053,4.56,1060,4.759,1072,2.993,1096,3.817,1238,3.421,1248,2.408,1249,3.421,1274,2.196,1327,3.421,1334,3.34,1387,2.408,1448,3.091,1465,4.756,1522,4.756,1575,2.686,1584,3.817,1587,3.817,1608,3.794,1836,2.536,1837,4.577,1838,3.454,1839,4.279,1840,2.536,1841,2.866,1842,2.296,1843,5.153,1844,1.881,1845,2.866,1846,2.866,1847,3.98,1848,2.866,1849,5.106,1850,3.817,1851,2.536,1852,2.536,1853,3.817,1854,2.686,1855,4.072,1856,5.448,1857,4.072,1858,3.421,1859,4.072,1860,2.866,1861,2.866,1862,4.072,1863,3.817,1864,4.072,1865,5.158,1866,2.866,1867,5.158,1868,4.072,1869,4.072,1870,3.604,1871,5.305,1872,4.072,1873,2.866,1874,5.158,1875,2.866,1876,2.408,1877,2.866,1878,2.866,1879,4.737,1880,2.866,1881,2.866,1882,2.866,1883,2.866,1884,2.686,1885,2.866,1886,2.866,1887,2.866,1888,2.866,1889,5.472,1890,5.472,1891,5.472,1892,3.851,1893,5.472,1894,3.851,1895,3.851,1896,3.851,1897,3.851,1898,3.851]],["title/injectables/MessageService.html",[0,1.271,758,1.928]],["body/injectables/MessageService.html",[0,1.66,2,2.329,3,0.076,4,0.203,5,0.076,6,0.11,11,0.817,18,0.383,19,0.629,20,2.093,25,1.429,35,1.008,38,1.741,40,1.322,41,1.087,42,1.327,43,0.01,44,0.794,45,0.679,46,1.289,47,1.544,48,1.159,55,1.635,56,0.992,71,1.646,75,0.006,80,0.004,84,0.004,85,1.06,86,0.798,96,3.283,99,0.249,104,0.196,113,1.159,115,1.39,129,0.382,130,0.181,133,0.188,134,1.538,139,0.932,141,1.406,155,2.647,160,1.313,161,0.992,199,1.865,205,1.645,206,2.785,213,1.394,230,3.474,278,2.107,297,1.075,337,0.839,359,1.22,429,1.159,642,3.203,750,3.747,758,3.305,761,3.941,772,2.147,773,4.219,777,4.018,792,3.209,794,3.756,813,1.023,819,3.756,835,3.756,993,2.689,1035,3.756,1053,4.42,1060,4.628,1072,2.233,1096,3.978,1238,2.553,1248,2.553,1249,3.566,1274,2.329,1327,3.566,1334,3.537,1387,4.109,1465,4.109,1522,4.109,1575,3.978,1584,2.848,1587,2.848,1608,2.434,1836,2.689,1837,4.109,1838,3.1,1839,4.093,1840,2.689,1841,3.039,1842,2.434,1843,4.928,1844,1.995,1845,3.039,1846,3.039,1847,4.679,1848,3.039,1849,5.661,1850,3.978,1851,2.689,1852,2.689,1853,3.978,1854,2.848,1855,3.039,1856,4.244,1857,3.039,1858,2.553,1859,3.039,1860,3.039,1861,3.039,1862,4.244,1863,2.848,1864,3.039,1865,3.039,1866,3.039,1867,4.244,1868,3.039,1869,4.244,1870,2.689,1871,4.583,1872,3.039,1873,3.039,1874,3.039,1875,3.039,1876,3.566,1877,3.039,1878,3.039,1879,4.89,1880,3.039,1881,3.039,1882,3.039,1883,3.039,1884,3.978,1885,3.039,1886,4.244,1887,4.244,1888,3.039,1899,5.024,1900,4.084,1901,5.703,1902,4.084,1903,4.084,1904,4.084]],["title/interfaces/MessageServiceConfig.html",[129,0.292,1847,2.73]],["body/interfaces/MessageServiceConfig.html",[0,1.739,3,0.082,4,0.203,5,0.082,6,0.062,11,0.543,18,0.41,19,0.659,20,1.983,35,0.772,40,1.266,41,0.833,43,0.01,45,0.664,46,1.083,47,1.517,48,1.24,55,1.575,56,0.902,71,1.706,75,0.006,80,0.005,84,0.005,85,0.812,96,3.296,99,0.258,104,0.21,113,1.24,115,1.487,129,0.4,130,0.185,133,0.197,134,1.575,139,0.977,141,1.354,155,2.743,160,1.333,161,1.028,195,1.15,199,1.933,205,1.759,206,2.918,213,1.46,230,2.133,278,1.614,297,1.15,337,1.399,359,1.304,429,1.24,642,3.281,750,3.407,758,2.639,761,3.818,772,2.296,773,4.207,777,4.007,792,2.918,794,2.876,813,1.497,819,2.876,835,3.934,993,2.876,1035,3.934,1053,4.371,1060,4.704,1072,2.389,1096,4.167,1238,2.731,1248,2.731,1249,3.735,1274,3.407,1327,3.735,1334,3.611,1387,2.731,1465,4.257,1522,4.257,1575,3.046,1584,3.046,1587,3.046,1608,2.604,1836,2.876,1837,4.257,1838,3.212,1839,4.192,1840,2.876,1841,3.25,1842,2.604,1843,4.821,1844,2.133,1845,3.25,1846,3.25,1847,4.577,1848,4.446,1849,5.52,1850,5.347,1851,2.876,1852,2.876,1853,4.167,1854,3.046,1855,3.25,1856,4.446,1857,3.25,1858,2.731,1859,3.25,1860,3.25,1861,3.25,1862,4.446,1863,3.046,1864,3.25,1865,3.25,1866,3.25,1867,4.446,1868,3.25,1869,4.446,1870,2.876,1871,4.749,1872,3.25,1873,3.25,1874,3.25,1875,3.25,1876,2.731,1877,3.25,1878,3.25,1879,5.067,1880,3.25,1881,3.25,1882,3.25,1883,3.25,1884,3.046,1885,3.25,1886,3.25,1887,3.25,1888,3.25]],["title/interfaces/MetaDataField.html",[129,0.292,1905,3.249]],["body/interfaces/MetaDataField.html",[3,0.128,4,0.16,5,0.128,6,0.097,18,0.642,19,0.875,43,0.01,45,0.761,69,1.203,75,0.008,80,0.007,84,0.007,86,1.687,129,0.458,130,0.185,156,3.475,195,1.802,208,1.848,1905,6.24,1906,5.494,1907,5.494]],["title/interfaces/ModelStateModel.html",[129,0.292,1908,2.73]],["body/interfaces/ModelStateModel.html",[0,1.085,3,0.043,4,0.054,5,0.043,6,0.033,8,0.993,11,0.288,15,2.051,16,0.882,18,0.218,19,0.411,20,1.566,22,2.533,23,0.882,29,0.993,35,0.41,37,2.762,40,0.431,41,0.443,43,0.01,44,1.006,45,0.77,46,1.133,47,0.675,48,0.659,49,1.323,50,1.22,53,3.924,56,1.197,65,0.993,69,1.049,71,1.17,75,0.004,80,0.002,84,0.002,88,0.908,90,2.147,91,1.339,96,3.068,99,0.297,104,0.111,105,2.364,106,1.595,107,1.501,108,0.993,109,0.993,110,0.935,113,0.659,115,0.79,120,1.384,122,1.458,123,1.458,124,0.908,125,0.858,126,1.501,128,1.7,129,0.313,130,0.153,132,0.963,133,0.076,134,1.403,139,1.32,141,1.277,142,0.675,149,3.49,155,2.975,156,2.645,160,1.263,161,1.229,162,0.993,163,1.059,173,1.451,174,1.451,177,1.619,182,0.812,184,1.619,195,0.611,212,0.463,245,1.339,246,1.501,256,1.528,257,2.374,269,2.454,281,1.323,287,1.841,297,1.407,299,3.08,301,1.269,303,1.323,304,1.175,308,0.89,326,0.676,337,1.203,353,2.038,359,1.748,382,2.463,387,2.678,390,2.924,400,0.627,405,1.678,409,1.503,429,1.938,435,2.203,445,1.501,450,1.419,453,1.35,457,0.981,488,1.902,511,1.778,514,1.006,528,0.611,612,1.646,655,3.734,662,2.125,667,1.458,668,0.882,669,0.858,670,0.858,673,2.663,679,1.938,683,0.908,684,3.271,687,1.134,754,1.384,761,2.13,785,2.901,813,1.17,848,1.725,894,4.619,895,1.887,932,2.919,942,5.405,943,4.497,945,1.529,946,1.529,947,1.529,949,2.454,954,1.384,965,2.219,1015,3.641,1115,0.858,1207,2.554,1219,1.269,1253,3.418,1256,4.083,1258,3.884,1260,1.269,1328,3.475,1329,4.29,1330,3.564,1331,3.338,1334,2.852,1379,1.134,1740,3.186,1741,3.257,1743,3.592,1744,4.116,1745,2.599,1756,1.727,1790,3.418,1838,2.203,1839,2.554,1844,1.134,1876,1.451,1908,2.33,1909,1.529,1910,2.991,1911,4.2,1912,4.64,1913,4.914,1914,4.914,1915,4.914,1916,4.359,1917,5.104,1918,4.415,1919,2.454,1920,4.779,1921,4.291,1922,4.359,1923,1.82,1924,2.33,1925,2.599,1926,1.384,1927,1.384,1928,1.863,1929,1.727,1930,1.529,1931,1.863,1932,1.529,1933,1.863,1934,1.384,1935,1.863,1936,1.323,1937,1.269,1938,2.125,1939,1.863,1940,1.863,1941,1.619,1942,1.758,1943,1.134,1944,1.384,1945,1.323,1946,1.323,1947,1.727,1948,2.783,1949,1.863,1950,2.222,1951,1.727,1952,1.863,1953,1.863,1954,1.863,1955,2.919,1956,2.222,1957,1.863,1958,1.863,1959,1.863,1960,1.863,1961,1.863,1962,1.863,1963,1.863,1964,1.863,1965,1.863,1966,1.863,1967,1.863,1968,1.863,1969,1.863,1970,1.863,1971,1.863,1972,1.863,1973,1.863,1974,1.863,1975,1.863,1976,1.863,1977,1.863,1978,1.863,1979,1.863,1980,1.727,1981,1.727,1982,1.863,1983,1.863,1984,1.863,1985,1.863,1986,1.863,1987,1.619,1988,1.619,1989,1.451,1990,1.863,1991,1.863,1992,3.748,1993,1.863,1994,5.272,1995,1.863,1996,1.863,1997,2.991,1998,2.773,1999,1.863,2000,1.863,2001,4.914,2002,1.863,2003,1.863,2004,1.863,2005,1.863,2006,1.323,2007,1.863,2008,4.291,2009,2.125,2010,1.863,2011,1.863,2012,1.863,2013,1.384,2014,1.863,2015,1.863,2016,2.991,2017,1.863,2018,4.291,2019,1.863,2020,2.991,2021,1.863,2022,1.863,2023,1.863,2024,1.863,2025,1.863,2026,1.863,2027,1.863,2028,1.863,2029,1.863,2030,1.863,2031,1.863,2032,1.863,2033,1.863,2034,1.863,2035,1.863,2036,1.863,2037,1.863,2038,1.863,2039,1.863,2040,2.991,2041,1.863,2042,1.863,2043,1.863,2044,1.863,2045,1.863,2046,1.863,2047,1.863,2048,1.863,2049,1.863,2050,2.991,2051,1.863,2052,1.863,2053,1.863,2054,1.863,2055,1.863,2056,1.863,2057,1.863,2058,1.863,2059,1.863,2060,1.863,2061,1.863,2062,1.863,2063,1.863,2064,1.863,2065,1.863,2066,2.991,2067,1.384,2068,1.619,2069,1.863,2070,1.529,2071,1.619,2072,2.991,2073,3.257,2074,2.991,2075,2.222,2076,2.991,2077,1.863,2078,1.863,2079,1.863,2080,1.863,2081,1.863,2082,1.863,2083,1.863,2084,1.384,2085,1.863,2086,1.863,2087,1.863,2088,1.863,2089,1.863,2090,1.863]],["title/components/NameInputComponent.html",[196,0.424,501,1.209]],["body/components/NameInputComponent.html",[3,0.069,4,0.086,5,0.099,6,0.118,11,0.77,12,1.26,18,0.344,19,0.583,20,1.552,25,1.324,32,2.676,35,0.648,38,1.923,40,0.983,41,1.008,42,1.441,43,0.01,44,1.269,45,0.716,46,1.123,47,0.958,48,1.924,52,1.068,55,1.273,56,0.936,69,1.013,75,0.006,76,1.731,80,0.004,84,0.004,85,1.336,86,1.572,99,0.234,104,0.176,129,0.246,130,0.123,133,0.246,134,0.754,139,0.6,141,1.421,142,0.958,160,0.987,161,1.085,196,0.749,197,0.99,198,1.324,199,1.042,200,1.154,201,1.154,202,1.124,208,0.99,209,1.579,210,1.579,211,2.253,212,1.124,213,0.897,214,1.427,216,1.427,256,0.854,259,2.606,260,1.699,300,1.552,308,1.008,309,0.897,321,1.096,333,2.307,334,3.778,335,3.778,359,1.096,399,1.283,400,0.99,401,1.523,405,1.318,409,0.942,414,1.096,427,1.57,444,1.674,450,1.142,453,1.142,457,0.966,468,1.154,469,1.8,470,1.154,471,2.132,472,1.154,473,1.154,474,1.042,475,1.154,476,1.016,477,1.948,478,1.042,479,1.154,480,1.427,481,1.948,482,1.042,483,1.096,484,1.154,485,1.042,486,1.154,487,1.042,488,0.99,489,1.154,490,1.042,491,1.154,492,1.042,493,1.042,494,1.154,495,1.042,496,1.124,497,1.016,498,1.154,499,1.042,500,1.662,501,1.877,502,1.042,503,1.042,504,1.948,505,1.042,506,1.539,507,1.662,508,1.016,509,1.042,510,1.016,511,0.854,512,1.154,513,1.016,514,0.99,515,1.042,516,1.154,517,1.042,518,1.154,519,1.042,520,1.154,521,1.042,522,1.324,523,1.042,524,1.5,525,1.042,526,1.154,527,1.042,528,1.392,529,1.154,530,1.042,531,1.154,532,1.154,561,3.93,596,1.478,607,2.129,658,2.187,664,2.572,665,1.042,666,2.194,667,2.652,668,1.394,669,1.356,670,2.289,675,3.481,676,4.08,677,1.5,678,1.948,683,2.423,684,2.262,685,4.493,686,3.151,687,3.655,691,2.559,692,2.416,693,2.294,695,2.73,704,2.582,705,1.752,706,1.929,708,3.233,709,4.657,711,3.233,725,2.945,726,2.559,727,2.294,1115,2.505,1276,3.311,1277,3.137,1826,5.501,2091,6.216,2092,4.657,2093,4.657,2094,5.459,2095,5.459,2096,5.459,2097,5.286,2098,5.459,2099,5.286,2100,6.364,2101,5.286,2102,4.657,2103,3.669,2104,3.687,2105,5.768,2106,5.973,2107,5.973,2108,3.93,2109,3.669,2110,3.93,2111,3.669,2112,3.669,2113,3.669,2114,3.233,2115,2.416,2116,3.934,2117,4.657,2118,3.233,2119,3.233,2120,3.233,2121,4.657,2122,3.233,2123,3.233,2124,3.233]],["title/modules/NameInputModule.html",[533,1.271,1811,2.875]],["body/modules/NameInputModule.html",[3,0.12,4,0.149,5,0.12,6,0.091,43,0.01,44,0.889,75,0.008,80,0.007,84,0.007,99,0.335,104,0.307,130,0.149,133,0.21,424,1.641,501,2.515,522,1.601,535,1.813,536,2.219,547,2.397,548,1.813,550,2.594,552,2.062,556,2.336,734,5.128,735,2.594,736,2.739,737,2.174,738,5.673,739,4.754,742,4.169,743,3.494,744,5.128,1706,6.716,1707,5.628,1811,5.824,1826,4.207,2091,4.754,2115,4.207,2125,5.628,2126,5.628,2127,5.628,2128,6.716,2129,6.716]],["title/interfaces/OrganData.html",[129,0.292,2130,3.045]],["body/interfaces/OrganData.html",[0,1.61,3,0.073,4,0.091,5,0.073,6,0.055,15,2.143,16,1.485,18,0.367,19,0.61,20,1.608,22,1.295,29,1.673,35,0.691,43,0.01,44,0.77,45,0.582,46,1.265,47,0.708,55,1.136,56,0.59,65,1.673,69,1.153,71,1.748,75,0.006,80,0.004,84,0.004,85,0.727,90,2.018,96,2.102,99,0.325,102,1.979,104,0.188,106,2.367,107,2.227,108,1.673,109,1.673,110,1.574,113,1.109,114,1.726,115,1.33,119,2.137,122,2.163,123,2.163,124,1.529,125,1.444,126,2.227,128,2.523,129,0.37,130,0.163,132,1.622,133,0.129,134,1.65,139,1.426,149,5.038,160,1.111,161,0.59,162,1.673,163,1.783,188,2.071,195,1.029,212,0.797,245,1.987,246,2.227,257,1.198,262,2.229,278,2.043,299,3.19,326,1.138,359,1.651,378,2.055,380,3.374,382,2.244,384,3.659,387,2.439,389,2.229,390,2.663,400,1.055,405,1.404,450,1.651,453,1.651,466,1.529,608,2.444,635,1.909,636,1.979,639,1.979,640,1.979,687,2.701,747,3.857,754,2.33,848,3.016,891,1.909,895,1.979,896,3.457,902,2.33,930,2.444,953,2.908,955,2.908,1015,3.655,1151,2.444,1253,3.024,1329,4.526,1330,4.358,1331,4.358,1379,1.909,1735,2.908,1839,3.024,1911,3.296,1912,3.642,1918,3.024,1920,4.779,1923,2.701,1924,2.444,1936,2.229,1942,1.844,1943,1.909,1945,2.229,1946,2.229,2067,4.159,2070,3.642,2075,2.33,2084,3.825,2130,4.475,2131,2.726,2132,2.726,2133,3.857,2134,2.726,2135,4.226,2136,2.726,2137,2.574,2138,5.6,2139,4.475,2140,2.908,2141,4.115,2142,2.908,2143,3.153,2144,2.574,2145,5.909,2146,3.137,2147,3.137,2148,2.726,2149,3.137,2150,3.137,2151,2.726,2152,3.137,2153,3.137,2154,2.726,2155,2.726,2156,3.137,2157,3.137,2158,3.137,2159,3.137,2160,2.726,2161,4.439,2162,4.439,2163,4.439,2164,4.439,2165,4.439,2166,4.439,2167,2.908,2168,3.137,2169,3.137,2170,3.137,2171,3.137,2172,3.137,2173,3.137,2174,3.137,2175,3.137,2176,3.137,2177,3.137,2178,3.137,2179,3.857,2180,3.137,2181,3.137,2182,3.137,2183,3.137,2184,5.151,2185,5.151,2186,3.137,2187,3.137,2188,3.137,2189,2.726,2190,2.726,2191,2.726,2192,2.726,2193,3.137,2194,2.726,2195,4.439,2196,3.857,2197,3.137,2198,3.137,2199,3.137,2200,3.137,2201,4.439,2202,3.137,2203,3.137,2204,3.137,2205,3.137,2206,3.137,2207,2.908,2208,3.137,2209,3.137,2210,3.137,2211,3.137,2212,3.137,2213,3.137,2214,3.137,2215,2.229,2216,3.137,2217,3.137,2218,3.137,2219,3.137,2220,3.137,2221,3.137]],["title/injectables/PageState.html",[0,1.271,91,1.569]],["body/injectables/PageState.html",[0,1.558,2,2.129,3,0.07,4,0.087,5,0.07,6,0.123,11,0.778,14,3.897,15,2.257,16,2.034,18,0.351,19,0.59,20,1.712,22,1.237,23,2.861,25,1.341,29,2.925,32,2.71,35,0.946,38,2.006,40,0.995,41,1.021,42,1.456,43,0.01,44,1.141,45,0.568,46,1.134,47,0.97,52,2.106,53,4.2,55,1.63,56,1.303,65,2.291,69,0.725,75,0.006,80,0.004,84,0.004,85,1.271,86,1.414,91,1.924,96,3.015,99,0.314,104,0.179,105,3.46,106,2.291,107,2.156,108,1.598,109,1.598,110,1.504,113,1.06,114,1.649,115,1.271,122,2.094,123,2.094,124,1.461,125,1.38,126,1.504,129,0.359,130,0.146,132,1.55,133,0.123,134,1.405,139,1.117,160,0.853,161,1.277,162,1.598,163,1.704,182,1.306,212,0.665,224,5.361,245,2.6,246,2.753,263,1.55,287,2.275,297,1.982,307,3.29,308,1.193,309,1.529,310,3.422,326,1.087,333,2.852,334,2.814,335,2.814,337,1.66,389,2.129,609,4.765,619,3.733,639,1.891,640,1.891,785,3.019,813,0.936,848,1.38,891,1.824,960,2.71,1325,2.335,1334,2.442,1379,1.824,1844,1.824,1858,2.335,1923,3.056,1926,2.226,1927,2.226,1932,4.121,1934,2.226,1937,2.042,1938,2.129,1945,2.129,1946,2.129,2001,3.73,2006,2.129,2009,2.129,2108,2.928,2110,2.928,2222,2.779,2223,4.297,2224,4.958,2225,6.482,2226,5.486,2227,5.486,2228,5.486,2229,5.353,2230,5.353,2231,6.727,2232,5.022,2233,6.578,2234,3.734,2235,3.734,2236,3.734,2237,3.734,2238,3.734,2239,3.734,2240,3.734,2241,3.734,2242,4.297,2243,3.734,2244,4.297,2245,4.656,2246,3.734,2247,5.384,2248,4.297,2249,3.734,2250,4.297,2251,3.734,2252,4.297,2253,4.297,2254,3.734,2255,4.297,2256,3.734,2257,3.734,2258,3.734,2259,3.734,2260,3.734,2261,3.734,2262,3.734,2263,2.997,2264,2.604,2265,2.604,2266,2.997,2267,2.997,2268,3.912,2269,2.335,2270,2.997,2271,2.997,2272,2.997,2273,2.997,2274,2.997,2275,2.604,2276,2.997,2277,2.997,2278,2.997,2279,2.997,2280,2.997,2281,4.297,2282,2.997,2283,4.364,2284,2.997,2285,2.997,2286,3.983,2287,4.297,2288,3.733,2289,2.997,2290,2.997,2291,2.997,2292,2.997,2293,2.997,2294,4.297,2295,2.997,2296,2.997,2297,2.997,2298,5.022,2299,2.997,2300,2.604,2301,4.297,2302,2.997,2303,2.997,2304,2.997]],["title/interfaces/PageStateModel.html",[129,0.292,2269,2.73]],["body/interfaces/PageStateModel.html",[0,1.703,3,0.079,4,0.099,5,0.079,6,0.06,11,0.526,14,3.335,15,2.283,16,1.609,18,0.398,19,0.645,20,1.465,22,1.938,23,2.882,29,1.812,35,0.748,40,0.787,41,0.807,43,0.01,44,1.006,45,0.711,47,0.768,53,3.97,56,1.237,65,1.812,69,0.792,75,0.006,80,0.004,84,0.004,86,0.828,91,1.522,96,2.98,99,0.322,104,0.203,105,3.658,106,2.503,107,2.356,108,1.812,109,1.812,110,1.706,113,1.202,114,1.87,115,1.441,122,2.288,123,2.288,124,1.656,125,1.565,126,1.706,129,0.392,130,0.156,132,1.758,133,0.139,134,1.485,139,1.181,160,0.931,161,1.145,162,1.812,163,1.932,182,1.481,195,1.115,212,0.727,224,5.358,245,2.596,246,2.356,263,1.758,287,2.384,297,1.996,307,3.522,308,1.277,309,1.637,310,3.664,326,1.233,333,2.917,334,3.075,335,3.075,337,1.811,389,2.415,609,3.852,619,4.079,639,2.144,640,2.144,785,2.583,813,1.465,848,1.565,891,2.068,960,2.144,1325,2.648,1334,1.932,1379,2.068,1844,2.068,1858,2.648,1923,2.856,1926,2.524,1927,2.524,1932,4.412,1934,2.524,1937,2.316,1938,2.415,1945,2.415,1946,2.415,2001,3.994,2006,2.415,2009,2.415,2108,2.316,2110,2.316,2222,3.151,2223,3.399,2224,5.292,2225,6.753,2226,3.399,2227,3.399,2228,3.399,2231,6.929,2232,3.399,2233,6.821,2242,3.399,2244,3.399,2245,3.151,2247,5.377,2248,3.399,2250,3.399,2252,3.399,2253,3.399,2255,3.399,2263,3.399,2264,2.953,2265,2.953,2266,3.399,2267,3.399,2268,4.741,2269,3.657,2270,3.399,2271,3.399,2272,3.399,2273,3.399,2274,3.399,2275,2.953,2276,3.399,2277,3.399,2278,3.399,2279,3.399,2280,3.399,2281,4.694,2282,3.399,2283,4.673,2284,3.399,2285,3.399,2286,4.352,2287,4.694,2288,4.079,2289,3.399,2290,3.399,2291,3.399,2292,3.399,2293,3.399,2294,4.694,2295,3.399,2296,3.399,2297,3.399,2298,5.378,2299,3.399,2300,2.953,2301,4.694,2302,3.399,2303,3.399,2304,3.399]],["title/interfaces/Person.html",[129,0.292,2268,2.73]],["body/interfaces/Person.html",[0,1.735,3,0.082,4,0.102,5,0.082,6,0.062,11,0.541,14,3.399,15,2.229,16,1.655,18,0.409,19,0.657,20,1.493,22,1.443,23,2.778,29,1.863,35,0.769,40,0.809,41,0.83,43,0.01,44,1.017,45,0.541,47,0.789,53,4.003,56,1.245,65,1.863,69,1.07,75,0.006,80,0.005,84,0.005,86,0.851,91,1.564,96,3.005,99,0.323,104,0.209,105,3.701,106,2.551,107,2.401,108,1.863,109,1.863,110,1.754,113,1.236,114,1.923,115,1.482,122,2.331,123,2.331,124,1.703,125,1.608,126,1.754,129,0.399,130,0.159,132,1.807,133,0.143,134,1.502,139,1.195,160,0.949,161,1.156,162,1.863,163,1.986,182,1.522,195,1.146,212,0.741,224,5.228,245,2.627,246,2.401,263,1.807,287,2.408,297,2.016,307,3.134,308,1.136,309,1.457,310,3.26,326,1.267,333,2.805,334,4.025,335,4.025,337,1.664,389,2.482,609,3.925,619,4.157,639,2.204,640,2.204,785,2.633,813,1.091,848,1.608,891,2.911,960,2.204,1325,3.727,1334,1.986,1379,2.126,1844,2.126,1858,3.727,1923,2.911,1926,2.595,1927,2.595,1932,4.476,1934,2.595,1937,2.381,1938,2.482,1945,2.482,1946,2.482,2001,4.052,2006,2.482,2009,2.482,2108,2.381,2110,2.381,2222,3.24,2223,3.494,2224,4.814,2225,6.498,2226,3.494,2227,3.494,2228,3.494,2231,6.79,2232,3.494,2233,6.617,2242,3.494,2244,3.494,2245,3.24,2247,5.058,2248,3.494,2250,3.494,2252,3.494,2253,3.494,2255,3.494,2263,3.494,2264,3.036,2265,3.036,2266,3.494,2267,3.494,2268,4.787,2269,2.722,2270,3.494,2271,3.494,2272,3.494,2273,3.494,2274,3.494,2275,3.036,2276,3.494,2277,3.494,2278,3.494,2279,3.494,2280,3.494,2281,4.785,2282,3.494,2283,4.741,2284,3.494,2285,3.494,2286,4.436,2287,4.785,2288,4.157,2289,3.494,2290,3.494,2291,3.494,2292,3.494,2293,3.494,2294,4.785,2295,3.494,2296,3.494,2297,3.494,2298,5.456,2299,3.494,2300,3.036,2301,4.785,2302,3.494,2303,3.494,2304,3.494]],["title/injectables/ReferenceDataState.html",[0,1.271,1942,2.06]],["body/injectables/ReferenceDataState.html",[0,1.493,2,2.007,3,0.066,4,0.082,5,0.066,6,0.108,11,0.752,15,2.217,16,1.949,18,0.33,20,1.771,22,1.7,25,1.285,29,2.846,35,0.906,38,1.716,42,1.547,43,0.01,44,1.027,45,0.603,46,1.205,47,0.93,55,1.565,56,0.775,65,2.195,69,1.188,71,1.666,75,0.005,80,0.004,84,0.004,85,0.654,90,2.222,96,2.3,99,0.319,102,1.782,104,0.169,106,2.195,107,2.066,108,1.506,109,1.506,110,1.418,113,0.999,114,1.555,115,1.198,119,1.925,122,2.006,123,2.006,124,1.377,125,1.3,126,2.066,128,2.34,129,0.344,130,0.155,132,1.461,133,0.116,134,1.604,139,1.406,149,5.151,160,1.059,161,0.532,162,1.506,163,1.606,188,1.953,212,0.752,245,2.389,246,2.678,257,1.078,262,2.007,278,2.457,299,3.193,326,1.025,359,1.986,378,1.85,380,3.181,382,2.116,384,3.451,387,2.3,389,2.007,390,2.512,400,1.385,405,1.265,450,1.645,453,1.645,466,1.377,608,2.201,635,1.719,636,1.782,639,1.782,640,1.782,687,2.505,747,4.637,754,3.057,848,3.139,891,2.505,895,2.597,896,4.157,902,2.098,930,2.201,953,2.619,955,2.619,1015,3.572,1151,2.201,1253,2.805,1329,4.423,1330,4.343,1331,4.343,1379,1.719,1735,2.619,1839,2.805,1911,3.057,1912,3.378,1918,2.805,1920,4.88,1923,2.955,1924,2.201,1936,2.007,1942,2.42,1943,3.72,1945,2.007,1946,2.007,2067,3.964,2070,3.378,2075,2.098,2084,3.607,2130,4.22,2131,5.312,2132,2.455,2133,3.577,2134,2.455,2135,3.985,2136,2.455,2137,2.318,2138,6.114,2139,4.22,2140,2.619,2141,3.817,2142,2.619,2143,2.925,2144,2.318,2145,5.673,2146,2.825,2147,2.825,2148,2.455,2149,2.825,2150,2.825,2151,2.455,2152,2.825,2153,2.825,2154,2.455,2155,2.455,2156,2.825,2157,2.825,2158,2.825,2159,2.825,2160,2.455,2161,4.117,2162,4.117,2163,4.117,2164,4.117,2165,4.117,2166,4.117,2167,3.817,2168,2.825,2169,2.825,2170,2.825,2171,2.825,2172,2.825,2173,2.825,2174,2.825,2175,5.337,2176,2.825,2177,2.825,2178,2.825,2179,3.577,2180,2.825,2181,2.825,2182,2.825,2183,4.117,2184,4.857,2185,4.857,2186,2.825,2187,2.825,2188,2.825,2189,2.455,2190,2.455,2191,2.455,2192,2.455,2193,2.825,2194,2.455,2195,4.117,2196,4.22,2197,2.825,2198,2.825,2199,2.825,2200,2.825,2201,5.337,2202,4.117,2203,4.117,2204,2.825,2205,2.825,2206,2.825,2207,2.619,2208,2.825,2209,2.825,2210,2.825,2211,2.825,2212,2.825,2213,2.825,2214,4.117,2215,2.925,2216,4.117,2217,2.825,2218,2.825,2219,2.825,2220,2.825,2221,2.825,2305,5.129,2306,5.129,2307,5.129,2308,3.52,2309,3.52,2310,3.52,2311,3.52,2312,4.503,2313,3.52,2314,3.52,2315,3.52]],["title/interfaces/ReferenceDataStateModel.html",[129,0.292,2160,3.045]],["body/interfaces/ReferenceDataStateModel.html",[0,1.585,3,0.072,4,0.089,5,0.072,6,0.054,15,2.126,16,1.453,18,0.359,19,0.6,20,1.588,22,1.267,29,1.636,35,0.676,43,0.01,44,0.758,45,0.801,47,0.693,55,1.119,56,0.577,65,1.636,69,1.149,71,1.731,75,0.006,80,0.004,84,0.004,85,0.711,90,1.993,96,2.069,99,0.324,102,1.936,104,0.184,106,2.33,107,2.193,108,1.636,109,1.636,110,1.54,113,1.085,114,1.689,115,1.301,119,2.091,122,2.129,123,2.129,124,1.495,125,1.413,126,2.193,128,2.484,129,0.365,130,0.161,132,1.587,133,0.126,134,1.64,139,1.422,149,5.018,160,1.1,161,0.577,162,1.636,163,1.744,188,2.046,195,1.007,212,0.788,245,1.956,246,2.193,257,1.171,262,2.18,278,2.011,299,3.11,326,1.113,359,1.626,378,2.01,380,3.333,382,2.217,384,3.615,387,2.409,389,2.18,390,2.631,400,1.032,405,1.374,450,1.492,453,1.492,466,1.495,608,2.391,635,1.867,636,1.936,639,1.936,640,1.936,687,2.659,747,3.797,754,2.279,848,3.001,891,1.867,895,1.936,896,3.404,902,2.279,930,2.391,953,2.845,955,2.845,1015,3.449,1151,2.391,1253,2.977,1326,6.864,1329,4.27,1330,3.939,1331,3.939,1379,1.867,1735,2.845,1839,2.977,1911,4.352,1912,4.808,1918,2.977,1920,4.319,1923,2.659,1924,2.391,1936,2.18,1942,1.804,1943,1.867,1945,2.18,1946,2.18,2067,4.118,2070,3.585,2075,2.279,2084,3.779,2130,3.797,2131,2.667,2132,2.667,2133,3.797,2134,2.667,2135,4.175,2136,2.667,2137,2.518,2138,5.545,2139,4.422,2140,2.845,2141,4.051,2142,2.845,2143,3.104,2144,2.518,2145,5.86,2146,3.069,2147,3.069,2148,2.667,2149,3.069,2150,3.069,2151,2.667,2152,3.069,2153,3.069,2154,2.667,2155,2.667,2156,3.069,2157,3.069,2158,3.069,2159,3.069,2160,3.797,2161,5.86,2162,4.37,2163,5.86,2164,5.86,2165,5.86,2166,5.86,2167,2.845,2168,3.069,2169,3.069,2170,3.069,2171,3.069,2172,3.069,2173,3.069,2174,3.069,2175,3.069,2176,3.069,2177,3.069,2178,3.069,2179,3.797,2180,3.069,2181,3.069,2182,3.069,2183,3.069,2184,5.089,2185,5.089,2186,3.069,2187,3.069,2188,3.069,2189,2.667,2190,2.667,2191,2.667,2192,2.667,2193,3.069,2194,2.667,2195,4.37,2196,3.797,2197,3.069,2198,3.069,2199,3.069,2200,3.069,2201,4.37,2202,3.069,2203,3.069,2204,3.069,2205,3.069,2206,3.069,2207,2.845,2208,3.069,2209,3.069,2210,3.069,2211,3.069,2212,3.069,2213,3.069,2214,3.069,2215,2.18,2216,3.069,2217,3.069,2218,3.069,2219,3.069,2220,3.069,2221,3.069]],["title/components/RegistrationContentComponent.html",[196,0.424,502,1.239]],["body/components/RegistrationContentComponent.html",[3,0.058,4,0.072,5,0.087,6,0.12,11,0.876,12,1.114,15,2.32,18,0.291,19,0.515,22,2.599,23,2.779,25,1.17,35,0.825,38,1.949,40,0.868,41,0.89,42,1.56,43,0.01,44,1.187,45,0.741,46,1.215,52,0.903,55,1.546,56,1.185,69,0.76,75,0.005,80,0.003,84,0.003,85,1.162,86,1.222,88,2.445,91,2.246,99,0.267,104,0.149,114,1.37,115,1.056,125,1.146,130,0.072,133,0.258,134,0.637,142,0.562,156,2.701,160,1.198,161,1.136,196,0.651,197,0.837,198,1.17,199,0.88,200,0.975,201,0.975,202,0.95,208,0.837,209,1.395,210,1.395,211,2.229,212,1.111,213,0.758,214,1.261,216,1.261,223,3.918,256,1.086,259,1.395,260,1.17,263,3.195,297,1.479,299,3.135,300,1.407,301,3.072,307,2.455,308,1.675,309,1.528,313,1.37,321,0.926,326,0.903,331,1.849,332,1.769,337,1.448,400,1.261,401,1.287,404,2.075,408,2.131,409,0.797,410,1.57,413,1.515,414,0.926,416,3.22,418,1.37,421,1.287,427,1.327,429,1.774,431,2.65,434,1.327,437,1.327,438,2.49,442,2.953,444,1.415,445,1.249,448,1.463,450,0.67,451,1.515,453,0.67,457,0.817,468,0.975,469,1.929,470,0.975,471,1.966,472,0.975,473,0.975,474,0.88,475,0.975,476,0.859,477,1.766,478,0.88,479,0.975,480,1.261,481,1.766,482,0.88,483,0.926,484,0.975,485,0.88,486,0.975,487,0.88,488,0.837,489,0.975,490,0.88,491,0.975,492,0.88,493,0.88,494,0.975,495,0.88,496,0.95,497,0.859,498,0.975,499,0.88,500,1.469,501,0.859,502,1.774,503,0.88,504,1.766,505,0.88,506,1.36,507,1.469,508,0.859,509,0.88,510,0.859,511,0.722,512,0.975,513,0.859,514,0.837,515,0.88,516,0.975,517,0.88,518,0.975,519,0.88,520,0.975,521,0.88,522,1.17,523,0.88,524,1.326,525,0.88,526,0.975,527,0.88,528,1.23,529,0.975,530,0.88,531,0.975,532,0.975,583,5.554,660,2.365,665,0.88,677,1.326,678,1.766,684,3.016,705,1.548,718,2.554,719,3.257,785,2.063,813,1.17,827,3.076,864,4.509,865,4.115,964,3.076,969,2.019,976,2.163,1007,4.115,1219,2.554,1242,4.169,1268,4.994,1277,3.972,1310,2.92,1329,4.509,1330,4.018,1331,4.39,1340,2.49,1350,2.163,1359,4.115,1559,2.92,1635,4.117,1668,1.769,1672,2.163,1716,4.949,1718,4.949,1720,4.115,1731,4.115,1774,4.115,1775,4.115,1789,3.749,1797,2.308,1920,4.406,2013,2.784,2108,2.554,2110,2.554,2245,4.18,2268,1.939,2300,2.163,2312,2.308,2316,5.882,2317,5.882,2318,2.733,2319,5.617,2320,5.617,2321,3.699,2322,4.914,2323,5.617,2324,5.617,2325,4.67,2326,6.251,2327,4.67,2328,4.115,2329,4.99,2330,4.67,2331,4.67,2332,4.67,2333,3.102,2334,3.749,2335,3.749,2336,3.102,2337,4.67,2338,4.67,2339,3.102,2340,4.115,2341,4.949,2342,3.102,2343,4.67,2344,3.102,2345,3.102,2346,3.102,2347,3.102,2348,3.102,2349,3.102,2350,3.102,2351,3.102,2352,1.696,2353,3.102,2354,3.102,2355,3.102,2356,4.67,2357,3.102,2358,3.102,2359,3.102,2360,4.67,2361,3.102,2362,3.102,2363,3.102,2364,3.102,2365,2.49,2366,3.102,2367,3.102,2368,3.102]],["title/modules/RegistrationContentModule.html",[533,1.271,2369,3.045]],["body/modules/RegistrationContentModule.html",[3,0.116,4,0.145,5,0.116,6,0.088,43,0.01,75,0.008,80,0.007,84,0.007,99,0.336,104,0.298,130,0.145,133,0.204,212,0.771,308,1.182,326,1.805,424,1.593,497,2.073,502,2.57,535,1.76,536,2.18,547,2.354,548,1.76,550,2.548,552,2.417,556,2.294,570,6.597,583,4.084,735,2.548,736,2.691,737,2.11,742,4.095,743,3.391,1662,5.223,1663,4.325,1665,4.084,1701,5.434,1811,5.723,1823,4.977,1824,4.977,1825,5.463,1826,4.084,1827,4.977,2316,4.325,2317,4.325,2369,6.291,2370,5.463,2371,5.463,2372,5.463,2373,6.2,2374,6.2,2375,5.463]],["title/components/RegistrationModalComponent.html",[196,0.424,503,1.239]],["body/components/RegistrationModalComponent.html",[3,0.08,4,0.1,5,0.11,6,0.114,11,0.732,12,1.405,18,0.402,19,0.65,20,1.476,22,2.232,23,2.56,25,1.476,35,1.041,38,1.83,40,1.095,41,1.123,42,0.995,43,0.01,44,1.122,45,0.658,46,0.776,52,1.246,55,1.211,56,1.096,69,0.579,75,0.006,80,0.005,84,0.005,85,1.095,86,1.152,88,2.839,91,2.608,99,0.305,102,2.167,104,0.205,112,2.25,113,1.215,115,1.456,122,1.674,123,1.674,124,1.674,125,1.581,130,0.1,133,0.259,134,0.879,142,1.221,160,0.682,161,1.149,196,0.763,197,1.155,198,1.476,199,1.215,201,1.346,202,1.311,205,2.373,207,4.436,208,1.155,211,2.279,212,1.135,213,1.046,216,1.59,231,4.779,256,0.995,258,1.89,260,1.476,287,1.346,299,1.581,300,1.688,308,1.682,309,2.126,331,2.551,332,2.44,409,1.099,450,0.924,453,0.924,457,1.127,468,1.346,469,1.907,470,1.346,471,2.282,472,1.346,473,1.346,474,1.215,475,1.346,476,1.185,477,2.118,478,1.215,479,1.346,480,1.59,481,2.118,482,1.215,483,1.278,484,1.346,485,1.215,486,1.346,487,1.215,488,1.155,489,1.346,490,1.215,491,1.346,492,1.215,493,1.215,494,1.346,495,1.215,496,1.311,497,1.185,498,1.346,499,1.215,500,1.852,501,1.185,502,1.672,503,2.06,504,2.118,505,1.215,506,1.715,507,1.852,508,1.185,509,1.215,510,1.185,511,0.995,512,1.346,513,1.185,514,1.155,515,1.215,516,1.346,517,1.215,518,1.346,519,1.215,520,1.346,521,1.215,522,1.476,523,1.215,524,1.672,525,1.215,526,1.346,527,1.215,528,1.551,529,1.346,530,1.215,531,1.346,532,1.346,583,5.729,665,1.215,677,1.672,678,2.118,705,1.952,781,2.818,961,3.683,1118,5.401,1242,4.895,1557,5.401,1930,2.818,1937,2.34,1938,2.44,2006,2.44,2009,2.44,2207,3.185,2316,5.62,2317,2.985,2321,4.436,2352,2.34,2375,3.77,2376,2.985,2377,5.891,2378,4.384,2379,7.257,2380,3.435,2381,6.109,2382,6.736,2383,3.77,2384,4.384,2385,3.77,2386,4.279,2387,4.279,2388,4.279,2389,3.435,2390,4.279,2391,4.279,2392,4.279,2393,4.279,2394,3.435,2395,4.279,2396,4.279,2397,4.279]],["title/modules/RegistrationModalModule.html",[533,1.271,545,3.045]],["body/modules/RegistrationModalModule.html",[3,0.119,4,0.149,5,0.119,6,0.09,43,0.01,75,0.008,80,0.007,84,0.007,99,0.331,104,0.306,130,0.149,133,0.21,308,1.452,424,1.639,503,2.579,535,1.811,536,2.218,545,6.256,547,2.395,548,1.811,550,2.593,552,2.459,556,2.334,562,3.162,563,2.496,583,5.017,735,2.593,736,2.737,737,2.172,2316,4.45,2317,4.45,2352,3.49,2369,6.102,2398,5.622,2399,5.622,2400,5.622,2401,6.38,2402,5.122,2403,4.45,2404,6.115,2405,6.38]],["title/injectables/RegistrationState.html",[0,1.271,875,2.295]],["body/injectables/RegistrationState.html",[0,1.098,1,2.689,2,1.344,3,0.044,4,0.055,5,0.071,6,0.119,8,2.308,9,1.473,11,0.88,12,1.732,14,2.151,15,2.466,16,1.434,18,0.221,19,0.416,20,2.113,22,2.854,23,3.122,25,0.945,29,2.308,32,1.91,33,4.863,35,0.833,36,1.891,37,3.341,38,1.944,40,0.701,41,0.719,42,1.69,43,0.01,44,1.082,45,0.734,46,1.316,47,0.977,48,1.531,49,2.689,50,2.48,52,1.373,53,3.346,55,1.664,56,1.097,59,2.484,65,1.614,69,1.023,75,0.004,80,0.002,83,2.631,84,0.002,85,0.438,86,1.539,88,1.845,90,2.375,91,1.695,96,2.956,99,0.311,102,1.193,104,0.113,105,3.476,106,1.614,107,1.519,108,1.008,109,1.008,110,0.949,112,1.239,113,0.669,114,1.666,115,0.802,118,1.753,119,1.289,120,1.405,129,0.158,130,0.088,132,0.978,133,0.078,134,1.553,139,1.235,140,1.289,141,1.112,142,0.684,155,2.172,156,3.09,160,1.182,161,0.891,162,1.008,163,1.075,164,1.552,165,1.344,166,1.552,167,1.552,168,1.473,169,1.552,170,1.552,173,1.473,174,1.473,181,1.552,185,1.643,188,1.522,208,2.071,212,0.586,245,2.375,246,2.172,256,1.097,257,0.722,262,1.344,287,1.695,297,0.993,299,0.871,308,1.576,326,0.686,333,0.802,334,1.239,335,1.239,337,1.598,359,2.548,382,1.649,387,1.793,390,1.958,400,1.273,435,1.112,466,1.845,493,1.339,511,0.548,610,3.028,612,2.605,614,2.807,621,3.884,629,1.753,635,1.151,636,1.193,659,2.807,661,2.812,662,1.344,679,1.566,712,3.028,785,1.666,813,1.577,816,3.028,820,3.29,848,2.179,875,1.983,902,1.405,944,1.643,960,3.476,961,3.688,962,3.551,1115,1.394,1129,1.552,1207,2.949,1265,2.631,1277,3.677,1325,3.934,1334,1.721,1373,2.807,1379,1.151,1405,2.807,1454,3.786,1459,3.028,1460,1.891,1740,3.516,1790,2.063,1838,1.779,1870,2.484,1908,1.473,1918,3.441,1923,2.304,1925,2.631,1926,1.405,1927,1.405,1934,1.405,1936,1.344,1937,1.289,1938,2.151,1942,2.225,1943,1.151,1944,1.405,1948,1.405,1950,1.405,1956,2.249,1989,1.473,2001,2.812,2006,1.344,2009,2.151,2084,1.405,2104,3.761,2108,1.289,2110,2.58,2116,2.807,2133,5.728,2134,1.643,2143,1.344,2148,2.631,2179,1.643,2190,1.643,2191,1.643,2192,1.643,2196,1.643,2215,2.689,2264,1.643,2265,1.643,2269,1.473,2275,1.643,2283,2.631,2288,1.643,2312,1.753,2365,1.891,2406,1.891,2407,5.83,2408,5.511,2409,4.155,2410,3.772,2411,4.155,2412,4.155,2413,3.772,2414,3.772,2415,3.772,2416,3.772,2417,5.684,2418,3.51,2419,4.155,2420,4.155,2421,4.155,2422,3.772,2423,3.323,2424,2.356,2425,2.356,2426,2.356,2427,3.323,2428,4.389,2429,2.356,2430,2.356,2431,3.028,2432,3.323,2433,2.356,2434,2.356,2435,3.323,2436,2.356,2437,2.356,2438,3.323,2439,2.356,2440,3.323,2441,4.75,2442,3.323,2443,3.323,2444,3.323,2445,2.807,2446,3.323,2447,2.356,2448,3.323,2449,3.323,2450,2.356,2451,3.323,2452,2.356,2453,4.155,2454,3.323,2455,3.323,2456,3.323,2457,2.356,2458,2.356,2459,2.356,2460,2.356,2461,2.356,2462,2.356,2463,2.356,2464,2.356,2465,2.356,2466,2.356,2467,2.356,2468,2.356,2469,2.356,2470,2.356,2471,3.786,2472,2.356,2473,2.356,2474,3.51,2475,3.323,2476,2.356,2477,2.356,2478,2.076,2479,2.076,2480,1.891,2481,2.076,2482,3.323,2483,2.076,2484,1.753,2485,1.753,2486,4.75,2487,4.155,2488,3.323,2489,3.323,2490,3.323,2491,2.076,2492,2.076,2493,2.076,2494,3.323,2495,2.076,2496,2.076,2497,2.076,2498,2.076,2499,2.076,2500,2.076,2501,2.076,2502,2.076,2503,2.076,2504,2.076,2505,1.891,2506,2.076,2507,2.076,2508,2.076,2509,2.076,2510,2.076,2511,2.076,2512,2.076,2513,2.076,2514,2.076,2515,2.076,2516,2.076,2517,2.076,2518,2.076,2519,2.076,2520,2.076,2521,2.076,2522,2.076,2523,2.076,2524,2.076,2525,2.076,2526,2.076,2527,2.076,2528,2.076,2529,2.076,2530,2.076,2531,2.076,2532,2.076,2533,2.076,2534,2.076,2535,2.076,2536,2.076,2537,2.076,2538,2.076,2539,2.076,2540,2.076,2541,1.753,2542,2.076,2543,1.753,2544,1.643,2545,1.891,2546,2.076,2547,2.076,2548,4.75,2549,4.75,2550,2.076,2551,3.323,2552,2.076,2553,2.076,2554,2.076,2555,2.076,2556,2.076,2557,2.076,2558,2.076,2559,2.076,2560,2.076,2561,2.076,2562,2.076,2563,2.076,2564,2.076,2565,1.891,2566,2.076,2567,2.076,2568,2.076,2569,2.076,2570,2.076,2571,3.323,2572,2.076,2573,2.076,2574,2.076,2575,2.076,2576,2.076,2577,2.076,2578,4.155,2579,2.076,2580,2.076,2581,3.323,2582,3.323,2583,3.323,2584,3.323,2585,2.076,2586,2.076,2587,2.076,2588,2.076,2589,2.076,2590,2.076,2591,2.076,2592,2.076,2593,2.076,2594,1.891,2595,2.076,2596,2.076,2597,2.076,2598,2.076,2599,2.076,2600,2.076,2601,2.076,2602,2.076,2603,2.076,2604,2.076,2605,2.076,2606,2.076,2607,2.076,2608,2.076,2609,2.076,2610,2.076,2611,2.076,2612,2.076,2613,2.076,2614,2.076,2615,2.076,2616,2.076,2617,2.076,2618,2.076,2619,2.076,2620,2.076,2621,2.076,2622,2.076,2623,2.076,2624,2.076,2625,2.076,2626,2.076,2627,2.076,2628,2.076,2629,2.076,2630,2.076,2631,2.076,2632,2.076,2633,2.076]],["title/interfaces/RegistrationStateModel.html",[129,0.292,2485,3.249]],["body/interfaces/RegistrationStateModel.html",[0,1.299,1,2.544,3,0.055,4,0.068,5,0.084,6,0.041,8,2.594,9,1.826,11,0.363,12,1.557,14,1.665,15,2.414,16,1.11,18,0.274,19,0.492,20,1.967,22,2.802,23,2.985,29,1.25,33,4.617,35,0.788,37,3.08,40,0.543,41,0.557,43,0.01,44,0.844,45,0.65,47,0.809,48,1.266,49,2.544,50,2.345,53,3.069,55,1.113,56,0.986,59,1.923,65,1.25,69,0.969,75,0.005,80,0.003,83,3.111,84,0.003,86,1.557,88,1.745,90,2.252,91,1.603,96,2.807,99,0.322,102,1.478,104,0.14,105,3.739,106,1.909,107,1.797,108,1.25,109,1.25,110,1.176,112,1.535,113,0.829,114,1.97,115,0.994,118,2.173,119,1.597,120,1.74,129,0.196,130,0.104,132,1.212,133,0.096,134,1.637,139,1.302,140,1.597,141,1.154,142,0.529,155,2.441,156,3.208,160,1.251,161,0.818,162,1.25,163,1.332,164,1.923,165,1.665,166,1.923,167,1.923,168,1.826,169,1.923,170,1.923,173,1.826,174,1.826,181,1.923,185,2.036,188,1.747,195,0.769,208,1.933,212,0.673,245,2.346,246,1.797,256,1.259,257,0.895,262,1.665,287,1.702,297,0.769,299,1.079,308,1.581,326,0.85,333,1.518,334,1.535,335,1.535,337,1.614,359,2.494,382,1.893,387,2.058,390,2.247,400,1.461,435,1.377,466,2.118,493,1.266,511,0.679,612,2.391,614,3.32,621,3.565,629,2.173,635,1.426,636,1.478,659,2.173,661,3.227,662,1.665,679,1.212,712,3.581,785,1.29,813,1.725,816,3.581,820,3.776,848,2.412,875,1.535,902,1.74,944,2.036,960,3.485,961,3.79,962,2.938,1115,1.079,1129,1.923,1207,2.44,1265,2.036,1277,3.306,1325,4.082,1334,1.332,1373,2.173,1379,1.426,1405,2.173,1454,2.344,1459,2.344,1460,2.344,1740,3.613,1790,2.44,1838,1.377,1870,1.923,1908,1.826,1918,2.961,1923,2.179,1925,3.111,1926,1.74,1927,1.74,1934,1.74,1936,1.665,1937,1.597,1938,2.544,1942,2.105,1943,1.426,1944,1.74,1948,1.74,1950,1.74,1956,2.659,1989,1.826,2001,3.227,2006,1.665,2009,2.544,2084,1.74,2104,3.111,2108,1.597,2110,2.44,2116,2.173,2133,5.151,2134,2.036,2143,1.665,2148,3.111,2179,2.036,2190,2.036,2191,2.036,2192,2.036,2196,2.036,2215,1.665,2264,2.036,2265,2.036,2269,1.826,2275,2.036,2283,3.111,2288,2.036,2365,2.344,2406,2.344,2407,6.303,2408,5.928,2409,2.572,2411,2.572,2412,2.572,2417,4.865,2418,2.173,2419,2.572,2420,2.572,2421,2.572,2423,2.572,2427,2.572,2428,3.776,2431,2.344,2432,2.572,2435,2.572,2438,2.572,2440,2.572,2441,4.77,2442,2.572,2443,2.572,2444,2.572,2445,2.173,2446,2.572,2448,2.572,2449,2.572,2451,2.572,2453,3.93,2454,2.572,2455,2.572,2456,2.572,2471,3.581,2474,3.32,2475,2.572,2478,2.572,2479,2.572,2480,2.344,2481,2.572,2482,3.93,2483,2.572,2484,2.173,2485,3.32,2486,6.309,2487,4.77,2488,3.93,2489,3.93,2490,3.93,2491,2.572,2492,2.572,2493,2.572,2494,3.93,2495,2.572,2496,2.572,2497,2.572,2498,2.572,2499,2.572,2500,2.572,2501,2.572,2502,2.572,2503,2.572,2504,2.572,2505,2.344,2506,2.572,2507,2.572,2508,2.572,2509,2.572,2510,2.572,2511,2.572,2512,2.572,2513,2.572,2514,2.572,2515,2.572,2516,2.572,2517,2.572,2518,2.572,2519,2.572,2520,2.572,2521,2.572,2522,2.572,2523,2.572,2524,2.572,2525,2.572,2526,2.572,2527,2.572,2528,2.572,2529,2.572,2530,2.572,2531,2.572,2532,2.572,2533,2.572,2534,2.572,2535,2.572,2536,2.572,2537,2.572,2538,2.572,2539,2.572,2540,2.572,2541,2.173,2542,2.572,2543,2.173,2544,2.036,2545,2.344,2546,2.572,2547,2.572,2548,5.34,2549,5.34,2550,2.572,2551,3.93,2552,2.572,2553,2.572,2554,2.572,2555,2.572,2556,2.572,2557,2.572,2558,2.572,2559,2.572,2560,2.572,2561,2.572,2562,2.572,2563,2.572,2564,2.572,2565,2.344,2566,2.572,2567,2.572,2568,2.572,2569,2.572,2570,2.572,2571,3.93,2572,2.572,2573,2.572,2574,2.572,2575,2.572,2576,2.572,2577,2.572,2578,4.77,2579,2.572,2580,2.572,2581,3.93,2582,3.93,2583,3.93,2584,3.93,2585,2.572,2586,2.572,2587,2.572,2588,2.572,2589,2.572,2590,2.572,2591,2.572,2592,2.572,2593,2.572,2594,2.344,2595,2.572,2596,2.572,2597,2.572,2598,2.572,2599,2.572,2600,2.572,2601,2.572,2602,2.572,2603,2.572,2604,2.572,2605,2.572,2606,2.572,2607,2.572,2608,2.572,2609,2.572,2610,2.572,2611,2.572,2612,2.572,2613,2.572,2614,2.572,2615,2.572,2616,2.572,2617,2.572,2618,2.572,2619,2.572,2620,2.572,2621,2.572,2622,2.572,2623,2.572,2624,2.572,2625,2.572,2626,2.572,2627,2.572,2628,2.572,2629,2.572,2630,2.572,2631,2.572,2632,2.572,2633,2.572]],["title/components/ReviewButtonComponent.html",[196,0.424,505,1.239]],["body/components/ReviewButtonComponent.html",[3,0.11,4,0.078,5,0.092,6,0.118,11,0.613,12,1.176,18,0.313,19,0.544,20,0.836,25,1.236,32,2.497,35,0.59,38,1.927,40,0.917,41,0.94,42,1.147,43,0.01,44,1.07,45,0.725,46,0.894,47,1.175,48,1.4,52,0.972,55,1.206,56,0.979,69,0.452,75,0.005,80,0.004,84,0.004,85,1.346,86,1.503,90,1.551,99,0.262,104,0.16,130,0.078,133,0.238,134,1.014,139,0.546,141,0.871,142,1.063,160,0.786,161,1.131,196,0.786,197,0.901,198,1.236,199,0.947,200,1.049,201,1.049,202,1.023,204,2.94,205,1.987,208,2.076,211,2.235,212,1.116,213,0.816,214,1.332,216,1.332,222,2.698,256,0.776,259,2.345,260,1.236,261,3.671,263,2.047,286,4.269,287,2.276,297,1.906,300,1.47,308,1.236,309,1.769,333,2.464,337,1.421,359,2.296,400,1.332,404,1.233,405,1.199,408,1.523,409,0.857,414,1.473,421,1.385,431,4.024,436,1.428,450,0.721,453,0.721,457,0.879,468,1.049,469,1.733,470,1.049,471,2.038,472,1.049,473,1.049,474,0.947,475,1.049,476,0.924,477,1.845,478,0.947,479,1.049,480,1.332,481,1.845,482,0.947,483,1.752,484,1.049,485,0.947,486,1.049,487,0.947,488,0.901,489,1.049,490,0.947,491,1.049,492,0.947,493,0.947,494,1.049,495,0.947,496,1.023,497,0.924,498,1.049,499,0.947,500,1.551,501,0.924,502,0.947,503,0.947,504,1.845,505,1.84,506,2.53,507,1.551,508,1.365,509,0.947,510,0.924,511,0.776,512,1.049,513,0.924,514,0.901,515,0.947,516,1.049,517,0.947,518,1.049,519,0.947,520,1.049,521,0.947,522,1.236,523,0.947,524,1.4,525,0.947,526,1.049,527,0.947,528,1.299,529,1.049,530,0.947,531,1.049,532,1.049,596,1.344,607,1.987,612,3.621,646,2.679,664,2.87,665,0.947,666,2.87,667,2.535,668,1.268,669,1.233,670,2.168,677,1.4,678,1.845,683,2.535,684,2.111,704,2.409,705,1.634,718,1.825,722,1.754,813,2.001,820,3.44,822,3.959,891,2.409,962,5.26,972,2.94,1008,3.959,1115,1.822,1121,4.346,1219,2.698,1228,2.087,1242,3.944,1276,2.409,1285,2.94,1557,3.671,1635,3.248,1672,5.049,1699,2.679,2224,4.768,2300,2.328,2312,2.483,2322,2.328,2328,4.346,2340,4.346,2341,5.169,2352,1.825,2380,2.679,2381,5.203,2403,2.328,2408,4.71,2445,3.671,2634,5.503,2635,6.219,2636,2.679,2637,4.932,2638,4.932,2639,5.867,2640,5.169,2641,4.346,2642,6.481,2643,6.481,2644,6.916,2645,5.867,2646,5.867,2647,4.932,2648,4.932,2649,3.337,2650,7.239,2651,4.932,2652,3.337,2653,3.337,2654,2.94,2655,4.346,2656,4.932,2657,4.932,2658,4.346,2659,4.932,2660,4.346,2661,3.337,2662,3.959,2663,4.346,2664,3.337,2665,4.932,2666,4.346,2667,3.337,2668,4.932,2669,2.94,2670,3.337,2671,3.337,2672,2.679,2673,2.198,2674,5.867,2675,3.337,2676,2.483,2677,3.337,2678,3.337,2679,3.337,2680,3.337,2681,3.337,2682,4.932,2683,3.337,2684,3.337,2685,3.337,2686,3.337,2687,3.337,2688,2.679,2689,2.679,2690,3.337,2691,3.337,2692,3.337]],["title/modules/ReviewButtonModule.html",[533,1.271,2693,3.045]],["body/modules/ReviewButtonModule.html",[3,0.119,4,0.149,5,0.119,6,0.09,43,0.01,75,0.008,80,0.007,84,0.007,99,0.331,104,0.306,130,0.149,133,0.21,424,1.637,505,2.579,506,2.216,535,1.809,536,2.216,547,2.394,548,1.809,550,2.591,552,2.457,556,2.332,584,5.615,735,2.591,736,2.735,737,2.169,742,4.163,743,3.486,1252,5.615,1662,5.309,1663,4.445,2634,4.197,2635,4.743,2673,4.197,2693,6.255,2694,5.615,2695,5.615,2696,5.615,2697,5.615,2698,6.1,2699,6.373]],["title/components/ReviewModalComponent.html",[196,0.424,508,1.209]],["body/components/ReviewModalComponent.html",[3,0.116,4,0.085,5,0.099,6,0.114,11,0.655,12,1.257,18,0.343,19,0.581,25,1.797,35,0.931,38,1.834,40,1.334,41,1.005,42,0.85,43,0.01,44,1.072,45,0.699,46,0.662,48,1.755,52,1.534,55,0.751,56,0.796,69,0.495,75,0.006,76,2.916,80,0.004,84,0.004,85,0.98,86,1.03,90,1.944,99,0.234,104,0.175,129,0.245,130,0.085,133,0.246,142,1.226,156,1.472,160,0.839,161,0.934,196,0.792,197,0.986,198,1.32,199,1.037,200,1.149,201,1.149,202,1.12,208,2.169,211,2.252,212,1.125,213,0.893,214,1.423,216,1.423,256,0.85,259,1.574,260,1.32,300,1.549,308,1.575,309,2.075,313,2.328,337,1.27,359,2.535,399,1.278,400,1.827,401,2.566,404,1.35,405,1.313,408,1.667,409,1.354,410,3.426,411,1.921,414,1.846,416,2.645,418,2.73,421,1.516,424,0.938,427,3.07,429,1.496,430,4.922,431,1.724,433,3.141,434,1.564,436,1.564,437,1.564,438,2.933,441,1.667,442,2.771,444,2.82,446,2.406,447,2.548,449,2.771,450,1.335,453,1.549,457,0.962,461,2.668,468,1.149,469,1.797,470,1.149,471,2.128,472,1.149,473,1.149,474,1.037,475,1.149,476,1.011,477,1.944,478,1.037,479,1.149,480,1.423,481,1.944,482,1.037,483,1.091,484,1.149,485,1.037,486,1.149,487,1.037,488,0.986,489,1.149,490,1.037,491,1.149,492,1.037,493,1.037,494,1.149,495,1.037,496,1.12,497,1.011,498,1.149,499,1.037,500,1.657,501,1.011,502,1.037,503,1.037,504,1.944,505,1.037,506,2.566,507,1.657,508,1.873,509,1.037,510,1.011,511,0.85,512,1.149,513,1.011,514,0.986,515,1.037,516,1.149,517,1.037,518,1.149,519,1.037,520,1.149,521,1.037,522,1.32,523,1.037,524,1.496,525,1.037,526,1.149,527,1.037,528,1.388,529,1.149,530,1.037,531,1.149,532,1.149,561,1.998,612,2.328,660,3.13,665,1.037,677,1.496,678,1.944,705,1.746,717,2.285,813,1.549,891,3.019,961,3.865,962,3.471,963,3.295,969,2.578,972,3.685,1018,2.719,1115,2.284,1242,4.581,1243,4.6,1296,2.083,1297,2.083,1307,2.328,1350,3.676,1363,3.676,1434,4.6,1556,2.719,1559,3.295,1842,2.178,2224,4.922,2321,4.922,2322,5.003,2329,5.339,2352,1.998,2376,2.548,2378,3.922,2384,4.6,2385,3.219,2428,2.548,2634,5.291,2662,2.933,2672,2.933,2673,5.291,2688,2.933,2689,2.933,2700,4.643,2701,4.962,2702,3.654,2703,5.339,2704,5.27,2705,5.446,2706,4.6,2707,5.446,2708,5.27,2709,4.23,2710,3.654,2711,3.654,2712,3.219,2713,2.933,2714,3.219,2715,3.219,2716,3.219,2717,3.219,2718,3.219,2719,3.219,2720,2.933,2721,3.219,2722,4.643,2723,5.27,2724,5.27,2725,3.654,2726,3.654,2727,5.27,2728,3.219,2729,3.654,2730,3.654]],["title/interfaces/ReviewModalData.html",[129,0.292,2703,3.249]],["body/interfaces/ReviewModalData.html",[3,0.131,4,0.13,5,0.104,6,0.079,11,0.69,18,0.521,19,0.771,25,1.39,35,0.98,40,1.3,41,1.058,43,0.01,44,0.772,45,0.634,48,1.575,56,0.838,75,0.007,80,0.006,84,0.006,90,1.745,99,0.29,104,0.266,129,0.372,130,0.13,133,0.23,142,1.388,160,1.114,161,0.838,195,1.461,196,0.804,208,2.383,211,1.39,212,0.869,214,1.498,216,1.498,259,2.286,308,1.532,309,2.099,337,1.652,359,2.526,424,1.425,430,3.654,469,1.39,506,2.57,508,1.536,660,3.876,665,1.575,677,1.575,678,1.745,813,1.918,891,3.739,961,4.787,972,4.563,1018,4.129,1115,2.828,1242,4.365,1243,5.697,1434,4.129,1556,4.129,1559,3.469,1842,3.308,2224,5.456,2321,4.604,2322,4.876,2329,5.203,2352,3.035,2376,3.87,2378,4.129,2384,5.697,2428,4.876,2634,3.654,2662,5.612,2672,4.454,2673,3.654,2688,4.454,2689,4.454,2700,4.888,2701,4.454,2703,5.697,2705,4.888,2706,4.129,2707,4.888,2709,4.454,2713,4.454,2714,6.16,2715,4.888,2716,4.888,2717,4.888,2718,4.888,2719,4.888,2720,4.454,2721,4.888]],["title/modules/ReviewModalModule.html",[533,1.271,2698,3.045]],["body/modules/ReviewModalModule.html",[3,0.121,4,0.151,5,0.121,6,0.092,43,0.01,75,0.008,80,0.007,84,0.007,99,0.332,104,0.311,130,0.151,133,0.213,424,1.663,506,1.885,508,2.519,535,1.838,536,2.237,547,2.416,548,1.838,550,2.615,552,2.09,556,2.355,562,3.189,563,2.533,735,2.615,736,2.761,737,2.204,1662,5.359,1663,4.516,2352,3.541,2402,5.197,2403,4.516,2404,6.168,2634,4.264,2673,4.264,2698,6.185,2731,5.704,2732,5.704,2733,5.704]],["title/components/RightSidebarComponent.html",[196,0.424,509,1.239]],["body/components/RightSidebarComponent.html",[1,3.867,3,0.099,4,0.086,5,0.099,6,0.102,8,3.204,9,2.296,11,0.657,12,1.714,15,2.299,18,0.345,19,0.583,22,2.382,23,2.845,33,4.494,35,0.934,38,1.578,40,0.983,41,1.008,42,0.854,43,0.01,44,1.074,45,0.615,46,0.665,47,1.229,52,1.069,69,0.497,75,0.006,76,1.732,77,3.152,80,0.006,84,0.004,85,1.152,86,1.212,88,2.653,91,2.437,99,0.272,104,0.176,130,0.086,133,0.246,140,3.39,142,0.665,158,4.082,160,1.08,161,1.165,188,1.185,196,0.698,197,0.991,198,1.325,199,1.042,200,1.154,201,1.154,202,1.125,208,0.991,209,1.579,210,1.579,211,2.253,212,1.124,213,0.897,214,1.428,216,1.428,219,2.78,237,2.947,256,1.442,257,1.125,259,1.579,260,1.325,287,1.663,300,1.553,307,2.78,308,1.557,309,1.515,310,2.892,313,2.738,321,1.097,331,2.189,332,2.094,333,1.8,337,0.755,387,1.395,399,1.284,400,2.021,401,3.202,402,2.296,403,2.296,404,2.972,405,2.227,406,3.534,408,3.279,409,1.742,410,3.79,413,3.027,414,2.236,416,2.263,418,3.175,427,2.653,428,3.39,429,2.04,431,1.732,432,2.189,433,3.152,434,2.653,442,2.78,444,2.413,445,2.13,448,2.495,449,1.93,450,1.666,451,1.793,453,1.892,457,0.967,459,2.418,461,3.434,464,1.859,468,1.663,469,1.801,470,1.154,471,2.132,472,1.154,473,1.154,474,1.042,475,1.154,476,1.016,477,1.949,478,1.042,479,1.154,480,1.428,481,1.949,482,1.042,483,1.097,484,1.154,485,1.042,486,1.154,487,1.042,488,0.991,489,1.154,490,1.042,491,1.154,492,1.042,493,1.042,494,1.154,495,1.042,496,1.125,497,1.016,498,1.154,499,1.042,500,1.663,501,1.016,502,1.042,503,1.042,504,1.949,505,1.042,506,1.54,507,1.663,508,1.016,509,1.925,510,1.016,511,0.854,512,1.154,513,1.016,514,0.991,515,1.042,516,1.154,517,1.042,518,1.154,519,1.042,520,1.154,521,1.042,522,1.325,523,1.042,524,1.501,525,1.042,526,1.154,527,1.042,528,1.392,529,1.154,530,1.042,531,1.154,532,1.154,586,5.349,607,2.13,635,1.793,665,1.042,671,2.732,677,1.501,678,1.949,705,1.752,715,2.561,718,2.892,727,2.296,728,2.418,729,2.418,813,1.325,828,2.418,860,3.936,875,3.565,937,2.947,968,2.561,969,2.971,972,2.189,976,2.561,1192,2.561,1240,4.082,1296,2.094,1297,2.094,1298,2.418,1299,2.732,1307,2.995,1310,3.307,1315,2.732,1363,2.561,1637,2.561,1710,2.947,1711,7.193,1712,5.461,1713,4.659,1726,5.461,1743,2.008,1790,3.709,1792,4.659,1793,4.659,1794,4.245,1795,2.947,1796,3.235,1798,5.461,1800,2.947,1803,3.235,1804,3.235,2484,2.732,2734,5.769,2735,6.781,2736,5.288,2737,5.288,2738,3.671,2739,3.671,2740,3.671,2741,3.671,2742,3.671,2743,3.671,2744,3.671,2745,6.198,2746,3.671,2747,3.671,2748,4.245,2749,3.671,2750,3.671,2751,3.671]],["title/modules/RightSidebarModule.html",[533,1.271,546,3.045]],["body/modules/RightSidebarModule.html",[3,0.106,4,0.132,5,0.106,6,0.08,43,0.01,75,0.008,80,0.006,84,0.006,99,0.342,104,0.272,130,0.132,133,0.187,212,0.704,326,1.65,409,1.82,424,1.456,453,1.224,509,2.541,535,1.609,536,2.063,546,6.367,547,2.228,548,1.609,550,2.411,552,2.287,556,2.171,562,2.941,563,2.217,566,3.733,568,5.688,569,4.549,586,4.218,657,3.733,730,5.931,735,2.411,736,2.546,737,1.929,742,3.875,743,3.1,1814,4.993,1815,6.243,1816,4.993,1817,5.688,1818,4.549,1827,5.688,1833,4.993,2635,4.218,2693,5.931,2734,4.549,2752,4.993,2753,4.993,2754,4.993,2755,4.993,2756,5.931,2757,5.931,2758,5.931,2759,5.931,2760,5.668,2761,5.668,2762,3.733,2763,5.668,2764,5.668,2765,3.733,2766,7.085,2767,4.218,2768,5.668,2769,3.953,2770,5.668,2771,5.668,2772,5.668,2773,7.085]],["title/interfaces/Rotation.html",[129,0.292,511,1.016]],["body/interfaces/Rotation.html",[3,0.098,4,0.122,5,0.098,6,0.074,11,0.651,18,0.491,19,0.743,40,0.973,41,0.998,43,0.01,44,0.729,45,0.738,47,0.949,56,1.018,69,0.912,71,2.191,75,0.007,80,0.006,84,0.006,85,0.973,86,1.679,99,0.255,104,0.251,129,0.351,130,0.157,133,0.222,139,0.856,141,1.39,142,0.949,160,1.187,161,1.125,195,1.378,196,0.809,209,1.563,210,1.563,211,1.312,212,0.837,214,1.413,216,1.413,258,2.312,259,2.349,321,1.563,382,2.963,387,3.221,390,3.517,429,2.233,466,2.635,469,1.312,510,1.449,511,2.079,548,1.486,596,2.108,664,2.796,665,1.486,666,3.092,667,2.635,668,1.989,669,1.934,670,2.489,677,1.486,678,1.646,679,3.092,683,2.635,843,3.685,888,2.985,1115,1.934,1219,2.863,1276,2.557,1284,3.447,1522,3.273,1526,3.447,1625,3.447,1668,4.946,1797,5.544,2676,3.896,2762,3.447,2774,3.651,2775,3.896,2776,5.936,2777,5.544,2778,4.612,2779,4.202,2780,4.202,2781,4.612,2782,4.202,2783,4.612,2784,4.612,2785,3.896,2786,4.202,2787,4.612,2788,4.202,2789,6.564,2790,7.34,2791,4.202,2792,4.612,2793,6.564,2794,4.612,2795,5.936,2796,5.936,2797,4.202,2798,4.612,2799,4.612,2800,4.612,2801,4.612]],["title/components/RotationSliderComponent.html",[196,0.424,510,1.209]],["body/components/RotationSliderComponent.html",[3,0.064,4,0.08,5,0.094,6,0.11,11,0.741,12,1.2,18,0.322,19,0.555,25,1.261,35,0.606,38,1.758,40,0.936,41,0.96,42,1.171,43,0.01,44,1.079,45,0.685,46,0.912,47,0.912,52,0.999,55,1.035,56,0.992,69,1.023,71,1.832,75,0.005,76,1.618,80,0.004,84,0.004,85,1.221,86,1.593,99,0.19,104,0.165,129,0.23,130,0.118,133,0.241,139,0.561,141,1.335,142,1.081,156,1.382,160,0.95,161,1.056,188,1.625,196,0.791,197,0.926,198,1.261,199,0.974,200,1.079,201,1.079,202,1.051,208,0.926,209,1.503,210,1.503,211,2.241,212,1.118,213,0.838,214,1.359,216,1.359,219,1.804,256,1.387,258,2.223,259,2.184,260,1.261,283,3.001,300,1.494,308,0.96,309,0.838,313,2.223,321,1.024,382,2.446,387,2.658,390,2.903,399,1.199,400,1.359,401,2.475,404,2.701,405,1.809,408,1.565,409,0.881,410,3.019,413,1.675,414,2.089,416,2.154,418,2.633,421,1.424,427,2.994,428,1.876,429,1.986,432,2.045,433,3.001,434,2.552,436,1.468,437,1.468,444,2.72,445,2.027,448,1.618,449,1.804,450,1.288,451,1.675,453,1.288,454,2.393,457,0.903,458,2.393,461,1.737,466,2.569,468,1.079,469,1.753,470,1.079,471,2.065,472,1.079,473,1.079,474,0.974,475,1.079,476,0.95,477,1.875,478,0.974,479,1.079,480,1.359,481,1.875,482,0.974,483,1.024,484,1.079,485,0.974,486,1.079,487,0.974,488,0.926,489,1.079,490,0.974,491,1.079,492,0.974,493,0.974,494,1.079,495,0.974,496,1.051,497,0.95,498,1.079,499,0.974,500,1.583,501,0.95,502,0.974,503,0.974,504,1.875,505,0.974,506,1.465,507,1.583,508,0.95,509,0.974,510,1.818,511,2.08,512,1.079,513,0.95,514,0.926,515,0.974,516,1.079,517,0.974,518,1.079,519,0.974,520,1.079,521,0.974,522,1.261,523,0.974,524,1.429,525,0.974,526,1.079,527,0.974,528,1.325,529,1.079,530,0.974,531,1.079,532,1.079,548,1.692,596,1.382,607,2.027,661,3.001,664,2.475,665,0.974,666,2.726,667,2.569,668,1.304,669,1.267,670,2.203,677,1.429,678,1.875,679,2.089,683,2.332,704,2.458,705,1.668,706,1.804,713,3.315,717,2.145,718,1.876,719,2.393,720,3.001,721,2.393,722,1.804,723,2.393,728,2.259,729,2.259,843,3.592,888,2.87,963,3.147,968,2.393,969,1.809,1115,1.86,1219,2.753,1276,2.458,1284,3.315,1296,2.87,1297,2.87,1298,2.259,1307,3.09,1349,3.147,1350,3.511,1522,3.147,1526,3.315,1625,3.315,1668,4.933,1797,4.437,2676,3.746,2762,5.104,2774,5.405,2775,2.553,2776,3.022,2777,4.888,2778,4.435,2779,4.04,2780,4.04,2781,4.435,2782,4.04,2783,4.435,2784,5.253,2785,3.746,2786,4.04,2787,5.253,2788,4.04,2789,5.787,2790,7.083,2791,4.04,2792,4.435,2793,5.253,2794,3.022,2795,4.435,2796,4.435,2797,4.04,2798,4.435,2799,4.435,2800,5.787,2801,3.022,2802,5.033,2803,5.033,2804,3.43,2805,5.033,2806,3.43,2807,3.43,2808,5.033,2809,4.04,2810,5.033,2811,3.43,2812,3.43,2813,3.022,2814,3.43,2815,4.435,2816,3.43,2817,6.568,2818,5.033]],["title/modules/RotationSliderModule.html",[533,1.271,2756,3.045]],["body/modules/RotationSliderModule.html",[3,0.12,4,0.15,5,0.12,6,0.091,43,0.01,75,0.008,80,0.007,84,0.007,99,0.335,104,0.308,130,0.15,133,0.211,424,1.647,510,2.516,511,1.492,535,1.82,536,2.224,547,2.402,548,1.82,550,2.6,552,2.069,556,2.341,562,3.171,563,2.508,735,2.6,736,2.745,737,2.182,740,5.328,741,4.472,742,4.178,743,3.507,2756,6.173,2762,4.223,2774,4.472,2819,5.649,2820,5.649,2821,5.649,2822,6.412,2823,6.412,2824,7.639,2825,6.412]],["title/injectables/SceneState.html",[0,1.271,92,2.49]],["body/injectables/SceneState.html",[0,1.313,2,1.689,3,0.055,4,0.069,5,0.055,6,0.119,11,0.561,15,2.354,16,1.714,18,0.278,19,0.497,20,2.026,22,2.519,23,2.076,24,4.559,25,1.13,29,2.963,32,2.284,35,0.965,36,2.378,37,3.586,38,1.934,40,0.839,41,0.86,42,1.049,43,0.01,44,0.76,45,0.703,46,0.818,47,1.107,48,1.28,49,3.115,50,2.872,55,1.123,56,0.681,65,1.93,69,0.89,71,1.734,75,0.005,80,0.003,84,0.003,85,0.839,86,0.579,88,2.137,90,2.066,92,2.572,96,3.106,99,0.309,104,0.142,105,3.925,106,1.93,107,1.817,108,1.268,109,1.268,110,1.193,112,2.371,113,0.841,114,1.308,115,1.008,119,1.62,122,2.137,123,2.137,124,2.137,125,2.018,126,2.2,127,2.204,128,1.352,129,0.302,130,0.105,132,1.23,133,0.097,134,1.759,138,3.146,139,1.267,141,1.343,155,2.46,160,0.472,161,0.922,162,1.268,163,1.352,164,1.951,165,1.689,166,1.951,167,1.951,168,1.852,169,1.951,170,1.951,188,2.323,205,1.193,212,0.368,257,0.908,287,1.418,297,1.438,299,1.094,308,1.041,337,0.609,353,3.34,378,1.557,380,2.872,384,3.482,385,2.066,405,2.666,411,3.9,429,1.965,435,3.266,445,2.46,450,0.64,453,0.64,466,1.159,511,1.803,621,2.971,635,1.447,636,1.5,639,1.5,640,1.5,642,1.268,655,1.62,848,1.094,875,2.872,895,3.327,902,4.127,930,1.852,941,5.778,943,2.971,944,2.066,945,2.971,946,2.971,947,2.971,948,3.621,954,1.766,965,2.873,967,4.89,1015,1.308,1073,2.82,1074,2.82,1115,1.667,1163,5.865,1258,3.455,1260,1.62,1307,1.308,1513,2.378,1540,2.378,1844,1.447,1911,2.689,1913,3.146,1914,4.259,1915,3.146,1917,2.971,1923,2.668,1930,1.951,1941,2.066,1942,2.577,1943,1.447,1944,1.766,1955,2.82,1987,3.81,1988,2.066,1989,1.852,2067,2.689,2068,2.066,2071,3.146,2073,2.066,2075,1.766,2135,1.951,2136,2.066,2137,1.951,2139,5.876,2143,3.482,2144,1.951,2151,2.066,2154,2.066,2155,2.066,2189,3.146,2194,2.066,2389,2.378,2394,2.378,2418,2.204,2541,3.357,2543,3.357,2544,3.146,2809,2.378,2826,2.204,2827,4.51,2828,4.812,2829,4.812,2830,4.812,2831,4.812,2832,4.812,2833,6.099,2834,4.51,2835,3.974,2836,2.962,2837,2.962,2838,3.974,2839,3.974,2840,3.621,2841,3.974,2842,5.79,2843,3.974,2844,3.974,2845,5.38,2846,3.974,2847,3.974,2848,3.974,2849,7.678,2850,2.962,2851,2.962,2852,2.962,2853,2.962,2854,2.962,2855,2.962,2856,2.962,2857,2.962,2858,2.962,2859,3.974,2860,2.962,2861,2.962,2862,2.962,2863,2.962,2864,2.962,2865,2.962,2866,4.51,2867,2.962,2868,2.962,2869,2.962,2870,2.962,2871,4.384,2872,2.61,2873,2.378,2874,2.378,2875,2.378,2876,2.204,2877,3.974,2878,2.378,2879,2.61,2880,3.974,2881,2.61,2882,3.974,2883,2.61,2884,2.61,2885,2.61,2886,2.61,2887,2.61,2888,2.61,2889,2.61,2890,3.974,2891,2.61,2892,2.61,2893,2.61,2894,2.61,2895,2.61,2896,3.974,2897,2.61,2898,2.61,2899,2.61,2900,2.61,2901,2.61,2902,2.61,2903,3.974,2904,2.61,2905,2.61,2906,2.61,2907,3.974,2908,2.61,2909,2.61,2910,2.61,2911,3.621,2912,6.536,2913,4.812,2914,2.61,2915,3.974,2916,3.974,2917,2.61,2918,2.61,2919,3.974,2920,3.974,2921,2.61,2922,2.61,2923,2.61,2924,2.61,2925,2.61,2926,2.61,2927,2.61,2928,2.61,2929,2.61,2930,2.61,2931,2.61,2932,2.61,2933,2.61,2934,2.61,2935,2.61,2936,2.61,2937,2.61,2938,2.61,2939,2.61,2940,2.61,2941,3.974,2942,2.61,2943,2.61,2944,2.61,2945,2.61,2946,2.61,2947,2.61,2948,2.61,2949,3.974,2950,2.61,2951,2.61,2952,2.61,2953,2.61,2954,2.61,2955,2.61,2956,2.61,2957,2.61,2958,2.61,2959,2.61,2960,2.61,2961,2.61,2962,2.61,2963,2.61,2964,2.61,2965,2.61,2966,2.61,2967,2.61,2968,2.61,2969,2.61,2970,2.61,2971,2.61,2972,2.61,2973,2.61]],["title/interfaces/SceneStateModel.html",[129,0.292,2876,3.249]],["body/interfaces/SceneStateModel.html",[0,1.441,3,0.063,4,0.078,5,0.063,6,0.048,11,0.417,15,2.289,16,1.274,18,0.315,19,0.546,20,1.736,22,2.403,23,1.881,24,4.563,29,2.518,35,0.874,37,3.269,40,0.623,41,0.639,43,0.01,44,0.467,45,0.589,47,0.897,48,0.951,49,2.822,50,2.602,56,0.506,65,1.435,69,0.796,71,1.817,75,0.005,80,0.004,84,0.004,85,0.623,88,1.936,90,1.85,92,1.911,96,3.082,99,0.316,104,0.161,105,4.048,106,2.118,107,1.993,108,1.435,109,1.435,110,1.35,112,2.602,113,0.951,114,1.481,115,1.141,119,1.833,122,1.936,123,1.936,124,1.936,125,1.828,126,1.993,127,2.494,128,1.529,129,0.331,130,0.116,132,1.391,133,0.11,134,1.787,138,3.451,139,1.307,141,1.36,155,2.369,160,0.534,161,0.747,162,1.435,163,1.529,164,2.207,165,1.911,166,2.207,167,2.207,168,2.096,169,2.207,170,2.207,188,2.34,195,0.883,205,1.35,212,0.417,257,1.027,287,1.054,297,1.303,299,1.238,308,0.639,337,1.209,353,3.217,378,1.762,380,3.093,384,3.704,385,2.338,405,2.767,411,3.943,429,2.058,435,3.269,445,1.993,450,0.724,453,0.724,466,1.311,511,1.791,621,3.259,635,1.637,636,1.697,639,1.697,640,1.697,642,1.435,655,1.833,848,1.238,875,2.602,895,2.978,902,4.322,930,2.096,941,6.02,943,3.259,944,2.338,945,3.259,946,3.259,947,3.259,948,3.972,954,1.998,965,2.876,967,3.683,1015,1.481,1073,2.096,1074,2.096,1115,1.238,1163,5.729,1258,3.093,1260,1.833,1307,1.481,1513,2.691,1540,2.691,1844,1.637,1911,2.95,1913,3.451,1914,4.103,1915,3.451,1917,3.259,1923,2.417,1930,2.207,1941,2.338,1942,2.335,1943,1.637,1944,1.998,1955,3.094,1987,2.338,1988,2.338,1989,2.096,2067,2.95,2068,2.338,2071,3.451,2073,2.338,2075,1.998,2135,2.207,2136,2.338,2137,2.207,2139,5.918,2143,3.704,2144,2.207,2151,2.338,2154,2.338,2155,2.338,2189,3.451,2194,2.338,2389,2.691,2394,2.691,2418,2.494,2541,3.683,2543,3.683,2544,3.451,2809,2.691,2826,2.494,2828,2.953,2829,2.953,2830,2.953,2831,2.953,2832,2.953,2833,4.36,2835,2.953,2838,2.953,2839,2.953,2840,2.691,2841,2.953,2842,5.723,2843,2.953,2844,2.953,2845,5.183,2846,2.953,2847,2.953,2848,2.953,2849,7.689,2859,2.953,2871,4.722,2872,2.953,2873,2.691,2874,2.691,2875,2.691,2876,3.683,2877,6.104,2878,2.691,2879,2.953,2880,4.36,2881,2.953,2882,4.36,2883,2.953,2884,2.953,2885,2.953,2886,2.953,2887,2.953,2888,2.953,2889,2.953,2890,4.36,2891,2.953,2892,2.953,2893,2.953,2894,2.953,2895,2.953,2896,4.36,2897,2.953,2898,2.953,2899,2.953,2900,2.953,2901,2.953,2902,2.953,2903,4.36,2904,2.953,2905,2.953,2906,2.953,2907,4.36,2908,2.953,2909,2.953,2910,2.953,2911,3.972,2912,6.783,2913,5.183,2914,2.953,2915,4.36,2916,4.36,2917,2.953,2918,2.953,2919,4.36,2920,4.36,2921,2.953,2922,2.953,2923,2.953,2924,2.953,2925,2.953,2926,2.953,2927,2.953,2928,2.953,2929,2.953,2930,2.953,2931,2.953,2932,2.953,2933,2.953,2934,2.953,2935,2.953,2936,2.953,2937,2.953,2938,2.953,2939,2.953,2940,2.953,2941,4.36,2942,2.953,2943,2.953,2944,2.953,2945,2.953,2946,2.953,2947,2.953,2948,2.953,2949,4.36,2950,2.953,2951,2.953,2952,2.953,2953,2.953,2954,2.953,2955,2.953,2956,2.953,2957,2.953,2958,2.953,2959,2.953,2960,2.953,2961,2.953,2962,2.953,2963,2.953,2964,2.953,2965,2.953,2966,2.953,2967,2.953,2968,2.953,2969,2.953,2970,2.953,2971,2.953,2972,2.953,2973,2.953]],["title/interfaces/SlicesConfig.html",[129,0.292,1916,2.49]],["body/interfaces/SlicesConfig.html",[0,1.148,3,0.047,4,0.058,5,0.047,6,0.035,8,1.067,11,0.31,15,2.039,16,0.947,18,0.234,19,0.435,20,1.616,22,2.39,23,0.947,29,1.067,35,0.44,37,2.861,40,0.463,41,0.475,43,0.01,44,1.004,45,0.684,47,0.715,48,0.707,49,1.421,50,1.31,53,3.989,56,1.215,65,1.067,69,0.948,71,1.755,75,0.004,80,0.003,84,0.003,88,0.975,90,2.028,91,1.417,96,3.109,99,0.301,104,0.12,105,2.478,106,1.688,107,1.589,108,1.067,109,1.067,110,1.004,113,0.707,115,0.848,120,1.486,122,1.543,123,1.543,124,0.975,125,0.921,126,1.589,128,1.799,129,0.328,130,0.158,132,1.034,133,0.082,134,1.44,139,1.338,141,1.305,142,0.715,149,3.317,155,2.822,156,1.971,160,1.281,161,1.244,162,1.067,163,1.137,173,1.558,174,1.558,177,1.738,182,0.871,184,1.738,195,0.656,212,0.49,245,1.417,246,1.589,256,1.571,257,2.263,269,2.597,281,1.421,287,1.907,297,1.465,299,2.973,301,1.363,303,1.421,304,1.262,308,0.752,326,0.726,337,1.006,353,2.157,359,1.662,382,2.522,387,2.741,390,2.993,400,0.673,405,1.759,409,1.429,429,1.988,435,2.309,445,1.589,450,1.31,453,1.202,457,0.656,488,1.824,511,1.678,514,1.502,528,0.656,612,1.742,655,3.316,662,1.421,667,1.543,668,0.947,669,0.921,670,0.921,673,2.791,679,2.031,683,0.975,684,3.329,687,1.217,754,1.486,761,2.233,785,2.848,813,0.988,848,1.808,894,4.509,895,1.997,932,3.06,942,5.03,943,3.993,945,1.641,946,1.641,947,1.641,949,2.597,954,1.486,965,2.31,1015,3.554,1115,0.921,1207,2.677,1219,1.363,1253,3.044,1256,3.882,1258,3.551,1260,1.363,1328,3.642,1329,4.122,1330,3.173,1331,2.791,1334,2.942,1379,1.217,1740,2.918,1741,2.751,1743,3.527,1744,3.993,1745,2.751,1756,1.855,1790,3.316,1838,1.861,1839,2.677,1844,1.217,1876,1.558,1908,1.558,1909,1.641,1910,2,1911,3.844,1912,4.247,1913,4.498,1914,4.498,1915,4.498,1916,4.113,1917,4.75,1918,4.04,1919,1.641,1920,4.712,1921,3.166,1922,4.498,1923,1.926,1924,2.466,1925,2.751,1926,1.486,1927,1.486,1928,2,1929,1.855,1930,1.641,1931,2,1932,1.641,1933,2,1934,1.486,1935,2,1936,1.421,1937,1.363,1938,2.249,1939,2,1940,2,1941,1.738,1942,1.861,1943,1.217,1944,1.486,1945,1.421,1946,1.421,1947,1.855,1948,4.027,1949,3.166,1950,3.615,1951,1.855,1952,2,1953,2,1954,2,1955,3.06,1956,2.351,1957,2,1958,2,1959,2,1960,2,1961,2,1962,2,1963,2,1964,2,1965,2,1966,2,1967,2,1968,2,1969,2,1970,2,1971,2,1972,2,1973,2,1974,2,1975,2,1976,2,1977,2,1978,2,1979,2,1980,1.855,1981,1.855,1982,2,1983,2,1984,2,1985,2,1986,2,1987,1.738,1988,1.738,1989,1.558,1990,2,1991,2,1992,3.929,1993,2,1994,5.422,1995,2,1996,2,1997,3.166,1998,2.935,1999,2,2000,2,2001,4.972,2002,2,2003,2,2004,2,2005,2,2006,1.421,2007,2,2008,4.467,2009,2.249,2010,2,2011,2,2012,2,2013,1.486,2014,2,2015,2,2016,3.166,2017,2,2018,4.467,2019,2,2020,3.166,2021,2,2022,2,2023,2,2024,2,2025,2,2026,2,2027,2,2028,2,2029,2,2030,2,2031,2,2032,2,2033,2,2034,2,2035,2,2036,2,2037,2,2038,2,2039,2,2040,3.166,2041,2,2042,2,2043,2,2044,2,2045,2,2046,2,2047,2,2048,2,2049,2,2050,3.166,2051,2,2052,2,2053,2,2054,2,2055,2,2056,2,2057,2,2058,2,2059,2,2060,2,2061,2,2062,2,2063,2,2064,2,2065,2,2066,3.166,2067,1.486,2068,1.738,2069,2,2070,1.641,2071,1.738,2072,3.166,2073,3.414,2074,3.166,2075,2.351,2076,3.166,2077,2,2078,2,2079,2,2080,2,2081,2,2082,2,2083,2,2084,1.486,2085,2,2086,2,2087,2,2088,2,2089,2,2090,2]],["title/interfaces/SlicesConfig-1.html",[129,0.244,188,1.175,1916,2.075]],["body/interfaces/SlicesConfig-1.html",[3,0.098,4,0.122,5,0.098,6,0.074,11,0.649,18,0.49,19,0.742,40,0.97,41,0.995,43,0.01,44,0.936,45,0.61,47,0.946,55,1.073,56,1.016,69,0.707,71,2.15,75,0.007,80,0.006,84,0.006,85,0.97,86,1.454,99,0.254,104,0.251,128,2.381,129,0.498,130,0.157,133,0.221,134,1.073,139,1.099,141,1.188,160,1.185,161,1.124,182,1.825,195,1.374,196,0.763,209,1.559,210,1.559,211,1.308,212,0.836,214,1.409,216,1.409,256,1.937,259,2.589,260,1.308,321,1.559,337,1.073,359,2.428,469,1.308,513,1.445,514,2.376,596,2.102,658,3.111,660,3.405,661,4.684,662,2.976,664,2.791,665,1.482,666,2.791,667,2.63,668,1.984,669,1.928,670,2.484,674,3.884,675,3.437,676,3.437,677,1.482,678,1.641,679,3.455,680,3.884,681,3.437,683,2.63,684,2.234,685,4.204,686,3.111,687,3.838,688,3.884,689,3.437,692,3.437,693,3.263,700,3.884,750,2.976,813,1.308,1238,4.204,1916,4.48,1922,5.48,1948,5.115,1950,4.847,1956,4.435,2215,2.976,2335,4.189,2765,3.437,2974,3.64,2975,5.536,2976,4.598,2977,4.598,2978,4.598,2979,4.598,2980,4.598,2981,4.189,2982,4.598,2983,6.554,2984,6.554,2985,4.598,2986,5.924,2987,4.598,2988,5.924,2989,4.598,2990,4.598]],["title/components/SlicesInputComponent.html",[196,0.424,513,1.209]],["body/components/SlicesInputComponent.html",[3,0.068,4,0.084,5,0.098,6,0.114,11,0.763,12,1.245,18,0.339,19,0.576,25,1.308,32,2.643,35,0.637,38,1.828,40,0.971,41,0.995,42,1.214,43,0.01,44,1.132,45,0.675,46,0.946,47,0.946,52,1.05,55,1.467,56,1.016,69,0.91,71,1.537,75,0.006,76,1.701,80,0.004,84,0.004,85,1.25,86,1.536,99,0.198,104,0.173,128,2.382,129,0.35,130,0.122,133,0.245,134,0.741,139,0.854,141,1.084,142,0.654,160,0.977,161,1.078,182,1.825,188,1.685,196,0.745,197,0.974,198,1.308,199,1.024,200,1.134,201,1.134,202,1.105,208,0.974,209,1.559,210,1.559,211,2.25,212,1.122,213,0.881,214,1.409,216,1.409,219,1.896,256,1.785,259,2.6,260,1.685,300,1.537,307,1.896,308,0.995,309,0.881,321,1.077,337,1.073,359,2.292,399,1.261,400,1.816,401,2.547,404,1.332,408,1.645,409,0.926,413,1.761,414,1.077,421,1.497,427,1.543,434,2.234,436,1.543,437,1.543,444,2.382,445,1.453,448,1.701,450,0.779,451,1.761,453,1.128,454,2.515,457,0.95,461,1.826,468,1.134,469,1.788,470,1.134,471,2.115,472,1.134,473,1.134,474,1.024,475,1.134,476,0.998,477,1.929,478,1.024,479,1.134,480,1.409,481,1.929,482,1.024,483,1.077,484,1.134,485,1.024,486,1.134,487,1.024,488,0.974,489,1.134,490,1.024,491,1.134,492,1.024,493,1.024,494,1.134,495,1.024,496,1.105,497,0.998,498,1.134,499,1.024,500,1.641,501,0.998,502,1.024,503,1.024,504,1.929,505,1.024,506,1.52,507,1.641,508,0.998,509,1.024,510,0.998,511,0.839,512,1.134,513,1.862,514,2.36,515,1.024,516,1.134,517,1.024,518,1.134,519,1.024,520,1.134,521,1.024,522,1.308,523,1.024,524,1.482,525,1.024,526,1.134,527,1.024,528,1.375,529,1.134,530,1.024,531,1.134,532,1.134,561,1.972,592,2.895,596,1.453,607,2.471,658,2.15,660,1.826,661,4.009,662,2.977,664,2.547,665,1.024,666,2.167,667,2.631,668,1.371,669,1.332,670,2.267,674,3.885,675,3.438,676,4.041,677,1.482,678,1.929,679,3.418,680,3.885,681,3.438,683,2.4,684,2.234,685,4.462,686,3.112,687,3.634,688,3.885,689,3.438,692,2.375,693,2.255,700,3.885,704,2.55,705,1.73,706,1.896,713,4.041,714,3.177,715,2.515,716,3.177,717,2.255,718,1.972,719,2.515,720,2.15,721,2.515,722,1.896,723,2.515,724,3.177,725,2.895,726,2.515,727,2.255,728,2.375,729,2.375,750,2.056,813,1.308,1238,2.255,1307,1.593,1916,4.243,1922,4.978,1948,4.574,1950,3.112,1956,3.658,2215,2.977,2335,4.19,2765,5.274,2813,3.177,2974,5.585,2975,5.005,2976,5.406,2977,5.406,2978,3.177,2979,4.599,2980,4.599,2981,4.19,2982,4.599,2983,5.406,2984,5.406,2985,3.177,2986,4.599,2987,3.177,2988,4.599,2989,5.925,2990,3.177,2991,5.22,2992,3.606,2993,3.606,2994,3.606,2995,5.22,2996,3.606,2997,3.606,2998,3.606,2999,3.606,3000,6.725,3001,5.22,3002,5.22,3003,3.606]],["title/modules/SlicesInputModule.html",[533,1.271,2757,3.045]],["body/modules/SlicesInputModule.html",[3,0.119,4,0.148,5,0.119,6,0.09,43,0.01,75,0.008,80,0.007,84,0.007,99,0.337,104,0.305,130,0.148,133,0.209,212,0.79,326,1.851,424,1.633,513,2.514,514,1.716,535,1.805,536,2.213,547,2.39,548,1.805,550,2.587,552,2.052,556,2.329,562,3.155,563,2.487,734,5.103,735,2.587,736,2.731,737,2.164,738,5.657,739,4.731,740,5.302,741,4.434,742,4.157,743,3.477,744,5.103,2757,6.162,2765,4.187,2974,4.434,3004,5.601,3005,5.601,3006,5.601,3007,7.601]],["title/components/StageNavComponent.html",[196,0.424,515,1.239]],["body/components/StageNavComponent.html",[3,0.051,4,0.063,5,0.079,6,0.119,11,0.83,12,1.003,18,0.395,19,0.464,20,1.054,25,1.054,32,2.13,35,0.478,38,1.943,40,0.782,41,0.802,42,1.553,43,0.01,44,1.089,45,0.735,46,1.21,47,0.762,52,1.695,55,1.372,56,1.052,61,4.06,69,0.366,75,0.004,80,0.003,84,0.003,85,1.241,86,1.409,99,0.159,104,0.13,125,1,130,0.098,133,0.22,134,0.865,139,0.442,141,1.029,142,0.762,156,2.689,160,0.927,161,1.008,182,1.471,188,0.873,196,0.77,197,0.73,198,1.054,199,0.768,200,0.851,201,0.851,202,0.829,208,0.73,209,1.256,210,1.256,211,2.191,212,1.096,213,0.661,214,1.136,216,1.136,228,3.706,233,3.377,234,3.706,244,3.596,250,1.887,251,3.399,252,2.384,253,4.745,256,0.629,257,0.829,258,1.858,259,2.337,260,1.854,262,2.943,263,3.139,272,3.131,273,3.131,286,2.77,287,2.099,297,1.992,300,1.293,308,0.802,309,0.661,321,0.808,322,1.782,324,4.153,333,2.146,337,1.555,382,0.946,398,3.706,399,0.946,400,1.945,401,3.197,402,2.63,403,2.63,404,1.907,407,3.596,409,0.695,410,1.37,413,1.321,414,0.808,418,2.28,421,1.746,428,2.823,429,1.653,434,2.209,436,1.158,437,1.158,441,1.234,442,1.422,444,2.656,445,2.345,447,1.887,448,1.985,449,2.713,450,1.442,451,1.321,453,1.505,457,2.17,461,3.38,464,1.37,468,0.851,469,1.58,470,0.851,471,1.831,472,0.851,473,0.851,474,0.768,475,0.851,476,0.749,477,1.623,478,0.768,479,0.851,480,1.136,481,1.623,482,0.768,483,0.808,484,0.851,485,0.768,486,0.851,487,0.768,488,0.73,489,0.851,490,0.768,491,0.851,492,0.768,493,0.768,494,0.851,495,0.768,496,0.829,497,0.749,498,0.851,499,0.768,500,1.323,501,0.749,502,0.768,503,0.768,504,1.623,505,0.768,506,1.225,507,1.323,508,0.749,509,0.768,510,0.749,511,0.629,512,0.851,513,0.749,514,0.73,515,1.653,516,0.851,517,0.768,518,0.851,519,0.768,520,0.851,521,0.768,522,1.054,523,0.768,524,1.194,525,0.768,526,0.851,527,0.768,528,1.758,529,0.851,530,0.768,531,0.851,532,0.851,596,1.09,607,1.694,612,2.28,664,2.617,665,0.768,666,2.892,667,2.277,668,1.028,669,1,670,1.907,677,1.194,678,1.623,679,1.123,681,3.834,683,2.019,704,2.055,705,1.394,706,1.422,723,1.887,726,2.934,813,1.746,827,1.782,894,4.505,895,3.747,911,3.377,949,4.153,954,3.077,960,2.613,963,1.692,965,2.142,969,2.768,1015,3.666,1034,2.301,1084,5.86,1219,3.184,1264,6.664,1268,2.508,1274,4.461,1276,2.843,1277,3.38,1304,2.013,1307,2.571,1348,2.013,1349,1.692,1526,3.834,1559,3.227,1608,3.47,1625,4.397,1635,3.399,1642,2.172,1668,2.399,1679,6.365,1739,3.706,1743,1.48,1766,3.377,1767,3.377,1795,3.377,1799,5.186,2108,1.48,2110,1.48,2215,1.543,2565,4.673,2785,5.186,2788,4.673,3008,6.253,3009,2.172,3010,4.206,3011,4.206,3012,4.206,3013,7.564,3014,5.161,3015,4.206,3016,5.161,3017,6.306,3018,5.161,3019,5.161,3020,4.206,3021,4.206,3022,5.821,3023,5.161,3024,5.161,3025,5.161,3026,5.821,3027,5.821,3028,2.705,3029,2.705,3030,4.206,3031,4.206,3032,5.161,3033,5.161,3034,4.547,3035,2.705,3036,2.705,3037,2.705,3038,4.206,3039,4.206,3040,5.161,3041,4.143,3042,5.882,3043,5.161,3044,5.161,3045,4.206,3046,2.705,3047,5.821,3048,4.206,3049,2.705,3050,2.705,3051,2.705,3052,4.206,3053,2.705,3054,4.206,3055,2.705,3056,2.705,3057,2.705,3058,2.705,3059,5.129,3060,5.821,3061,2.705,3062,2.705,3063,2.705,3064,2.705,3065,5.161,3066,2.705,3067,2.705,3068,2.705,3069,2.705,3070,2.705,3071,4.206,3072,2.705,3073,2.705,3074,2.705,3075,2.705,3076,2.705,3077,2.705,3078,2.705,3079,5.821,3080,4.206,3081,2.384,3082,2.705,3083,2.705,3084,2.705,3085,5.161]],["title/modules/StageNavModule.html",[533,1.271,1079,3.045]],["body/modules/StageNavModule.html",[3,0.117,4,0.145,5,0.117,6,0.088,43,0.01,75,0.008,80,0.007,84,0.007,99,0.338,104,0.299,130,0.145,133,0.205,424,1.598,457,1.638,497,2.077,515,2.571,535,1.766,536,2.185,547,2.36,548,1.766,550,2.554,552,2.422,556,2.299,562,3.114,563,2.434,735,2.554,736,2.697,737,2.118,742,4.104,743,3.403,1079,6.232,1084,4.34,1321,6.611,1322,5.482,1665,4.098,1701,5.438,1817,6.023,1818,4.995,1823,4.995,1824,4.995,3008,4.631,3086,5.482,3087,5.482,3088,6.222,3089,5.482,3090,6.222,3091,7.504,3092,6.222,3093,6.222]],["title/modules/StoreModule.html",[533,1.271,1091,3.045]],["body/modules/StoreModule.html",[1,4.143,3,0.111,4,0.138,5,0.111,6,0.084,8,3.11,9,3.69,43,0.01,75,0.008,80,0.006,84,0.006,88,2.842,90,1.856,91,2.611,92,4.143,99,0.343,104,0.283,107,2.927,110,2.377,119,3.228,120,3.518,121,4.738,130,0.17,133,0.194,139,0.965,165,3.366,204,3.518,212,0.734,246,2.927,326,2.115,359,2.17,441,2.693,533,1.718,535,1.675,552,1.905,556,2.226,639,2.989,640,2.989,687,2.883,875,3.82,930,4.543,974,5.2,1091,5.068,1124,4.117,1371,4.392,1382,4.785,1672,4.117,1790,3.228,1863,4.117,1942,3.428,1943,2.883,1944,3.518,2110,3.228,2484,4.392,2706,4.392,2779,4.738,2875,4.738,3094,4.738,3095,5.902,3096,5.2,3097,5.902,3098,5.2,3099,7.432,3100,5.902,3101,5.2,3102,5.902,3103,5.902,3104,5.2,3105,4.738,3106,5.902,3107,5.902,3108,5.902,3109,5.902,3110,5.902,3111,5.902,3112,5.902,3113,5.902,3114,5.902,3115,5.902,3116,5.902,3117,5.2,3118,5.902,3119,5.902,3120,5.902,3121,5.902,3122,5.902]],["title/interfaces/Tag.html",[12,1.041,129,0.292]],["body/interfaces/Tag.html",[3,0.117,4,0.146,5,0.117,6,0.089,8,2.673,11,0.776,12,2.099,18,0.586,19,0.829,43,0.01,45,0.806,69,1.134,70,4.113,71,2.022,75,0.008,77,3.723,80,0.009,84,0.008,116,5.236,117,3.723,129,0.504,130,0.188,140,4.687,143,5.314,155,3.373,156,3.506,158,5.314,189,4.113,195,1.644,278,2.307,400,2.03,1837,4.702,1838,3.548,1919,4.113,3123,4.647,3124,4.647,3125,5.013,3126,5.502]],["title/components/TagListComponent.html",[196,0.424,517,1.239]],["body/components/TagListComponent.html",[3,0.074,4,0.092,5,0.104,6,0.118,8,1.685,11,0.87,12,2.189,18,0.37,19,0.613,25,1.393,30,4.897,33,5.113,35,0.696,38,1.902,40,1.033,41,1.06,42,1.628,43,0.01,44,1.154,45,0.742,46,1.269,47,1.008,52,1.146,55,1.324,56,0.84,66,4.462,69,0.872,71,1.614,75,0.006,80,0.004,84,0.004,85,1.033,86,1.087,99,0.244,104,0.189,116,3.476,130,0.092,133,0.252,134,1.142,140,3.04,141,1.237,142,0.714,143,4.61,145,3.161,158,2.593,160,1.115,161,1.157,181,2.593,196,0.717,197,1.063,198,1.393,199,1.118,200,1.238,201,1.238,202,1.206,208,1.063,209,1.66,210,1.66,211,2.265,212,1.129,213,0.962,214,1.501,216,1.501,256,1.293,259,1.66,260,1.393,300,1.614,308,1.06,309,0.962,321,1.176,387,1.496,390,1.634,399,1.377,400,1.063,406,3.17,407,2.245,409,1.011,429,1.118,432,2.347,450,0.85,453,0.85,457,1.037,468,1.238,469,1.85,470,1.238,471,2.201,472,1.238,473,1.238,474,1.118,475,1.238,476,1.09,477,2.026,478,1.118,479,1.238,480,1.501,481,2.026,482,1.118,483,1.176,484,1.238,485,1.118,486,1.238,487,1.118,488,1.063,489,1.238,490,1.118,491,1.238,492,1.118,493,1.118,494,1.238,495,1.118,496,1.206,497,1.09,498,1.238,499,1.118,500,1.748,501,1.09,502,1.118,503,1.118,504,2.026,505,1.118,506,1.618,507,1.748,508,1.09,509,1.118,510,1.09,511,0.916,512,1.238,513,1.09,514,1.063,515,1.118,516,1.238,517,1.987,518,1.238,519,1.118,520,1.238,521,1.118,522,1.393,523,1.118,524,1.578,525,1.118,526,1.238,527,1.118,528,1.464,529,1.238,530,1.118,531,1.238,532,1.238,596,1.586,607,2.239,642,1.685,664,3.064,665,1.118,666,2.674,667,2.738,668,1.496,669,1.455,670,2.381,677,1.578,678,2.026,683,2.52,704,2.715,705,1.842,706,2.07,964,2.593,969,1.415,1207,3.04,1276,3.419,1296,2.245,1297,2.245,1307,1.739,1465,3.476,1837,3.476,1838,3.04,2384,4.137,2505,3.161,2748,6.848,2767,6.169,3127,5.459,3128,3.469,3129,5.558,3130,6.443,3131,5.558,3132,5.558,3133,6.443,3134,6.443,3135,5.558,3136,3.937,3137,3.937,3138,5.558,3139,3.937,3140,4.462,3141,4.897,3142,5.558,3143,3.937,3144,4.897,3145,3.937,3146,4.462,3147,4.897,3148,3.469,3149,3.937,3150,3.937,3151,3.937,3152,3.937,3153,6.443,3154,3.937,3155,3.937,3156,3.469]],["title/modules/TagListModule.html",[533,1.271,2758,3.045]],["body/modules/TagListModule.html",[3,0.122,4,0.152,5,0.122,6,0.092,12,1.552,43,0.01,75,0.008,80,0.007,84,0.007,99,0.328,104,0.312,130,0.152,133,0.214,424,1.671,517,2.585,535,1.847,536,2.244,547,2.423,548,1.847,550,2.623,552,2.1,556,2.361,562,3.199,563,2.545,735,2.623,736,2.769,737,2.214,2758,6.191,2767,4.842,3127,4.285,3157,5.733,3158,5.733,3159,5.733,3160,6.506,3161,6.79,3162,5.733,3163,6.506]],["title/components/TagSearchComponent.html",[196,0.424,519,1.239]],["body/components/TagSearchComponent.html",[3,0.041,4,0.051,5,0.067,6,0.12,8,0.942,11,0.86,12,2.043,18,0.335,19,0.394,20,1.916,25,0.894,28,4.159,33,4.325,35,0.631,38,1.967,40,0.664,41,0.68,42,1.557,43,0.01,44,1.065,45,0.711,46,1.213,47,0.647,48,1.013,52,1.776,55,1.572,56,1.011,69,0.826,70,2.35,71,1.857,72,4.781,75,0.004,76,3.43,77,5.194,78,2.865,79,2.865,80,0.009,82,3.614,84,0.008,85,1.352,86,1.352,90,1.122,96,1.356,99,0.243,104,0.106,111,1.637,113,0.625,114,0.972,115,0.749,116,3.561,117,4.237,122,2.027,123,2.027,125,1.914,128,1.004,130,0.051,133,0.201,134,1.376,139,1.162,140,3.115,141,1.285,142,0.399,155,0.886,160,1.102,161,1.17,181,1.449,188,1.838,189,1.449,196,0.732,197,0.594,198,0.894,199,0.625,200,0.692,201,1.791,202,0.674,205,1.438,206,2.199,208,0.594,209,1.066,210,1.066,211,2.14,212,1.073,213,0.538,214,0.964,216,0.964,230,2.531,233,2.865,243,3.351,244,3.816,247,2.834,248,2.834,250,2.489,251,1.449,256,0.83,257,1.094,258,1.576,259,1.701,260,1.528,263,3.315,277,2.128,278,2.104,283,2.128,287,1.918,297,1.5,300,1.128,308,0.68,309,0.538,321,0.657,322,1.449,333,1.215,337,0.734,357,1.311,382,0.769,399,0.769,400,1.216,401,1.869,404,1.664,405,1.618,408,1.004,409,0.917,413,1.075,414,0.657,416,0.942,417,1.311,418,2.288,419,2.489,425,1.203,427,2.217,428,2.463,429,1.963,430,2.35,431,2.124,432,2.128,433,1.311,434,1.927,436,0.942,437,0.942,442,1.157,444,2.055,445,2.786,448,2.444,449,1.157,450,0.771,451,1.743,453,0.973,457,0.579,458,3.141,464,1.114,466,0.861,468,0.692,469,1.427,470,0.692,471,1.629,472,0.692,473,0.692,474,0.625,475,0.692,476,0.609,477,1.416,478,0.625,479,0.692,480,0.964,481,1.416,482,0.625,483,0.657,484,0.692,485,0.625,486,0.692,487,0.625,488,0.594,489,0.692,490,0.625,491,0.692,492,0.625,493,0.625,494,0.692,495,0.625,496,0.674,497,0.609,498,0.692,499,0.625,500,1.122,501,0.609,502,0.625,503,0.625,504,1.416,505,0.625,506,1.039,507,1.122,508,0.609,509,0.625,510,0.609,511,0.512,512,0.692,513,0.609,514,0.594,515,0.625,516,0.692,517,0.625,518,0.692,519,1.471,520,0.692,521,0.625,522,0.894,523,0.625,524,1.013,525,0.625,526,0.692,527,0.625,528,0.94,529,0.692,530,0.625,531,0.692,532,0.692,561,3.66,607,1.438,664,1.869,665,0.625,666,1.481,667,2.027,668,0.836,669,0.813,670,1.664,673,1.254,677,1.013,678,1.416,683,2.027,704,1.743,705,1.183,727,1.376,774,2.35,800,2.865,813,1.298,828,1.449,888,2.035,932,2.232,965,1.481,969,1.283,1115,2.473,1190,1.766,1240,4.408,1265,2.489,1268,2.128,1276,2.979,1282,2.865,1285,2.128,1296,2.035,1297,2.035,1298,2.35,1299,1.637,1300,1.766,1301,1.938,1307,2.694,1308,5.157,1313,1.766,1325,3.24,1349,1.376,1356,1.449,1536,1.938,1557,3.856,1559,3.24,1608,2.128,1635,2.966,1637,3.973,1642,1.766,1744,2.35,1790,1.952,1838,2.444,1843,2.966,1884,2.489,1936,1.254,1980,1.637,1981,1.637,2105,3.615,2115,1.449,2141,2.656,2474,3.351,2594,1.766,2728,1.938,2769,5.918,3125,2.865,3127,5.588,3144,3.144,3146,2.865,3147,3.144,3148,1.938,3164,1.766,3165,3.569,3166,3.967,3167,4.503,3168,3.569,3169,5.181,3170,5.181,3171,4.503,3172,4.503,3173,4.503,3174,5.181,3175,5.181,3176,3.569,3177,3.569,3178,3.569,3179,5.181,3180,5.181,3181,3.569,3182,6.917,3183,4.503,3184,4.503,3185,3.569,3186,3.569,3187,2.2,3188,3.569,3189,5.018,3190,2.2,3191,2.2,3192,2.2,3193,2.2,3194,5.018,3195,3.569,3196,2.2,3197,3.569,3198,4.503,3199,2.2,3200,4.503,3201,2.2,3202,2.2,3203,2.656,3204,3.569,3205,3.569,3206,3.569,3207,2.2,3208,3.569,3209,2.2,3210,3.569,3211,3.569,3212,3.569,3213,2.2,3214,3.569,3215,7.413,3216,3.569,3217,2.2,3218,2.2,3219,3.569,3220,2.2,3221,2.2,3222,3.569,3223,3.569,3224,3.569,3225,2.2,3226,3.569,3227,2.2,3228,3.569,3229,3.569,3230,2.2,3231,2.2,3232,3.569,3233,3.569,3234,4.503,3235,3.569,3236,3.569,3237,3.569,3238,2.2,3239,3.144,3240,2.2,3241,3.569,3242,4.896,3243,2.2,3244,2.2,3245,2.2,3246,3.615,3247,1.938,3248,1.938,3249,2.865,3250,2.2,3251,2.2,3252,2.2,3253,2.2,3254,2.2,3255,3.569,3256,4.503,3257,2.2,3258,2.2,3259,2.2,3260,2.2,3261,2.2,3262,2.2,3263,2.2,3264,2.2,3265,2.2,3266,2.2,3267,2.2,3268,2.2,3269,2.2,3270,2.2,3271,2.2,3272,5.181,3273,2.2,3274,2.2,3275,1.938,3276,2.2,3277,2.2,3278,2.2,3279,2.2,3280,2.2,3281,2.2,3282,2.2,3283,2.2,3284,2.2,3285,2.2,3286,2.2,3287,2.2,3288,2.2,3289,3.569,3290,3.569,3291,3.569,3292,2.2,3293,2.2,3294,2.2,3295,3.569,3296,2.2,3297,2.2,3298,2.2,3299,2.2]],["title/modules/TagSearchModule.html",[533,1.271,2759,3.045]],["body/modules/TagSearchModule.html",[3,0.118,4,0.147,5,0.118,6,0.089,12,1.501,43,0.01,75,0.008,80,0.007,84,0.007,99,0.339,104,0.302,130,0.147,133,0.207,424,1.617,519,2.575,535,1.787,536,2.2,547,2.376,548,1.787,550,2.572,552,2.032,556,2.316,560,5.548,561,3.444,562,3.137,563,2.463,735,2.572,736,2.716,737,2.143,738,5.624,739,4.686,1662,5.271,1663,4.392,2115,4.147,2128,6.658,2129,6.658,2759,6.151,2769,4.392,3127,4.147,3300,5.548,3301,5.548,3302,5.548,3303,6.297,3304,7.557,3305,6.297,3306,7.557,3307,6.297]],["title/interfaces/TagSearchResult.html",[117,2.603,129,0.292]],["body/interfaces/TagSearchResult.html",[3,0.119,4,0.148,5,0.119,6,0.09,8,2.711,11,0.787,12,2.083,18,0.595,19,0.836,43,0.01,45,0.763,69,1.027,70,4.995,71,2.188,75,0.008,77,4.521,80,0.01,84,0.009,116,4.742,117,4.521,129,0.508,130,0.19,140,4.148,143,4.172,155,2.552,156,3.055,158,4.172,189,5.542,195,1.668,278,2.802,400,1.71,1837,3.961,1838,2.989,1919,4.995,3123,4.714,3124,4.714,3125,6.088,3126,6.682]],["title/modules/ThemingModule.html",[533,1.271,1092,3.045]],["body/modules/ThemingModule.html",[3,0.126,4,0.157,5,0.126,6,0.095,43,0.01,75,0.008,80,0.007,84,0.007,99,0.297,104,0.322,130,0.157,133,0.221,242,5.273,297,1.766,424,1.722,535,1.903,536,2.284,547,2.467,548,1.903,556,2.404,588,5.166,589,4.99,590,5.382,1092,6.17,3308,5.907,3309,5.907,3310,6.705,3311,7.844,3312,6.705,3313,6.705,3314,6.705]],["title/injectables/ThemingService.html",[0,1.271,242,2.603]],["body/injectables/ThemingService.html",[0,1.69,2,2.388,3,0.078,4,0.098,5,0.078,6,0.121,11,0.894,18,0.393,19,0.64,20,2.185,25,1.454,35,0.74,37,4.151,38,1.973,40,1.079,42,1.757,43,0.01,44,1.051,45,0.752,46,1.48,47,1.416,55,1.606,56,1.268,59,3.822,69,1.18,75,0.006,80,0.004,84,0.004,85,1.518,86,0.819,99,0.22,104,0.201,130,0.136,133,0.284,134,1.478,139,1.335,141,1.177,142,1.052,160,1.203,196,0.758,198,1.454,213,1.023,226,5.178,241,5.588,242,3.459,244,4.455,253,2.758,260,2.007,278,2.144,347,5.351,418,1.85,576,3.116,599,3.689,606,2.496,785,2.563,800,3.361,813,1.454,821,3.689,822,3.361,888,4.306,1106,3.116,1285,4.868,1313,4.658,1327,2.618,1387,4.496,1415,3.361,1466,4.658,1608,3.97,1842,2.496,1851,2.758,1852,2.758,2247,6.077,2655,5.113,3140,4.658,3141,6.884,3189,7.195,3203,4.319,3315,3.361,3316,5.803,3317,8.011,3318,5.803,3319,7.19,3320,7.19,3321,7.19,3322,5.803,3323,4.187,3324,4.187,3325,5.803,3326,4.187,3327,7.551,3328,4.187,3329,5.803,3330,7.19,3331,4.187,3332,5.803,3333,5.113,3334,5.803,3335,5.803,3336,4.187,3337,5.803,3338,4.187,3339,5.803,3340,4.187,3341,4.187,3342,4.187,3343,4.187,3344,4.187,3345,4.187,3346,4.187,3347,3.689,3348,3.689,3349,3.689,3350,4.187,3351,4.187,3352,4.187,3353,4.187,3354,4.187,3355,4.187,3356,4.187,3357,3.689,3358,4.187,3359,4.187,3360,5.803,3361,4.187,3362,4.187,3363,4.187,3364,4.187,3365,4.187,3366,4.187,3367,4.187,3368,4.187]],["title/components/ToggleButtonComponent.html",[196,0.424,521,1.239]],["body/components/ToggleButtonComponent.html",[3,0.061,4,0.076,5,0.091,6,0.118,11,0.72,12,1.158,15,1.414,18,0.307,19,0.535,20,1.991,25,1.216,32,2.458,35,0.577,38,1.919,40,0.903,41,0.926,42,1.129,43,0.01,44,1.035,45,0.652,46,0.88,47,0.88,48,1.378,52,0.951,55,1.529,56,1.085,65,2.078,69,0.784,75,0.005,80,0.003,84,0.003,85,1.274,86,1.34,90,1.527,99,0.243,104,0.157,113,0.927,130,0.076,133,0.236,134,1.318,139,0.947,141,0.858,142,0.592,160,1.022,161,0.875,196,0.758,197,0.882,198,1.216,199,0.927,200,1.027,201,1.027,202,1.001,205,2.584,206,2.83,208,0.882,209,1.45,210,1.45,211,2.231,212,1.117,213,0.798,214,1.311,216,1.311,225,4.651,230,3.133,247,3.508,248,3.508,256,0.76,257,2.435,258,2.833,260,1.216,263,2.982,277,2.894,278,1.794,287,1.822,297,1.526,300,2.231,308,0.926,309,0.798,311,3.623,312,3.036,321,0.976,337,1.409,357,1.947,395,2.043,399,1.142,400,1.311,404,1.207,407,1.863,409,0.839,410,1.654,414,0.976,418,2.559,419,4.781,421,2.015,425,2.655,426,2.878,427,2.078,429,0.927,431,4.034,436,1.398,437,1.398,439,5.766,440,5.766,441,3.486,442,1.717,448,2.291,450,1.385,451,2.371,453,1.552,457,0.86,464,2.458,468,1.027,469,1.717,470,1.027,471,2.017,472,1.027,473,1.027,474,0.927,475,1.027,476,0.904,477,1.822,478,0.927,479,1.027,480,1.311,481,1.822,482,0.927,483,0.976,484,1.027,485,1.946,486,1.027,487,0.927,488,0.882,489,1.027,490,0.927,491,1.027,492,0.927,493,0.927,494,1.027,495,0.927,496,1.001,497,0.904,498,1.027,499,0.927,500,1.527,501,0.904,502,0.927,503,0.927,504,1.822,505,0.927,506,1.414,507,1.527,508,0.904,509,0.927,510,0.904,511,0.76,512,1.027,513,0.904,514,0.882,515,0.927,516,1.027,517,0.927,518,1.027,519,0.927,520,1.027,521,1.821,522,2.194,523,0.927,524,1.378,525,0.927,526,1.027,527,0.927,528,1.278,529,1.027,530,0.927,531,1.027,532,1.027,596,1.316,665,0.927,677,1.378,684,2.078,705,1.609,722,1.717,755,4.651,758,3.375,761,1.49,762,4.312,765,2.894,766,3.897,767,5.149,772,2.553,773,2.83,774,3.197,777,3.173,781,3.197,782,3.613,783,3.613,813,1.717,818,2.431,827,4.224,828,5.375,836,2.622,838,2.431,844,2.878,965,1.356,993,3.197,1001,3.897,1003,3.897,1004,3.897,1010,4.651,1015,3.173,1029,2.622,1034,1.787,1251,6.682,1300,2.622,1307,1.443,1347,2.622,1349,4.286,1465,3.036,1502,2.878,1507,2.878,1508,5.105,1509,5.105,1528,4.278,1556,2.431,1562,4.278,2636,2.622,2640,5.105,2641,4.278,2654,4.278,2663,4.278,2669,2.878,3369,7.334,3370,4.855,3371,3.267,3372,7.183,3373,4.855,3374,5.794,3375,3.267,3376,3.267,3377,3.267,3378,3.267,3379,3.267,3380,3.267,3381,3.267,3382,3.267,3383,5.794,3384,5.794,3385,3.267,3386,3.267,3387,3.267,3388,3.267,3389,3.267,3390,3.267,3391,3.267,3392,3.267,3393,4.855,3394,3.267,3395,4.855,3396,3.267,3397,3.267,3398,3.267]],["title/interfaces/User.html",[129,0.292,333,1.486]],["body/interfaces/User.html",[3,0.079,4,0.099,5,0.079,6,0.06,16,1.611,18,0.398,19,0.645,20,1.466,22,1.404,23,1.611,35,0.749,37,3.41,43,0.01,45,0.531,56,1.145,69,1.182,75,0.006,80,0.004,84,0.004,85,0.788,88,2.289,91,2.103,99,0.315,104,0.203,112,2.228,113,1.203,129,0.392,130,0.137,133,0.139,134,1.203,139,1.096,141,1.034,142,0.768,160,0.932,161,1.294,182,1.482,195,1.116,196,0.651,197,1.144,203,3.154,204,2.526,205,1.707,206,2.858,207,3.854,209,1.266,210,1.266,211,1.679,212,0.833,213,1.036,214,1.144,215,3.402,216,1.144,217,3.402,218,3.402,219,3.076,220,4.414,221,4.414,222,3.2,223,2.956,224,3.659,225,4.191,226,4.583,227,3.402,230,2.07,231,2.791,232,3.402,236,3.402,238,5.38,239,4.697,240,4.697,241,2.956,242,3.488,243,3.154,244,3.337,245,2.408,246,2.357,247,2.318,248,3.2,251,2.791,253,2.791,255,4.697,256,1.559,257,2.054,258,1.872,259,1.748,260,1.466,261,4.355,262,3.337,263,2.429,265,3.402,267,3.402,268,3.402,269,2.791,270,3.402,271,3.154,272,3.154,273,3.154,274,3.402,275,3.402,277,2.526,278,1.566,281,2.417,282,3.402,283,2.526,284,4.988,285,4.697,286,4.414,287,2.273,289,3.402,292,3.402,295,3.402,297,1.765,299,2.162,300,1.062,301,3.2,303,2.417,304,2.146,306,2.956,307,2.228,308,0.808,309,1.036,310,2.318,311,3.659,312,2.65,313,1.872,315,3.402,317,3.402,321,1.266,322,2.791,323,3.154,324,2.791,325,3.402,326,1.234,327,3.154,328,3.402,329,3.154,330,3.154,331,2.526,332,2.417,333,1.991,334,3.8,335,3.8,336,2.956,337,1.203,338,3.402,339,3.402,340,4.697,341,3.402,342,3.402,343,3.402,344,3.402,345,4.697,346,3.402,347,3.154,348,3.402,349,3.402,350,2.65,351,3.402,352,3.402,353,2.318,354,3.402,355,3.402,356,3.402,357,2.526,358,3.402,359,1.266,360,3.402,361,3.402,362,2.956,363,3.402,364,3.402,365,3.402,366,3.402,367,3.402,368,3.402,369,6.574,370,3.402,371,5.38,372,3.402,373,6.452,374,3.402,375,3.154,376,3.402,377,5.981,378,2.228,379,3.402,380,4.123,381,3.402,382,2.046,383,4.697,384,4.583,385,2.956,386,3.402,387,2.224,388,4.697,389,2.417,390,2.429,391,4.697,392,3.402,393,3.154,394,3.402,395,2.65]],["title/interfaces/UserName.html",[129,0.292,2100,3.249]],["body/interfaces/UserName.html",[3,0.099,4,0.123,5,0.099,6,0.075,11,0.654,18,0.494,19,0.746,20,1.319,40,0.979,41,1.004,43,0.01,44,1.257,45,0.614,47,0.954,48,1.92,56,0.795,69,1.149,75,0.007,80,0.006,84,0.006,86,1.322,99,0.283,104,0.253,129,0.353,130,0.158,133,0.223,134,1.082,139,0.861,141,1.441,142,0.954,160,1.19,161,1.128,195,1.387,196,0.765,209,1.573,210,1.573,211,1.319,212,0.841,214,1.422,216,1.422,259,2.593,260,1.319,321,1.573,333,2.543,334,4.387,335,4.387,359,2.02,469,1.319,501,1.458,561,3.699,596,2.121,658,3.139,664,2.807,665,1.495,666,2.807,667,2.645,668,2.001,669,1.946,670,2.499,675,3.468,676,3.468,677,1.495,678,1.656,683,2.645,684,2.254,685,4.229,686,3.139,687,3.85,691,3.673,692,3.468,693,3.293,695,3.919,1115,2.499,1276,3.303,1277,2.666,1826,3.468,2091,3.919,2092,4.64,2093,4.64,2094,4.64,2095,4.64,2096,4.64,2098,4.64,2100,6.397,2102,4.64,2104,3.673,2105,5.997,2106,5.958,2107,5.958,2108,4.086,2110,4.086,2114,4.64,2115,3.468,2116,5.867,2117,5.958,2118,4.64,2119,4.64,2120,4.64,2121,5.958,2122,4.64,2123,4.64,2124,4.64]],["title/components/VideoModalComponent.html",[196,0.424,523,1.239]],["body/components/VideoModalComponent.html",[3,0.075,4,0.093,5,0.105,6,0.116,11,0.496,12,1.337,18,0.374,19,0.619,20,1.405,25,1.405,35,0.991,38,1.877,40,1.043,41,1.069,42,0.928,43,0.01,44,1.1,45,0.639,46,0.723,50,2.949,52,1.633,55,1.333,56,1.162,69,0.54,75,0.006,80,0.004,84,0.004,85,1.043,86,1.097,99,0.245,102,2.84,104,0.191,130,0.093,133,0.253,139,0.652,142,0.723,161,0.98,196,0.796,197,1.077,198,1.405,199,1.132,200,1.254,201,1.254,202,1.222,205,2.259,207,4.273,208,1.077,211,2.267,212,1.13,213,0.975,214,1.514,216,1.514,231,4.636,256,1.305,257,1.719,260,1.405,300,1.625,308,1.069,309,2.089,313,2.477,359,2.215,399,1.394,400,1.077,404,2.072,406,2.274,408,1.82,409,1.441,411,2.097,414,2.102,416,3.175,417,2.377,418,1.761,419,2.782,421,1.655,427,3.013,428,2.181,429,1.592,430,4.885,436,1.707,437,1.707,441,1.82,442,2.097,448,1.881,450,0.861,451,1.948,453,1.211,457,1.05,464,2.019,468,1.254,469,1.858,470,1.254,471,2.213,472,1.254,473,1.254,474,1.132,475,1.254,476,1.104,477,2.04,478,1.132,479,1.254,480,1.514,481,2.04,482,1.132,483,1.191,484,1.254,485,1.132,486,1.254,487,1.132,488,1.077,489,1.254,490,1.132,491,1.254,492,1.132,493,1.132,494,1.254,495,1.132,496,1.222,497,1.104,498,1.254,499,1.132,500,1.764,501,1.104,502,1.132,503,1.132,504,2.04,505,1.132,506,1.633,507,1.764,508,1.104,509,1.132,510,1.104,511,0.928,512,1.254,513,1.104,514,1.077,515,1.132,516,1.254,517,1.132,518,1.254,519,1.132,520,1.254,521,1.132,522,1.405,523,1.998,524,2.51,525,1.132,526,1.254,527,1.132,528,1.477,529,1.254,530,1.132,531,1.254,532,1.254,642,1.707,665,1.132,677,1.592,678,2.04,705,1.859,737,1.357,964,3.694,969,1.433,972,3.344,975,2.968,976,2.782,1050,3.514,1086,5.783,1242,3.198,1243,4.174,1296,2.274,1297,2.274,1304,4.828,1307,2.477,1356,3.694,1559,3.507,1842,2.377,2321,5.067,2322,5.174,2329,5.52,2352,2.181,2376,2.782,2378,4.174,2383,3.514,2701,5.208,2709,4.502,2712,3.514,2713,3.201,2720,3.201,2722,4.942,3041,6.344,3347,6.778,3399,5.72,3400,6.778,3401,7.039,3402,3.988,3403,6.488,3404,3.988,3405,5.609,3406,5.609,3407,5.65,3408,6.202,3409,4.942,3410,5.609,3411,5.609,3412,3.988,3413,3.988,3414,3.988,3415,3.988,3416,5.609,3417,3.988,3418,3.988,3419,3.988,3420,3.988,3421,3.988,3422,3.988,3423,5.716,3424,3.988]],["title/components/VideoModalLauncherComponent.html",[196,0.424,525,1.239]],["body/components/VideoModalLauncherComponent.html",[3,0.079,4,0.099,5,0.11,6,0.111,11,0.727,12,1.395,18,0.549,19,0.645,25,1.466,35,0.749,38,1.764,40,1.088,41,1.116,42,0.986,43,0.01,44,1.119,45,0.656,46,0.768,48,1.661,52,1.234,55,0.871,56,0.884,69,0.574,75,0.006,76,1.999,80,0.004,84,0.004,85,1.246,86,1.31,99,0.254,102,2.963,104,0.203,129,0.392,130,0.099,133,0.258,142,0.768,161,1.092,188,1.368,196,0.807,197,1.144,198,1.466,199,1.203,200,1.333,201,1.333,202,1.299,208,1.144,209,1.748,210,1.748,211,2.277,212,1.135,213,1.036,214,1.58,216,1.58,256,0.986,257,1.299,259,2.158,260,1.466,297,1.541,300,1.679,308,1.378,309,2.219,321,1.266,333,1.991,337,0.871,359,1.266,382,1.482,399,1.482,400,1.144,401,2.429,402,2.65,403,2.65,408,1.934,409,1.503,410,2.146,414,2.002,418,1.872,431,1.999,434,2.504,436,1.814,437,1.814,441,1.934,444,2.67,445,1.707,449,3.076,450,1.264,453,0.915,457,1.116,461,2.146,464,2.146,468,1.333,469,1.9,470,1.333,471,2.273,472,1.333,473,1.333,474,1.203,475,1.333,476,1.173,477,2.107,478,1.203,479,1.333,480,1.58,481,2.107,482,1.203,483,1.266,484,1.333,485,1.203,486,1.333,487,1.203,488,1.144,489,1.333,490,1.203,491,1.333,492,1.203,493,1.203,494,1.333,495,1.203,496,1.299,497,1.173,498,1.333,499,1.203,500,1.84,501,1.173,502,1.203,503,1.203,504,2.107,505,1.203,506,1.704,507,1.84,508,1.173,509,1.203,510,1.173,511,0.986,512,1.333,513,1.173,514,1.144,515,1.203,516,1.333,517,1.203,518,1.333,519,1.203,520,1.333,521,1.203,522,1.811,523,1.661,524,2.519,525,2.052,526,1.333,527,1.203,528,1.541,529,1.333,530,1.203,531,1.333,532,1.333,591,4.081,596,1.707,607,2.357,665,1.203,677,1.661,678,2.107,705,1.939,717,2.65,720,2.526,960,2.963,969,2.103,975,4.355,1086,5.293,1087,5.836,1242,3.337,1356,3.854,1363,5.041,1743,3.666,2352,2.318,2380,3.402,2381,5.801,2403,2.956,3399,5.47,3425,3.734,3426,5.851,3427,8.414,3428,6.702,3429,5.851,3430,7.227,3431,5.851,3432,5.851,3433,4.238,3434,5.851,3435,4.238,3436,4.238,3437,5.851,3438,5.851,3439,4.238,3440,4.238,3441,4.238]],["title/modules/VideoModalLauncherModule.html",[533,1.271,1080,3.045]],["body/modules/VideoModalLauncherModule.html",[3,0.122,4,0.152,5,0.122,6,0.092,43,0.01,75,0.008,80,0.007,84,0.007,99,0.321,104,0.312,130,0.152,133,0.214,309,2.005,424,1.667,524,1.842,525,2.584,535,1.842,536,2.24,547,2.42,548,1.842,550,2.619,552,2.095,556,2.358,562,3.194,563,2.539,735,2.619,736,2.765,737,2.209,1080,6.188,1086,4.275,1087,4.83,3399,4.527,3442,5.718,3443,5.718,3444,5.718,3445,6.49,3446,6.49]],["title/modules/VideoModalModule.html",[533,1.271,3447,3.249]],["body/modules/VideoModalModule.html",[3,0.12,4,0.15,5,0.12,6,0.091,43,0.01,75,0.008,80,0.007,84,0.007,99,0.331,104,0.308,130,0.15,133,0.211,424,1.647,523,2.58,524,1.82,535,1.82,536,2.224,547,2.402,548,1.82,550,2.6,552,2.069,556,2.341,562,3.171,563,2.508,735,2.6,736,2.745,737,2.182,1086,5.031,2352,3.507,2402,5.147,2403,4.472,2404,6.132,3399,4.472,3407,5.147,3447,6.586,3448,5.649,3449,5.649,3450,5.649,3451,7.639,3452,5.649]],["title/interfaces/VisibilityItem.html",[129,0.292,1258,2.295]],["body/interfaces/VisibilityItem.html",[3,0.116,4,0.145,5,0.116,6,0.088,11,0.771,18,0.582,19,0.826,43,0.01,44,1.21,45,0.776,46,1.514,69,1.209,71,2.177,75,0.008,76,3.533,80,0.007,84,0.007,86,1.464,129,0.502,130,0.145,155,3.5,195,1.633,304,3.791,337,1.653,353,4.753,359,1.852,457,1.972,528,1.633,813,1.876,965,3.607,1258,3.937,1260,4.808,1285,4.464,1743,4.57,3453,5.463,3454,5.463,3455,7.488]],["title/components/VisibilityMenuComponent.html",[196,0.424,527,1.239]],["body/components/VisibilityMenuComponent.html",[3,0.053,4,0.066,5,0.082,6,0.116,11,0.881,12,1.04,18,0.56,19,0.481,25,1.093,35,0.501,38,1.884,40,0.811,41,0.832,42,1.583,43,0.01,44,1.115,45,0.718,46,1.233,47,0.791,52,0.825,55,1.575,56,1.195,69,0.72,71,1.953,75,0.005,76,1.337,80,0.003,84,0.003,85,0.811,86,1.599,99,0.201,104,0.136,130,0.066,133,0.224,134,0.896,139,0.713,141,1.054,142,0.514,155,2.947,160,1.165,161,1.028,182,1.525,188,1.926,196,0.625,197,0.765,198,1.093,199,0.805,200,0.891,201,0.891,202,0.869,208,0.765,209,1.303,210,1.303,211,2.202,212,1.101,213,0.693,214,1.177,216,1.177,256,0.659,257,1.629,258,1.926,259,1.587,260,1.093,281,2.487,297,1.148,300,1.332,304,2.208,308,0.832,309,0.693,321,0.847,333,0.965,362,3.707,382,0.991,387,1.077,399,0.991,400,1.177,401,2.477,402,1.773,403,1.773,404,1.611,406,3.031,407,3.031,409,0.728,413,1.385,414,1.587,417,1.69,418,1.252,421,3.236,423,3.707,424,1.655,427,1.213,428,1.55,429,1.829,434,1.213,436,1.867,437,1.867,441,1.99,442,1.49,444,1.293,445,3.227,447,1.977,448,2.508,450,1.289,451,2.596,453,0.942,454,4.494,457,0.746,459,2.872,464,2.208,465,4.267,466,2.079,467,3.707,468,0.891,469,1.614,470,0.891,471,1.877,472,0.891,473,0.891,474,0.805,475,0.891,476,0.785,477,1.671,478,0.805,479,0.891,480,1.177,481,1.671,482,0.805,483,0.847,484,0.891,485,0.805,486,0.891,487,0.805,488,0.765,489,0.891,490,0.805,491,0.891,492,0.805,493,0.805,494,0.891,495,0.805,496,0.869,497,0.785,498,0.891,499,0.805,500,1.371,501,0.785,502,0.805,503,0.805,504,1.671,505,0.805,506,1.27,507,1.371,508,0.785,509,0.805,510,0.785,511,0.659,512,0.891,513,0.785,514,0.765,515,0.805,516,0.891,517,0.805,518,0.891,519,0.805,520,0.891,521,0.805,522,1.093,523,0.805,524,1.238,525,0.805,526,0.891,527,1.694,528,2.259,529,0.891,530,0.805,531,0.891,532,0.891,548,0.805,596,1.142,607,1.757,664,2.674,665,0.805,666,2.206,667,2.334,668,1.077,669,1.047,670,1.964,677,1.238,678,1.671,683,2.079,684,1.867,689,3.93,704,2.13,705,1.445,706,1.49,713,2.872,720,1.69,721,1.977,722,2.293,723,3.042,785,1.926,848,2.831,963,1.773,964,1.867,965,3.574,969,1.91,972,2.6,976,3.042,1034,2.385,1192,1.977,1207,1.55,1228,1.773,1258,4.258,1260,4.908,1268,4.056,1274,2.487,1276,3.742,1277,3.022,1283,3.042,1284,3.93,1285,4.056,1304,2.11,1310,1.773,1346,3.501,1349,2.727,1350,3.042,1526,2.872,1668,1.617,1679,5.689,1740,2.6,1743,4.001,1745,3.707,1768,5.258,1780,2.498,1794,2.276,1799,6.183,1830,6.086,1947,3.246,2104,1.977,2544,4.494,2545,3.501,2911,4.267,3081,2.498,3146,2.276,3203,3.246,3456,5.703,3457,2.498,3458,5.315,3459,4.361,3460,4.361,3461,5.968,3462,4.361,3463,5.968,3464,4.361,3465,3.843,3466,4.361,3467,5.315,3468,4.361,3469,2.835,3470,2.835,3471,2.835,3472,4.361,3473,4.361,3474,2.835,3475,2.835,3476,4.361,3477,4.361,3478,4.361,3479,4.361,3480,2.835,3481,3.843,3482,2.835,3483,4.361,3484,2.835,3485,3.843,3486,4.361,3487,2.835,3488,4.361,3489,4.361,3490,2.835,3491,7.911,3492,2.835,3493,2.498,3494,5.968,3495,2.835,3496,2.835,3497,2.835,3498,6.803,3499,5.315,3500,4.361,3501,5.968,3502,2.835,3503,2.835,3504,5.315,3505,2.835,3506,2.835,3507,2.835,3508,2.835,3509,2.835,3510,2.835,3511,2.835,3512,2.835,3513,2.835]],["title/modules/VisibilityMenuModule.html",[533,1.271,1812,3.045]],["body/modules/VisibilityMenuModule.html",[3,0.121,4,0.151,5,0.121,6,0.092,43,0.01,75,0.008,80,0.007,84,0.007,99,0.332,104,0.311,130,0.151,133,0.213,212,0.804,326,1.883,424,1.661,527,2.583,528,1.703,535,1.836,536,2.236,547,2.414,548,1.836,550,2.613,552,2.087,556,2.353,562,3.187,563,2.529,735,2.613,736,2.759,737,2.201,740,5.356,741,4.51,1812,6.183,1828,6.765,1830,4.812,3456,4.51,3514,5.697,3515,5.697,3516,5.697,3517,6.467,3518,6.467]],["title/components/VisibilityToggleComponent.html",[196,0.424,530,1.239]],["body/components/VisibilityToggleComponent.html",[3,0.07,4,0.087,5,0.1,6,0.114,11,0.664,12,1.273,15,1.986,18,0.349,19,0.589,25,1.338,35,0.657,38,1.843,40,0.993,41,1.018,42,0.866,43,0.01,44,1.078,45,0.703,46,0.674,47,0.968,52,1.083,55,0.765,56,0.806,69,0.723,75,0.006,80,0.004,84,0.004,85,1.343,86,1.514,99,0.202,104,0.179,130,0.087,133,0.247,141,1.277,142,1.309,156,2.91,160,0.593,161,1.091,182,1.867,196,0.783,197,1.004,198,1.338,199,1.056,200,1.17,201,1.17,202,1.14,208,1.004,209,1.595,210,1.595,211,2.255,212,1.125,213,0.909,214,1.441,216,1.441,256,1.242,257,1.636,259,2.246,260,1.338,278,1.973,281,3.045,287,2.145,300,1.565,308,1.018,309,0.909,321,1.111,333,1.817,337,1.097,399,1.301,400,1.842,401,2.832,404,2.307,405,1.337,407,2.122,408,1.698,409,0.956,411,1.956,413,2.608,414,2.038,416,2.285,417,2.218,418,1.643,421,2.216,423,2.595,424,0.956,427,3.092,428,2.035,429,1.516,432,2.218,433,3.183,434,3.092,436,2.285,437,1.592,441,2.436,442,1.956,444,2.849,445,2.515,446,3.516,448,3.219,450,1.474,451,2.608,453,1.153,457,0.98,458,3.724,461,3.162,464,1.884,468,1.17,469,1.81,470,1.17,471,2.145,472,1.17,473,1.17,474,1.056,475,1.17,476,1.03,477,1.964,478,1.056,479,1.17,480,1.441,481,1.964,482,1.056,483,1.111,484,1.17,485,1.056,486,1.17,487,1.056,488,1.004,489,1.17,490,1.056,491,1.17,492,1.056,493,1.056,494,1.17,495,1.056,496,1.14,497,1.03,498,1.17,499,1.056,500,1.679,501,1.03,502,1.056,503,1.056,504,1.964,505,1.056,506,1.554,507,1.679,508,1.03,509,1.056,510,1.03,511,0.866,512,1.17,513,1.03,514,1.004,515,1.056,516,1.17,517,1.056,518,1.17,519,1.056,520,1.17,521,1.056,522,2.171,523,1.056,524,1.516,525,1.056,526,1.17,527,1.056,528,2.332,529,1.17,530,1.937,531,1.17,532,1.17,596,1.499,607,2.151,664,2.592,665,1.056,666,2.216,667,2.669,668,1.414,669,1.375,670,2.307,677,1.516,678,1.964,681,3.516,683,2.443,704,3.332,705,1.769,706,1.956,715,2.595,718,2.035,722,1.956,813,1.338,860,2.769,965,1.544,969,1.337,975,2.769,1019,2.769,1205,4.704,1228,2.326,1276,2.608,1277,2.703,1283,3.724,1296,2.122,1297,2.122,1307,1.643,1310,3.338,1348,2.769,1349,2.326,1526,3.516,1625,3.516,1666,2.987,1668,3.045,1669,5.502,1670,4.704,1672,5.245,1676,3.278,1680,3.278,1699,2.987,1742,4.286,1743,3.415,1766,4.286,1767,4.286,1800,2.987,1832,6.005,2785,3.973,2797,4.286,2815,3.278,3156,3.278,3166,4.704,3456,5.628,3465,6.625,3493,3.278,3519,5.339,3520,5.339,3521,7.224,3522,6.244,3523,5.339,3524,3.721,3525,5.339,3526,3.721,3527,6.244,3528,3.721,3529,3.721,3530,4.704,3531,3.721,3532,3.721,3533,3.721,3534,5.339,3535,3.721]],["title/modules/VisibilityToggleModule.html",[533,1.271,1813,3.045]],["body/modules/VisibilityToggleModule.html",[3,0.122,4,0.152,5,0.122,6,0.092,43,0.01,75,0.008,80,0.007,84,0.007,99,0.328,104,0.312,130,0.152,133,0.214,424,1.667,528,1.709,530,2.584,535,1.842,536,2.24,547,2.42,548,1.842,550,2.619,552,2.095,556,2.358,562,3.194,563,2.539,735,2.619,736,2.765,737,2.209,1705,5.718,1708,5.718,1813,6.188,1832,4.83,3161,6.78,3162,5.718,3456,4.527,3536,5.718,3537,5.718,3538,5.718]],["title/interfaces/XYZTriplet.html",[129,0.292,1918,2.388]],["body/interfaces/XYZTriplet.html",[0,1.143,3,0.046,4,0.058,5,0.046,6,0.035,8,1.061,11,0.308,15,2.035,16,0.942,18,0.233,19,0.433,20,1.612,22,2.386,23,0.942,29,1.061,35,0.438,37,2.853,40,0.461,41,0.472,43,0.01,44,1.002,45,0.705,47,0.712,48,0.703,49,1.413,50,1.303,53,3.984,56,1.214,65,1.061,69,0.946,71,1.222,75,0.004,80,0.003,84,0.003,88,0.969,90,2.023,91,1.411,96,3.106,99,0.301,104,0.119,105,2.469,106,1.68,107,1.582,108,1.061,109,1.061,110,0.998,113,0.703,115,0.843,120,1.477,122,1.536,123,1.536,124,0.969,125,0.916,126,1.582,128,1.791,129,0.327,130,0.157,132,1.029,133,0.082,134,1.437,139,1.336,141,1.303,142,0.712,149,3.307,155,2.816,156,1.964,160,1.28,161,1.243,162,1.061,163,1.131,173,1.549,174,1.549,177,1.728,182,0.866,184,1.728,195,0.652,212,0.488,245,1.411,246,1.582,256,1.497,257,2.26,269,2.586,281,1.413,287,1.901,297,1.461,299,2.969,301,1.355,303,1.413,304,1.255,308,0.749,326,0.721,337,1.002,353,2.147,359,1.657,382,2.751,387,2.99,390,3.266,400,0.669,405,1.752,409,1.425,429,1.984,435,2.301,445,1.582,450,1.306,453,1.198,457,0.652,488,1.82,511,1.675,514,1.06,528,0.652,612,1.734,655,3.307,662,1.413,667,1.536,668,0.942,669,0.916,670,0.916,673,2.781,679,2.024,683,0.969,684,3.325,687,1.21,754,1.477,761,2.935,785,2.841,813,0.984,848,1.802,894,4.501,895,1.988,932,3.049,942,5.021,943,3.982,945,1.632,946,1.632,947,1.632,949,2.586,954,1.477,965,2.303,1015,3.55,1115,1.451,1207,2.667,1219,1.355,1253,3.034,1256,3.869,1258,3.544,1260,1.355,1328,3.629,1329,4.115,1330,3.163,1331,2.781,1334,2.759,1379,1.21,1740,2.907,1741,2.739,1743,3.518,1744,3.982,1745,2.739,1756,1.844,1790,3.307,1838,1.852,1839,3.937,1844,1.21,1876,2.455,1908,1.549,1909,1.632,1910,1.989,1911,3.835,1912,4.237,1913,4.487,1914,4.487,1915,4.487,1916,3.986,1917,4.741,1918,4.115,1919,1.632,1920,4.705,1921,3.152,1922,4.218,1923,1.918,1924,2.455,1925,2.739,1926,1.477,1927,1.477,1928,1.989,1929,1.844,1930,1.632,1931,1.989,1932,1.632,1933,1.989,1934,1.477,1935,1.989,1936,1.413,1937,1.355,1938,2.239,1939,1.989,1940,1.989,1941,1.728,1942,1.852,1943,1.21,1944,1.477,1945,1.413,1946,1.413,1947,2.922,1948,2.907,1949,1.989,1950,2.341,1951,1.844,1952,1.989,1953,1.989,1954,1.989,1955,3.049,1956,2.341,1957,1.989,1958,1.989,1959,1.989,1960,1.989,1961,1.989,1962,1.989,1963,1.989,1964,1.989,1965,1.989,1966,1.989,1967,1.989,1968,1.989,1969,1.989,1970,1.989,1971,1.989,1972,1.989,1973,1.989,1974,1.989,1975,1.989,1976,1.989,1977,1.989,1978,1.989,1979,1.989,1980,1.844,1981,1.844,1982,1.989,1983,1.989,1984,1.989,1985,1.989,1986,1.989,1987,1.728,1988,1.728,1989,1.549,1990,1.989,1991,1.989,1992,3.914,1993,1.989,1994,5.411,1995,1.989,1996,1.989,1997,3.152,1998,2.922,1999,1.989,2000,1.989,2001,4.967,2002,1.989,2003,1.989,2004,1.989,2005,1.989,2006,1.413,2007,1.989,2008,4.453,2009,2.239,2010,1.989,2011,1.989,2012,1.989,2013,1.477,2014,1.989,2015,1.989,2016,3.152,2017,1.989,2018,4.453,2019,1.989,2020,3.152,2021,1.989,2022,1.989,2023,1.989,2024,1.989,2025,1.989,2026,1.989,2027,1.989,2028,1.989,2029,1.989,2030,1.989,2031,1.989,2032,1.989,2033,1.989,2034,1.989,2035,1.989,2036,1.989,2037,1.989,2038,1.989,2039,1.989,2040,3.152,2041,1.989,2042,1.989,2043,1.989,2044,1.989,2045,1.989,2046,1.989,2047,1.989,2048,1.989,2049,1.989,2050,3.152,2051,1.989,2052,1.989,2053,1.989,2054,1.989,2055,1.989,2056,1.989,2057,1.989,2058,1.989,2059,1.989,2060,1.989,2061,1.989,2062,1.989,2063,1.989,2064,1.989,2065,1.989,2066,3.152,2067,1.477,2068,1.728,2069,1.989,2070,1.632,2071,1.728,2072,3.152,2073,3.401,2074,3.152,2075,2.341,2076,3.152,2077,1.989,2078,1.989,2079,1.989,2080,1.989,2081,1.989,2082,1.989,2083,1.989,2084,1.477,2085,1.989,2086,1.989,2087,1.989,2088,1.989,2089,1.989,2090,1.989]],["title/changelog.html",[2013,2.169,3539,2.921,3540,2.921]],["body/changelog.html",[3,0.123,8,1.601,19,0.257,24,4.504,38,0.542,43,0.008,45,0.212,46,0.423,48,1.062,50,2.462,59,1.535,60,1.626,71,0.584,75,0.004,77,4.409,80,0.007,83,2.608,84,0.002,85,0.433,90,2.406,102,2.97,124,2.574,126,1.506,129,0.441,138,1.626,140,4.966,141,1.247,142,0.971,143,2.463,155,0.939,168,1.458,182,1.637,188,1.207,195,0.614,196,0.52,198,0.937,200,0.733,202,0.714,208,1.447,211,0.937,212,1.055,213,0.57,226,2.133,241,1.626,245,0.838,256,1.089,257,0.714,258,1.03,260,0.584,271,1.735,278,2.168,283,1.39,286,2.463,299,3.111,303,4.423,304,1.894,306,2.608,307,3.292,308,0.893,309,0.57,313,1.03,326,0.679,333,2.328,359,2.478,375,5.09,400,1.584,407,1.329,411,2.817,414,0.696,425,2.045,431,1.764,435,2.528,441,1.064,446,1.535,450,0.504,453,0.504,457,1.411,483,0.696,488,1.01,493,0.662,522,0.937,524,0.662,536,1.56,561,1.275,567,2.338,572,4.368,588,1.535,591,4.921,593,2.054,601,6.509,609,1.535,635,3.446,636,3.745,661,4.624,669,0.861,670,0.861,673,3.571,684,2.511,689,5.321,713,3.529,750,1.329,782,2.783,799,1.871,804,1.871,842,1.458,843,2.045,891,1.139,894,3.916,895,3.975,911,3.002,914,5.169,921,2.054,932,2.338,960,1.18,961,1.458,962,2.463,965,0.968,967,1.735,972,1.39,1003,1.871,1008,1.871,1015,1.03,1061,1.458,1068,1.626,1072,1.275,1117,2.054,1118,1.735,1124,3.266,1125,2.054,1130,1.535,1131,1.871,1151,2.928,1239,4.66,1240,1.535,1241,1.871,1242,2.67,1256,2.608,1260,1.275,1265,2.608,1268,1.39,1274,2.133,1283,3.738,1284,1.535,1285,2.792,1298,2.463,1308,1.871,1310,1.458,1314,2.054,1329,2.045,1334,2.445,1352,3.295,1360,4.709,1421,3.002,1425,1.871,1466,3.002,1481,3.002,1607,2.054,1623,2.054,1625,1.535,1635,1.535,1637,1.626,1638,5.517,1678,2.054,1682,3.295,1698,3.295,1740,2.229,1741,3.266,1742,1.871,1744,3.529,1789,3.002,1790,2.561,1791,2.054,1799,1.735,1840,1.535,1844,2.617,1849,1.626,1871,1.626,1899,2.054,1919,1.535,1937,1.275,1955,1.458,1998,2.783,2013,2.792,2108,1.275,2140,3.988,2143,1.329,2144,1.535,2286,2.783,2321,1.535,2334,3.002,2407,3.759,2428,1.626,2431,1.871,2658,2.054,2660,3.295,2666,4.126,2676,2.783,2706,1.735,2748,3.002,2780,5.281,2782,1.871,2786,1.871,2791,1.871,2981,1.871,3034,2.054,3042,2.054,3059,2.054,3117,2.054,3140,1.871,3203,1.735,3239,4.126,3333,3.295,3349,3.295,3357,3.295,3400,2.054,3408,5.797,3409,5.517,3423,4.126,3481,2.054,3485,2.054,3530,2.054,3540,3.002,3541,3.295,3542,2.054,3543,2.054,3544,3.74,3545,4.683,3546,5.359,3547,6.579,3548,5.797,3549,2.331,3550,7.507,3551,2.331,3552,2.331,3553,3.74,3554,5.359,3555,4.721,3556,6.839,3557,2.331,3558,5.359,3559,3.74,3560,2.331,3561,3.74,3562,4.683,3563,2.331,3564,2.331,3565,2.331,3566,2.331,3567,2.331,3568,7.757,3569,2.331,3570,2.331,3571,2.331,3572,2.331,3573,2.331,3574,2.331,3575,3.74,3576,2.054,3577,2.331,3578,3.74,3579,5.359,3580,5.359,3581,4.683,3582,2.331,3583,2.331,3584,2.331,3585,2.331,3586,5.169,3587,4.126,3588,7.239,3589,7.239,3590,5.867,3591,5.867,3592,5.169,3593,2.331,3594,3.74,3595,2.331,3596,4.683,3597,6.025,3598,7.652,3599,3.74,3600,2.331,3601,2.331,3602,3.74,3603,7.396,3604,4.126,3605,2.331,3606,6.262,3607,5.867,3608,2.331,3609,5.867,3610,2.331,3611,2.331,3612,2.331,3613,2.331,3614,3.295,3615,3.74,3616,6.579,3617,6.025,3618,2.331,3619,2.331,3620,2.331,3621,2.331,3622,2.331,3623,5.169,3624,2.331,3625,3.74,3626,3.74,3627,2.331,3628,3.74,3629,3.74,3630,3.74,3631,2.331,3632,2.331,3633,2.331,3634,2.331,3635,3.74,3636,3.74,3637,5.359,3638,3.74,3639,2.331,3640,2.331,3641,2.331,3642,2.331,3643,3.74,3644,2.331,3645,2.331,3646,3.74,3647,3.74,3648,5.359,3649,2.331,3650,4.683,3651,3.74,3652,6.262,3653,3.295,3654,5.359,3655,2.331,3656,2.331,3657,3.74,3658,2.331,3659,2.331,3660,3.74,3661,2.331,3662,2.331,3663,2.331,3664,3.74,3665,2.331,3666,2.331,3667,2.331,3668,2.331,3669,2.331,3670,2.331,3671,2.331,3672,2.331,3673,3.74,3674,2.331,3675,2.331,3676,2.331,3677,4.683,3678,4.683,3679,3.74,3680,2.331,3681,2.331,3682,2.331,3683,3.74,3684,2.331,3685,2.331,3686,2.331,3687,3.74,3688,3.74,3689,3.74,3690,4.683,3691,2.331,3692,2.331,3693,2.331,3694,2.331,3695,3.74,3696,5.359,3697,2.331,3698,2.331,3699,4.683,3700,3.74,3701,2.331,3702,2.331,3703,3.74,3704,3.74,3705,5.359,3706,2.331,3707,2.331,3708,2.331,3709,3.74,3710,2.331,3711,2.331,3712,2.331,3713,2.331,3714,2.331,3715,5.359,3716,2.331,3717,4.683,3718,5.359,3719,2.331,3720,4.683,3721,5.867,3722,3.74,3723,3.74,3724,3.74,3725,3.74,3726,4.683,3727,5.359,3728,5.867,3729,3.74,3730,4.683,3731,2.331,3732,2.331,3733,6.579,3734,5.359,3735,7.055,3736,2.331,3737,2.331,3738,2.331,3739,3.74,3740,2.331,3741,2.331,3742,2.331,3743,2.331,3744,3.74,3745,2.331,3746,2.331,3747,4.126,3748,3.74,3749,4.683,3750,2.331,3751,2.331,3752,2.331,3753,2.331,3754,2.331,3755,2.331,3756,2.331,3757,2.331,3758,2.331,3759,6.262,3760,4.683,3761,3.74,3762,2.331,3763,2.331,3764,2.331,3765,2.331,3766,4.683,3767,2.331,3768,2.331,3769,3.74,3770,3.74,3771,3.74,3772,4.683,3773,2.331,3774,2.331,3775,2.331,3776,2.331,3777,2.331,3778,2.331,3779,2.331,3780,2.054,3781,2.331,3782,2.331,3783,2.331,3784,2.331,3785,2.331,3786,2.331,3787,2.331,3788,2.331,3789,2.331,3790,2.331,3791,2.331,3792,2.331,3793,2.331,3794,2.331,3795,2.331,3796,6.839,3797,2.331,3798,4.126,3799,4.683,3800,5.359,3801,3.74,3802,4.683,3803,2.331,3804,2.331,3805,2.331,3806,3.74,3807,3.74,3808,2.331,3809,2.331,3810,2.331,3811,3.74,3812,2.331,3813,4.126,3814,2.331,3815,2.331,3816,2.331,3817,2.331,3818,2.331,3819,2.331,3820,2.331,3821,2.331,3822,2.331,3823,2.331,3824,2.331,3825,2.331,3826,2.331,3827,2.331,3828,2.331,3829,2.331,3830,2.331,3831,2.331,3832,2.331,3833,2.331,3834,3.74,3835,2.331,3836,3.74,3837,2.331,3838,3.74,3839,5.359,3840,5.359,3841,3.74,3842,3.74,3843,2.331,3844,2.331,3845,2.331,3846,2.331,3847,2.054,3848,2.331,3849,2.331,3850,2.331,3851,2.331,3852,3.74,3853,7.239,3854,4.683,3855,3.74,3856,2.331,3857,3.74,3858,2.331,3859,2.331,3860,2.331,3861,2.331,3862,2.331,3863,2.331,3864,3.74,3865,5.797,3866,3.74,3867,2.331,3868,2.331,3869,2.331,3870,2.331,3871,2.331,3872,4.302,3873,2.331,3874,3.74,3875,2.331,3876,2.331,3877,2.331,3878,3.74,3879,2.331,3880,2.331,3881,2.331,3882,3.74,3883,3.74,3884,3.295,3885,2.331,3886,2.331,3887,2.331,3888,2.331,3889,2.331,3890,2.331,3891,2.331,3892,2.331,3893,2.331,3894,2.054,3895,2.331,3896,2.331,3897,2.331,3898,2.331,3899,2.331,3900,2.331,3901,2.331,3902,2.054,3903,2.331,3904,3.74,3905,2.331,3906,2.331,3907,2.331,3908,2.331,3909,2.331,3910,2.331,3911,2.331,3912,2.331,3913,2.331,3914,2.331,3915,2.054,3916,2.054,3917,3.74,3918,2.331,3919,2.331,3920,2.331,3921,2.331,3922,3.74,3923,2.331,3924,2.331,3925,2.331,3926,2.331,3927,2.331,3928,2.331,3929,2.331,3930,2.331,3931,2.331,3932,2.331]],["title/coverage.html",[3872,4.794]],["body/coverage.html",[0,2.316,1,2.003,5,0.113,6,0.132,7,4.111,8,3.155,9,3.202,10,4.111,12,0.838,43,0.01,45,0.319,75,0.005,80,0.004,84,0.004,88,1.374,91,1.262,92,2.003,117,2.094,129,0.601,131,2.614,133,0.169,141,0.621,142,0.928,196,0.867,197,0.948,203,4.498,242,2.094,245,1.262,301,1.921,309,1.252,333,1.195,336,2.45,405,3.301,409,1.894,429,2.351,466,2.598,474,0.997,476,0.972,478,0.997,480,1.383,482,0.997,485,0.997,487,0.997,490,0.997,492,0.997,495,0.997,497,1.418,499,0.997,501,0.972,502,0.997,503,0.997,505,0.997,508,0.972,509,0.997,510,0.972,511,0.817,513,0.972,515,0.997,517,0.997,519,0.997,521,0.997,523,0.997,525,0.997,527,0.997,530,0.997,572,2.45,576,2.614,580,2.614,583,3.981,586,2.614,602,2.82,603,2.82,655,1.921,656,4.216,657,3.981,658,4.65,672,2.614,748,2.614,749,2.82,753,4.111,758,2.262,777,1.551,792,1.716,863,3.095,875,1.847,978,3.095,1051,2.196,1052,4.416,1058,2.196,1065,2.196,1066,2.196,1084,2.45,1086,3.981,1087,2.614,1111,2.614,1112,4.633,1113,4.111,1114,4.111,1132,2.45,1202,2.82,1203,2.614,1204,3.095,1235,2.82,1236,3.095,1239,2.614,1248,2.196,1249,2.196,1251,2.82,1253,1.921,1254,3.095,1255,3.095,1258,1.847,1261,2.82,1262,2.614,1263,3.095,1324,4.943,1333,2.82,1337,3.095,1363,4.216,1370,2.614,1371,3.811,1372,4.111,1382,2.313,1447,2.82,1449,4.498,1483,2.82,1612,2.82,1613,2.614,1614,3.095,1664,2.82,1665,2.313,1666,4.111,1709,2.82,1710,4.111,1765,7.53,1826,3.373,1830,2.614,1832,2.614,1836,4.855,1838,1.657,1847,2.196,1905,2.614,1906,2.82,1907,2.82,1908,2.196,1909,4.651,1916,2.92,1918,1.921,1942,1.657,1943,3.244,1955,3.202,2091,3.811,2100,2.614,2130,2.45,2131,4.633,2132,4.633,2160,2.45,2222,4.498,2268,2.196,2269,2.196,2316,3.572,2317,2.45,2318,3.095,2376,4.633,2406,4.111,2485,2.614,2634,3.981,2635,2.614,2636,4.111,2673,3.373,2703,2.614,2734,2.82,2762,3.981,2765,3.981,2767,2.614,2769,4.633,2774,4.216,2775,4.498,2777,2.614,2826,4.498,2876,2.614,2974,4.216,2975,2.614,3008,2.614,3009,2.82,3094,2.82,3105,2.82,3123,3.811,3124,3.811,3127,4.651,3128,3.095,3164,5.332,3242,2.82,3246,2.82,3249,2.82,3315,4.111,3369,3.095,3399,3.572,3425,3.095,3453,3.095,3454,3.095,3456,3.572,3457,3.095,3872,2.82,3915,3.095,3916,3.095,3933,3.513,3934,3.513,3935,3.513,3936,3.513,3937,3.513,3938,5.121,3939,7.611,3940,7.801,3941,6.642,3942,3.513,3943,7.062,3944,3.513,3945,3.513,3946,8.546,3947,3.513,3948,3.513,3949,6.642,3950,3.513,3951,3.513,3952,3.513,3953,5.121,3954,3.513,3955,3.513,3956,3.513,3957,3.513,3958,3.513,3959,3.513,3960,3.513,3961,3.513,3962,3.513,3963,3.095,3964,3.513,3965,3.513,3966,3.513,3967,3.513,3968,3.095,3969,3.513,3970,3.513,3971,3.513,3972,3.513,3973,3.513,3974,3.513,3975,3.513,3976,3.513,3977,3.513,3978,3.513,3979,3.513,3980,5.121,3981,5.121,3982,6.642,3983,6.642,3984,3.095,3985,3.513,3986,5.121,3987,3.513,3988,3.513,3989,3.513,3990,5.121,3991,3.513,3992,3.513,3993,3.513,3994,3.513]],["title/dependencies.html",[536,1.53,3576,3.206]],["body/dependencies.html",[5,0.102,22,1.812,43,0.01,72,4.069,75,0.007,80,0.006,84,0.006,102,2.769,104,0.263,107,2.202,110,2.202,111,4.069,113,1.552,260,1.736,536,1.592,558,4.817,566,4.562,567,4.331,612,2.415,635,2.671,668,2.633,669,2.02,670,2.02,737,1.861,934,4.817,935,4.817,1021,4.389,1129,3.601,1326,4.389,1668,3.118,1929,4.069,2115,3.601,2137,3.601,2417,4.389,2471,4.389,2480,4.389,2873,4.389,2874,4.389,3041,4.389,3096,4.817,3098,4.817,3099,6.103,3101,4.817,3275,4.817,3407,4.389,3452,4.817,3592,4.817,3614,4.817,3653,4.817,3747,4.817,3798,6.103,3995,5.468,3996,5.468,3997,8.862,3998,5.468,3999,5.468,4000,5.468,4001,5.468,4002,5.468,4003,5.468,4004,5.468,4005,8.248,4006,5.468,4007,6.927,4008,5.468,4009,5.468,4010,5.468,4011,7.604,4012,5.468,4013,5.468,4014,5.468,4015,5.468,4016,5.468,4017,7.604,4018,5.468,4019,5.468,4020,6.927,4021,5.468,4022,5.468,4023,5.468,4024,6.927,4025,5.468,4026,5.468,4027,5.468,4028,5.468,4029,5.468,4030,5.468,4031,5.468,4032,5.468,4033,5.468,4034,5.468,4035,5.468,4036,6.927,4037,4.817,4038,5.468,4039,5.468,4040,5.468,4041,5.468,4042,6.927,4043,5.468,4044,5.468,4045,5.468,4046,5.468,4047,5.468,4048,5.468,4049,5.468,4050,5.468,4051,5.468,4052,5.468,4053,5.468,4054,5.468,4055,5.468,4056,5.468,4057,5.468,4058,5.468,4059,5.468,4060,5.468,4061,5.468,4062,5.468,4063,5.468,4064,5.468,4065,5.468,4066,5.468,4067,5.468,4068,5.468,4069,5.468,4070,5.468,4071,5.468,4072,5.468,4073,6.927,4074,5.468,4075,5.468,4076,5.468,4077,5.468,4078,5.468,4079,5.468,4080,5.468,4081,5.468,4082,5.468,4083,5.468,4084,5.468,4085,5.468]],["title/miscellaneous/functions.html",[4086,2.397,4087,4.63]],["body/miscellaneous/functions.html",[6,0.121,11,0.816,18,0.616,22,2.175,42,1.98,43,0.01,44,1.185,46,1.543,55,1.75,61,4.578,75,0.008,80,0.007,84,0.007,245,2.359,257,2.374,300,1.941,466,2.567,749,6.218,753,5.268,819,4.322,820,4.578,826,5.783,829,5.783,1324,4.884,1335,5.783,1943,3.206,2131,4.578,2132,5.403,2135,4.322,2142,4.884,2143,4.417,2167,4.884,2826,4.884,2871,5.268,2878,5.268,3963,6.825,3968,6.825,3984,6.825,4086,4.322,4087,5.783,4088,6.563,4089,6.563,4090,5.783,4091,6.563,4092,6.563]],["title/index.html",[18,0.342,2013,2.169,3539,2.921]],["body/index.html",[3,0.16,43,0.008,75,0.008,80,0.007,84,0.007,129,0.5,195,1.623,196,0.598,212,1.141,258,2.723,299,2.965,308,1.175,333,2.731,434,2.638,446,4.06,591,5.816,601,5.553,636,3.121,660,3.121,891,3.644,1283,5.204,1284,4.06,1360,4.948,2334,5.989,2840,6.693,3540,4.948,3541,6.574,3542,6.574,3543,6.574,3550,7.069,3555,5.431,3586,7.347,3587,7.069,3597,6.574,3604,5.431,3617,5.431,3884,5.431,3894,5.431,4093,7.461,4094,6.164,4095,6.164,4096,6.164,4097,6.574,4098,6.164,4099,6.164,4100,6.164,4101,7.461,4102,7.461,4103,7.461,4104,8.024,4105,6.164,4106,6.164,4107,8.024,4108,6.164,4109,6.164,4110,7.461,4111,6.164,4112,6.164,4113,6.164,4114,6.164,4115,6.164,4116,6.164,4117,6.164,4118,6.164,4119,6.164,4120,6.164,4121,6.164,4122,6.164,4123,6.164,4124,6.164,4125,6.164]],["title/license.html",[2013,2.169,3539,2.921,4126,3.206]],["body/license.html",[43,0.008,75,0.008,80,0.007,84,0.007,263,2.655,424,1.643,591,4.461,799,5.134,804,6.544,813,1.603,896,3.999,960,3.863,1239,4.76,1627,5.635,1840,4.212,1843,4.212,2268,3.999,2445,4.76,3623,6.721,3780,6.721,3847,5.635,3865,5.635,3902,5.635,4037,5.635,4097,7.906,4126,5.635,4127,6.396,4128,8.152,4129,6.396,4130,6.396,4131,7.628,4132,6.396,4133,6.396,4134,6.396,4135,6.396,4136,6.396,4137,7.628,4138,6.396,4139,6.396,4140,6.396,4141,6.396,4142,6.396,4143,6.396,4144,6.396,4145,6.396,4146,6.396,4147,6.396,4148,6.396,4149,7.628,4150,6.396,4151,6.396,4152,6.396,4153,6.396,4154,6.396,4155,7.628,4156,6.396,4157,6.396,4158,6.396,4159,6.396,4160,6.396,4161,6.396,4162,6.396,4163,6.396,4164,6.396,4165,6.396,4166,6.396,4167,6.396,4168,6.396,4169,6.396,4170,6.396,4171,6.396,4172,6.396,4173,6.396,4174,6.396,4175,6.396,4176,6.396,4177,6.396,4178,6.396]],["title/modules.html",[535,1.695]],["body/modules.html",[43,0.008,75,0.008,80,0.006,84,0.006,534,4.483,535,1.71,540,4.201,541,4.201,542,4.201,543,4.201,544,4.201,545,4.201,546,4.201,567,5.786,730,4.201,745,4.201,1079,4.201,1080,4.201,1091,4.201,1092,4.201,1127,6.887,1229,4.201,1316,4.201,1656,4.201,1701,3.766,1811,3.967,1812,4.201,1813,4.201,2369,4.201,2693,4.201,2698,4.201,2756,4.201,2757,4.201,2758,4.201,2759,4.201,3447,4.483,3548,8.153,3813,6.482,4179,9.267,4180,7.357]],["title/overview.html",[4181,5.262]],["body/overview.html",[2,2.232,43,0.01,75,0.006,80,0.004,84,0.004,195,1.031,197,1.734,198,0.981,242,3.828,424,1.005,435,1.847,474,1.823,476,2.176,478,2.231,480,2.168,482,2.231,485,2.231,487,2.231,490,2.231,492,2.231,495,2.231,499,2.231,501,2.176,502,2.231,503,2.231,505,2.231,508,2.176,509,2.231,510,2.176,513,2.176,515,2.231,517,2.231,519,2.231,521,2.231,523,2.231,525,2.231,527,2.231,530,2.231,534,6.568,535,1.111,536,1.612,537,3.448,538,3.448,539,3.448,540,5.774,541,5.696,542,5.986,543,5.333,544,6.193,545,5.601,546,6.111,547,1.741,548,1.111,730,5.333,731,3.448,732,3.448,733,3.448,745,4.479,1075,3.448,1076,3.448,1077,3.448,1078,3.448,1079,5.601,1080,5.333,1089,3.448,1090,3.448,1091,4.479,1092,5.137,1229,5.333,1230,3.448,1231,3.448,1232,3.448,1244,3.448,1245,3.448,1246,3.448,1316,5.333,1317,3.448,1318,3.448,1319,3.448,1365,3.448,1366,3.448,1367,3.448,1448,3.142,1656,5.333,1657,3.448,1658,3.448,1659,3.448,1701,5.021,1702,3.448,1703,3.448,1704,3.448,1807,3.448,1808,3.448,1809,3.448,1810,3.448,1811,5.177,1812,5.333,1813,5.483,2125,3.448,2126,3.448,2127,3.448,2369,5.774,2370,3.448,2371,3.448,2372,3.448,2398,3.448,2399,3.448,2400,3.448,2693,5.601,2694,3.448,2695,3.448,2696,3.448,2697,3.448,2698,5.333,2731,3.448,2732,3.448,2733,3.448,2752,3.448,2753,3.448,2754,3.448,2755,3.448,2756,5.333,2757,5.333,2758,5.333,2759,5.333,2819,3.448,2820,3.448,2821,3.448,3004,3.448,3005,3.448,3006,3.448,3086,3.448,3087,3.448,3089,3.448,3157,3.448,3158,3.448,3159,3.448,3300,3.448,3301,3.448,3302,3.448,3308,3.448,3309,3.448,3442,3.448,3443,3.448,3444,3.448,3447,5.482,3448,3.448,3449,3.448,3450,3.448,3514,3.448,3515,3.448,3516,3.448,3536,3.448,3537,3.448,3538,3.448,4181,3.448,4182,5.535,4183,3.914,4184,3.914]],["title/miscellaneous/typealiases.html",[4086,2.397,4185,5.255]],["body/miscellaneous/typealiases.html",[6,0.122,8,3.026,12,1.347,15,2.247,18,0.53,22,2.343,43,0.01,45,0.782,47,1.024,69,0.765,71,1.415,75,0.008,80,0.006,84,0.006,116,4.421,198,1.415,208,1.909,222,4.424,299,2.613,300,1.934,310,3.867,313,2.495,333,2.407,417,3.368,425,3.09,450,1.527,453,1.527,466,3.019,572,5.926,602,4.535,603,6.82,612,2.495,619,4.932,623,6.23,629,5.262,641,6.23,679,2.345,758,3.123,761,2.578,765,3.368,773,3.454,777,3.409,792,3.454,894,3.532,895,3.58,942,4.932,949,4.657,954,4.215,1015,3.573,1051,3.532,1052,3.532,1053,4.032,1054,3.94,1055,3.94,1056,3.721,1058,3.532,1060,4.749,1061,4.421,1062,5.384,1065,3.532,1066,3.532,1069,5.384,1070,3.94,1071,3.94,1072,4.222,1084,3.94,1449,4.204,1471,4.977,1472,6.23,1473,6.23,1474,4.977,1475,6.23,1476,4.977,1477,6.23,1478,4.977,1479,4.977,1480,4.977,1481,4.535,1905,4.204,1906,4.535,1907,5.676,1909,3.721,1917,4.657,1951,4.204,2215,3.221,3008,4.204,3009,5.676,3123,4.204,3124,5.262,4086,3.721,4186,5.649,4187,8.329,4188,7.486,4189,6.801,4190,5.649,4191,5.649,4192,5.649,4193,6.23,4194,5.649]],["title/miscellaneous/variables.html",[4086,2.397,4195,4.63]],["body/miscellaneous/variables.html",[1,2.051,6,0.118,14,2.051,18,0.338,42,0.837,43,0.01,44,1.263,45,0.747,47,1.217,70,2.369,71,1.305,75,0.006,77,3.652,80,0.006,84,0.006,85,1.636,86,1.667,88,1.407,90,1.638,91,1.292,92,2.051,117,2.144,128,1.641,132,1.493,133,0.202,141,1.082,165,2.051,189,2.369,204,5.413,213,0.879,226,2.971,245,1.292,246,1.449,256,0.837,297,0.947,301,2.849,303,5.161,304,1.821,326,1.047,350,5.672,382,1.822,387,1.98,390,2.162,405,1.292,409,1.573,414,1.074,429,2.176,450,1.54,453,1.54,511,1.212,514,0.971,576,3.877,655,1.967,656,2.508,657,2.369,658,4.004,671,2.676,672,3.877,673,3.493,679,2.162,748,3.877,750,2.051,758,2.301,777,2.706,875,1.891,965,1.493,969,1.292,1052,2.249,1056,2.369,1111,2.676,1112,2.508,1113,2.887,1114,4.182,1115,2.263,1118,2.676,1126,6.75,1130,2.369,1131,2.887,1132,3.634,1133,3.169,1134,7.955,1135,3.169,1136,3.169,1137,3.169,1138,4.59,1139,3.169,1140,3.169,1141,3.169,1142,3.169,1143,3.169,1144,3.169,1145,5.918,1146,5.918,1147,6.281,1148,6.281,1149,2.887,1150,3.169,1151,4.457,1152,3.169,1153,3.169,1154,3.169,1155,4.182,1156,4.182,1157,4.59,1158,3.169,1159,3.169,1160,6.281,1161,3.169,1162,4.59,1163,2.676,1164,3.169,1165,3.169,1166,3.169,1167,3.169,1168,3.169,1169,5.918,1170,3.169,1171,3.169,1172,4.59,1173,3.169,1174,3.169,1175,3.169,1176,3.169,1177,3.169,1178,3.169,1179,4.59,1180,2.887,1181,3.169,1182,3.169,1183,3.169,1184,3.169,1185,3.169,1186,5.918,1187,3.169,1188,3.169,1189,5.918,1190,2.887,1191,3.169,1192,2.508,1193,3.169,1194,3.169,1195,5.397,1196,3.169,1197,4.59,1198,3.169,1199,3.169,1200,3.169,1201,3.169,1248,3.258,1249,3.83,1324,2.676,1327,3.258,1333,4.182,1334,3.064,1382,2.369,1449,2.676,1482,3.169,1483,4.182,1484,3.169,1485,3.169,1836,2.369,1847,2.249,1850,2.508,1851,3.431,1852,3.431,1853,2.508,1854,2.508,1909,2.369,1916,2.051,1924,2.249,1942,1.697,1948,2.144,1950,2.144,1956,3.106,2474,2.676,2762,2.369,2765,2.369,2769,2.508,2774,2.508,2775,3.877,2777,3.877,2974,2.508,2975,3.877,3094,2.887,3104,3.169,3105,4.182,3127,2.369,3164,5.391,3194,3.169,3242,4.182,3246,4.182,3247,3.169,3248,3.169,3249,4.182,3315,2.887,3348,3.169,4086,2.369,4090,4.59,4188,3.169,4189,3.169,4193,3.169,4195,3.169,4196,3.596,4197,3.596,4198,3.596,4199,6.126,4200,3.596,4201,3.596,4202,5.21,4203,3.596]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.063rem",{"_index":3297,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["0.075rem",{"_index":3532,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.1.0",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":4085,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":4026,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1301,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/TagSearchComponent.html":{}}}],["0.1s",{"_index":3513,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.2.0",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":4043,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1349,"title":{},"body":{"components/HeaderComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.25s",{"_index":3085,"title":{},"body":{"components/StageNavComponent.html":{}}}],["0.2rem",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2s",{"_index":3533,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.313rem",{"_index":3298,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["0.375rem",{"_index":1793,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["0.3rem",{"_index":1300,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.3s",{"_index":3512,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.4s",{"_index":3511,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.5",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["0.5.0",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.5s",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["0.6.0",{"_index":3884,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.625rem",{"_index":2817,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["0.6s",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{}}}],["0.75rem",{"_index":727,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{}}}],["0.9rem",{"_index":1803,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["0/1",{"_index":3943,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3942,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3934,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3938,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3961,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3937,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3962,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["05rem",{"_index":3398,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["06",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["0rem",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{}}}],["1",{"_index":188,"title":{"components/ContentComponent-1.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["1.0",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["1.0.0",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":4023,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4030,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":4081,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":3393,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":3535,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["1.1875rem",{"_index":2747,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1.19.0",{"_index":4025,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":3798,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":4033,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":4062,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":2815,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.2rem",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["1.3.5",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":3747,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":4046,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.6.0",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":4034,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":4060,"title":{},"body":{"dependencies.html":{}}}],["1.9375rem",{"_index":2746,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1/1",{"_index":3946,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3967,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3958,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":673,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":4036,"title":{},"body":{"dependencies.html":{}}}],["10.5rem",{"_index":1303,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["10/12",{"_index":3945,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":902,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["10x",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":4063,"title":{},"body":{"dependencies.html":{}}}],["11/18",{"_index":3977,"title":{},"body":{"coverage.html":{}}}],["118",{"_index":2947,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["12",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["12.0.1",{"_index":4065,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":3997,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":4001,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":3987,"title":{},"body":{"coverage.html":{}}}],["12/22",{"_index":3936,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["13/13",{"_index":3981,"title":{},"body":{"coverage.html":{}}}],["13/16",{"_index":3970,"title":{},"body":{"coverage.html":{}}}],["14/17",{"_index":3965,"title":{},"body":{"coverage.html":{}}}],["14rem",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["15.126.1",{"_index":3996,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":3992,"title":{},"body":{"coverage.html":{}}}],["15rem",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["16",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["16.5rem",{"_index":3083,"title":{},"body":{"components/StageNavComponent.html":{}}}],["16/17",{"_index":3979,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["17/17",{"_index":3971,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":3953,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":2969,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["18rem",{"_index":3508,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["1px",{"_index":1347,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["1s",{"_index":966,"title":{},"body":{"components/ContentComponent.html":{}}}],["2",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":4039,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":3392,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.06rem",{"_index":3534,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["2.1.0",{"_index":3653,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["2.25rem",{"_index":1228,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["2.3.0",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":3614,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5rem",{"_index":1304,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2.6.7",{"_index":4066,"title":{},"body":{"dependencies.html":{}}}],["2.688rem",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["2.75rem",{"_index":2811,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["2.8.5",{"_index":4032,"title":{},"body":{"dependencies.html":{}}}],["2.9rem",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["2/2",{"_index":3986,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1745,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["200",{"_index":2949,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2019",{"_index":3865,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["210",{"_index":2948,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["21rem",{"_index":1806,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["22",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1802,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["24px.svg",{"_index":1195,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":2946,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25.5rem",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["250",{"_index":2721,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["255",{"_index":2849,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25rem",{"_index":1361,"title":{},"body":{"components/HeaderComponent.html":{}}}],["25s",{"_index":3394,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["26",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["27rem",{"_index":1805,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["29",{"_index":4182,"title":{},"body":{"overview.html":{}}}],["29/29",{"_index":3991,"title":{},"body":{"coverage.html":{}}}],["2]).rotatey(toradians(0",{"_index":2844,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2px",{"_index":723,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2rem",{"_index":1350,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["3",{"_index":2676,"title":{},"body":{"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["3).every(entry",{"_index":2678,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["3.0",{"_index":4102,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":3592,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":4011,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["3.25rem",{"_index":3294,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["3.5.5",{"_index":4015,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3084,"title":{},"body":{"components/StageNavComponent.html":{}}}],["3.6.0",{"_index":4074,"title":{},"body":{"dependencies.html":{}}}],["3.625rem",{"_index":2745,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3.7.1",{"_index":4017,"title":{},"body":{"dependencies.html":{}}}],["3.75rem",{"_index":2739,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3/3",{"_index":3940,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":3956,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1698,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["3000",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["30rem",{"_index":3440,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["31",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":4184,"title":{},"body":{"overview.html":{}}}],["32rem",{"_index":2749,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["33",{"_index":3957,"title":{},"body":{"coverage.html":{}}}],["33.33",{"_index":724,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["34/38",{"_index":3952,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":895,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["3px",{"_index":1796,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["3rem",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["4",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["4.17.1",{"_index":4038,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":4056,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4028,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":4048,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3939,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":3975,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":3960,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":3966,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":901,"title":{},"body":{"components/ContentComponent.html":{}}}],["400",{"_index":1804,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["42",{"_index":3955,"title":{},"body":{"coverage.html":{}}}],["42/44",{"_index":3985,"title":{},"body":{"coverage.html":{}}}],["46rem",{"_index":3436,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["47rem",{"_index":2367,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["4px",{"_index":2366,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["4rem",{"_index":968,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{}}}],["5",{"_index":3247,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":4051,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4021,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":4055,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":970,"title":{},"body":{"components/ContentComponent.html":{}}}],["5.688rem",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["5/5",{"_index":3949,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1363,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalLauncherComponent.html":{},"coverage.html":{}}}],["500",{"_index":646,"title":{},"body":{"components/AppWebComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["54",{"_index":3935,"title":{},"body":{"coverage.html":{}}}],["55rem",{"_index":977,"title":{},"body":{"components/ContentComponent.html":{}}}],["57",{"_index":3959,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":3947,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":975,"title":{},"body":{"components/ContentComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["5s",{"_index":1050,"title":{},"body":{"components/ContentComponent-1.html":{},"components/VideoModalComponent.html":{}}}],["6.0.0",{"_index":4058,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":4054,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":4068,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4016,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":4078,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":4075,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3941,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":3950,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":719,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["60rem",{"_index":2687,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["61",{"_index":3976,"title":{},"body":{"coverage.html":{}}}],["65vh",{"_index":3422,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["66",{"_index":3974,"title":{},"body":{"coverage.html":{}}}],["675rem",{"_index":3397,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["6s",{"_index":722,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["7/12",{"_index":3948,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":3954,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":3980,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":3973,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":3972,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":4083,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":4005,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":3983,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":3989,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":3969,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":3964,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":3944,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":3916,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["88",{"_index":3988,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":3951,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":4183,"title":{},"body":{"overview.html":{}}}],["9/10",{"_index":3990,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":3982,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1955,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{}}}],["94",{"_index":3978,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3915,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["9e9e9e",{"_index":1302,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["9e9e9e5e",{"_index":3299,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["9th",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["_blocksize",{"_index":2956,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_error",{"_index":1424,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":1521,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":3146,"title":{},"body":{"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["_latesttags",{"_index":21,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["_lighting",{"_index":2846,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_measuredmargin",{"_index":1552,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":1546,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":780,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_name",{"_index":2094,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["_opened",{"_index":1517,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":1513,"title":{},"body":{"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_rotation",{"_index":2957,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["aabb",{"_index":2871,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["ability",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":2725,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["above",{"_index":3902,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["acc",{"_index":3288,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["acc.concat(nodes",{"_index":2920,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["acc[id",{"_index":3286,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["accepting",{"_index":1606,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessible",{"_index":2173,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["accessing",{"_index":3060,"title":{},"body":{"components/StageNavComponent.html":{}}}],["accessors",{"_index":32,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["accordingly",{"_index":2047,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["accurate",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":2445,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"license.html":{}}}],["actions",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":2247,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ThemingService.html":{}}}],["actual_component",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["add",{"_index":3189,"title":{},"body":{"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["addclass",{"_index":3365,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":140,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{}}}],["added.add(id",{"_index":147,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.add(iri",{"_index":153,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.has(iri",{"_index":152,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addeventlistener('beforeunload",{"_index":2304,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["adding",{"_index":3166,"title":{},"body":{"components/TagSearchComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["additional",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["addregistration",{"_index":2410,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["addregistration(registration",{"_index":2423,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["addressed",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":59,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["addsvgicon",{"_index":1428,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["addtag",{"_index":26,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtag(tag",{"_index":51,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtagraw",{"_index":27,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["addtagraw(tag",{"_index":57,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtags",{"_index":28,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{}}}],["addtags(tags",{"_index":62,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["adjusting",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":755,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["again",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1595,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["alert",{"_index":2284,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["aliases",{"_index":4186,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["alignment",{"_index":2579,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["all_organs",{"_index":1924,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["all_organs.find((o",{"_index":2016,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["all_organs.find(info",{"_index":2218,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["allow",{"_index":2740,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["allowed",{"_index":1699,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["allows",{"_index":1625,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["along",{"_index":1756,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["alpha",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":800,"title":{},"body":{"components/ContainerComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["alt",{"_index":4106,"title":{},"body":{"index.html":{}}}],["always",{"_index":824,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analytics",{"_index":670,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1098,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1102,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":1790,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["anatomicalstructures",{"_index":1911,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["anatomicalstructuretagstate",{"_index":1,"title":{"injectables/AnatomicalStructureTagState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["anatomicalstructuretagstatemodel",{"_index":131,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["and/or",{"_index":4147,"title":{},"body":{"license.html":{}}}],["angle",{"_index":3011,"title":{},"body":{"components/StageNavComponent.html":{}}}],["angular",{"_index":102,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":1021,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3998,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":1470,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":3346,"title":{},"body":{"injectables/ThemingService.html":{}}}],["angular/common",{"_index":737,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"components/VideoModalComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1095,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":3999,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":104,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2115,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4000,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1663,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationContentModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/checkbox",{"_index":3305,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["angular/material/chips",{"_index":3162,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/core",{"_index":741,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["angular/material/dialog",{"_index":2352,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["angular/material/divider",{"_index":1818,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/expansion",{"_index":1816,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["angular/material/form",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/icon",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/input",{"_index":739,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/radio",{"_index":3092,"title":{},"body":{"modules/StageNavModule.html":{}}}],["angular/material/select",{"_index":1322,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/slide",{"_index":1707,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/NameInputModule.html":{}}}],["angular/material/slider",{"_index":2825,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["angular/material/snack",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["angular/material/tooltip",{"_index":743,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["angular/platform",{"_index":566,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/RightSidebarModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4003,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":3452,"title":{},"body":{"modules/VideoModalModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1018,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animate('.5s",{"_index":1498,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":1026,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["animate(0",{"_index":1497,"title":{},"body":{"classes/InitializationState.html":{}}}],["animated",{"_index":2686,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":2718,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animation",{"_index":1482,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":980,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":981,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["anterior",{"_index":949,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":3408,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["app",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app.component.scss",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app_bootstrap_listener",{"_index":3311,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":197,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["appears",{"_index":2377,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["appelement",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["applicable",{"_index":1921,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["application",{"_index":2658,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["application/json",{"_index":2563,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["applied",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["applyspatialplacement",{"_index":3963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyspatialplacement(new",{"_index":2188,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["applyspatialplacement(tx",{"_index":2142,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["applythemeclass",{"_index":3318,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":3325,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":534,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1105,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":336,"title":{"interfaces/AppOptions.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["appropriate",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":474,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":920,"title":{},"body":{"components/ContentComponent.html":{}}}],["arg",{"_index":1418,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":1419,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter(value",{"_index":1436,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":1433,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{}}}],["arising",{"_index":4176,"title":{},"body":{"license.html":{}}}],["around",{"_index":2727,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["array",{"_index":1207,"title":{},"body":{"components/DetailsLabelComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["array.isarray(entity.placement",{"_index":2934,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["array.isarray(reg.placement",{"_index":2512,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["arraytostring",{"_index":1214,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(details",{"_index":1227,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(inputarray",{"_index":1217,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arrow",{"_index":1311,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["arrow_drop_down",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["arrow_drop_up",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["arrow_left",{"_index":3384,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":3383,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["as.id",{"_index":192,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name",{"_index":193,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name.tolowercase().indexof(text.tolowercase",{"_index":187,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["asct+b",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["aslookup",{"_index":2069,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["aslookup[iri",{"_index":2074,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assertions",{"_index":1953,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assets/icons/ico",{"_index":1200,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1194,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organs/ico",{"_index":1134,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1197,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/reference",{"_index":2178,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["assigned",{"_index":158,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["assignment/selection",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1840,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"license.html":{}}}],["astags",{"_index":2735,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["async",{"_index":1454,"title":{},"body":{"classes/InitializationState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["async)?.x",{"_index":957,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.y",{"_index":958,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.z",{"_index":959,"title":{},"body":{"components/ContentComponent.html":{}}}],["asynchronously",{"_index":3410,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["attach",{"_index":3374,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["attempts",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":4168,"title":{},"body":{"license.html":{}}}],["auto",{"_index":964,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["autofocus",{"_index":2397,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["automatic",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":3813,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":1460,"title":{},"body":{"classes/InitializationState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["awaited",{"_index":1450,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":4124,"title":{},"body":{"index.html":{}}}],["axis",{"_index":2790,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["b",{"_index":951,"title":{},"body":{"components/ContentComponent.html":{}}}],["back",{"_index":1346,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["backbutton",{"_index":1355,"title":{},"body":{"components/HeaderComponent.html":{}}}],["backend",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":1409,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["base",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1008,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["basehref",{"_index":608,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["basewebcomponent",{"_index":604,"title":{},"body":{"components/AppWebComponent.html":{}}}],["basic",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":1540,"title":{},"body":{"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.left",{"_index":1543,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.overlaps(getnodebbox(model",{"_index":2928,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.right",{"_index":1542,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1124,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["beforeunloadevent",{"_index":2299,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["beforeunloadlistener",{"_index":2298,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["begin",{"_index":2659,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["being",{"_index":2706,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["belong",{"_index":1257,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["belonging",{"_index":1259,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["beta",{"_index":3597,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["bind",{"_index":72,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{},"dependencies.html":{}}}],["binds",{"_index":3337,"title":{},"body":{"injectables/ThemingService.html":{}}}],["black",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["bladder",{"_index":1133,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1135,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blob([json",{"_index":2562,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["block",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["block.x",{"_index":2034,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["block_size_input",{"_index":697,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocks",{"_index":1741,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["blocksize",{"_index":655,"title":{"interfaces/BlockSize.html":{}},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blocksize.y",{"_index":2964,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.z].map(n",{"_index":2965,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksizechange",{"_index":682,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocksizeinputcomponent",{"_index":476,"title":{"components/BlockSizeInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blocksizeinputmodule",{"_index":730,"title":{"modules/BlockSizeInputModule.html":{}},"body":{"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["blood",{"_index":1136,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1137,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":635,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyuimodule",{"_index":1082,"title":{},"body":{"modules/ContentModule.html":{}}}],["bold",{"_index":1800,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["bone",{"_index":1138,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["booleaninput",{"_index":1468,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":3334,"title":{},"body":{"injectables/ThemingService.html":{}}}],["border",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["both",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["bottom",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["bounds",{"_index":866,"title":{},"body":{"components/ContentComponent.html":{}}}],["box",{"_index":1298,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{},"changelog.html":{}}}],["bp",{"_index":643,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.boolean",{"_index":652,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.function",{"_index":654,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.json",{"_index":653,"title":{},"body":{"components/AppWebComponent.html":{}}}],["brain",{"_index":1141,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1142,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["breaking",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["breaks",{"_index":166,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bringing",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":4179,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browseranimationsmodule",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browserify",{"_index":4076,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":4098,"title":{},"body":{"index.html":{}}}],["buildjsonld",{"_index":2411,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["buildjsonld(page",{"_index":2425,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["buildmetadata",{"_index":2412,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["buildmetadata(page",{"_index":2429,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["builds",{"_index":2431,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["builtin_parsers",{"_index":637,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["button.component",{"_index":1252,"title":{},"body":{"modules/DrawerModule.html":{},"modules/ReviewButtonModule.html":{}}}],["button.component.html",{"_index":2641,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":2640,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":2636,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:100",{"_index":2664,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:19",{"_index":2663,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts:22",{"_index":3373,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:24",{"_index":2653,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:27",{"_index":3382,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:29",{"_index":2652,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:35",{"_index":2649,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:38",{"_index":3379,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3378,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:42",{"_index":2654,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts:47",{"_index":2661,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:54",{"_index":2647,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:65",{"_index":3375,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:68",{"_index":2667,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:75",{"_index":3376,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:78",{"_index":2671,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:85",{"_index":2669,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts:97",{"_index":3377,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.module",{"_index":2772,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["button.module.ts",{"_index":2699,"title":{},"body":{"modules/ReviewButtonModule.html":{}}}],["button/review",{"_index":2635,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["button/toggle",{"_index":1251,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["buttons",{"_index":933,"title":{},"body":{"components/ContentComponent.html":{}}}],["c",{"_index":4129,"title":{},"body":{"license.html":{}}}],["cache",{"_index":4020,"title":{},"body":{"dependencies.html":{}}}],["cacheable",{"_index":4080,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":1544,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":3396,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["calc(50",{"_index":1502,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":1536,"title":{},"body":{"classes/InitializationState.html":{},"components/TagSearchComponent.html":{}}}],["call",{"_index":1434,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["callback",{"_index":961,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{}}}],["callbackset",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["called",{"_index":1466,"title":{},"body":{"classes/InitializationState.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["calling",{"_index":3047,"title":{},"body":{"components/StageNavComponent.html":{}}}],["calls",{"_index":3195,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["cancel",{"_index":2384,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/TagListComponent.html":{}}}],["cancelregistration",{"_index":609,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"changelog.html":{}}}],["cancelregistrationcallback",{"_index":619,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"miscellaneous/typealiases.html":{}}}],["candidate",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2873,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["capturing",{"_index":1754,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["card",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["cases",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":1423,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["catcherror",{"_index":2141,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/TagSearchComponent.html":{}}}],["ccf",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":2593,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ccfdrawer",{"_index":1490,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":757,"title":{},"body":{"components/ContainerComponent.html":{}}}],["cdk",{"_index":1312,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["cdr",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cdr.markforcheck",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cell",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["centimeter",{"_index":2147,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["certain",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["cff",{"_index":1049,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["change",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":843,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectorref",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["changelog",{"_index":3540,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changerotation",{"_index":2802,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["changerotation(newrotation",{"_index":2792,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changes",{"_index":182,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["changing",{"_index":3030,"title":{},"body":{"components/StageNavComponent.html":{}}}],["channel",{"_index":761,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["channels",{"_index":1876,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["charge",{"_index":4135,"title":{},"body":{"license.html":{}}}],["check",{"_index":1997,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["checked",{"_index":3215,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["checkedresults",{"_index":3169,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["checkedresults[tag.id",{"_index":3263,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["checknamevalid",{"_index":2325,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["checknamevalid(event",{"_index":2332,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["checks",{"_index":1007,"title":{},"body":{"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{}}}],["chevron_left",{"_index":1345,"title":{},"body":{"components/HeaderComponent.html":{}}}],["child",{"_index":726,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["chip",{"_index":3156,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["choose",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":4171,"title":{},"body":{"license.html":{}}}],["class",{"_index":133,"title":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":3370,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":988,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["classend",{"_index":1508,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1448,"title":{},"body":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"overview.html":{}}}],["classname",{"_index":762,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["clean",{"_index":1884,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagSearchComponent.html":{}}}],["cleans",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cleanup",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":2722,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["clearhaschanges",{"_index":2226,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["clears",{"_index":3476,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["click",{"_index":1635,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{}}}],["clicking",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":3043,"title":{},"body":{"components/StageNavComponent.html":{}}}],["close",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{}}}],["closed",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["closedialog",{"_index":2326,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["closeexpanded",{"_index":1571,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeopendone",{"_index":1578,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeresults",{"_index":3176,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["closeresults(event",{"_index":3205,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["closes",{"_index":1559,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{}}}],["closesearch",{"_index":3170,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["closesearch.nativeelement.contains(event.target",{"_index":3277,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["cls",{"_index":3327,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":678,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["cluster_appmodule",{"_index":537,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":538,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":539,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule",{"_index":731,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_declarations",{"_index":732,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_exports",{"_index":733,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_contentmodule",{"_index":1075,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_declarations",{"_index":1078,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_exports",{"_index":1076,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_imports",{"_index":1077,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1089,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1090,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule",{"_index":1230,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_declarations",{"_index":1231,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_exports",{"_index":1232,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":1244,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":1246,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":1245,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule",{"_index":1317,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule_declarations",{"_index":1319,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule_exports",{"_index":1318,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":1365,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1366,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1367,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule",{"_index":1657,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule_declarations",{"_index":1659,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule_exports",{"_index":1658,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule",{"_index":1702,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_declarations",{"_index":1703,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_exports",{"_index":1704,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule",{"_index":1807,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_declarations",{"_index":1808,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_exports",{"_index":1809,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_imports",{"_index":1810,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule",{"_index":2125,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_declarations",{"_index":2126,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_exports",{"_index":2127,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule",{"_index":2370,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_declarations",{"_index":2371,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_exports",{"_index":2372,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_imports",{"_index":2373,"title":{},"body":{"modules/RegistrationContentModule.html":{}}}],["cluster_registrationmodalmodule",{"_index":2398,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_declarations",{"_index":2399,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_exports",{"_index":2400,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_imports",{"_index":2401,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["cluster_reviewbuttonmodule",{"_index":2694,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_declarations",{"_index":2695,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_exports",{"_index":2696,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_imports",{"_index":2697,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule",{"_index":2731,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule_declarations",{"_index":2732,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule_exports",{"_index":2733,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule",{"_index":2752,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_declarations",{"_index":2753,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_exports",{"_index":2754,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_imports",{"_index":2755,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule",{"_index":2819,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_declarations",{"_index":2820,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_exports",{"_index":2821,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule",{"_index":3004,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_declarations",{"_index":3006,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_exports",{"_index":3005,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule",{"_index":3086,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_declarations",{"_index":3089,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_exports",{"_index":3087,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_imports",{"_index":3088,"title":{},"body":{"modules/StageNavModule.html":{}}}],["cluster_taglistmodule",{"_index":3157,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_taglistmodule_declarations",{"_index":3158,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_taglistmodule_exports",{"_index":3159,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule",{"_index":3300,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule_declarations",{"_index":3301,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule_exports",{"_index":3302,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":3308,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":3309,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule",{"_index":3442,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule_declarations",{"_index":3444,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule_exports",{"_index":3443,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule",{"_index":3448,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule_declarations",{"_index":3449,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule_exports",{"_index":3450,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule",{"_index":3514,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule_declarations",{"_index":3515,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule_exports",{"_index":3516,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule",{"_index":3536,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule_declarations",{"_index":3538,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule_exports",{"_index":3537,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["coalescing",{"_index":2209,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["code",{"_index":3409,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["code.touppercase().endswith(lookup",{"_index":2212,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["codebase",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":1469,"title":{},"body":{"classes/InitializationState.html":{}}}],["collaboration",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["collapse",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":1478,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":1570,"title":{},"body":{"classes/InitializationState.html":{}}}],["collection",{"_index":13,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["collisions",{"_index":138,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["color",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["combination",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["combined",{"_index":1070,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":112,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["combinelatest([regs",{"_index":2500,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.entities",{"_index":135,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["combinelatest([this.model.anatomicalstructures",{"_index":2903,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.organiri",{"_index":2929,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.viewtype",{"_index":2951,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.page.state",{"_index":2487,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.page.user",{"_index":2388,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["combinelatest([this.referenceorgansimplenodes",{"_index":2921,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.rotation",{"_index":2898,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["come",{"_index":3117,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["coming",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":4027,"title":{},"body":{"dependencies.html":{}}}],["comma",{"_index":1225,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["commas",{"_index":1211,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["common",{"_index":3541,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":736,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["compatibility",{"_index":3114,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1586,"title":{},"body":{"classes/InitializationState.html":{}}}],["completes",{"_index":3235,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["completion",{"_index":1576,"title":{},"body":{"classes/InitializationState.html":{}}}],["complexity",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":196,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":878,"title":{},"body":{"components/ContentComponent.html":{}}}],["component.component",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":603,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["component.component.ts:25",{"_index":618,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:26",{"_index":633,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:27",{"_index":634,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:28",{"_index":628,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:29",{"_index":622,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:30",{"_index":630,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:31",{"_index":620,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:32",{"_index":624,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":631,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:34",{"_index":632,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":625,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":626,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":627,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":616,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["componentref",{"_index":3330,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["computed",{"_index":105,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["computes",{"_index":3214,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["concat",{"_index":4029,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":4154,"title":{},"body":{"license.html":{}}}],["config",{"_index":750,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.cancelregistration",{"_index":2279,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.isolated",{"_index":1878,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.register",{"_index":2278,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.user",{"_index":2281,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["configmodule",{"_index":745,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["configstore",{"_index":617,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":1334,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["confirm('changes",{"_index":2285,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["confirmation",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":1899,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["connect(source",{"_index":1887,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":794,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connection",{"_index":4177,"title":{},"body":{"license.html":{}}}],["connects",{"_index":1886,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["consider",{"_index":3113,"title":{},"body":{"modules/StoreModule.html":{}}}],["consortium",{"_index":4130,"title":{},"body":{"license.html":{}}}],["const",{"_index":139,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor(@inject(message_service_config",{"_index":1877,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1106,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":1900,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":615,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(defaulttheme",{"_index":3323,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(dialog",{"_index":2380,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["constructor(dialogref",{"_index":2702,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["constructor(drawer",{"_index":3371,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(el",{"_index":3187,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["constructor(ga",{"_index":706,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(globalconfig",{"_index":2234,"title":{},"body":{"injectables/PageState.html":{}}}],["constructor(globals",{"_index":2308,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["constructor(injector",{"_index":36,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/RegistrationState.html":{},"injectables/SceneState.html":{}}}],["constructor(messageservice",{"_index":770,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["constructor(model",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/RightSidebarComponent.html":{}}}],["constructor(page",{"_index":1340,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["constructor(private",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(readonly",{"_index":1344,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(registry",{"_index":1438,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(renderer2",{"_index":3402,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["constructor(source",{"_index":1892,"title":{},"body":{"classes/MessageChannel.html":{}}}],["contain",{"_index":1059,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["contained",{"_index":1910,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["container",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["container.component.html",{"_index":760,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":759,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1250,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":478,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerpayload",{"_index":1062,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":842,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["containing",{"_index":660,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"index.html":{}}}],["contains",{"_index":686,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ExtractionSet.html":{},"classes/InitializationState.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["content",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content'},{'name",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content.component",{"_index":2375,"title":{},"body":{"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{}}}],["content.component.html",{"_index":865,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.scss",{"_index":864,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.ts",{"_index":2318,"title":{},"body":{"components/RegistrationContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:109",{"_index":2336,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:20",{"_index":2331,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:23",{"_index":2350,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:28",{"_index":2348,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:31",{"_index":2351,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:34",{"_index":2349,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:37",{"_index":2346,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:40",{"_index":2345,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:42",{"_index":2330,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:55",{"_index":2347,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:65",{"_index":2344,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:75",{"_index":2333,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:84",{"_index":2339,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:95",{"_index":2342,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.module",{"_index":2405,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["content.module.ts",{"_index":2374,"title":{},"body":{"modules/RegistrationContentModule.html":{}}}],["content/content.component",{"_index":817,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{}}}],["content/registration",{"_index":2317,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["content1",{"_index":763,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":764,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":814,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":796,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":806,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":480,"title":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":1051,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["contentmodule",{"_index":540,"title":{"modules/ContentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"modules.html":{},"overview.html":{}}}],["context",{"_index":2581,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["context.jsonld",{"_index":2584,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["contract",{"_index":4174,"title":{},"body":{"license.html":{}}}],["control",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":3241,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["convention",{"_index":1074,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["converting",{"_index":1220,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["converts",{"_index":2427,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["coordinate",{"_index":3542,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":4149,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4137,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4128,"title":{},"body":{"license.html":{}}}],["core",{"_index":1107,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/anatomical",{"_index":3148,"title":{},"body":{"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["core/models/extraction",{"_index":1286,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["core/models/meta",{"_index":2672,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["core/models/visibility",{"_index":1780,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["core/services/config/config",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/User.html":{}}}],["core/services/theming/theming.service",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["core/store/anatomical",{"_index":2738,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["core/store/model/model.state",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/page/page.state",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/registration/registration.state",{"_index":937,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["core/store/scene/scene.state",{"_index":938,"title":{},"body":{"components/ContentComponent.html":{}}}],["coremodule",{"_index":541,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":1359,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["corresponding",{"_index":3223,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["cors",{"_index":4031,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":3234,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["counter",{"_index":1856,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["countmapping",{"_index":3171,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["coverage",{"_index":3872,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createcustomelement",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["createentitycollections",{"_index":100,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["creates",{"_index":40,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["createscenenodes",{"_index":2827,"title":{},"body":{"injectables/SceneState.html":{}}}],["createscenenodes(organiri",{"_index":2835,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["creating",{"_index":819,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["creation",{"_index":2648,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["creation_date",{"_index":2592,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator",{"_index":2587,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator_first_name",{"_index":2588,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator_last_name",{"_index":2589,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["creator_orcid",{"_index":2590,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["credits",{"_index":4115,"title":{},"body":{"index.html":{}}}],["crosshairs",{"_index":889,"title":{},"body":{"components/ContentComponent.html":{}}}],["css",{"_index":934,"title":{},"body":{"components/ContentComponent.html":{},"dependencies.html":{}}}],["cube.svg",{"_index":1201,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["cuboid",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":1277,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["currentdate",{"_index":2420,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["currentidentifier",{"_index":2419,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["currently",{"_index":1285,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["currentorgan",{"_index":2319,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["currentsex",{"_index":2320,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["cursor",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["customelements.define('ccf",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["customizable",{"_index":3519,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["customized",{"_index":1626,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["cyberinfrastructure",{"_index":4117,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["damages",{"_index":4172,"title":{},"body":{"license.html":{}}}],["dark",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["dark/light",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["data.alignment_operator_orcid",{"_index":2591,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.json",{"_index":2179,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.label",{"_index":2723,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["data.metadata",{"_index":2715,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.push",{"_index":2571,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.registrationcallbackset",{"_index":2716,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.sex",{"_index":2520,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.side",{"_index":2522,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.state",{"_index":1944,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["data.state.ts",{"_index":2132,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["data.state.ts:100",{"_index":2313,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:110",{"_index":2315,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:135",{"_index":2311,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:155",{"_index":2310,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:75",{"_index":2309,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:87",{"_index":2314,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.ts",{"_index":1907,"title":{},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.value",{"_index":2724,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["data/reference",{"_index":1943,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataaction",{"_index":53,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["database",{"_index":2140,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"changelog.html":{}}}],["datasets",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["datatype",{"_index":1681,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["date().toisostring().split('t')[0",{"_index":2504,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["db",{"_index":2067,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.anatomicalstructures[organiri",{"_index":2071,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.extractionsets[organiri",{"_index":2078,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.organirilookup[key",{"_index":2213,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.organspatialentities[organiri",{"_index":2085,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.placementpatches[place?.target",{"_index":2186,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.scenenodelookup[item.id",{"_index":2913,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.scenenodelookup[node['@id",{"_index":2973,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[item.id",{"_index":2914,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[node['@id",{"_index":2918,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["deal",{"_index":4138,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4178,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":1930,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["debouncetime(100",{"_index":2005,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["debouncetime(400",{"_index":2906,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["debouncetime(500",{"_index":2390,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["debug",{"_index":913,"title":{},"body":{"components/ContentComponent.html":{}}}],["debugmode",{"_index":867,"title":{},"body":{"components/ContentComponent.html":{}}}],["december",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":2650,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["deck.gl/core",{"_index":4004,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":4006,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":4008,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":4009,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":550,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["declare",{"_index":1332,"title":{},"body":{"interfaces/GlobalConfig.html":{}}}],["decoration",{"_index":1353,"title":{},"body":{"components/HeaderComponent.html":{}}}],["decorator",{"_index":111,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{},"dependencies.html":{}}}],["decorators",{"_index":52,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deep",{"_index":1297,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deeply",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":1393,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.html",{"_index":1391,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.url",{"_index":1402,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default",{"_index":85,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_block_size",{"_index":672,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1132,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons.find",{"_index":1399,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default_rotation",{"_index":2777,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_search_limit",{"_index":3246,"title":{},"body":{"components/TagSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_search_throttle",{"_index":3249,"title":{},"body":{"components/TagSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_slices_config",{"_index":2975,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_theme",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1111,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultposition",{"_index":2030,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["defaults",{"_index":132,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["defaulttheme",{"_index":3317,"title":{},"body":{"injectables/ThemingService.html":{}}}],["deferred",{"_index":1451,"title":{},"body":{"classes/InitializationState.html":{}}}],["define",{"_index":1237,"title":{},"body":{"interfaces/DocumentationContent.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["definition",{"_index":1116,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":1414,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":1413,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["degree",{"_index":2623,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["delay",{"_index":1931,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delay(200",{"_index":2007,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delay(5",{"_index":2014,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delta",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["demo",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":1389,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["dependencies",{"_index":536,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":752,"title":{},"body":{"modules/ConfigModule.html":{}}}],["depth",{"_index":663,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["descendants",{"_index":797,"title":{},"body":{"components/ContainerComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["destroy",{"_index":3172,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["destroyed",{"_index":3236,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["destruction",{"_index":3219,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["detaches",{"_index":884,"title":{},"body":{"components/ContentComponent.html":{}}}],["details",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["detailslabelcomponent",{"_index":482,"title":{"components/DetailsLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detailslabelmodule",{"_index":1229,"title":{"modules/DetailsLabelModule.html":{}},"body":{"modules/DetailsLabelModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["detailslabels",{"_index":1714,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["detection",{"_index":781,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":774,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["determines",{"_index":1282,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/TagSearchComponent.html":{}}}],["dev",{"_index":973,"title":{},"body":{"components/ContentComponent.html":{}}}],["developed",{"_index":4116,"title":{},"body":{"index.html":{}}}],["development",{"_index":2170,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["developmentmode",{"_index":3112,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":3894,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":1242,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{}}}],["dialog's",{"_index":2705,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["dialogref",{"_index":2322,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":2690,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["dialogref.disableclose",{"_index":2353,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["dialogue",{"_index":2665,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["different",{"_index":1607,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{}}}],["digits",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["dimension",{"_index":688,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["dimension_units",{"_index":2605,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["dimensions",{"_index":662,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["dims",{"_index":945,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.x",{"_index":2033,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.y",{"_index":2035,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.z",{"_index":2036,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims[0",{"_index":950,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[1",{"_index":952,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[2",{"_index":956,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[i",{"_index":2941,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["direct",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["directive",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directives",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directly",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":123,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["disabled",{"_index":1672,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"components/VisibilityToggleComponent.html":{}}}],["disablepositionchange",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["disables",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["disableslider",{"_index":1725,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["display",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displayed",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":2408,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["displaying",{"_index":972,"title":{},"body":{"components/ContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["distinctuntilchanged",{"_index":1932,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged((v1",{"_index":1982,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilkeychanged",{"_index":936,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('x",{"_index":907,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('y",{"_index":908,"title":{},"body":{"components/ContentComponent.html":{}}}],["distribute",{"_index":4145,"title":{},"body":{"license.html":{}}}],["div",{"_index":3531,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["divider",{"_index":1795,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["dobootstrap",{"_index":555,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":3041,"title":{},"body":{"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"dependencies.html":{}}}],["document.getelementsbyclassname('modal",{"_index":2717,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["document:click",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["document:click(target",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["document:keydown",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["document:keydown(target",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1239,"title":{},"body":{"interfaces/DocumentationContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documentationcontent",{"_index":1235,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{},"coverage.html":{}}}],["dom",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["domsanitizer",{"_index":1377,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["don't",{"_index":1388,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["done",{"_index":3530,"title":{},"body":{"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["donor",{"_index":1789,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"changelog.html":{}}}],["donors",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":2750,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["dotenv",{"_index":4035,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":3033,"title":{},"body":{"components/StageNavComponent.html":{}}}],["download",{"_index":962,"title":{},"body":{"components/ContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"changelog.html":{}}}],["downloads",{"_index":2440,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["draft",{"_index":2966,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draftplacement",{"_index":2958,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draggable",{"_index":2781,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["drawer",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["drawer.close",{"_index":3390,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":3389,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":1491,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":1492,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":3391,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":852,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":818,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":1036,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["drawercontainerschanged",{"_index":1058,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawerinitialized",{"_index":1065,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":542,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":1069,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":765,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":851,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":1066,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drop",{"_index":3032,"title":{},"body":{"components/StageNavComponent.html":{}}}],["dropdown",{"_index":1264,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["dropdown'},{'name",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["dropdown.component",{"_index":1323,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown.component.html",{"_index":1267,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1266,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":1263,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:18",{"_index":1278,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":1275,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":1273,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":1272,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:47",{"_index":1280,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":1281,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.module",{"_index":1822,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["dropdown.module.ts",{"_index":1320,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown/extraction",{"_index":1262,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["dropdowncontainer",{"_index":3082,"title":{},"body":{"components/StageNavComponent.html":{}}}],["duration",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent-1.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{}}}],["during",{"_index":3333,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["dynamic",{"_index":4002,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["each",{"_index":1238,"title":{},"body":{"interfaces/DocumentationContent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["ease",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["easier",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["easily",{"_index":2797,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ececec",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["editregistration",{"_index":610,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"injectables/RegistrationState.html":{}}}],["editregistration(reg",{"_index":2432,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["effect",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{}}}],["element",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["element's",{"_index":1634,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["element.getboundingclientrect",{"_index":1541,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":3362,"title":{},"body":{"injectables/ThemingService.html":{}}}],["elementref",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["ellipsis",{"_index":3510,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["embedded",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":2799,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["emits",{"_index":1276,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitted",{"_index":680,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["emitter",{"_index":681,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitting",{"_index":1522,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["empty",{"_index":128,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["empty_result",{"_index":3242,"title":{},"body":{"components/TagSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":998,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enables",{"_index":2778,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["end",{"_index":828,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RightSidebarComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["end?.expanded",{"_index":1047,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["end?.opened",{"_index":1046,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enddrawers",{"_index":853,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":856,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":859,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":1045,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["endings",{"_index":2564,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["entered",{"_index":2335,"title":{},"body":{"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entererrormode",{"_index":2645,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["entering",{"_index":674,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entire",{"_index":3104,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":2070,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.comment",{"_index":2076,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.label",{"_index":2075,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.placement",{"_index":2936,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.placement[0",{"_index":2935,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.representation_of",{"_index":2072,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.sex?.tolowercase",{"_index":2220,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side?.tolowercase",{"_index":2221,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.y_dimension",{"_index":2944,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.z_dimension].map(n",{"_index":2945,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity['@id",{"_index":2073,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entitycollections",{"_index":101,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["entry",{"_index":2104,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{}}}],["entry.value",{"_index":2679,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["entrycomponents",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":639,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.customization",{"_index":650,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":648,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.googleanalyticstoken",{"_index":1104,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":930,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.skipunsavedchangesconfirmation",{"_index":2273,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["environments/environment",{"_index":640,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":822,"title":{},"body":{"components/ContainerComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["error('the",{"_index":1108,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":831,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":820,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":2874,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["eslint",{"_index":122,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/consistent",{"_index":1952,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/member",{"_index":1945,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/naming",{"_index":1073,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["eslint/no",{"_index":127,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["eslint/prefer",{"_index":2207,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{}}}],["etc",{"_index":1068,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["eui",{"_index":3550,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"license.html":{}}}],["event'])@hostlistener('window:focusin",{"_index":3207,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["event.firstname.length",{"_index":2357,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["event.lastname.length",{"_index":2358,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["event.preventdefault",{"_index":2300,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["event.returnvalue",{"_index":2301,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["event.target",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{}}}],["eventemitter",{"_index":664,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["eventemitter(true",{"_index":1524,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":2368,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["except",{"_index":1863,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/StoreModule.html":{}}}],["executes",{"_index":3210,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["executesearch",{"_index":3177,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["executesearch(text",{"_index":3208,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["executionstrategy",{"_index":3115,"title":{},"body":{"modules/StoreModule.html":{}}}],["expand",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":1580,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":1483,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":1582,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":1519,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":1474,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":1525,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":1475,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":1477,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":1531,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":1567,"title":{},"body":{"classes/InitializationState.html":{}}}],["expansion",{"_index":1798,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["expected",{"_index":2714,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["experimentation",{"_index":2744,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["explicit",{"_index":2442,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["exploration",{"_index":4100,"title":{},"body":{"index.html":{}}}],["export",{"_index":130,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["exportas",{"_index":756,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":735,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["express",{"_index":4037,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":1927,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extended",{"_index":1480,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":16,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["external",{"_index":83,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["extra",{"_index":4041,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["extraction_set_dropdown",{"_index":1289,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionset",{"_index":1253,"title":{"interfaces/ExtractionSet.html":{}},"body":{"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["extractionsetchanged",{"_index":1269,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetchanged(value",{"_index":1279,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetdropdowncomponent",{"_index":487,"title":{"components/ExtractionSetDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["extractionsetdropdownmodule",{"_index":1316,"title":{"modules/ExtractionSetDropdownModule.html":{}},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["extractionsets",{"_index":1912,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsites",{"_index":1913,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsitetooltip",{"_index":1715,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["extracts",{"_index":3222,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["eye",{"_index":1143,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1144,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1173,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f.svg",{"_index":1174,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factor",{"_index":2145,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["factory",{"_index":1854,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":2719,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["faded",{"_index":982,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fadeinout",{"_index":987,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fail",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["fallopian",{"_index":1145,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["false=right",{"_index":1687,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["favor",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":1331,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["fetch",{"_index":1129,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["fetched",{"_index":2497,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["fetched]).pipe",{"_index":2501,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["fetchpreviousregistrations",{"_index":611,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["fetchpreviousregistrationscallback",{"_index":623,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewModalComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{},"changelog.html":{}}}],["fields",{"_index":2728,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/TagSearchComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"dependencies.html":{}}}],["fileinput",{"_index":1618,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement",{"_index":1643,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement.click",{"_index":1645,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader",{"_index":1648,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.onload",{"_index":1649,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.readastext(file",{"_index":1655,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["files",{"_index":1627,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"license.html":{}}}],["fill",{"_index":1357,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filler",{"_index":728,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["filter",{"_index":1844,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["filter(([_nodes",{"_index":2923,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter((node",{"_index":2915,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(as",{"_index":186,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["filter(def",{"_index":1390,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["filter(e",{"_index":2950,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(item",{"_index":2541,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(key",{"_index":1976,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filter(started",{"_index":2012,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filtered",{"_index":1867,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["filternulls",{"_index":1925,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["final",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["finished",{"_index":1063,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["finishing",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["fired",{"_index":3044,"title":{},"body":{"components/StageNavComponent.html":{}}}],["first",{"_index":2108,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"changelog.html":{}}}],["firstname",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["firstnamevalidator",{"_index":2095,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["fit",{"_index":3423,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["fitness",{"_index":4164,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["float",{"_index":2729,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["floatlabel",{"_index":594,"title":{},"body":{"modules/AppModule.html":{}}}],["fly",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":2813,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["focusin",{"_index":3184,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["following",{"_index":4153,"title":{},"body":{"license.html":{}}}],["font",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["footer",{"_index":2730,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["foreach(def",{"_index":1395,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["form",{"_index":1308,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/TagSearchComponent.html":{},"changelog.html":{}}}],["format",{"_index":2428,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{}}}],["formatted",{"_index":1222,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["formcontrol",{"_index":2105,"title":{},"body":{"components/NameInputComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{}}}],["formsmodule",{"_index":2128,"title":{},"body":{"modules/NameInputModule.html":{},"modules/TagSearchModule.html":{}}}],["found",{"_index":2743,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["frame",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":3543,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":4134,"title":{},"body":{"license.html":{}}}],["from(fetch(url)).pipe",{"_index":2181,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["from(search(text",{"_index":3278,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["fs",{"_index":4040,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":1481,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":4087,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":4122,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":4152,"title":{},"body":{"license.html":{}}}],["further",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":683,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["gatoken",{"_index":1103,"title":{},"body":{"modules/CoreModule.html":{}}}],["general",{"_index":2223,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["generate",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":1667,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["genericmessage",{"_index":1054,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":1055,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":1056,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getarguments",{"_index":1435,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":1440,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getclassend",{"_index":3380,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcontent",{"_index":808,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getcurrentdate",{"_index":2472,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getcurrentidentifier",{"_index":2469,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getdisabled",{"_index":2670,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["getglobalskipconfirmation",{"_index":2259,"title":{},"body":{"injectables/PageState.html":{}}}],["gethaschanges",{"_index":2261,"title":{},"body":{"injectables/PageState.html":{}}}],["gethasthicknessvalue",{"_index":2998,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["gethaswrappedcontent",{"_index":811,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":3381,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getid",{"_index":3460,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getid(_index",{"_index":3473,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getislighttheme",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["getisvalid",{"_index":2476,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getjsonld",{"_index":2463,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getlabelel",{"_index":3057,"title":{},"body":{"components/StageNavComponent.html":{}}}],["getlatesttags",{"_index":97,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getleft",{"_index":1688,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["getmessages",{"_index":1865,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":1889,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":1868,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":1890,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":1872,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmetadata",{"_index":2461,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getmethodname",{"_index":1426,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":1442,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getname",{"_index":2111,"title":{},"body":{"components/NameInputComponent.html":{}}}],["getnodebbox",{"_index":3968,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(model",{"_index":2878,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(placement[0",{"_index":2926,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getnodecollisions",{"_index":2862,"title":{},"body":{"injectables/SceneState.html":{}}}],["getnodes",{"_index":2853,"title":{},"body":{"injectables/SceneState.html":{}}}],["getoptionsel",{"_index":3061,"title":{},"body":{"components/StageNavComponent.html":{}}}],["getorgandata",{"_index":2305,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getorgandata(iri",{"_index":2216,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getplacementcube",{"_index":2866,"title":{},"body":{"injectables/SceneState.html":{}}}],["getpreviousregistrationnodes",{"_index":2864,"title":{},"body":{"injectables/SceneState.html":{}}}],["getpreviousregistrations",{"_index":2467,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["getreferenceorganiri",{"_index":2306,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getreferenceorganiri(organ",{"_index":2203,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getreferenceorgannodes",{"_index":2857,"title":{},"body":{"injectables/SceneState.html":{}}}],["getreferenceorgansimplenodes",{"_index":2860,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotatednodes",{"_index":2855,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotation",{"_index":2869,"title":{},"body":{"injectables/SceneState.html":{}}}],["gets",{"_index":1465,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["getskipconfirmation",{"_index":2257,"title":{},"body":{"injectables/PageState.html":{}}}],["getsourcedb",{"_index":2175,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["gettags",{"_index":94,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getter/setter",{"_index":1512,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":3319,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3539,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getupdatedcheckedresults",{"_index":3178,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["getupdatedcheckedresults(result",{"_index":3212,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["getvalid",{"_index":2465,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["github",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":1857,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":1221,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{}}}],["gizmo",{"_index":967,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["global",{"_index":14,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/GlobalConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["global_config",{"_index":748,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":245,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalconfig.getoption('fetchpreviousregistrations').pipe",{"_index":2498,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["globalconfigfactory",{"_index":749,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["globalconfigfactory(globals",{"_index":1335,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/functions.html":{}}}],["globalconfigstate",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["globally",{"_index":2172,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["globals",{"_index":2167,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globals.get('ruiconfig",{"_index":1336,"title":{},"body":{"interfaces/GlobalConfig.html":{}}}],["globalskipconfirmation",{"_index":2232,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["globalsservice",{"_index":747,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":1549,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['ruiconfig",{"_index":649,"title":{},"body":{"components/AppWebComponent.html":{}}}],["good",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":669,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":667,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["granted",{"_index":4133,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4180,"title":{},"body":{"modules.html":{}}}],["graphology",{"_index":4042,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":3080,"title":{},"body":{"components/StageNavComponent.html":{}}}],["grow",{"_index":729,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["gtex",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["half",{"_index":1479,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1125,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["handleclick",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["handleclick(target",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["handlefile",{"_index":1619,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlefile(event",{"_index":1630,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlekey",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["handlekey(target",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["handlemessage",{"_index":766,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":776,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":1001,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handlenodedrag",{"_index":872,"title":{},"body":{"components/ContentComponent.html":{}}}],["handlenodedrag(event",{"_index":880,"title":{},"body":{"components/ContentComponent.html":{}}}],["handler",{"_index":1636,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["handles",{"_index":1219,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["handling",{"_index":1380,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["happen",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":3108,"title":{},"body":{"modules/StoreModule.html":{}}}],["haschanges",{"_index":2233,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["hascheckedtags",{"_index":3179,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hasthicknessvalue",{"_index":2977,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["haswrappedcontent",{"_index":769,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{}}}],["header'},{'name",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["header.component",{"_index":1369,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1339,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1338,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":490,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":543,"title":{"modules/HeaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heart",{"_index":1149,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1150,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["helmet",{"_index":4047,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":61,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":168,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["hereby",{"_index":4132,"title":{},"body":{"license.html":{}}}],["hex",{"_index":4049,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["hiderequiredmarker",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["hides",{"_index":912,"title":{},"body":{"components/ContentComponent.html":{}}}],["highlight",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":3455,"title":{},"body":{"interfaces/VisibilityItem.html":{}}}],["highlights",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["hint",{"_index":81,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["holders",{"_index":4169,"title":{},"body":{"license.html":{}}}],["home",{"_index":1354,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["hooked",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":2816,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["host",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding",{"_index":665,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":1530,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":1016,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('@openclose",{"_index":1529,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":677,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('class.ccf",{"_index":1507,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":1012,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('style.margin",{"_index":1017,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbindings",{"_index":705,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostlistener",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":1581,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":1577,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('click",{"_index":3270,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlistener('click')@hostlistener('focusin",{"_index":3220,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlistener('document:click",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["hostlistener('document:keydown",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["hostlistener('focusin",{"_index":3271,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlistener('window:click",{"_index":3206,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlistener('window:focusin",{"_index":3273,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["hostlisteners",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{}}}],["hover",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovered",{"_index":1768,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovering",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["htmlelement",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["htmlinputelement",{"_index":693,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["htmlscriptelement",{"_index":3418,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier",{"_index":2585,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier}_placement",{"_index":2606,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmaleorgans_vhm_spleen_colic_surface",{"_index":2838,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":1094,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://beta",{"_index":4103,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":4107,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":2840,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"index.html":{}}}],["https://hubmapconsortium.github.io/hubmap",{"_index":2582,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["https://old",{"_index":4109,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":4105,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":3116,"title":{},"body":{"modules/StoreModule.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":3420,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["hubmap",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["i18nplural:countmapping",{"_index":3291,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["icon",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["icon.add",{"_index":2741,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["icon.name",{"_index":1400,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icon.namespace",{"_index":1401,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icondefinition",{"_index":1370,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["iconregistry",{"_index":1381,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1382,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1130,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1114,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":155,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["idb",{"_index":4052,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1838,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["identifiers",{"_index":4194,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idmatches(ontologyid",{"_index":2015,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iec",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":3406,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["ignoredkeys",{"_index":1974,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ignoredkeys.includes(key",{"_index":1977,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iif",{"_index":2263,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["iif(!!config.user",{"_index":2280,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["image",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":2133,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["implementation",{"_index":60,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["implemented",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["implied",{"_index":4161,"title":{},"body":{"license.html":{}}}],["implies",{"_index":1067,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":99,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["imported",{"_index":1109,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":552,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["improve",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["in's",{"_index":1750,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["include",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":4156,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3623,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":4120,"title":{},"body":{"index.html":{}}}],["indicator",{"_index":1801,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["individual",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["infinity",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["infix",{"_index":3296,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["infobuttonmodule",{"_index":2773,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["information",{"_index":891,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ExtractionSet.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["init",{"_index":3411,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["initial",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["initialconfig",{"_index":647,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialdelay",{"_index":645,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":1553,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":1447,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{},"coverage.html":{}}}],["initialize",{"_index":3320,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":3329,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":3335,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":606,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":3332,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":65,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["initializing",{"_index":1064,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["initskipconfirmationlisteners",{"_index":2227,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["inject",{"_index":1842,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["inject(default_theme",{"_index":3352,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inject(document",{"_index":3414,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":2709,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/RegistrationState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/RegistrationState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"overview.html":{}}}],["injected",{"_index":2707,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["injecting",{"_index":164,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":1327,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('default",{"_index":3348,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":37,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["injector.get(overlaycontainer",{"_index":3363,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":3361,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":3350,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inline",{"_index":2751,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["input",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input'},{'name",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input.component",{"_index":744,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.component.html",{"_index":675,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.scss",{"_index":676,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.ts",{"_index":658,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input.component.ts:31",{"_index":2995,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:35",{"_index":709,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:36",{"_index":2993,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:40",{"_index":708,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:41",{"_index":2994,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:44",{"_index":2109,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:45",{"_index":707,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:46",{"_index":2999,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:48",{"_index":2992,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:50",{"_index":2101,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:54",{"_index":2113,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:60",{"_index":711,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:63",{"_index":2997,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:68",{"_index":2099,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:70",{"_index":710,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:73",{"_index":2996,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:83",{"_index":2103,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.module",{"_index":1827,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["input.module.ts",{"_index":734,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.target",{"_index":692,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input/block",{"_index":657,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input/name",{"_index":1826,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["input/slices",{"_index":2765,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input[type=number",{"_index":714,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["inputarray",{"_index":1223,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputarray.join",{"_index":1226,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputevent",{"_index":685,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputs",{"_index":607,"title":{},"body":{"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["inputtarget",{"_index":691,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputtarget.files",{"_index":1646,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.files[0",{"_index":1647,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.value",{"_index":695,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputted",{"_index":2656,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["inputting",{"_index":2092,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["insertitem",{"_index":2478,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["insertitem(registration",{"_index":2546,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["inside",{"_index":1243,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["instance",{"_index":41,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instanceof",{"_index":3274,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["instant",{"_index":1473,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":3034,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["instructions",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":129,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":195,"title":{},"body":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["interval",{"_index":3244,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["interval(this.searchthrottle",{"_index":3252,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["intestine",{"_index":1156,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1157,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invisible",{"_index":995,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["iri",{"_index":149,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iris",{"_index":2538,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["iris.has(item.id",{"_index":2542,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["is3dview",{"_index":868,"title":{},"body":{"components/ContentComponent.html":{}}}],["isdatavalid",{"_index":2413,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["isdatavalid(page",{"_index":2435,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["isdropdownactive",{"_index":3016,"title":{},"body":{"components/StageNavComponent.html":{}}}],["isdropdownhidden",{"_index":3017,"title":{},"body":{"components/StageNavComponent.html":{}}}],["islighttheme",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["ismultiple",{"_index":1270,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["isnan(this.slicesconfig.thickness",{"_index":2978,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["isnarrowview",{"_index":869,"title":{},"body":{"components/ContentComponent.html":{}}}],["isolated",{"_index":1850,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["isvalid",{"_index":2421,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["it's",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1260,"title":{},"body":{"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["item.id",{"_index":2544,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.name",{"_index":2545,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.opacity",{"_index":2912,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["item.tooltip",{"_index":1783,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["item.ts",{"_index":3454,"title":{},"body":{"interfaces/VisibilityItem.html":{},"coverage.html":{}}}],["item.visible",{"_index":2911,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item?.tooltip",{"_index":1781,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["items",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["items.length",{"_index":3282,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["items.slice(0",{"_index":3283,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["itemschange",{"_index":3467,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["iu",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":1224,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["json",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["json.parse(filereader.result",{"_index":1650,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["json.stringify(jsonobj",{"_index":2559,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["json_file_reader",{"_index":1652,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["jsonfilereadercomponent",{"_index":492,"title":{"components/JsonFileReaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["jsonfilereadermodule",{"_index":1656,"title":{"modules/JsonFileReaderModule.html":{}},"body":{"modules/JsonFileReaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["jsonld",{"_index":2417,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["jsonobj",{"_index":2555,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["july",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["keeps",{"_index":1766,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["key",{"_index":687,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{}}}],["keyboard",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["keyboardevent",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["keys",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["keyval",{"_index":4053,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1151,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kidney.svg",{"_index":1152,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":4160,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1153,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1154,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":1734,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["label",{"_index":156,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["label'},{'name",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["label.component",{"_index":1234,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label.component.html",{"_index":1213,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.scss",{"_index":1212,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts",{"_index":1204,"title":{},"body":{"components/DetailsLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:15",{"_index":1216,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:20",{"_index":1215,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:29",{"_index":1218,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.module",{"_index":1820,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["label.module.ts",{"_index":1233,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label/details",{"_index":1203,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["labeled",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["labeledslidetogglecomponent",{"_index":495,"title":{"components/LabeledSlideToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labeledslidetogglemodule",{"_index":1701,"title":{"modules/LabeledSlideToggleModule.html":{}},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["labelel",{"_index":3026,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelel.contains(target",{"_index":3068,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelref",{"_index":3018,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labels",{"_index":1673,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0",{"_index":1697,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0]}}{{labels[1",{"_index":1700,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[1",{"_index":1690,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labs/data",{"_index":3096,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":108,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["labs/data/repositories",{"_index":109,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["landmark",{"_index":1293,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["landmarks",{"_index":1791,"title":{},"body":{"components/LeftSidebarComponent.html":{},"changelog.html":{}}}],["large",{"_index":1155,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":2110,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{}}}],["lastname",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["lastnamevalidator",{"_index":2096,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["latest",{"_index":3555,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["latesttags",{"_index":34,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["launch",{"_index":2637,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launcher",{"_index":3427,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["launcher.component",{"_index":3446,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher.component.html",{"_index":3429,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":3428,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":3425,"title":{},"body":{"components/VideoModalLauncherComponent.html":{},"coverage.html":{}}}],["launcher.component.ts:17",{"_index":3432,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:22",{"_index":3431,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:32",{"_index":3433,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.module",{"_index":1088,"title":{},"body":{"modules/ContentModule.html":{}}}],["launcher.module.ts",{"_index":3445,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher/video",{"_index":1087,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"coverage.html":{}}}],["launches",{"_index":3434,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launching",{"_index":3426,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launchreviewmodal",{"_index":2642,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launchvideomodal",{"_index":3430,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["layers",{"_index":4007,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":49,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ld",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["leading",{"_index":1980,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["leak",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["left.px",{"_index":990,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["left.svg",{"_index":1147,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["leftmargin",{"_index":983,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["leftsidebarcomponent",{"_index":499,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leftsidebarmodule",{"_index":544,"title":{"modules/LeftSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["length",{"_index":2980,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["level",{"_index":3357,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["levels",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":4173,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4170,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["library/assets/body4mesh_1338.glb",{"_index":2841,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["license",{"_index":4126,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["light",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["lighter",{"_index":1351,"title":{},"body":{"components/HeaderComponent.html":{}}}],["limit",{"_index":70,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":4140,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3847,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":2979,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["line",{"_index":125,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["link",{"_index":1352,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["linkage",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":3604,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":2748,"title":{},"body":{"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"changelog.html":{}}}],["list'},{'name",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["list.component",{"_index":3163,"title":{},"body":{"modules/TagListModule.html":{}}}],["list.component.html",{"_index":3131,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.scss",{"_index":3130,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts",{"_index":3128,"title":{},"body":{"components/TagListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":3138,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:23",{"_index":3136,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:28",{"_index":3137,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:33",{"_index":3135,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:49",{"_index":3145,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:53",{"_index":3143,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:62",{"_index":3139,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.module",{"_index":2768,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["list.module.ts",{"_index":3160,"title":{},"body":{"modules/TagListModule.html":{}}}],["list/tag",{"_index":2767,"title":{},"body":{"modules/RightSidebarModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"coverage.html":{}}}],["listen",{"_index":1848,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1575,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listeners",{"_index":786,"title":{},"body":{"components/ContainerComponent.html":{}}}],["listens",{"_index":3040,"title":{},"body":{"components/StageNavComponent.html":{}}}],["literal",{"_index":1326,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ReferenceDataStateModel.html":{},"dependencies.html":{}}}],["little",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1158,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1159,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":50,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["loaded",{"_index":1117,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loaders.gl/core",{"_index":4010,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":4012,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":4013,"title":{},"body":{"dependencies.html":{}}}],["loads",{"_index":3405,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["loadyoutubeplayerapi",{"_index":3401,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["local",{"_index":2503,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["located",{"_index":1506,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":3349,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["lodash",{"_index":1929,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["log",{"_index":4114,"title":{},"body":{"index.html":{}}}],["logger",{"_index":3121,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":1488,"title":{},"body":{"classes/InitializationState.html":{}}}],["logo",{"_index":1362,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["longer",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1241,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["looks",{"_index":2201,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lookup",{"_index":2162,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lowerbound",{"_index":2880,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lowerbound[i",{"_index":2889,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lru",{"_index":4057,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":4014,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1160,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lung.svg",{"_index":1161,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1162,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":3001,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["made",{"_index":2286,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"changelog.html":{}}}],["main",{"_index":754,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["major",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":2171,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["makes",{"_index":3485,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["making",{"_index":1742,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["male",{"_index":1330,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["managed",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["managers",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["manages",{"_index":3316,"title":{},"body":{"injectables/ThemingService.html":{}}}],["manually",{"_index":1641,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["map",{"_index":114,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagSearchComponent.html":{}}}],["map(([_viewtype",{"_index":2955,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([anatomicalstructures",{"_index":2907,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([entities",{"_index":137,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["map(([haschanges",{"_index":2297,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["map(([local",{"_index":2502,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["map(([nodes",{"_index":2925,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([organ",{"_index":1761,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(([organiri",{"_index":2932,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([page",{"_index":2490,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["map(([placement",{"_index":2895,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([rotation",{"_index":2900,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((item",{"_index":2543,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((node",{"_index":2917,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((set",{"_index":2079,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map((side",{"_index":2968,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(basehref",{"_index":2177,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["map(def",{"_index":1392,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["map(dims",{"_index":898,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(node",{"_index":2972,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(organ",{"_index":1770,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(p",{"_index":924,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(sex",{"_index":1775,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["map(side",{"_index":1778,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(this.truncateresults",{"_index":3280,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["map(type",{"_index":917,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(value",{"_index":2272,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["mapping",{"_index":3232,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["mapto",{"_index":1933,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["mapto(undefined",{"_index":1986,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["march",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":969,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":1485,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":4064,"title":{},"body":{"dependencies.html":{}}}],["marrow",{"_index":1139,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1140,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":1307,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["mat.transformaspoint",{"_index":2881,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat.transformaspoint([1",{"_index":2883,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat_dialog_data",{"_index":2713,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["mat_form_field_default_options",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":1662,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationContentModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["match",{"_index":1998,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["matcheckboxmodule",{"_index":3304,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["matches",{"_index":184,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["matches.length",{"_index":190,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matches.map((as",{"_index":191,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matching",{"_index":75,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":3161,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["matdialog",{"_index":2381,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matdialogmodule",{"_index":2404,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["matdialogref",{"_index":2329,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["matdividermodule",{"_index":1817,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["material",{"_index":1356,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matexpansionmodule",{"_index":1815,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["matformfieldmodule",{"_index":3306,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["math.floor(p.x",{"_index":925,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.y",{"_index":926,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.z",{"_index":927,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.gl/core",{"_index":2137,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["math.max(dims.x",{"_index":899,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.y",{"_index":903,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.z",{"_index":905,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(n",{"_index":2888,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.min(20",{"_index":2057,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["math.min(n",{"_index":2885,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.round(xyz.x",{"_index":2631,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.y",{"_index":2632,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.z",{"_index":2633,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["maticonmodule",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["maticonregistry",{"_index":1376,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":738,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["matradiomodule",{"_index":3091,"title":{},"body":{"modules/StageNavModule.html":{}}}],["matripplemodule",{"_index":740,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["matrix",{"_index":2187,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix.transformaspoint",{"_index":2193,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix4",{"_index":2135,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["matrix4(matrix4.identity",{"_index":2189,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).rotatey(toradians(rotation)).multiplyright(n.transformmatrix",{"_index":2902,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).scale([2",{"_index":2843,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(model.transformmatrix",{"_index":2879,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matselectmodule",{"_index":1321,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/StageNavModule.html":{}}}],["matslidermodule",{"_index":2824,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["matslidetogglemodule",{"_index":1706,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/NameInputModule.html":{}}}],["matsnackbar",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["matsnackbarmodule",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":742,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["max",{"_index":976,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["maximum",{"_index":78,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{}}}],["mc",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["measured",{"_index":1545,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":1547,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":1537,"title":{},"body":{"classes/InitializationState.html":{}}}],["memory",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1799,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["menu'},{'name",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["menu.component",{"_index":3518,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu.component.html",{"_index":3459,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.scss",{"_index":3458,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts",{"_index":3457,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:104",{"_index":3482,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:119",{"_index":3484,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:132",{"_index":3474,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:21",{"_index":3472,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:26",{"_index":3469,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":3470,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":3471,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":3468,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:55",{"_index":3487,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:70",{"_index":3480,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:80",{"_index":3475,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:90",{"_index":3490,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.module",{"_index":1831,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["menu.module.ts",{"_index":3517,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu/visibility",{"_index":1830,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"coverage.html":{}}}],["merchantability",{"_index":4163,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4143,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":1845,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":777,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1248,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1249,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":792,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":1888,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":1875,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":773,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":758,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":836,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":1027,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["messageserviceconfig",{"_index":1847,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":2668,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["metadata",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["metadatafield",{"_index":1905,"title":{"interfaces/MetaDataField.html":{}},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["meter",{"_index":2149,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["method",{"_index":888,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":1422,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":1415,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":25,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["millimeter",{"_index":2148,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["min",{"_index":1315,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["minor",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":4086,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":4127,"title":{},"body":{"license.html":{}}}],["mm",{"_index":712,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["mock",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["modal's",{"_index":2662,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["modal'},{'name",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["modal.component",{"_index":2403,"title":{},"body":{"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["modal.component.html",{"_index":2378,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.scss",{"_index":2701,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts",{"_index":2376,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:15",{"_index":3403,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:21",{"_index":2382,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:22",{"_index":3413,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:23",{"_index":3412,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:26",{"_index":2708,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:29",{"_index":2386,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:30",{"_index":2712,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:35",{"_index":2704,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:37",{"_index":2383,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:44",{"_index":2711,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:45",{"_index":2710,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:46",{"_index":3404,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:54",{"_index":2385,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{}}}],["modal.module",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"modules/ReviewButtonModule.html":{}}}],["modal.module.ts",{"_index":2402,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["modal.wrapper",{"_index":3424,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal/registration",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["modal/review",{"_index":2673,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"coverage.html":{}}}],["modal/video",{"_index":1086,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"coverage.html":{}}}],["modalclosed",{"_index":1726,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["mode",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["model",{"_index":22,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["model.blocksize.x.tofixed(3",{"_index":2600,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.y.tofixed(3",{"_index":2602,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.z.tofixed(3",{"_index":2604,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.label",{"_index":2586,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organ.name",{"_index":2551,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organ.organ",{"_index":2552,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organ.src",{"_index":2550,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organiri",{"_index":2608,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.position.x.tofixed(3",{"_index":2625,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.position.y.tofixed(3",{"_index":2627,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.position.z.tofixed(3",{"_index":2629,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.representation_of",{"_index":150,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model.rotation.x.tofixed(3",{"_index":2616,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.y.tofixed(3",{"_index":2618,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.z.tofixed(3",{"_index":2620,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.numslices",{"_index":2598,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.thickness",{"_index":2596,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.snapshot",{"_index":2557,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.tooltip",{"_index":157,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model/model.state",{"_index":119,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["modelchanged",{"_index":1973,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/anatomical",{"_index":118,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["models/extraction",{"_index":1940,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/meta",{"_index":2483,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["models/visibility",{"_index":1941,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["modelstate",{"_index":88,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modelstatemodel",{"_index":1908,"title":{"interfaces/ModelStateModel.html":{}},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["modification",{"_index":2475,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["modify",{"_index":4142,"title":{},"body":{"license.html":{}}}],["module",{"_index":533,"title":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{}}}],["modules",{"_index":535,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/content/content.module",{"_index":577,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/header/header.module",{"_index":578,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/left",{"_index":579,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/registration",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/right",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["monorepo",{"_index":4094,"title":{},"body":{"index.html":{}}}],["more",{"_index":1283,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":3478,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseevent",{"_index":2341,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["mouseout",{"_index":3461,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover",{"_index":3462,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover(item",{"_index":3479,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1097,"title":{},"body":{"modules/CoreModule.html":{}}}],["moved",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["moz",{"_index":715,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ms",{"_index":3248,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1004,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":1037,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.drawers",{"_index":1031,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.opened",{"_index":3387,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":1029,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":1035,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["much",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":3314,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":4095,"title":{},"body":{"index.html":{}}}],["n",{"_index":941,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["n3",{"_index":4059,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name(value",{"_index":2118,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["name.endswith(info.organ",{"_index":2219,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["name_input",{"_index":2123,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["namechange",{"_index":2098,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["nameinputcomponent",{"_index":501,"title":{"components/NameInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameinputmodule",{"_index":1811,"title":{"modules/NameInputModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules.html":{},"overview.html":{}}}],["namematches(organname",{"_index":2019,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["names",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["namespace",{"_index":1126,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["namevalid",{"_index":2323,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["nan",{"_index":1956,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["narrow",{"_index":922,"title":{},"body":{"components/ContentComponent.html":{}}}],["native",{"_index":2565,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{}}}],["nav",{"_index":3013,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav'},{'name",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["nav.component",{"_index":3093,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav.component.html",{"_index":3015,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.scss",{"_index":3014,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts",{"_index":3009,"title":{},"body":{"components/StageNavComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["nav.component.ts:109",{"_index":3049,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:19",{"_index":3038,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:23",{"_index":3031,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:29",{"_index":3029,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:32",{"_index":3035,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:35",{"_index":3036,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:38",{"_index":3037,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:41",{"_index":3053,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:44",{"_index":3055,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:47",{"_index":3050,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:50",{"_index":3051,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:53",{"_index":3058,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:58",{"_index":3062,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:60",{"_index":3028,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:76",{"_index":3039,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:91",{"_index":3046,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.module",{"_index":1085,"title":{},"body":{"modules/ContentModule.html":{}}}],["nav.module.ts",{"_index":3090,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav/stage",{"_index":1084,"title":{},"body":{"modules/ContentModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["navigation",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":2655,"title":{},"body":{"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1121,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{}}}],["needed",{"_index":2981,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["needs",{"_index":782,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["network",{"_index":4118,"title":{},"body":{"index.html":{}}}],["neuron",{"_index":1165,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neuron.svg",{"_index":1166,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":829,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":141,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newplacement",{"_index":2195,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.x_translation",{"_index":2198,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.y_translation",{"_index":2199,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.z_translation",{"_index":2200,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newposition",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["newrotation",{"_index":2789,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["newstructures",{"_index":2055,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["next",{"_index":124,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":1874,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ng",{"_index":1296,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ng5",{"_index":4061,"title":{},"body":{"dependencies.html":{}}}],["ngacceptinputtype_expanded",{"_index":1611,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":1610,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":1609,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":767,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["ngonchanges",{"_index":2643,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ngondestroy",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["ngoninit",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["ngx",{"_index":668,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs",{"_index":107,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":3098,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":3101,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":110,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs/store/operators",{"_index":2265,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":17,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":3095,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":3110,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1378,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsimmutabledatarepository",{"_index":1923,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsloggerpluginmodule",{"_index":3097,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":3122,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":3102,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":3111,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":29,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsstoragepluginmodule",{"_index":3100,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":3119,"title":{},"body":{"modules/StoreModule.html":{}}}],["nih",{"_index":4123,"title":{},"body":{"index.html":{}}}],["node",{"_index":3275,"title":{},"body":{"components/TagSearchComponent.html":{},"dependencies.html":{}}}],["node.representation_of",{"_index":2916,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodecollisions",{"_index":2831,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodedragevent",{"_index":881,"title":{},"body":{"components/ContentComponent.html":{}}}],["nodes",{"_index":1163,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["nodes.filter((model",{"_index":2927,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.map(n",{"_index":2901,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.svg",{"_index":1164,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["noninfringement",{"_index":4167,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":641,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normalizeplacement",{"_index":2307,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["normalizeplacement(place",{"_index":2183,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["not(.cdk",{"_index":2812,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["not(:last",{"_index":725,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["note",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":2343,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["notice",{"_index":3780,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":3081,"title":{},"body":{"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["null",{"_index":1387,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["null)?.getcontainerelement",{"_index":3364,"title":{},"body":{"injectables/ThemingService.html":{}}}],["nullish",{"_index":2208,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["number",{"_index":71,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(value.slice(0",{"_index":1551,"title":{},"body":{"classes/InitializationState.html":{}}}],["numbersonlymodule",{"_index":3007,"title":{},"body":{"modules/SlicesInputModule.html":{}}}],["numeric",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["numslices",{"_index":1950,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["o.id",{"_index":2017,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.organ.tolowercase",{"_index":2020,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.side",{"_index":2018,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["obj",{"_index":3150,"title":{},"body":{"components/TagListComponent.html":{}}}],["object",{"_index":1115,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["object.entries(entities).foreach(([id",{"_index":144,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["object.keys(db.organirilookup).find((code",{"_index":2211,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["object.keys(this.initialstate",{"_index":1975,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["object.values(aslookup",{"_index":2077,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["object.values(this.checkedresults).some(v",{"_index":3260,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["objects",{"_index":659,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["observable",{"_index":96,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["observableinput",{"_index":82,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/TagSearchComponent.html":{}}}],["observables",{"_index":3237,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["obtaining",{"_index":4136,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1039,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["offsets",{"_index":2742,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["old",{"_index":4108,"title":{},"body":{"index.html":{}}}],["oldposition",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.x",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.y",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.z",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["once",{"_index":1110,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2639,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ondestroy",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["one",{"_index":1284,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["online",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["onorganirichange",{"_index":2060,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ontological",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["ontology/ccf",{"_index":2583,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ontologyid",{"_index":1328,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["opacities",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":965,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":1828,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["open",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":1528,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["openapi",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["opendialog",{"_index":2379,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["opened",{"_index":1010,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":1515,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":1471,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":1523,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":1472,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":1568,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening/closing/expanding",{"_index":1489,"title":{},"body":{"classes/InitializationState.html":{}}}],["openresults",{"_index":3180,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["opens",{"_index":1557,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/TagSearchComponent.html":{}}}],["opposite",{"_index":1476,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["optimization",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1682,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1274,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["options:first",{"_index":1305,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["options:last",{"_index":1306,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["optionsel",{"_index":3027,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsel.contains(target",{"_index":3069,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsref",{"_index":3019,"title":{},"body":{"components/StageNavComponent.html":{}}}],["ordering",{"_index":1946,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["organ.name",{"_index":2039,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.side",{"_index":2040,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.src",{"_index":2394,"title":{},"body":{"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organ.touppercase",{"_index":2204,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organ?.name",{"_index":1762,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["organconfig.name.tolowercase",{"_index":1993,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organconfig.ontologyid",{"_index":1996,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organconfig.sex?.tolowercase",{"_index":2002,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organconfig.side",{"_index":1995,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdata",{"_index":2130,"title":{"interfaces/OrganData.html":{}},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{}}}],["organdimensions",{"_index":943,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.x",{"_index":946,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.y",{"_index":947,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z",{"_index":2088,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z].map(n",{"_index":948,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organinfo",{"_index":1920,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo.sex",{"_index":2206,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.sex",{"_index":2205,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.side?.tolowercase",{"_index":2003,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo?.side].join('|').touppercase",{"_index":2210,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organiri",{"_index":1914,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organirilookup",{"_index":2161,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organlist",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/User.html":{}}}],["organname",{"_index":1992,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organs",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["organselect",{"_index":2327,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselect(organ",{"_index":2338,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselected",{"_index":1716,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["organselector.expanded",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["organselectormodule",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"modules/RegistrationContentModule.html":{}}}],["organside",{"_index":1994,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organspatialentities",{"_index":2163,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["orthographic",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["ot",{"_index":1122,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["ot2od026671",{"_index":4125,"title":{},"body":{"index.html":{}}}],["other.expanded",{"_index":1597,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":1598,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":1603,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":1601,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":1600,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":1599,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":1602,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherwise",{"_index":896,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"license.html":{}}}],["out",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":3295,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["output",{"_index":666,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outputs",{"_index":704,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outside",{"_index":2785,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ovaries",{"_index":1167,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1168,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1169,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":3481,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["overflow",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["overlay",{"_index":1313,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["overlaycontainer",{"_index":3345,"title":{},"body":{"injectables/ThemingService.html":{}}}],["overlays",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":2443,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["overview",{"_index":4181,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owning",{"_index":3372,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":2144,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["p.target",{"_index":2937,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.translation_units",{"_index":2146,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_rotation",{"_index":2153,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_scaling",{"_index":2156,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_translation",{"_index":2150,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_rotation",{"_index":2154,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.y_scaling",{"_index":2157,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_translation",{"_index":2151,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_rotation].map(toradians",{"_index":2155,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_scaling",{"_index":2158,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.z_translation].map((n",{"_index":2940,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_translation].map(t",{"_index":2152,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["package",{"_index":3576,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["padding/margin/height",{"_index":3293,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["page",{"_index":23,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["page.registrationcallbackset",{"_index":2570,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.registrationcallbackset$.subscribe((callbackset",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["page.registrationstarted$.subscribe((registrationstarted",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["page.user.firstname",{"_index":2548,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.lastname",{"_index":2549,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page/page.state",{"_index":120,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["pages",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["pagestate",{"_index":91,"title":{"injectables/PageState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagestatemodel",{"_index":2269,"title":{"interfaces/PageStateModel.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["pair",{"_index":1605,"title":{},"body":{"classes/InitializationState.html":{}}}],["paired",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["pancreas",{"_index":1170,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1171,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1314,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"changelog.html":{}}}],["panel",{"_index":1240,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagSearchComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":2685,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["param",{"_index":160,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":1484,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":1849,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["parent.messages.pipe(takewhile",{"_index":1881,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":651,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsed",{"_index":1632,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parsedjson",{"_index":1621,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parser",{"_index":4024,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":3126,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{}}}],["particular",{"_index":4165,"title":{},"body":{"license.html":{}}}],["partly",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":1427,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":1432,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":1431,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":1430,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":1429,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["pass",{"_index":2048,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["passed",{"_index":1749,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["passing",{"_index":1755,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["patch",{"_index":2264,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["patch(name",{"_index":2289,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["patchplacement",{"_index":2185,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["patchplacement.target",{"_index":2197,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["path",{"_index":4045,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":1060,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":2847,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pelvis",{"_index":1172,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":1949,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["performance",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":4131,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4150,"title":{},"body":{"license.html":{}}}],["person",{"_index":2268,"title":{"interfaces/Person.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"coverage.html":{},"license.html":{}}}],["persons",{"_index":4151,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2245,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{}}}],["piece",{"_index":3211,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["pipe",{"_index":2894,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pipe(filter(s",{"_index":2293,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["pipe(mergeall",{"_index":1883,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["place",{"_index":2196,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.x_rotation",{"_index":2529,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.x_translation",{"_index":2190,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.y_rotation",{"_index":2530,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.y_translation",{"_index":2191,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.z_rotation",{"_index":2531,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.z_translation",{"_index":2192,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["placed",{"_index":3109,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":1637,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagSearchComponent.html":{},"changelog.html":{}}}],["placement",{"_index":2143,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["placement.length",{"_index":2924,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placement_date",{"_index":2609,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["placementcube",{"_index":2833,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placementpatches",{"_index":2166,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["play",{"_index":3441,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["play_circle_outline",{"_index":3438,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["player",{"_index":3407,"title":{},"body":{"components/VideoModalComponent.html":{},"modules/VideoModalModule.html":{},"dependencies.html":{}}}],["pluck",{"_index":1934,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["pluckunique",{"_index":2266,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["plugin",{"_index":3099,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":3118,"title":{},"body":{"modules/StoreModule.html":{}}}],["pluralizing",{"_index":3233,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["pointer",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["populated",{"_index":2214,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["popup",{"_index":3042,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["portal",{"_index":1360,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":4158,"title":{},"body":{"license.html":{}}}],["position",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":1511,"title":{},"body":{"classes/InitializationState.html":{}}}],["position.x",{"_index":955,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["position.x.tofixed(1)}_${position.y.tofixed(1)}_${position.z.tofixed(1",{"_index":2026,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["position.y",{"_index":2194,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.z",{"_index":953,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["position.z].map((n",{"_index":2960,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["positions",{"_index":791,"title":{},"body":{"components/ContainerComponent.html":{}}}],["possible",{"_index":1919,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["posterior",{"_index":954,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["potential",{"_index":2202,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["pre",{"_index":3520,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["preclose",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["preferences",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["preserved",{"_index":3216,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["pressed",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["prev",{"_index":3284,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["prev[id",{"_index":3287,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["prevent",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":1740,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["previousitems",{"_index":2050,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previousitems.map(structure",{"_index":2056,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previously",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["previousregistrationnodes",{"_index":2832,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations",{"_index":2418,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations.map((entity",{"_index":2933,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousvisibility",{"_index":1773,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["previousvisibilityitems",{"_index":1717,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["prevnodes",{"_index":2896,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["private",{"_index":20,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":1003,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processed",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":779,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["processing",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":3586,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2666,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["projected",{"_index":787,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects",{"_index":4096,"title":{},"body":{"index.html":{}}}],["projects/.../anatomical",{"_index":4192,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../app",{"_index":4187,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../block",{"_index":4196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../config.ts",{"_index":4090,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../container.component.ts",{"_index":4091,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../default",{"_index":4197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../drawer.component.ts",{"_index":4189,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":4202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../messages.ts",{"_index":4188,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../meta",{"_index":4190,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../model.state.ts",{"_index":4193,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../reference",{"_index":4088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../rotation",{"_index":4198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../scene.state.ts",{"_index":4089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../slices",{"_index":4200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../stage",{"_index":4191,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":4203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tag",{"_index":4199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../theming.service.ts",{"_index":4201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":1459,"title":{},"body":{"classes/InitializationState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["promise(r",{"_index":2535,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["promise(resolve",{"_index":1456,"title":{},"body":{"classes/InitializationState.html":{}}}],["properties",{"_index":19,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["property",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["prostate",{"_index":1175,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1176,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":589,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":799,"title":{},"body":{"components/ContainerComponent.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":1853,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{},"changelog.html":{}}}],["providing",{"_index":979,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["public",{"_index":2321,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"changelog.html":{}}}],["publish",{"_index":4144,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":4166,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":915,"title":{},"body":{"components/ContentComponent.html":{},"components/JsonFileReaderComponent.html":{}}}],["push",{"_index":2387,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["pushed",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1503,"title":{},"body":{"classes/InitializationState.html":{}}}],["python",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["q",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["qs",{"_index":4067,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":935,"title":{},"body":{"components/ContentComponent.html":{},"dependencies.html":{}}}],["query",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":795,"title":{},"body":{"components/ContainerComponent.html":{}}}],["quickly",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":1735,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["radius",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ratio",{"_index":2614,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rc.1",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":4069,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":4018,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":4070,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2129,"title":{},"body":{"modules/NameInputModule.html":{},"modules/TagSearchModule.html":{}}}],["read",{"_index":3229,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["readable",{"_index":4072,"title":{},"body":{"dependencies.html":{}}}],["reader",{"_index":1615,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader'},{'name",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reader.component",{"_index":1661,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader.component.html",{"_index":1617,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.scss",{"_index":1616,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts",{"_index":1614,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"coverage.html":{}}}],["reader.component.ts:12",{"_index":1629,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:14",{"_index":1640,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:17",{"_index":1624,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:20",{"_index":1622,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:33",{"_index":1633,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:43",{"_index":1631,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.module",{"_index":1835,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["reader.module.ts",{"_index":1660,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader/json",{"_index":1613,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["readonly",{"_index":161,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["real",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":3107,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":993,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":1855,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":1325,"title":{},"body":{"interfaces/GlobalConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagSearchComponent.html":{}}}],["rectify",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["reduce((acc",{"_index":2919,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["refdata",{"_index":2409,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reference",{"_index":90,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["referencedata",{"_index":1987,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["referencedatastate",{"_index":1942,"title":{"injectables/ReferenceDataState.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["referencedatastatemodel",{"_index":2160,"title":{"interfaces/ReferenceDataStateModel.html":{}},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{}}}],["referenceorgannodes",{"_index":2829,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["referenceorgansimplenodes",{"_index":2830,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":1014,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["refernced",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":713,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["refreshblocksize",{"_index":701,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["refreshes",{"_index":700,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["refreshslices",{"_index":2989,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["reg",{"_index":2434,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["reg.creator_first_name",{"_index":2517,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_last_name",{"_index":2518,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.placement",{"_index":2514,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.placement[0",{"_index":2513,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_count",{"_index":2534,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_thickness",{"_index":2533,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.x_dimension",{"_index":2525,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.y_dimension",{"_index":2526,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["reg.z_dimension",{"_index":2527,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["regions",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":612,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["register(usecallback",{"_index":2438,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["register/download",{"_index":2444,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registerbuttonclick",{"_index":2328,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerbuttonclick(event",{"_index":2340,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerdata",{"_index":2646,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registered",{"_index":1131,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1410,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":1407,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":1437,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":1411,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1373,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registers",{"_index":1405,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registration",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["registration.registrations",{"_index":3120,"title":{},"body":{"modules/StoreModule.html":{}}}],["registration/registration.state",{"_index":2875,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["registrationcallback",{"_index":629,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["registrationcallback?.(json",{"_index":2561,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registrationcallbackset",{"_index":2224,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["registrationcontentcomponent",{"_index":502,"title":{"components/RegistrationContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationcontentmodule",{"_index":2369,"title":{"modules/RegistrationContentModule.html":{}},"body":{"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules.html":{},"overview.html":{}}}],["registrationisvalid",{"_index":2644,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registrationmodalcomponent",{"_index":503,"title":{"components/RegistrationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationmodalmodule",{"_index":545,"title":{"modules/RegistrationModalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RegistrationModalModule.html":{},"modules.html":{},"overview.html":{}}}],["registrations",{"_index":2407,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["registrationstarted",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/User.html":{}}}],["registrationstate",{"_index":875,"title":{"injectables/RegistrationState.html":{}},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registrationstated",{"_index":2252,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["registrationstatemodel",{"_index":2485,"title":{"interfaces/RegistrationStateModel.html":{}},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["registry",{"_index":1383,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":3103,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1372,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["registry.state.ts:127",{"_index":1443,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:147",{"_index":1441,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:45",{"_index":1439,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:58",{"_index":1444,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:87",{"_index":1445,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:97",{"_index":1446,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1113,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1371,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["registry[methodname",{"_index":1417,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regs",{"_index":2495,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["related",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/TagSearchComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":1757,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["reliability",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["removable",{"_index":3129,"title":{},"body":{"components/TagListComponent.html":{}}}],["remove",{"_index":3141,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{}}}],["removeclass",{"_index":3366,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":143,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{}}}],["removed.add(id",{"_index":146,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removed.has(iri",{"_index":151,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removeeventlistener('beforeunload",{"_index":2303,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["removes",{"_index":3140,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["removetag",{"_index":30,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/TagListComponent.html":{}}}],["removetag(tag",{"_index":66,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["renderer",{"_index":3360,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":3347,"title":{},"body":{"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["renderer[methodname](overlay",{"_index":3368,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":3367,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":3012,"title":{},"body":{"components/StageNavComponent.html":{}}}],["renders",{"_index":1209,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["repeat",{"_index":1364,"title":{},"body":{"components/HeaderComponent.html":{}}}],["replaysubject",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["replaysubject(1",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["repository",{"_index":4093,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2455,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["required",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["requiredvalues",{"_index":2547,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["requiredvalues.every(value",{"_index":2553,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["researcher's",{"_index":2093,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["reset",{"_index":548,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["resetitem",{"_index":3463,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["resetrotation",{"_index":2800,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["resets",{"_index":3203,"title":{},"body":{"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["resetstage",{"_index":873,"title":{},"body":{"components/ContentComponent.html":{}}}],["resettheme",{"_index":3321,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resize",{"_index":885,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor",{"_index":929,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor(this.rootref.nativeelement",{"_index":940,"title":{},"body":{"components/ContentComponent.html":{}}}],["resolve",{"_index":1452,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolved",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["resolver",{"_index":1397,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["resolves",{"_index":810,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["respond",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":3477,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["restriction",{"_index":4139,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.label",{"_index":3289,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["result.results",{"_index":3281,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["result.results.reduce((acc",{"_index":3285,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["results",{"_index":80,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultsvisible",{"_index":3173,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["retracted",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":134,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["returned",{"_index":79,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagSearchComponent.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":1205,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reverted",{"_index":3488,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["review",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["review/review",{"_index":2771,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["review_button",{"_index":2682,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewbuttoncomponent",{"_index":505,"title":{"components/ReviewButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewbuttonmodule",{"_index":2693,"title":{"modules/ReviewButtonModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewing",{"_index":2700,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["reviewmodal",{"_index":2638,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewmodalcomponent",{"_index":508,"title":{"components/ReviewModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewmodaldata",{"_index":2703,"title":{"interfaces/ReviewModalData.html":{}},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"coverage.html":{}}}],["reviewmodalmodule",{"_index":2698,"title":{"modules/ReviewModalModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules.html":{},"overview.html":{}}}],["rgb",{"_index":4050,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["right.px",{"_index":991,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["right.svg",{"_index":1148,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":984,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rights",{"_index":4141,"title":{},"body":{"license.html":{}}}],["rightsidebarcomponent",{"_index":509,"title":{"components/RightSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rightsidebarmodule",{"_index":546,"title":{"modules/RightSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["root",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["root_states",{"_index":3105,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootref",{"_index":876,"title":{},"body":{"components/ContentComponent.html":{}}}],["rotatednodes",{"_index":2828,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotates",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["rotatexyz([p.x_rotation",{"_index":2942,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotatexyz([rotation.x",{"_index":2961,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation",{"_index":511,"title":{"interfaces/Rotation.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotation.x",{"_index":2808,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.y",{"_index":2809,"title":{},"body":{"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.z",{"_index":2810,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.z].map(toradians",{"_index":2962,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation_order",{"_index":2621,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rotation_slider",{"_index":2795,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotation_units",{"_index":2622,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rotationchange",{"_index":2787,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotations",{"_index":2798,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotationslidercomponent",{"_index":510,"title":{"components/RotationSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rotationslidermodule",{"_index":2756,"title":{"modules/RotationSliderModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["round",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":3995,"title":{},"body":{"dependencies.html":{}}}],["ru/common/entity",{"_index":103,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ru/common/typings",{"_index":2134,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rui",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"changelog.html":{},"index.html":{}}}],["rui/src/app/app",{"_index":602,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/app.component.ts",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["rui/src/app/app.component.ts:100",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:118",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:128",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:167",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:178",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:35",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:38",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:41",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:44",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:46",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:50",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:51",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:53",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:54",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:55",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:57",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:59",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:61",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:64",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.module.ts",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["rui/src/app/app.module.ts:58",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["rui/src/app/core/core.module.ts",{"_index":1093,"title":{},"body":{"modules/CoreModule.html":{}}}],["rui/src/app/core/models/anatomical",{"_index":3123,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/core/models/documentation.ts",{"_index":1236,"title":{},"body":{"interfaces/DocumentationContent.html":{},"coverage.html":{}}}],["rui/src/app/core/models/extraction",{"_index":1254,"title":{},"body":{"interfaces/ExtractionSet.html":{},"coverage.html":{}}}],["rui/src/app/core/models/meta",{"_index":1906,"title":{},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/core/models/visibility",{"_index":3453,"title":{},"body":{"interfaces/VisibilityItem.html":{},"coverage.html":{}}}],["rui/src/app/core/services/config/config.module.ts",{"_index":746,"title":{},"body":{"modules/ConfigModule.html":{}}}],["rui/src/app/core/services/config/config.ts",{"_index":1324,"title":{},"body":{"interfaces/GlobalConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/services/theming/theming.module.ts",{"_index":3310,"title":{},"body":{"modules/ThemingModule.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts",{"_index":3315,"title":{},"body":{"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:13",{"_index":3342,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:14",{"_index":3343,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:16",{"_index":3341,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:18",{"_index":3344,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:21",{"_index":3331,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:25",{"_index":3324,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:39",{"_index":3328,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:48",{"_index":3340,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:60",{"_index":3338,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:71",{"_index":3336,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:83",{"_index":3326,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/store/anatomical",{"_index":7,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["rui/src/app/core/store/icon",{"_index":1112,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/model/model.state.ts",{"_index":1909,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/page/page.state.ts",{"_index":2222,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"coverage.html":{}}}],["rui/src/app/core/store/page/page.state.ts:110",{"_index":2236,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:125",{"_index":2243,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:135",{"_index":2246,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:145",{"_index":2240,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:152",{"_index":2241,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:162",{"_index":2237,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:168",{"_index":2238,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:56",{"_index":2256,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:58",{"_index":2251,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:59",{"_index":2254,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:60",{"_index":2249,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:63",{"_index":2258,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:68",{"_index":2260,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:76",{"_index":2262,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:78",{"_index":2235,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:94",{"_index":2239,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/reference",{"_index":2131,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts",{"_index":2406,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:102",{"_index":2473,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:107",{"_index":2459,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:110",{"_index":2458,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:113",{"_index":2460,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:116",{"_index":2422,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:134",{"_index":2437,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:157",{"_index":2433,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:200",{"_index":2450,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:210",{"_index":2447,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:220",{"_index":2424,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:226",{"_index":2436,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:239",{"_index":2477,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:248",{"_index":2439,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:283",{"_index":2430,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:317",{"_index":2426,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:370",{"_index":2452,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:52",{"_index":2457,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:56",{"_index":2462,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:64",{"_index":2464,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:71",{"_index":2466,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:81",{"_index":2468,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts:96",{"_index":2470,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts",{"_index":2826,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:118",{"_index":2863,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:129",{"_index":2865,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:157",{"_index":2867,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:164",{"_index":2868,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:182",{"_index":2870,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:204",{"_index":2850,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:221",{"_index":2851,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:222",{"_index":2852,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:223",{"_index":2834,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:239",{"_index":2837,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:249",{"_index":2836,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:52",{"_index":2854,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:63",{"_index":2856,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:80",{"_index":2858,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:90",{"_index":2861,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/store.module.ts",{"_index":3094,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/modules/content/content.component.ts",{"_index":863,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["rui/src/app/modules/content/content.component.ts:106",{"_index":893,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:113",{"_index":887,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:119",{"_index":882,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:26",{"_index":879,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:28",{"_index":928,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:33",{"_index":918,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:37",{"_index":909,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:48",{"_index":919,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:53",{"_index":910,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:58",{"_index":931,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:61",{"_index":877,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:84",{"_index":886,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:97",{"_index":883,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.module.ts",{"_index":1081,"title":{},"body":{"modules/ContentModule.html":{}}}],["rui/src/app/modules/content/stage",{"_index":3008,"title":{},"body":{"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/modules/content/video",{"_index":3399,"title":{},"body":{"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/header/header.component.ts",{"_index":1337,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["rui/src/app/modules/header/header.component.ts:17",{"_index":1343,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.component.ts:19",{"_index":1342,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.component.ts:21",{"_index":1341,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.module.ts",{"_index":1368,"title":{},"body":{"modules/HeaderModule.html":{}}}],["rui/src/app/modules/left",{"_index":1709,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/registration",{"_index":2316,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/review/review",{"_index":2634,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/right",{"_index":2734,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/block",{"_index":656,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/details",{"_index":1202,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts",{"_index":753,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:105",{"_index":788,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:115",{"_index":778,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:124",{"_index":789,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":775,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":807,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":798,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":803,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":809,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":812,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":793,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:62",{"_index":771,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:83",{"_index":784,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts",{"_index":978,"title":{},"body":{"components/ContentComponent-1.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:103",{"_index":1011,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:116",{"_index":1006,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":996,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":997,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":999,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":1000,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":994,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":1013,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":992,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:60",{"_index":1005,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:70",{"_index":1002,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer.module.ts",{"_index":1247,"title":{},"body":{"modules/DrawerModule.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":1449,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":1461,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":1458,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:41",{"_index":1462,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:46",{"_index":1463,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:56",{"_index":1467,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:65",{"_index":1464,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/messages.ts",{"_index":1052,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/drawer/toggle",{"_index":3369,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/extraction",{"_index":1261,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/json",{"_index":1612,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/labeled",{"_index":1664,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/name",{"_index":2091,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/rotation",{"_index":2774,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/slices",{"_index":2974,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/tag",{"_index":3127,"title":{},"body":{"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/visibility",{"_index":3456,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/services/message/message.service.ts",{"_index":1836,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:103",{"_index":1896,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:112",{"_index":1897,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:128",{"_index":1904,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:130",{"_index":1901,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:153",{"_index":1903,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:163",{"_index":1902,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:50",{"_index":1893,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:70",{"_index":1898,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:83",{"_index":1894,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:93",{"_index":1895,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui_locations.jsonld",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["rui_organs",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ruiconfig",{"_index":1333,"title":{},"body":{"interfaces/GlobalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":783,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["runtime",{"_index":1120,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":113,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":115,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["s",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/User.html":{}}}],["safehtml",{"_index":1374,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1375,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["same",{"_index":1947,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sample",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1385,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1123,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["sanitizer",{"_index":1384,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saveas",{"_index":2479,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["saveas(data",{"_index":2566,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["saved",{"_index":2287,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["saver",{"_index":2480,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1358,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale([blocksize.x",{"_index":2963,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scale([entity.x_dimension",{"_index":2943,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scalex",{"_index":721,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scaling_units",{"_index":2613,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["scene",{"_index":24,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["scene/scene.state",{"_index":121,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"modules/StoreModule.html":{}}}],["scenegraph",{"_index":2839,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodelookup",{"_index":2164,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["scenestate",{"_index":92,"title":{"injectables/SceneState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenestatemodel",{"_index":2876,"title":{"interfaces/SceneStateModel.html":{}},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["scheduled",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["schemes",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":4119,"title":{},"body":{"index.html":{}}}],["script",{"_index":3416,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["script.src",{"_index":3419,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["scroll",{"_index":1792,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["scrollbar",{"_index":1794,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scrolling",{"_index":861,"title":{},"body":{"components/ContainerComponent.html":{}}}],["search",{"_index":77,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":520,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["search.component",{"_index":3307,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search.component.html",{"_index":3168,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.scss",{"_index":3167,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts",{"_index":3164,"title":{},"body":{"components/TagSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.component.ts:104",{"_index":3218,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:116",{"_index":3221,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:125",{"_index":3217,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:132",{"_index":3202,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:150",{"_index":3198,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:163",{"_index":3200,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:179",{"_index":3209,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:198",{"_index":3225,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:218",{"_index":3213,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:34",{"_index":3197,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:37",{"_index":3190,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:40",{"_index":3191,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:43",{"_index":3192,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:46",{"_index":3193,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:49",{"_index":3196,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:52",{"_index":3230,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:55",{"_index":3231,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:61",{"_index":3240,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:64",{"_index":3243,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:67",{"_index":3227,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:70",{"_index":3238,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.component.ts:73",{"_index":3188,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["search.module",{"_index":2770,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["search.module.ts",{"_index":3303,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search/tag",{"_index":2769,"title":{},"body":{"modules/RightSidebarModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searchcontrol",{"_index":3174,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchcontrol.reset",{"_index":3265,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searches",{"_index":74,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["searchexternal",{"_index":31,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["searchexternal(text",{"_index":68,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["searching",{"_index":3165,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchlimit",{"_index":3182,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchlimit)).pipe",{"_index":3279,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchresults",{"_index":3175,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchresults.results.filter(tag",{"_index":3262,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchresults.totalcount",{"_index":3290,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["searchthrottle",{"_index":3183,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["section",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["sections",{"_index":3000,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["see",{"_index":2334,"title":{},"body":{"components/RegistrationContentComponent.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":1310,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["selected",{"_index":1268,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["selecting",{"_index":1265,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagSearchComponent.html":{},"changelog.html":{}}}],["selection",{"_index":1679,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["selections",{"_index":3204,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["selector",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["selects",{"_index":1425,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["sell",{"_index":4148,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":772,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["sender",{"_index":1841,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":1587,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":1554,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":1891,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":1859,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1584,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sendtoggle",{"_index":1588,"title":{},"body":{"classes/InitializationState.html":{}}}],["sennet",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":870,"title":{},"body":{"components/ContentComponent.html":{}}}],["sent",{"_index":1053,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["separated",{"_index":1210,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["server",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":47,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":3351,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/config/config",{"_index":1379,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["services/config/config.module",{"_index":1099,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":1057,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1100,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":142,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{}}}],["set's",{"_index":2448,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["set(reg.ccf_annotations",{"_index":2539,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["set.label",{"_index":2080,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["set.name",{"_index":1294,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.sites.length",{"_index":1295,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.ts",{"_index":1255,"title":{},"body":{"interfaces/ExtractionSet.html":{},"coverage.html":{}}}],["setallopacity",{"_index":3464,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setallopacity(value",{"_index":3483,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setanatomicalstructures(anatomicalstructures",{"_index":2045,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setblocksize(blocksize",{"_index":2021,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setchange",{"_index":1271,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["setdisplayerrors",{"_index":2414,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["setdisplayerrors(displayerrors",{"_index":2446,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["setextractionsets(extractionsets",{"_index":2046,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setextractionsites(extractionsites",{"_index":2044,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sethaschanges",{"_index":2228,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setname(value",{"_index":2112,"title":{},"body":{"components/NameInputComponent.html":{}}}],["setorgan(organ",{"_index":2037,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setposition(position",{"_index":2023,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setrotation(rotation",{"_index":2022,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets",{"_index":785,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sets.length",{"_index":2082,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets[0].sites",{"_index":2083,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsex(sex",{"_index":2041,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsexfromlabel",{"_index":1720,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["setsexfromlabel(label",{"_index":1731,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["setshowprevious",{"_index":2049,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setshowprevious(showprevious",{"_index":2043,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setside(side",{"_index":2042,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsidefromlabel",{"_index":1721,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["setsidefromlabel(label",{"_index":1733,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["setslicesconfig(slicesconfig",{"_index":2027,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["settheme",{"_index":3322,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":3339,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":1556,"title":{},"body":{"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/ToggleButtonComponent.html":{}}}],["settimeout(r",{"_index":2536,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["setting",{"_index":2779,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/StoreModule.html":{}}}],["setup",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["setusecancelregistrationcallback",{"_index":2229,"title":{},"body":{"injectables/PageState.html":{}}}],["setusecancelregistrationcallback(use",{"_index":2242,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setusedropdownmenu(value",{"_index":3056,"title":{},"body":{"components/StageNavComponent.html":{}}}],["setuseregistrationcallback",{"_index":2415,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["setuseregistrationcallback(use",{"_index":2449,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["setusername",{"_index":2230,"title":{},"body":{"injectables/PageState.html":{}}}],["setusername(name",{"_index":2244,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setviewside(viewside",{"_index":2029,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setviewtype",{"_index":874,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(is3dview",{"_index":892,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(viewtype",{"_index":2028,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sex",{"_index":1329,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["sexbylabel",{"_index":1718,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["sexes",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["sexselected",{"_index":2324,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["shadow",{"_index":1299,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagSearchComponent.html":{}}}],["shall",{"_index":4155,"title":{},"body":{"license.html":{}}}],["shared",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"modules/RightSidebarModule.html":{},"interfaces/SlicesConfig.html":{},"modules/SlicesInputModule.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"modules/VisibilityMenuModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/User.html":{}}}],["shared/components/block",{"_index":2760,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/details",{"_index":1819,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":587,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/extraction",{"_index":1821,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/json",{"_index":1834,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/labeled",{"_index":1823,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/StageNavModule.html":{}}}],["shared/components/name",{"_index":1825,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{}}}],["shared/components/rotation",{"_index":2761,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/slices",{"_index":2764,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/tag",{"_index":2766,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/visibility",{"_index":1829,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/rxjs",{"_index":1926,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shared/web",{"_index":638,"title":{},"body":{"components/AppWebComponent.html":{}}}],["shifts",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["shortest",{"_index":4044,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":932,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["showcollisions",{"_index":2877,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["showdebugbuttons",{"_index":871,"title":{},"body":{"components/ContentComponent.html":{}}}],["showing",{"_index":2660,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["shown",{"_index":3239,"title":{},"body":{"components/TagSearchComponent.html":{},"changelog.html":{}}}],["showprevious",{"_index":1915,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shows",{"_index":911,"title":{},"body":{"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["shrink",{"_index":3509,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["side",{"_index":1015,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["sidebar",{"_index":1711,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["sidebar.component",{"_index":1833,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar.component.html",{"_index":1713,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1712,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":1710,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:110",{"_index":1738,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:123",{"_index":1753,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2737,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":2736,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":1730,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:26",{"_index":1728,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":1729,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1776,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":1779,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:39",{"_index":1771,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:43",{"_index":1763,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:52",{"_index":1764,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:58",{"_index":1772,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:60",{"_index":1727,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:76",{"_index":1747,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:89",{"_index":1732,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:98",{"_index":1736,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.module",{"_index":581,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.module.ts",{"_index":1814,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar/left",{"_index":580,"title":{},"body":{"modules/AppModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["sidebar/right",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["sidebylabel",{"_index":1719,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidechange",{"_index":3024,"title":{},"body":{"components/StageNavComponent.html":{}}}],["sides",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":2337,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["significant",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":3059,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["simplescenenodelookup",{"_index":2165,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["simplifies",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["single",{"_index":1858,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["site",{"_index":1748,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sites",{"_index":1256,"title":{},"body":{"interfaces/ExtractionSet.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["sizable",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sizes",{"_index":671,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/RightSidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["skin",{"_index":1177,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1178,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipconfirmation",{"_index":2231,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["skipself",{"_index":1096,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["skipunsavedchangesconfirmation",{"_index":613,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{}}}],["skipuntil",{"_index":1935,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["skipuntil(this.page.registrationstarted$.pipe",{"_index":2011,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["slice",{"_index":1922,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["slice(0",{"_index":194,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["slice_count",{"_index":2597,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["slice_input",{"_index":2986,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slice_thickness",{"_index":2595,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["slices",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["slicesconfig",{"_index":1916,"title":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slicesconfigchange",{"_index":2976,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slicesinputcomponent",{"_index":513,"title":{"components/SlicesInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slicesinputmodule",{"_index":2757,"title":{"modules/SlicesInputModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/SlicesInputModule.html":{},"modules.html":{},"overview.html":{}}}],["slide",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{}}}],["slide_toggle",{"_index":1695,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["slider",{"_index":1668,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["slider.component",{"_index":2823,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider.component.html",{"_index":2783,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.scss",{"_index":2784,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts",{"_index":2775,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slider.component.ts:34",{"_index":2805,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":2804,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:44",{"_index":2803,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:59",{"_index":2806,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:68",{"_index":2807,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.module",{"_index":2763,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["slider.module.ts",{"_index":2822,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider/rotation",{"_index":2762,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sliders",{"_index":1797,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slightly",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1179,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar.dismiss",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snapshot",{"_index":2283,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["snapshot.useregistrationcallback",{"_index":2560,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["software",{"_index":4097,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":1348,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["solved",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["sortby",{"_index":1928,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sortby(set.extractionsites.map((entity",{"_index":2081,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["sources",{"_index":1871,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["sources.includes(msg.source",{"_index":1873,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":963,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["spacer",{"_index":3292,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["sparc",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["spatial",{"_index":2859,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialentity",{"_index":2084,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.x_dimension",{"_index":2086,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.y_dimension",{"_index":2087,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.z_dimension",{"_index":2089,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentityjsonld",{"_index":621,"title":{},"body":{"components/AppWebComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialplacement",{"_index":2607,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["spatialplacementjsonld",{"_index":2138,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["spatialscenenode",{"_index":2139,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spec",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["specific",{"_index":1072,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["specified",{"_index":1870,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["specifying",{"_index":1852,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1180,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1181,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["sprint",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1954,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["stage",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["stage_nav",{"_index":3071,"title":{},"body":{"components/StageNavComponent.html":{}}}],["stagenavcomponent",{"_index":515,"title":{"components/StageNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stagenavmodule",{"_index":1079,"title":{"modules/StageNavModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["staging",{"_index":3587,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["stamp",{"_index":2577,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["standalone",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":593,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["standards",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":4101,"title":{},"body":{"index.html":{}}}],["start",{"_index":827,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":1044,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["start?.opened",{"_index":1043,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["startdrawers",{"_index":850,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":854,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":858,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":2013,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["startexpanded",{"_index":1042,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["starts",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":1118,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/RegistrationModalComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":816,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["state",{"_index":15,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["state$.pipe(pluck('registrations",{"_index":2496,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["state('closed",{"_index":1495,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":1500,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":1504,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":1023,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state('full",{"_index":1505,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":1501,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('open",{"_index":1494,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":1024,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state.organspatialentities[iri",{"_index":2217,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["statechange",{"_index":1527,"title":{},"body":{"classes/InitializationState.html":{}}}],["statements",{"_index":3933,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":106,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["states",{"_index":165,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent-1.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":1608,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{}}}],["stay",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["stomach",{"_index":1182,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1183,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":974,"title":{},"body":{"components/ContentComponent.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1101,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored",{"_index":2776,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["storedebugmodule",{"_index":1083,"title":{},"body":{"modules/ContentModule.html":{}}}],["storemodule",{"_index":1091,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":3106,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":4073,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":4071,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":69,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":1208,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["structure",{"_index":8,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["structure.opacity",{"_index":2058,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["structures",{"_index":1744,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["strvalue",{"_index":2983,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["style",{"_index":1019,"title":{},"body":{"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/VisibilityToggleComponent.html":{}}}],["style.margin",{"_index":989,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["styled",{"_index":2651,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["styles",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":1550,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["styling",{"_index":1638,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"changelog.html":{}}}],["sub",{"_index":1071,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":1843,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagSearchComponent.html":{},"license.html":{}}}],["sublicense",{"_index":4146,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2009,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["subscribe(result",{"_index":3254,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["subscribe(updateskipconfirmation",{"_index":2294,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["subscription",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["subscriptions",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["substantial",{"_index":4157,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1406,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["suffix",{"_index":3002,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["suffix.show",{"_index":3003,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["super",{"_index":162,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["super(configstore",{"_index":644,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super.ngxsoninit",{"_index":163,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["support",{"_index":3548,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1127,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swiper",{"_index":4077,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["switched",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":1936,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap(data",{"_index":2182,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["switchmap(fetch",{"_index":2499,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["switchmap(organconfig",{"_index":1991,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap(this.executesearch",{"_index":3253,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["switchmap(url",{"_index":2180,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["sync",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["syncexpanded(other",{"_index":1596,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":1593,"title":{},"body":{"classes/InitializationState.html":{}}}],["t",{"_index":1839,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["t.label).join",{"_index":2576,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["table",{"_index":3994,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3993,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":12,"title":{"interfaces/Tag.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tag.id",{"_index":181,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["tag.label",{"_index":3153,"title":{},"body":{"components/TagListComponent.html":{}}}],["tag.label).join",{"_index":3268,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["tag.ts",{"_index":3124,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tag.type",{"_index":145,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["tag_list",{"_index":3152,"title":{},"body":{"components/TagListComponent.html":{}}}],["tag_search",{"_index":3267,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["tagclasses",{"_index":3132,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagclasses(tag",{"_index":3142,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagging",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["tagid",{"_index":116,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["tagid(_index",{"_index":3144,"title":{},"body":{"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["taglistcomponent",{"_index":517,"title":{"components/TagListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taglistmodule",{"_index":2758,"title":{"modules/TagListModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagListModule.html":{},"modules.html":{},"overview.html":{}}}],["tagremoved",{"_index":3133,"title":{},"body":{"components/TagListComponent.html":{}}}],["tags",{"_index":33,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["tags.length",{"_index":3264,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["tags.map(t",{"_index":2575,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["tags.map(tag",{"_index":2594,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagSearchComponent.html":{}}}],["tags.push",{"_index":154,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.push(tag",{"_index":148,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.state",{"_index":2484,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{}}}],["tags.state.ts",{"_index":10,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["tags.state.ts:112",{"_index":63,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:119",{"_index":54,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:124",{"_index":67,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:140",{"_index":73,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:158",{"_index":58,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:38",{"_index":95,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:68",{"_index":87,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:70",{"_index":98,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:75",{"_index":89,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:77",{"_index":93,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:79",{"_index":39,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:95",{"_index":64,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags/anatomical",{"_index":9,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["tagschange",{"_index":3134,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagsearchcomponent",{"_index":519,"title":{"components/TagSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"modules/TagSearchModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tagsearchmodule",{"_index":2759,"title":{"modules/TagSearchModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsearchresult",{"_index":117,"title":{"interfaces/TagSearchResult.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["take",{"_index":1937,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["take(1",{"_index":2006,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["takes",{"_index":1206,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{}}}],["takeuntil",{"_index":3245,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["takeuntil(this.destroy",{"_index":3251,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["takewhile",{"_index":1846,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tap",{"_index":1938,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["tap(([user",{"_index":2391,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["tap(config",{"_index":2276,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["tap(reg",{"_index":2509,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["target",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["target.key",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.nodename",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.preventdefault",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.repeat",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["technologies",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["templateurl",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["temporary",{"_index":971,"title":{},"body":{"components/ContentComponent.html":{}}}],["test",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":914,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{}}}],["text",{"_index":76,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagSearchComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{}}}],["textfield",{"_index":716,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["theme",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["themes",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["theming.initialize(el",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["theming.service",{"_index":3312,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1092,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":242,"title":{"injectables/ThemingService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":3313,"title":{},"body":{"modules/ThemingModule.html":{}}}],["thick",{"_index":1190,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1191,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thickness",{"_index":1948,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1192,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1193,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":167,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._expanded",{"_index":1518,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._latesttags",{"_index":159,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this._measuredmargin",{"_index":1548,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":1538,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._name",{"_index":2117,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this._opened",{"_index":1514,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":1510,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.added.emit(tags",{"_index":3269,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.addentityone",{"_index":183,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.addregistration(jsonobj",{"_index":2567,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.addtagraw(tag",{"_index":178,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.animationsenabled",{"_index":1033,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.applythemeclass(theme",{"_index":3355,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":3359,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":3354,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.blocksize",{"_index":694,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksize[key",{"_index":698,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksizechange.emit(this.blocksize",{"_index":699,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.buildjsonld(page",{"_index":2492,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.buildjsonld(page.snapshot",{"_index":2556,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.buildmetadata(page",{"_index":2491,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.cdr.markforcheck",{"_index":844,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.channel",{"_index":835,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":1880,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":1882,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":1885,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":1860,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":841,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checkedresults",{"_index":3256,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.closedialog",{"_index":2361,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.consentservice.consent",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.content",{"_index":846,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":845,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":832,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":834,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":833,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.createscenenodes(organiri",{"_index":2908,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.ctx.patchstate",{"_index":2001,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ctx.setstate(patch",{"_index":2288,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentdate",{"_index":2578,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentidentifier",{"_index":2580,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentorgan",{"_index":2359,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.currentsex",{"_index":2354,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.defaultposition",{"_index":2090,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.defaulttheme",{"_index":3353,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":1487,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.destroy$.complete",{"_index":3259,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.destroy$.next",{"_index":3258,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.dialog.open(registrationcontentcomponent",{"_index":2396,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialog.open(reviewmodalcomponent",{"_index":2684,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.dialog.open(videomodalcomponent",{"_index":3435,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["this.dialogref.close",{"_index":2720,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["this.dialogref.close(true",{"_index":2364,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.disablepositionchange",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.drawer",{"_index":3388,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":3386,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":1030,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":839,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":849,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.editregistration(reg",{"_index":2510,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.el.nativeelement.contains(event.target",{"_index":3276,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.element",{"_index":3358,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":1539,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.entererrormode.emit",{"_index":2680,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.entities$.subscribe",{"_index":176,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.expanded",{"_index":1574,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":1583,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":1564,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":1532,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.extractionsitetooltip",{"_index":1782,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.faded",{"_index":1048,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.fileinput.nativeelement",{"_index":1644,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.firstnamevalidator.setvalue(value?.firstname",{"_index":2119,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('all_items_opacity_update",{"_index":3507,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('block_size_change",{"_index":696,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('block_size_reset",{"_index":702,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('item_reset",{"_index":3505,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('json_file_load_end",{"_index":1651,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('json_file_load_start",{"_index":1654,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('name_updated",{"_index":2122,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('opacity_update",{"_index":3502,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('organ_select",{"_index":2038,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('placement",{"_index":2024,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('register",{"_index":2691,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('review_start",{"_index":2681,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('rotation_reset",{"_index":2801,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.ga.event('rotation_update",{"_index":2794,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.ga.event('selected_extraction_set_change",{"_index":1288,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.ga.event('side_update",{"_index":3070,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('slice_config_reset",{"_index":2990,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slice_config_update",{"_index":2985,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slide_toggle_toggled",{"_index":1694,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.ga.event('tag_removed",{"_index":3151,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.ga.event('tags_added",{"_index":3266,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.ga.event('view_update",{"_index":3077,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('visibility_toggled",{"_index":3493,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["this.getarguments(definition",{"_index":1420,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":1869,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":1416,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getsourcedb().subscribe(db",{"_index":2168,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getupdatedcheckedresults(result",{"_index":3257,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.globalconfig.config$.pipe",{"_index":2275,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.getoption('basehref').pipe",{"_index":2176,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalconfig.getoption('editregistration').pipe",{"_index":2508,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.getoption('header",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl').subscribe((url",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip').subscribe((tooltip",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('organ').pipe",{"_index":1990,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.globalconfig.getoption('skipunsavedchangesconfirmation').pipe",{"_index":2271,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.globalconfig.getoption('theme",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.snapshot.basehref",{"_index":1403,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.globals.set('db",{"_index":2174,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalskipconfirmation",{"_index":2292,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.handlemessage(msg",{"_index":838,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.haschanges$.pipe",{"_index":2295,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.homeurl",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.hover.emit(item",{"_index":3496,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.hover.emit(undefined",{"_index":3497,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.idmatches(ontologyid",{"_index":1999,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.initialized",{"_index":1486,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":1555,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":1565,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":1589,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initskipconfirmationlisteners",{"_index":2282,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.injector",{"_index":599,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(anatomicalstructuretagstate",{"_index":2506,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.injector.get(modelstate",{"_index":170,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(pagestate",{"_index":174,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(referencedatastate",{"_index":1989,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(registrationstate",{"_index":2971,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(scenestate",{"_index":172,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.isdatavalid(this.page.snapshot",{"_index":2554,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.isdropdownactive",{"_index":3064,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isdropdownhidden",{"_index":3065,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isvalid",{"_index":2494,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.items",{"_index":3499,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map(i",{"_index":3506,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map(item",{"_index":3500,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.itemschange.emit(this.items",{"_index":3504,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.labelref.nativeelement",{"_index":3066,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.labels[0",{"_index":1692,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.labels[1",{"_index":1693,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.lastnamevalidator.setvalue(value?.lastname",{"_index":2120,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.launchreviewmodal",{"_index":2683,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.leftmargin",{"_index":1040,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.loadyoutubeplayerapi",{"_index":3415,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.logotooltip",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.margin2",{"_index":1535,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":1534,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":1590,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":1879,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":1866,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.metadata",{"_index":2689,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.metadata.length",{"_index":2675,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadata.slice(0",{"_index":2677,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.model",{"_index":169,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.blocksize",{"_index":2952,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.defaultposition.x",{"_index":900,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.y",{"_index":904,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.z",{"_index":906,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.extractionsites",{"_index":2904,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organ",{"_index":1758,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.organ$.pipe",{"_index":1769,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.organ$]).pipe",{"_index":2389,"title":{},"body":{"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organdimensions$.pipe",{"_index":897,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.organiri",{"_index":2909,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organiri$]).pipe",{"_index":2905,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position",{"_index":2954,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position$.pipe",{"_index":923,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.rotation",{"_index":2953,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.setblocksize",{"_index":2524,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(data.organ",{"_index":2519,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(this.currentorgan",{"_index":2363,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setposition",{"_index":2537,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setposition(newposition",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["this.model.setrotation",{"_index":2528,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(data.sex",{"_index":2521,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(label",{"_index":1784,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.setsex(this.currentsex",{"_index":2362,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setside(data.side",{"_index":2523,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.setside(label",{"_index":1785,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.setslicesconfig",{"_index":2532,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.sex$.pipe",{"_index":1774,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["this.model.sex$]).pipe",{"_index":1760,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.showprevious",{"_index":2930,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.side",{"_index":1759,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.side$.pipe",{"_index":1777,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.snapshot",{"_index":944,"title":{},"body":{"components/ContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.anatomicalstructures",{"_index":185,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.snapshot.organdimensions",{"_index":2938,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.position",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.model.state",{"_index":2488,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.state$]).pipe",{"_index":2493,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.toggleregistrationblocksvisibility(visible",{"_index":1787,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.viewside$.pipe",{"_index":2967,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.viewtype$.pipe",{"_index":916,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.modelchanged$.pipe",{"_index":2010,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.name",{"_index":2121,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namechange.emit(this.name",{"_index":2124,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namematches(organname",{"_index":2000,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.namevalid",{"_index":2356,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.nextmessageid",{"_index":1861,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodecollisions",{"_index":2893,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.nodes$]).pipe",{"_index":2899,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.onorganirichange",{"_index":2008,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.open",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.opendialog",{"_index":2395,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.opened",{"_index":1562,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":1579,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":1563,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.optionsref.nativeelement",{"_index":3067,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.organselected",{"_index":2360,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.page",{"_index":173,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.clearhaschanges",{"_index":2569,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.page.registrationstarted",{"_index":2365,"title":{},"body":{"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.page.sethaschanges",{"_index":177,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.setusername",{"_index":2516,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.parsedjson.emit(json",{"_index":1653,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.patchstate",{"_index":2291,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.placementcube",{"_index":2890,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.placementcube$]).pipe",{"_index":2922,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.position",{"_index":1509,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.previousregistrationnodes",{"_index":2892,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.previousvisibilityitems",{"_index":1786,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.refdata",{"_index":2507,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.getorgandata(place.target",{"_index":2515,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.normalizeplacement",{"_index":2511,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.referencedata",{"_index":1988,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getreferenceorganiri",{"_index":2061,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.snapshot",{"_index":2068,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$.pipe",{"_index":2004,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$]).pipe",{"_index":2910,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.referenceorgannodes",{"_index":2891,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registerdata.emit",{"_index":2692,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registericonimpl(def",{"_index":1396,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(definition",{"_index":1408,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registration",{"_index":2970,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registration.editregistration(event",{"_index":1788,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.registration.previousregistrations$]).pipe",{"_index":2931,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registrationcallbackset",{"_index":2688,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.registrationisvalid",{"_index":2674,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registrationstarted",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.registry",{"_index":1412,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry?.addsvgiconresolver((name",{"_index":1398,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.renderer2.appendchild(this.document.body",{"_index":3421,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.renderer2.createelement('script",{"_index":3417,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.resolve",{"_index":1457,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.resultsvisible",{"_index":3272,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.rightmargin",{"_index":1041,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.rotation",{"_index":2793,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.rotationchange.emit(this.rotation",{"_index":2796,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(def.html",{"_index":1394,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(basehref",{"_index":1404,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.scene",{"_index":171,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.scene.nodecollisions$]).pipe",{"_index":136,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.searchcontrol.valuechanges.pipe",{"_index":3250,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.searchresults",{"_index":3255,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["this.selected",{"_index":1287,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.selection",{"_index":3491,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.selection.id",{"_index":3492,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.sendtoggle",{"_index":1566,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.sensor",{"_index":939,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.setanatomicalstructures(newstructures",{"_index":2059,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setanatomicalstructures(previousitems",{"_index":2054,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setchange.emit(value",{"_index":1291,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setdisplayerrors(false",{"_index":2568,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.sets.length",{"_index":1292,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setshowprevious(visible",{"_index":2053,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setstate(db",{"_index":2169,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.setstate(patch",{"_index":2277,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.settheme(this.defaulttheme",{"_index":3356,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sexselected",{"_index":2355,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.side",{"_index":3074,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.sidechange.emit(this.side",{"_index":3075,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.skipconfirmation$.subscribe(skipconfirmation",{"_index":2302,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.slicesconfig",{"_index":2984,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfig[key",{"_index":2987,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfigchange.emit(this.slicesconfig",{"_index":2988,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.snapshot",{"_index":2184,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.blocksize",{"_index":2032,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.entities[tag.id",{"_index":179,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.snapshot.organ",{"_index":2065,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.name}_placement",{"_index":2025,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.organ",{"_index":2062,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.sex",{"_index":2066,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organdimensions",{"_index":2031,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.sex",{"_index":2063,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.showcollisions",{"_index":2897,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.snapshot.side",{"_index":2064,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.source",{"_index":1862,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.state$.pipe",{"_index":1978,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('anatomicalstructures",{"_index":1971,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('blocksize",{"_index":1958,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('displayerrors",{"_index":2456,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.state$.pipe(pluck('extractionsets",{"_index":1972,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('extractionsites",{"_index":1970,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('id",{"_index":1957,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('organ",{"_index":1964,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('organdimensions",{"_index":1966,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('organiri",{"_index":1965,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('position",{"_index":1960,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('registrationcallbackset",{"_index":2248,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluck('rotation",{"_index":1959,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('sex",{"_index":1967,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('showprevious",{"_index":1969,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('side",{"_index":1968,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('slicesconfig",{"_index":1961,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('usecancelregistrationcallback",{"_index":2253,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluck('user",{"_index":2255,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluck('viewside",{"_index":1963,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluck('viewtype",{"_index":1962,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluckunique('haschanges",{"_index":2274,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('registrationstarted",{"_index":2250,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('skipconfirmation",{"_index":2270,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.statechange.emit",{"_index":1591,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.subscriptions.add",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":3385,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":1028,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":837,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["this.syncexpanded(other",{"_index":1592,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tagremoved.emit(tag",{"_index":3154,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags",{"_index":2505,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{}}}],["this.tags$.subscribe((tags",{"_index":175,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.tags.addtags",{"_index":2540,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.tags.filter(obj",{"_index":3149,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags.latesttags",{"_index":2558,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.tags.tags$]).pipe",{"_index":2489,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.tagschange.emit(this.tags",{"_index":3155,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.theme",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["this.theme$.subscribe((theme",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next('light",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$]).subscribe",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${theme",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${this.theme",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":1516,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":1560,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":1558,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":1520,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":1572,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":1569,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.updateentitiesmany",{"_index":180,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.updatefaded",{"_index":1032,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updatemargin(position",{"_index":1038,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updateopacity(item.opacity",{"_index":3495,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.updateview(false",{"_index":3073,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.updateview(true",{"_index":3072,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.validatedrawers",{"_index":840,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.value",{"_index":1691,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.valuechange.emit(this.value",{"_index":1696,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.view3d",{"_index":3076,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.view3dchange.emit(this.view3d",{"_index":3078,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.visibilitychanged.emit(this.visible",{"_index":3529,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.visible",{"_index":3527,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.width",{"_index":1533,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.xyztriplettostring(model.blocksize",{"_index":2572,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.position",{"_index":2573,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.rotation",{"_index":2574,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["those",{"_index":1864,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["throttle",{"_index":3194,"title":{},"body":{"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["throttletime",{"_index":1939,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["throttletime(0",{"_index":1979,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["through",{"_index":2782,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["throw",{"_index":830,"title":{},"body":{"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":3984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":857,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":855,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":826,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":825,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":821,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumb",{"_index":2814,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["thumbnails",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1184,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1185,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ticks",{"_index":2818,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["tied",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":2474,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["timeouts",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["timing",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/VisibilityMenuComponent.html":{}}}],["tissue",{"_index":661,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["tissues",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":717,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/DocumentationContent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["tmc",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle(opened",{"_index":1561,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggle.component",{"_index":1708,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle.component.html",{"_index":1670,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.scss",{"_index":1669,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts",{"_index":1666,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{}}}],["toggle.component.ts:18",{"_index":3525,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:19",{"_index":1683,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:23",{"_index":3524,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:24",{"_index":1677,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:29",{"_index":1680,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:34",{"_index":1676,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:39",{"_index":1675,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:40",{"_index":3523,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:51",{"_index":1689,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:52",{"_index":3526,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:61",{"_index":1685,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.module",{"_index":1824,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/StageNavModule.html":{}}}],["toggle.module.ts",{"_index":1705,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle/labeled",{"_index":1665,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationContentModule.html":{},"modules/StageNavModule.html":{},"coverage.html":{}}}],["toggle/visibility",{"_index":1832,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{}}}],["togglebuttoncomponent",{"_index":521,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":1034,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["toggleexpanded(expanded",{"_index":1573,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglelabel",{"_index":3521,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["togglepreviousregistrationblocks",{"_index":1722,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["togglepreviousregistrationblocks(visible",{"_index":1737,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["toggleregistrationblocksvisibility(visible",{"_index":2052,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["toggles",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["togglescheme",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["togglevisibility",{"_index":3465,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["togglevisibility(item",{"_index":3486,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["toggling",{"_index":1739,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["token",{"_index":1851,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}}}],["top",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toradians",{"_index":2136,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tort",{"_index":4175,"title":{},"body":{"license.html":{}}}],["total",{"_index":3125,"title":{},"body":{"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["totalcount",{"_index":189,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":862,"title":{},"body":{"components/ContainerComponent.html":{}}}],["track",{"_index":1767,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["tracking/telemetry",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["trackingpopupcomponent",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["trackingpopupmodule",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["trailing",{"_index":1981,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["transform",{"_index":720,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["transformmatrix",{"_index":2842,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["transition",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["transition('closed",{"_index":1496,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":1025,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["translate",{"_index":3439,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["translate([p.x_translation",{"_index":2939,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translate([position.x",{"_index":2959,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translation_units",{"_index":2630,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["transparency",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["trigger",{"_index":1020,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{}}}],["trigger('expandcollapse",{"_index":1499,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":1022,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["trigger('openclose",{"_index":1493,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggerfileinput",{"_index":1620,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["triplet",{"_index":2454,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["true",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["true=left",{"_index":1686,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["truncateresults",{"_index":3181,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["truncateresults(result",{"_index":3224,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["truncates",{"_index":3226,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["try",{"_index":1421,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["ts",{"_index":4079,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":4082,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1146,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":847,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turn",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["turns",{"_index":2657,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["tutorial",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1678,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["tx",{"_index":4092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":2159,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4185,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1061,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["types/lru",{"_index":4019,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":126,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["typing",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":2726,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["ufl",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":636,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":4104,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":4113,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":4110,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":4112,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":4111,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":848,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["under",{"_index":1128,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["underline",{"_index":1309,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["unique",{"_index":1837,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["university",{"_index":4121,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":642,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{}}}],["unlike",{"_index":1119,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unnecessary",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":2845,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unselect",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":3395,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["unused",{"_index":3147,"title":{},"body":{"components/TagListComponent.html":{},"components/TagSearchComponent.html":{}}}],["up",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Tag.html":{},"components/TagSearchComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["update",{"_index":2791,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["updateblocksizes",{"_index":703,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["updateblocksizes(input",{"_index":690,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["updated",{"_index":689,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["updatedselection",{"_index":3498,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.id",{"_index":3501,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.opacity",{"_index":3503,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateextractionsitetooltip",{"_index":1723,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updateextractionsitetooltip(item",{"_index":1746,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updatefaded",{"_index":985,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin",{"_index":986,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin(position",{"_index":1009,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatename",{"_index":2097,"title":{},"body":{"components/NameInputComponent.html":{}}}],["updatename(input",{"_index":2102,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["updateopacity",{"_index":3466,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateopacity(value",{"_index":3489,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateregistration",{"_index":1724,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updateregistration(event",{"_index":1752,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updates",{"_index":684,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["updateside",{"_index":3020,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateside(selection",{"_index":3045,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateskipconfirmation",{"_index":2290,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["updateslicesdata",{"_index":2991,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["updateslicesdata(input",{"_index":2982,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["updatetoggle",{"_index":1671,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updatetoggle(selection",{"_index":1684,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updateview",{"_index":3021,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateview(selection",{"_index":3048,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updating",{"_index":2788,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["upgraded",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1623,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"changelog.html":{}}}],["uploaded",{"_index":1628,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["upperbound",{"_index":2882,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["upperbound[i",{"_index":2886,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ureter",{"_index":1186,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1386,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["use",{"_index":960,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"license.html":{}}}],["usecallback",{"_index":2441,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["usecancelregistrationcallback",{"_index":2225,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["used",{"_index":48,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["usedownload",{"_index":614,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["usedropdownmenu",{"_index":3022,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usedropdownmenu(value",{"_index":3063,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usefactory",{"_index":751,"title":{},"body":{"modules/ConfigModule.html":{}}}],["useful",{"_index":823,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":333,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["user's",{"_index":2116,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{}}}],["user.firstname",{"_index":2392,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["user.lastname",{"_index":2393,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["user/os",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["useregistrationcallback",{"_index":2486,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["username",{"_index":2100,"title":{"interfaces/UserName.html":{}},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["users",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["usevalue",{"_index":590,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["uterus",{"_index":1187,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1188,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":2471,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2482,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["v",{"_index":3261,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["v1.1",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["v1[key",{"_index":1984,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v2",{"_index":1983,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v2[key",{"_index":1985,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v4",{"_index":2481,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["valid",{"_index":2215,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validate",{"_index":2107,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["validatedrawers",{"_index":768,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":790,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validators",{"_index":2114,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["validators.required",{"_index":2106,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["value",{"_index":86,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":1290,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["valuechange",{"_index":1674,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["valueof",{"_index":1453,"title":{},"body":{"classes/InitializationState.html":{}}}],["values",{"_index":679,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ModelStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["variable",{"_index":1765,"title":{},"body":{"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["variables",{"_index":4195,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1189,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["vec3",{"_index":2872,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...lowerbound.map((n",{"_index":2884,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...upperbound.map((n",{"_index":2887,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["version",{"_index":3617,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":921,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{}}}],["via",{"_index":2780,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["video",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["videomodalcomponent",{"_index":523,"title":{"components/VideoModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videomodallaunchercomponent",{"_index":525,"title":{"components/VideoModalLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videomodallaunchermodule",{"_index":1080,"title":{"modules/VideoModalLauncherModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules.html":{},"overview.html":{}}}],["videomodalmodule",{"_index":3447,"title":{"modules/VideoModalModule.html":{}},"body":{"modules/VideoModalModule.html":{},"modules.html":{},"overview.html":{}}}],["view",{"_index":894,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["view3d",{"_index":3023,"title":{},"body":{"components/StageNavComponent.html":{}}}],["view3dchange",{"_index":3025,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild",{"_index":1642,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{}}}],["viewchild('closesearch",{"_index":3228,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["viewchild('fileinput",{"_index":1639,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["viewchild('label",{"_index":3052,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild('options",{"_index":3054,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchildren",{"_index":815,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":802,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewed",{"_index":1951,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewer",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":3010,"title":{},"body":{"components/StageNavComponent.html":{}}}],["views",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["viewside",{"_index":942,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewtype",{"_index":1917,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["visibility",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["visibility_menu",{"_index":3494,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["visibility_off",{"_index":1198,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_off_cube",{"_index":1199,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1196,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_toggle",{"_index":3528,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilitychanged",{"_index":3522,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilityitem",{"_index":1258,"title":{"interfaces/VisibilityItem.html":{}},"body":{"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["visibilityitems",{"_index":2051,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["visibilitymenucomponent",{"_index":527,"title":{"components/VisibilityMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visibilitymenumodule",{"_index":1812,"title":{"modules/VisibilityMenuModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{},"modules.html":{},"overview.html":{}}}],["visibilitytogglecomponent",{"_index":530,"title":{"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{},"overview.html":{}}}],["visibilitytogglemodule",{"_index":1813,"title":{"modules/VisibilityToggleModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["visible",{"_index":1743,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["visual",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":56,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["wait",{"_index":1455,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":1585,"title":{},"body":{"classes/InitializationState.html":{}}}],["want",{"_index":1751,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["warming",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4162,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4159,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3437,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["wc",{"_index":605,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["web",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["webcomponent",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":4022,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":860,"title":{},"body":{"components/ContainerComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["webpages",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":4099,"title":{},"body":{"index.html":{}}}],["week",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":718,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whenever",{"_index":1526,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whether",{"_index":813,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"license.html":{}}}],["white",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["whole",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":1594,"title":{},"body":{"classes/InitializationState.html":{}}}],["window:click",{"_index":3185,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["window:click(event",{"_index":3199,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["window:focusin",{"_index":3186,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["window:focusin(event",{"_index":3201,"title":{},"body":{"components/TagSearchComponent.html":{}}}],["within",{"_index":2786,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["withlatestfrom",{"_index":2267,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["withlatestfrom(this.globalskipconfirmation",{"_index":2296,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["without",{"_index":804,"title":{},"body":{"components/ContainerComponent.html":{},"changelog.html":{},"license.html":{}}}],["workaround",{"_index":1604,"title":{},"body":{"classes/InitializationState.html":{}}}],["workflows",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":3079,"title":{},"body":{"components/StageNavComponent.html":{}}}],["wrapped",{"_index":801,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagListComponent.html":{},"components/TagSearchComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["wrapping",{"_index":805,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{}}}],["x",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["x,y,z",{"_index":890,"title":{},"body":{"components/ContentComponent.html":{}}}],["x_dimension",{"_index":2599,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["x_rotation",{"_index":2615,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["x_scaling",{"_index":2610,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["x_translation",{"_index":2624,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["xyz",{"_index":2453,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["xyztriplet",{"_index":1918,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["xyztriplettostring",{"_index":2416,"title":{},"body":{"injectables/RegistrationState.html":{}}}],["xyztriplettostring(xyz",{"_index":2451,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["y",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["y_dimension",{"_index":2601,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["y_rotation",{"_index":2617,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["y_scaling",{"_index":2611,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["y_translation",{"_index":2626,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["yes",{"_index":2312,"title":{},"body":{"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"injectables/RegistrationState.html":{},"components/ReviewButtonComponent.html":{}}}],["youtube",{"_index":3400,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":3451,"title":{},"body":{"modules/VideoModalModule.html":{}}}],["z",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/TagSearchComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["z_dimension",{"_index":2603,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["z_rotation",{"_index":2619,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["z_scaling",{"_index":2612,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["z_translation",{"_index":2628,"title":{},"body":{"injectables/RegistrationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["zone.js",{"_index":4084,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":547,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":2848,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AnatomicalStructureTagState.html":{"url":"injectables/AnatomicalStructureTagState.html","title":"injectable - AnatomicalStructureTagState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnatomicalStructureTagState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag collection global state\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _latestTags\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                    Private\n                                addTagRaw\n                            \n                            \n                                addTags\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                removeTag\n                            \n                            \n                                searchExternal\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tags$\n                                \n                                \n                                    latestTags\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:79\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTag\n                        \n                    \n                \n            \n            \n                \naddTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addTagRaw\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTagRaw(tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:158\n                \n            \n\n\n            \n                \n                    Adds a tag. Implementation helper for addTags and addTag\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The tag\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTags\n                        \n                    \n                \n            \n            \n                \naddTags(tags: Tag[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tags\n                                    \n                                                Tag[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:95\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTag\n                        \n                    \n                \n            \n            \n                \nremoveTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchExternal\n                        \n                    \n                \n            \n            \n                \nsearchExternal(text: string, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:140\n                \n            \n\n\n            \n                \n                    Searches for matching tags (not in the state)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Search text\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Maximum returned results hint\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObservableInput\n\n                    \n                    \n                        external Search result\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _latestTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:75\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SceneState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:77\n                        \n                    \n\n            \n                \n                    Reference to the scene state\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tags$\n                    \n                \n\n                \n                    \n                        gettags$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:38\n                                \n                            \n                    \n                        \n                                Observable of tags\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        latestTags\n                    \n                \n\n                \n                    \n                        getlatestTags()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:70\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n\n/** Tag state model */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AnatomicalStructureTagStateModel {\n}\n\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections()\n  }\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned'\n            });\n          }\n        }\n        return tags;\n      })\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model: ModelState;\n  /** Reference to the scene state */\n  private scene: SceneState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures\n      .filter(as => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return [{\n      totalCount: matches.length,\n      results: matches.map((as): Tag => ({\n        id: as.id,\n        label: as.name,\n        type: 'added'\n      })).slice(0, limit)\n    }];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnatomicalStructureTagStateModel.html":{"url":"interfaces/AnatomicalStructureTagStateModel.html","title":"interface - AnatomicalStructureTagStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnatomicalStructureTagStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag state model\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n\n/** Tag state model */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AnatomicalStructureTagStateModel {\n}\n\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections()\n  }\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned'\n            });\n          }\n        }\n        return tags;\n      })\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model: ModelState;\n  /** Reference to the scene state */\n  private scene: SceneState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures\n      .filter(as => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return [{\n      totalCount: matches.length,\n      results: matches.map((as): Tag => ({\n        id: as.id,\n        label: as.name,\n        type: 'added'\n      })).slice(0, limit)\n    }];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disablePositionChange\n                            \n                            \n                                    Readonly\n                                header$\n                            \n                            \n                                homeUrl\n                            \n                            \n                                    Readonly\n                                homeUrl$\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                    Readonly\n                                logoTooltip$\n                            \n                            \n                                open\n                            \n                            \n                                organList\n                            \n                            \n                                registrationStarted\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                theme\n                            \n                            \n                                    Readonly\n                                theme$\n                            \n                            \n                                    Readonly\n                                themeMode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleClick\n                            \n                            \n                                handleKey\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleScheme\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLightTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, consentService: ConsentService, snackbar: MatSnackBar, theming: ThemingService, el: ElementRef<>, injector: Injector, globalConfig: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/app.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                    ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theming\n                                                  \n                                                        \n                                                                        ThemingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/app.component.ts:167\n                \n            \n\n\n            \n                \n                    Disables block position change if an input element is clicked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(target: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/app.component.ts:128\n                \n            \n\n\n            \n                \n                    Shifts block position when certain keys are pressed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The keyboard event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleClick\n                        \n                    \n                \n            \n            \n                \nhandleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/app.component.ts:167\n                \n            \n\n\n            \n                \n                    Disables block position change if an input element is clicked\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleKey\n                        \n                    \n                \n            \n            \n                \nhandleKey(target: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/app.component.ts:128\n                \n            \n\n\n            \n                \n                    Shifts block position when certain keys are pressed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The keyboard event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/app.component.ts:178\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/app.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleScheme\n                        \n                    \n                \n            \n            \n                \ntoggleScheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/app.component.ts:118\n                \n            \n\n\n            \n                \n                    Toggles scheme between light and dark mode\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disablePositionChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:44\n                        \n                    \n\n            \n                \n                    Disables changes in block position\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        header$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('header')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        homeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        homeUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('homeUrl')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        logoTooltip$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('logoTooltip')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:38\n                        \n                    \n\n            \n                \n                    True if the organ selector drawer is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:35\n                        \n                    \n\n            \n                \n                    Organs to be displayed in the organ selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:41\n                        \n                    \n\n            \n                \n                    False until the initial registration modal is closed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:64\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('theme')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        themeMode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLightTheme\n                    \n                \n\n                \n                    \n                        getisLightTheme()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/app.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, Subscription, ReplaySubject } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState, RUI_ORGANS } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList = RUI_ORGANS;\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n    \n    \n  \n  \n    \n    \n  \n\n  \n    \n      \n      \n        \n          \n            {{ organSelector.expanded ? 'arrow_drop_up': 'arrow_drop_down' }}\n          \n        \n        \n          \n            {{ open ? 'arrow_drop_up': 'arrow_drop_down' }}\n          \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  font-size: 1rem;\n  color: black;\n\n  .header-hidden {\n    display: none;\n  }\n\n  ccf-drawer-container {\n    height: 100%;\n\n    ccf-drawer {\n      width: 25.5rem;\n    }\n\n    ccf-drawer-content {\n      position: relative;\n      z-index: 1;\n\n      .selector-drawer {\n        top: 0rem;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        height: 5.688rem;\n        transition: all 0.5s ease-in-out;\n\n        &.expanded {\n          height: 15rem;\n        }\n\n        ccf-organ-selector {\n          height: 100%;\n          padding-top: 0.5rem;\n          transition: all 0.5s;\n  \n          &.closed {\n            padding-top: 0;\n          }\n        }\n\n        .close-button-wrapper {\n          display: flex;\n          justify-content: center;\n          height: 0;\n          z-index: 2;\n    \n          .close-button {\n            cursor: pointer;\n            transition: 0.6s;\n\n            .expand-collapse-icon {\n              width: 3rem;\n              height: 1.2rem;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              cursor: pointer;\n              background-color: white;\n              border-bottom-left-radius: 0.2rem;\n              border-bottom-right-radius: 0.2rem;\n              transition: 0.6s;\n    \n              &:hover {\n                background-color: #ececec;\n              }\n            }\n          }\n        }\n\n\n        &.closed {\n          height: 3rem;\n          top: -2.9rem;\n        }\n      }\n\n      .stage-content {\n        border-radius: 0.5rem !important;\n        height: calc(100% - 2.688rem - 3rem - 1.5rem);\n      }\n\n      .expanded-stage {\n        height: calc(100% - 1.5rem);\n        padding-bottom: 1rem;\n      }\n\n      .retracted-stage {\n        height: calc(100% - 2.688rem - 14rem);\n      }\n\n    }\n\n\n\n    ccf-content {\n      // top: 0rem;\n      position: absolute;\n      transition-duration: 0.5s;\n      transition-timing-function: ease-in-out;\n      transition-property: all;\n      bottom: 1.5rem;\n      z-index: 1;\n\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ organSelector.expanded ? \\'arrow_drop_up\\': \\'arrow_drop_down\\' }}                                                {{ open ? \\'arrow_drop_up\\': \\'arrow_drop_down\\' }}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContentModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            LeftSidebarModule\n                        \n                        \n                            RegistrationModalModule\n                        \n                        \n                            RightSidebarModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/app.module.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OrganSelectorModule, TrackingPopupModule } from 'ccf-shared';\n\nimport { AppWebComponent } from './app-web-component.component';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { DEFAULT_THEME } from './core/services/theming/theming.service';\nimport { ContentModule } from './modules/content/content.module';\nimport { HeaderModule } from './modules/header/header.module';\nimport { LeftSidebarModule } from './modules/left-sidebar/left-sidebar.module';\nimport { RegistrationModalModule } from './modules/registration-modal/registration-modal/registration-modal.module';\nimport { RightSidebarModule } from './modules/right-sidebar/right-sidebar.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    MatIconModule,\n    DrawerModule,\n    HeaderModule,\n    ContentModule,\n    LeftSidebarModule,\n    RightSidebarModule,\n    OrganSelectorModule,\n    RegistrationModalModule,\n    TrackingPopupModule,\n    MatSnackBarModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    {\n      provide: DEFAULT_THEME,\n      useValue: 'hubmap-theme-light'\n    },\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'standard',\n        floatLabel: false,\n        hideRequiredMarker: true\n      }\n    }\n  ],\n  entryComponents: [AppComponent, AppWebComponent]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-rui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GlobalConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, Subscription, ReplaySubject } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState, RUI_ORGANS } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList = RUI_ORGANS;\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                baseHref\n                            \n                            \n                                cancelRegistration\n                            \n                            \n                                editRegistration\n                            \n                            \n                                fetchPreviousRegistrations\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                organ\n                            \n                            \n                                register\n                            \n                            \n                                skipUnsavedChangesConfirmation\n                            \n                            \n                                theme\n                            \n                            \n                                useDownload\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/app-web-component.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        baseHref\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cancelRegistration\n                    \n                \n                \n                    \n                        Type :     string | CancelRegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editRegistration\n                    \n                \n                \n                    \n                        Type :     string | SpatialEntityJsonLd\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fetchPreviousRegistrations\n                    \n                \n                \n                    \n                        Type :         string | FetchPreviousRegistrationsCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organ\n                    \n                \n                \n                    \n                        Type :         string | Organ\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        register\n                    \n                \n                \n                    \n                        Type :         string | RegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skipUnsavedChangesConfirmation\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDownload\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app-web-component.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS } from 'ccf-shared/web-components';\nimport { ObservableInput } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\n\nimport { environment } from '../environments/environment';\n\n\nexport type User = NonNullable;\nexport type Organ = NonNullable;\nexport type RegistrationCallback = (data: unknown) => void;\nexport type CancelRegistrationCallback = () => void;\nexport type FetchPreviousRegistrationsCallback = () => ObservableInput[]>;\n\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() baseHref: string;\n  @Input() useDownload: string | boolean;\n  @Input() user: string | User;\n  @Input() organ: string | Organ;\n  @Input() editRegistration: string | SpatialEntityJsonLd;\n  @Input() register: string | RegistrationCallback;\n  @Input() cancelRegistration: string | CancelRegistrationCallback;\n  @Input() fetchPreviousRegistrations: string | FetchPreviousRegistrationsCallback;\n  @Input() skipUnsavedChangesConfirmation: string | boolean;\n  @Input() theme: string;\n  @Input() header: string | boolean;\n  @Input() homeUrl: string;\n  @Input() logoTooltip: string;\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    const BP = BUILTIN_PARSERS;\n\n    super(configStore, cdr, {\n      initialDelay: 500,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['ruiConfig' as string],\n        ...environment.customization\n      },\n      parse: {\n        useDownload: BP.boolean,\n        user: BP.json,\n        organ: BP.json,\n        editRegistration: BP.json,\n        register: BP.function,\n        cancelRegistration: BP.function,\n        fetchPreviousRegistrations: BP.function,\n        skipUnsavedChangesConfirmation: BP.boolean,\n        header: BP.boolean,\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockSize.html":{"url":"interfaces/BlockSize.html","title":"interface - BlockSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for objects containing tissue block dimensions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Depth of block\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockSizeInputComponent.html":{"url":"components/BlockSizeInputComponent.html","title":"component - BlockSizeInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockSizeInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering dimensions of the tissue block\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-block-size-input\n            \n\n            \n                styleUrls\n                ./block-size-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./block-size-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshBlockSize\n                            \n                            \n                                updateBlockSizes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSizeChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of block size input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blockSize\n                    \n                \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_BLOCK_SIZE\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:40\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blockSizeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:45\n                            \n                        \n                \n                    \n                        Emitter for values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-block-size-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshBlockSize\n                        \n                    \n                \n            \n            \n                \nrefreshBlockSize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:70\n                \n            \n\n\n            \n                \n                    Refreshes all block size values to 10\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBlockSizes\n                        \n                    \n                \n            \n            \n                \nupdateBlockSizes(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:60\n                \n            \n\n\n            \n                \n                    Updates values when an input changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the dimension to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Dimensions (mm)\n  \n  refresh\n\n\n\n  \n    Width (X)\n    \n  \n\n  \n    Height (Y)\n    \n  \n\n  \n    Depth (Z)\n    \n  \n\n\n    \n\n    \n                \n                    ./block-size-input.component.scss\n                \n                :host {\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    height: 1.5rem;\n    align-items: center;\n\n    .title {\n      font-weight: 600;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      } \n    }\n  }\n\n  .size-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Dimensions (mm)    refresh      Width (X)            Height (Y)            Depth (Z)      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockSizeInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockSizeInputModule.html":{"url":"modules/BlockSizeInputModule.html","title":"module - BlockSizeInputModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockSizeInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule\n  ],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent]\n})\nexport class BlockSizeInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\n\nimport { GLOBAL_CONFIG, globalConfigFactory } from './config';\n\n\n@NgModule({\n  providers: [\n    {\n      provide: GLOBAL_CONFIG,\n      useFactory: globalConfigFactory,\n      deps: [GlobalsService]\n    }\n  ]\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:115\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:83\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:105\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateDrawers\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:124\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageChannel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                        \n                    \n\n            \n                \n                    The connected message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ContentComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:45\n                        \n                    \n\n            \n                \n                    Content component if provided already wrapped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(ContentComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:48\n                        \n                    \n\n            \n                \n                    Content component if provided without wrapping.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(DrawerComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:41\n                        \n                    \n\n            \n                \n                    Drawer components in this container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:62\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component.\n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main content component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bounds$\n                            \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                debugMode\n                            \n                            \n                                    Readonly\n                                is3DView$\n                            \n                            \n                                isNarrowView\n                            \n                            \n                                    Readonly\n                                position$\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                showDebugButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleNodeDrag\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetStage\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, registration: RegistrationState, scene: SceneState, rootRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:61\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The model state\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The registration state\n\n                                                        \n                                                \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                        SceneState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        rootRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Component's root element\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleNodeDrag\n                        \n                    \n                \n            \n            \n                \nhandleNodeDrag(event: NodeDragEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            NodeDragEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:97\n                \n            \n\n\n            \n                \n                    Detaches the resize sensor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:84\n                \n            \n\n\n            \n                \n                    Sets up the resize sensor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetStage\n                        \n                    \n                \n            \n            \n                \nresetStage()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:113\n                \n            \n\n\n            \n                \n                    Method to reset registration block, crosshairs, and x,y,z information.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(is3DView: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:106\n                \n            \n\n\n            \n                \n                    Sets view type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    is3DView\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Set view type to '3d' if this is true otherwise set it to 'register'\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bounds$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organDimensions$.pipe(\n    map(dims => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:53\n                        \n                    \n\n            \n                \n                    Shows / hides the state debug component for testing purposes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        is3DView$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.viewType$.pipe(\n    map(type => type === '3d')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:33\n                        \n                    \n\n            \n                \n                    Whether the view type is 3d or register\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNarrowView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:48\n                        \n                    \n\n            \n                \n                    Whether the content area is very narrow\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        position$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.position$.pipe(\n    map(p => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) }))\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sensor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResizeSensor\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:61\n                        \n                    \n\n            \n                \n                    Resize detection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDebugButtons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : !environment.production\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:58\n                        \n                    \n\n            \n                \n                    Show debug buttons of content component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, OnDestroy, OnInit\n} from '@angular/core';\nimport { NodeDragEvent } from 'ccf-body-ui';\nimport { ResizeSensor } from 'css-element-queries';\nimport { distinctUntilKeyChanged, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { SceneState } from '../../core/store/scene/scene.state';\n\n\n/**\n * Main content component\n */\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-content';\n\n  readonly position$ = this.model.position$.pipe(\n    map(p => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) }))\n  );\n\n  /** Whether the view type is 3d or register */\n  readonly is3DView$ = this.model.viewType$.pipe(\n    map(type => type === '3d')\n  );\n\n  readonly bounds$ = this.model.organDimensions$.pipe(\n    map(dims => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y')\n  );\n\n  /** Whether the content area is very narrow */\n  isNarrowView = false;\n\n  /**\n   * Shows / hides the state debug component for testing purposes.\n   */\n  debugMode = false;\n\n  /**\n   * Show debug buttons of content component\n   */\n  showDebugButtons = !environment.production;\n\n  /** Resize detection */\n  private sensor: ResizeSensor;\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param model The model state\n   * @param page The page state\n   * @param registration The registration state\n   * @param rootRef Component's root element\n   * @param cdr Change detector\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly registration: RegistrationState,\n    readonly scene: SceneState,\n    private readonly rootRef: ElementRef,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Sets up the resize sensor\n   */\n  ngOnInit(): void {\n    this.sensor = new ResizeSensor(this.rootRef.nativeElement, ({ width }) => {\n      const isNarrowView = width  n * 1000) as [number, number];\n        const { position, viewSide, organDimensions } = this.model.snapshot;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => n / 2);\n        let newPosition = position;\n        switch (viewSide) {\n          case 'anterior':\n            newPosition = { x: a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'posterior':\n            newPosition = { x: -a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'left':\n            newPosition = { x: position.x, y: b + dims[1], z: -a + dims[2] };\n            break;\n          case 'right':\n            newPosition = { x: position.x, y: b + dims[1], z: a + dims[2] };\n            break;\n        }\n        this.model.setPosition(newPosition);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  refresh\n\n\n\n  \n\n  \n\n  \n    \n      \n        X: {{ (position$ | async)?.x }}\n        Y: {{ (position$ | async)?.y }}\n        Z: {{ (position$ | async)?.z }}\n      \n    \n\n    \n  \n\n\n\n\n\n  State\n  Use callback\n  Use download\n\n\n    \n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n  height: 100%;\n  padding: 1.5rem;\n  overflow: hidden;\n\n  .top-bar {\n    display: flex;\n    justify-content: space-between;\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n    }\n  }\n\n  .main-content {\n    display: flex;\n    height: calc(100% - 1rem);\n\n    .body-ui {\n      flex: auto;\n      transition: opacity 1s;\n    }\n\n    .gizmo-area {\n      width: 4rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n      z-index: 10;\n\n      .position-display {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 1.5rem;\n      }\n\n      .gizmo {\n        height: 5.5rem;\n        .hidden {\n          opacity: 0;\n          z-index: 0;\n        }\n      }\n    }\n  }\n\n  // Temporary for displaying dev information\n  .ccf-store-debug {\n    color: white;\n    position: absolute;\n    top: .5rem;\n    max-width: 55rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      refresh                        X: {{ (position$ | async)?.x }}        Y: {{ (position$ | async)?.y }}        Z: {{ (position$ | async)?.z }}                  State  Use callback  Use download'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-1.html":{"url":"components/ContentComponent-1.html","title":"component - ContentComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationsEnabled\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                faded\n                            \n                            \n                                leftMargin\n                            \n                            \n                                rightMargin\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:70\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:60\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateFaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:116\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateMargin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:103\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DrawerComponent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:39\n                        \n                    \n\n            \n                \n                    References to the side drawers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_declarations\n\n\n\n\nContentComponent\n\nContentComponent\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StageNavModule\n                        \n                        \n                            VideoModalLauncherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BodyUiModule, StoreDebugModule } from 'ccf-shared';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\nimport { VideoModalLauncherModule } from './video-modal/video-modal-launcher/video-modal-launcher.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StageNavModule,\n    MatIconModule,\n    StoreDebugModule,\n    VideoModalLauncherModule,\n    MatRippleModule,\n    BodyUiModule\n  ],\n  declarations: [ContentComponent],\n  exports: [ContentComponent]\n})\nexport class ContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigModule } from './services/config/config.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'rui'\n    }),\n    MousePositionTrackerModule,\n\n    ConfigModule,\n    StoreModule,\n    ThemingModule\n  ],\n  exports: []\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' }\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsLabelComponent.html":{"url":"components/DetailsLabelComponent.html","title":"component - DetailsLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Reusable component that takes an array of strings and renders\nthat array as a string, separated by commas, in the icon color.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-details-label\n            \n\n            \n                styleUrls\n                ./details-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        details\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:20\n                            \n                        \n                \n                    \n                        The array of details to be displayed.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-details-label\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        arrayToString\n                        \n                    \n                \n            \n            \n                \narrayToString(inputArray: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:29\n                \n            \n\n\n            \n                \n                    Function that handles converting the array given\ninto a formatted string for display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    inputArray\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an array of strings to join.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the formatted string of items separated by a comma.\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, HostBinding, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Reusable component that takes an array of strings and renders\n * that array as a string, separated by commas, in the icon color.\n */\n@Component({\n  selector: 'ccf-details-label',\n  templateUrl: './details-label.component.html',\n  styleUrls: ['./details-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsLabelComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-details-label';\n\n  /**\n   * The array of details to be displayed.\n   */\n  @Input() details: string[] = [];\n\n  /**\n   * Function that handles converting the array given\n   * into a formatted string for display.\n   *\n   * @param inputArray an array of strings to join.\n   * @returns the formatted string of items separated by a comma.\n   */\n  arrayToString(inputArray: string[]): string {\n    return inputArray.join(', ');\n  }\n}\n\n    \n\n    \n        {{ arrayToString(details) }}\n    \n\n    \n                \n                    ./details-label.component.scss\n                \n                :host {\n    display: block;\n    height: 2.25rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ arrayToString(details) }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DetailsLabelModule.html":{"url":"modules/DetailsLabelModule.html","title":"module - DetailsLabelModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailsLabelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/details-label/details-label.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailsLabelComponent } from './details-label.component';\n\n@NgModule({\n  declarations: [DetailsLabelComponent],\n  imports: [CommonModule],\n  exports: [DetailsLabelComponent]\n})\nexport class DetailsLabelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/documentation.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DrawerModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractionSet.html":{"url":"interfaces/ExtractionSet.html","title":"interface - ExtractionSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractionSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/extraction-set.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains information for an extraction set\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            sites\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the set\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Organ that the extraction sites belong to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sites belonging to the organ in the extraction set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { VisibilityItem } from './visibility-item';\n\n/**\n * Contains information for an extraction set\n */\nexport interface ExtractionSet {\n  /** Name of the set */\n  name: string;\n\n  /** Organ that the extraction sites belong to */\n  organ?: string;\n\n  /** Extraction sites belonging to the organ in the extraction set */\n  sites: VisibilityItem[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtractionSetDropdownComponent.html":{"url":"components/ExtractionSetDropdownComponent.html","title":"component - ExtractionSetDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtractionSetDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown for selecting the extraction set\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-extraction-set-dropdown\n            \n\n            \n                styleUrls\n                ./extraction-set-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./extraction-set-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractionSetChanged\n                            \n                            \n                                isMultiple\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                setChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of extraction set dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sets\n                    \n                \n                \n                    \n                        Type :         ExtractionSet[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Extraction sets to be displayed as options\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        setChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current extraction set when selected\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-extraction-set-dropdown\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSetChanged\n                        \n                    \n                \n            \n            \n                \nextractionSetChanged(value: ExtractionSet)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:47\n                \n            \n\n\n            \n                \n                    Sets the selected extraction set and emits the extraction set\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ExtractionSet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The extraction set selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMultiple\n                        \n                    \n                \n            \n            \n                \nisMultiple()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:58\n                \n            \n\n\n            \n                \n                    Determines whether there is more than one extraction set\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if there is more than one extraction set\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtractionSet\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:33\n                        \n                    \n\n            \n                \n                    The currently selected extraction set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ExtractionSet } from '../../../core/models/extraction-set';\n\n/**\n * Dropdown for selecting the extraction set\n */\n@Component({\n  selector: 'ccf-extraction-set-dropdown',\n  templateUrl: './extraction-set-dropdown.component.html',\n  styleUrls: ['./extraction-set-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExtractionSetDropdownComponent {\n\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-extraction-set-dropdown';\n\n  /**\n   * Emits the current extraction set when selected\n   */\n  @Output() readonly setChange = new EventEmitter();\n\n  /**\n   * Extraction sets to be displayed as options\n   */\n  @Input() sets: ExtractionSet[];\n\n  /**\n   * The currently selected extraction set\n   */\n  selected: ExtractionSet;\n\n  /**\n   * Creates an instance of extraction set dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Sets the selected extraction set and emits the extraction set\n   *\n   * @param value The extraction set selected\n   */\n  extractionSetChanged(value: ExtractionSet): void {\n    this.selected = value;\n    this.ga.event('selected_extraction_set_change', 'extraction_set_dropdown', value.name);\n    this.setChange.emit(value);\n  }\n\n  /**\n   * Determines whether there is more than one extraction set\n   *\n   * @returns true if there is more than one extraction set\n   */\n  isMultiple(): boolean {\n    return this.sets.length > 1;\n  }\n}\n\n    \n\n    \n        \n  Landmark Set\n  \n    \n      {{set.name}} ({{set.sites.length}})\n    \n  \n\n\n    \n\n    \n                \n                    ./extraction-set-dropdown.component.scss\n                \n                ::ng-deep .extraction-set-panel {\n  box-shadow: 0rem 0rem 0.3rem 0.1rem #9e9e9e;\n  position: absolute;\n  top: -1rem;\n  left: 1rem;\n  width: 10.5rem;\n\n  .extraction-set-options {\n    height: 2.5rem !important;\n  }\n  \n  .extraction-set-options:first-child {\n    margin-top: 0.5rem;\n  }\n\n  .extraction-set-options:last-child {\n    margin-bottom: 0.5rem;\n  }\n\n}\n\n:host {\n  ::ng-deep .mat-form-field {\n    width: 10.5rem;\n\n    .mat-form-field-wrapper {\n      padding-bottom: 0.5rem;\n      .mat-form-field-flex {\n        padding: 0;\n      }\n  \n      .mat-form-field-underline {\n        bottom: 0.75rem;\n      }\n\n      .mat-select-arrow-wrapper {\n        transform: none;\n      }\n    }\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Landmark Set            {{set.name}} ({{set.sites.length}})      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExtractionSetDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExtractionSetDropdownModule.html":{"url":"modules/ExtractionSetDropdownModule.html","title":"module - ExtractionSetDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    ExtractionSetDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ExtractionSetDropdownComponent } from './extraction-set-dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSelectModule],\n  declarations: [ExtractionSetDropdownComponent],\n  exports: [ExtractionSetDropdownComponent]\n})\nexport class ExtractionSetDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            baseHref\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cancelRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetchPreviousRegistrations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            register\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipUnsavedChangesConfirmation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useDownload\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHref\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseHref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cancelRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelRegistration:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editRegistration:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPreviousRegistrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetchPreviousRegistrations:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        register\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        register:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipUnsavedChangesConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipUnsavedChangesConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: {\n    name: 'large intestine' | 'heart' | 'kidney' | 'spleen';\n    ontologyId?: string;\n    sex?: 'male' | 'female';\n    side?: 'left' | 'right';\n  };\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken(\n  'Global configuration object'\n);\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page header\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of header component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-header\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  @Input() homeUrl: string;\n\n  @Input() logoTooltip: string;\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) { }\n}\n\n    \n\n    \n        \n\n\n\n  \n    chevron_left\n    BACK\n  \n\n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n\n  .text {\n    padding: 0.25rem 0;\n    height: 2rem;\n    display: flex;\n    align-items: center;\n    font-weight: lighter;\n    font-size: 1.5rem;\n  }\n\n\n  .link {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    text-decoration: none;\n    padding: 0.25rem 0;\n  }\n\n  .home {\n    * {\n      transition: color .6s;\n    }\n\n    .backbutton {\n      // Material icons do not always fill the space given\n      // Scale up size for icon to look correct\n      font-size: 2.25rem;\n      width: 2.25rem;\n      height: 2.25rem;\n    }\n  }\n\n  .portal {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left    BACK              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              private readonly sanitizer: DomSanitizer,\n              private readonly globalConfig: GlobalConfigState) {\n    super();\n  }\n\n  ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS\n      .filter(def => def.html !== undefined)\n      .map(def => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html!) }))\n      .forEach(def => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find(\n        icon => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace\n      );\n\n      if (def === undefined || def.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getArguments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:147\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMethodName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:127\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:87\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerIconImpl\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:97\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              private readonly sanitizer: DomSanitizer,\n              private readonly globalConfig: GlobalConfigState) {\n    super();\n  }\n\n  ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS\n      .filter(def => def.html !== undefined)\n      .map(def => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html!) }))\n      .forEach(def => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find(\n        icon => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace\n      );\n\n      if (def === undefined || def.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deferred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Promise(resolve => {\n    this.resolve = resolve;\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                        \n                    \n\n            \n                \n                    Promise used to await on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether this state is true or false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:41\n                        \n                    \n\n            \n                \n                    Resolve function for the promise.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:46\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueOf\n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:65\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:56\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state('open, open-instant', style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input()\n  @HostBinding('class.ccf-drawer-opened')\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input()\n  @HostBinding('class.ccf-drawer-expanded')\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    } };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done')\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done')\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled': {\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonFileReaderComponent.html":{"url":"components/JsonFileReaderComponent.html","title":"component - JsonFileReaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  JsonFileReaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-json-file-reader\n            \n\n            \n                styleUrls\n                ./json-file-reader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./json-file-reader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                fileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleFile\n                            \n                            \n                                triggerFileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parsedJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of json file reader component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Upload'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:17\n                            \n                        \n                \n                    \n                        Allows the label on the upload button to be customized.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parsedJson\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:20\n                            \n                        \n                \n                    \n                        Emits the json object of any files uploaded.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-json-file-reader\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleFile\n                        \n                    \n                \n            \n            \n                \nhandleFile(event: InputEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:43\n                \n            \n\n\n            \n                \n                    Takes in a json file and emits the parsed json object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        file input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerFileInput\n                        \n                    \n                \n            \n            \n                \ntriggerFileInput()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:33\n                \n            \n\n\n            \n                \n                    Method used to trigger the file input element's click handler\nfrom the placeholder button used for styling purposes.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:14\n                        \n                    \n\n            \n                \n                    File Input element, used to manually trigger the click event.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n@Component({\n  selector: 'ccf-json-file-reader',\n  templateUrl: './json-file-reader.component.html',\n  styleUrls: ['./json-file-reader.component.scss']\n})\nexport class JsonFileReaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-json-file-reader';\n  /** File Input element, used to manually trigger the click event. */\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  /** Allows the label on the upload button to be customized. */\n  @Input() label = 'Upload';\n\n  /** Emits the json object of any files uploaded. */\n  @Output() readonly parsedJson = new EventEmitter();\n\n  /**\n   * Creates an instance of json file reader component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Method used to trigger the file input element's click handler\n   * from the placeholder button used for styling purposes.\n   */\n  triggerFileInput(): void {\n    const fileInputElement: HTMLElement = this.fileInput.nativeElement;\n    fileInputElement.click();\n  }\n\n  /**\n   * Takes in a json file and emits the parsed json object.\n   *\n   * @param event file input event\n   */\n  handleFile(event: InputEvent): void {\n    const inputTarget = event.target as HTMLInputElement;\n    if (!inputTarget.files) {\n      return;\n    }\n\n    const file = inputTarget.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const json = JSON.parse(fileReader.result as string) as unknown;\n      this.ga.event('json_file_load_end', 'json_file_reader');\n      this.parsedJson.emit(json);\n    };\n\n    this.ga.event('json_file_load_start', 'json_file_reader');\n    fileReader.readAsText(file);\n  }\n}\n\n    \n\n    \n        {{ label }}\n\n\n    \n\n    \n                \n                    ./json-file-reader.component.scss\n                \n                :host {\n  .upload-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: .6s;\n    cursor: pointer;\n    font-weight: 500;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonFileReaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonFileReaderModule.html":{"url":"modules/JsonFileReaderModule.html","title":"module - JsonFileReaderModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonFileReaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonFileReaderComponent } from './json-file-reader.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [JsonFileReaderComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  exports: [JsonFileReaderComponent]\n})\nexport class JsonFileReaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabeledSlideToggleComponent.html":{"url":"components/LabeledSlideToggleComponent.html","title":"component - LabeledSlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabeledSlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Generic toggle slider component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-labeled-slide-toggle\n            \n\n            \n                styleUrls\n                ./labeled-slide-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./labeled-slide-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                labels\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    left\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of labeled slide toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                \n                \n                    \n                        Type :     [string, string]\n\n                    \n                \n                \n                    \n                        Default value : ['Left', 'Right']\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:24\n                            \n                        \n                \n                    \n                        The two selection options to be toggled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Left'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input value for toggle slider\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:39\n                            \n                        \n                \n                    \n                        Emits the datatype with the currently selected option\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-labeled-slide-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateToggle\n                        \n                    \n                \n            \n            \n                \nupdateToggle(selection: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:61\n                \n            \n\n\n            \n                \n                    Updates and emits the currently selected option\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current toggle state (true=left, false=right)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n\n                \n                    \n                        getleft()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:51\n                                \n                            \n                    \n                        \n                                Determines if left toggle option is selected\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Generic toggle slider component\n */\n@Component({\n  selector: 'ccf-labeled-slide-toggle',\n  templateUrl: './labeled-slide-toggle.component.html',\n  styleUrls: ['./labeled-slide-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class LabeledSlideToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-labeled-slide-toggle';\n\n  /**\n   * The two selection options to be toggled\n   */\n  @Input() labels: [string, string] = ['Left', 'Right'];\n\n  /**\n   * Input value for toggle slider\n   */\n  @Input() value = 'Left';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Emits the datatype with the currently selected option\n   */\n  @Output() readonly valueChange = new EventEmitter();\n\n  /**\n   * Creates an instance of labeled slide toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Determines if left toggle option is selected\n   */\n  get left(): boolean {\n    const { value, labels } = this;\n    return value !== labels[1];\n  }\n\n  /**\n   * Updates and emits the currently selected option\n   *\n   * @param selection The current toggle state (true=left, false=right)\n   */\n  updateToggle(selection: boolean): void {\n    this.value = selection ? this.labels[0] : this.labels[1];\n    this.ga.event('slide_toggle_toggled', 'slide_toggle', this.value);\n    this.valueChange.emit(this.value);\n  }\n}\n\n    \n\n    \n        {{labels[0]}}\n\n{{labels[1]}}\n\n    \n\n    \n                \n                    ./labeled-slide-toggle.component.scss\n                \n                :host{\n  .slide-label {\n    margin: 0 1rem;\n    transition: color .6s;\n    cursor: pointer;\n  }\n  \n  .disabled {\n    opacity: 30%;\n    cursor: not-allowed;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{labels[0]}}{{labels[1]}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabeledSlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabeledSlideToggleModule.html":{"url":"modules/LabeledSlideToggleModule.html","title":"module - LabeledSlideToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    LabeledSlideToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { LabeledSlideToggleComponent } from './labeled-slide-toggle.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [LabeledSlideToggleComponent],\n  exports: [LabeledSlideToggleComponent]\n})\nexport class LabeledSlideToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The left sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-left-sidebar\n            \n\n            \n                styleUrls\n                ./left-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                detailsLabels$\n                            \n                            \n                                extractionSiteTooltip\n                            \n                            \n                                organList\n                            \n                            \n                                    Readonly\n                                organSelected$\n                            \n                            \n                                previousVisibilityItems\n                            \n                            \n                                    Readonly\n                                sexByLabel$\n                            \n                            \n                                    Readonly\n                                sideByLabel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSexFromLabel\n                            \n                            \n                                setSideFromLabel\n                            \n                            \n                                togglePreviousRegistrationBlocks\n                            \n                            \n                                updateExtractionSiteTooltip\n                            \n                            \n                                updateRegistration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableSlider\n                            \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, registration: RegistrationState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableSlider\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:29\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-left-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:89\n                \n            \n\n\n            \n                \n                    Sets sex from sex toggle slider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                            \"Female\" | \"Male\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Selected sex\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSideFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSideFromLabel(label: \"L\" | \"R\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:98\n                \n            \n\n\n            \n                \n                    Sets side from side toggle slider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                            \"L\" | \"R\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Selected side\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePreviousRegistrationBlocks\n                        \n                    \n                \n            \n            \n                \ntogglePreviousRegistrationBlocks(visible: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:110\n                \n            \n\n\n            \n                \n                    Handles toggling previous registration blocks visibility.\nWhen making them visible, it updates current structures to 20%\nopacity; when making not visible it sets them back to their\nprevious opacity.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visible\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the state to set the visibility to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateExtractionSiteTooltip\n                        \n                    \n                \n            \n            \n                \nupdateExtractionSiteTooltip(item: VisibilityItem | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:76\n                \n            \n\n\n            \n                \n                    Updates extraction site tooltip to either the VisibilityItem passed in's\ntooltip property, or an empty string if undefined.\nundefined.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                VisibilityItem | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The VisibilityItem which we want to show the tooltip of, or\nundefined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRegistration\n                        \n                    \n                \n            \n            \n                \nupdateRegistration(event: SpatialEntityJsonLd)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:123\n                \n            \n\n\n            \n                \n                    Event handler for capturing uploaded json and passing it along to\nthe relevant registration state method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            SpatialEntityJsonLd\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new registration state json\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        detailsLabels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : combineLatest(\n    [this.model.organ$, this.model.side$, this.model.sex$]).pipe(\n    map(([organ, side, sex]) => [organ?.name , side as string, sex as string])\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSiteTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:52\n                        \n                    \n\n            \n                \n                    Variable that keeps track of the extraction site tooltip to display on\nthe stage when hovered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organSelected$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organ$.pipe(\n    map(organ => organ === undefined ? false : true)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousVisibilityItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [...this.model.snapshot.anatomicalStructures] as VisibilityItem[]\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:58\n                        \n                    \n\n            \n                \n                    Keeps track of the previousVisibility items so we can set the opacity\nback to what it was before we changed them to 20%\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sideByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.side$.pipe(\n    map(side => side === 'left' ? 'L' : 'R')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { VisibilityItem } from '../../core/models/visibility-item';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { RUI_ORGANS } from './../../core/store/model/model.state';\n\n\n/**\n * The left sidebar\n */\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-left-sidebar';\n\n  @Input() disableSlider = false;\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  readonly sexByLabel$ = this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  );\n\n  readonly sideByLabel$ = this.model.side$.pipe(\n    map(side => side === 'left' ? 'L' : 'R')\n  );\n\n  readonly organSelected$ = this.model.organ$.pipe(\n    map(organ => organ === undefined ? false : true)\n  );\n\n  readonly detailsLabels$: Observable = combineLatest(\n    [this.model.organ$, this.model.side$, this.model.sex$]).pipe(\n    map(([organ, side, sex]) => [organ?.name , side as string, sex as string])\n  );\n\n  /**\n   * Variable that keeps track of the extraction site tooltip to display on\n   * the stage when hovered.\n   */\n  extractionSiteTooltip = '';\n\n  /**\n   * Keeps track of the previousVisibility items so we can set the opacity\n   * back to what it was before we changed them to 20%\n   */\n  previousVisibilityItems = [...this.model.snapshot.anatomicalStructures] as VisibilityItem[];\n\n  organList = RUI_ORGANS;\n\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    readonly registration: RegistrationState\n  ) { }\n\n\n  /**\n   * Updates extraction site tooltip to either the VisibilityItem passed in's\n   * tooltip property, or an empty string if undefined.\n   *\n   * @param item The VisibilityItem which we want to show the tooltip of, or\n   * undefined.\n   */\n  updateExtractionSiteTooltip(item: VisibilityItem | undefined): void {\n    if (item?.tooltip) {\n      this.extractionSiteTooltip = item.tooltip;\n    } else {\n      this.extractionSiteTooltip = '';\n    }\n  }\n\n  /**\n   * Sets sex from sex toggle slider\n   *\n   * @param label Selected sex\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.model.setSex(label === 'Female' ? 'female' : 'male');\n  }\n\n  /**\n   * Sets side from side toggle slider\n   *\n   * @param label Selected side\n   */\n  setSideFromLabel(label: 'L' | 'R'): void {\n    this.model.setSide(label === 'L' ? 'left' : 'right');\n  }\n\n  /**\n   * Handles toggling previous registration blocks visibility.\n   * When making them visible, it updates current structures to 20%\n   * opacity; when making not visible it sets them back to their\n   * previous opacity.\n   *\n   * @param visible the state to set the visibility to.\n   */\n  togglePreviousRegistrationBlocks(visible: boolean): void {\n    if (visible) {\n      this.previousVisibilityItems = [...this.model.snapshot.anatomicalStructures];\n    }\n    this.model.toggleRegistrationBlocksVisibility(visible, this.previousVisibilityItems);\n  }\n\n  /**\n   * Event handler for capturing uploaded json and passing it along to\n   * the relevant registration state method.\n   *\n   * @param event the new registration state json\n   */\n  updateRegistration(event: SpatialEntityJsonLd): void {\n    this.registration.editRegistration(event);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n          Donor Sex:\n          \n          \n        \n\n        \n\n        \n          \n              Anatomical Structures\n          \n\n          \n              \n              \n          \n        \n\n        \n\n        \n            \n                Landmarks\n            \n            \n                \n                \n                \n                \n            \n        \n\n        \n\n        \n        \n\n        \n\n         0\">\n            {{ extractionSiteTooltip }}\n        \n\n        \n\n        \n    \n\n\n    \n\n    \n                \n                    ./left-sidebar.component.scss\n                \n                :host {\n\n  display: block;\n  height: calc(100% - 3rem);\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n\n  .scroll-wrapper {\n    overflow-y: scroll;\n    height: 100%;\n    margin-right: 0.375rem;\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      margin-left: 1.5rem;\n      margin-right: 0.375rem;\n      min-height: 100%;\n\n      .space {\n        height: 3rem;\n      }\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      .ccf-organ-selector {\n        margin-top: 1.5rem;\n      }\n\n      .organ-sliders {\n        .slider-label {\n          font-weight: 600;\n        }\n\n        display: flex;\n        height: 3rem;\n        align-items: center;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n        mat-expansion-panel-header {\n          .expansion-title {\n            font-size: 1rem;\n            font-weight: 600;\n          }\n        }\n      }\n\n      ::ng-deep .mat-expansion-panel-body {\n        padding: 0;\n      }\n\n      .extraction-menu,\n      .anatomical-structures-menu {\n        ::ng-deep .expansion-header {\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          padding: 0;\n          font-weight: bold;\n          height: 3rem;\n\n          .mat-expansion-indicator {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 24px;\n            width: 24px;\n          }\n        }\n\n        .expansion-content {\n          margin-bottom: 0.75rem;\n          text-align: center;\n          margin-top: 2.25rem;\n          .expansion-placeholder {\n            width: 100%;\n            font-size: 0.9rem;\n            font-weight: 400;\n          }\n        }\n      }\n\n      .extraction-site-tooltip {\n        position: absolute;\n        top: 4rem;\n        left: 27rem;\n        width: 21rem;\n        padding: 1rem;\n        border-radius: 0.5rem;\n        border: 1px solid;\n        z-index: 2;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Donor Sex:                                                                    Anatomical Structures                                                                                                              Landmarks                                                                                                                                                     0\">            {{ extractionSiteTooltip }}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeftSidebarModule.html":{"url":"modules/LeftSidebarModule.html","title":"module - LeftSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    LeftSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nLeftSidebarModule -->\n\nDetailsLabelModule->LeftSidebarModule\n\n\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nLeftSidebarModule -->\n\nJsonFileReaderModule->LeftSidebarModule\n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLeftSidebarModule -->\n\nLabeledSlideToggleModule->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DetailsLabelModule\n                        \n                        \n                            ExtractionSetDropdownModule\n                        \n                        \n                            JsonFileReaderModule\n                        \n                        \n                            LabeledSlideToggleModule\n                        \n                        \n                            NameInputModule\n                        \n                        \n                            VisibilityMenuModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { DetailsLabelModule } from '../../shared/components/details-label/details-label.module';\nimport { ExtractionSetDropdownModule } from '../../shared/components/extraction-set-dropdown/extraction-set-dropdown.module';\nimport { LabeledSlideToggleModule } from '../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\nimport { NameInputModule } from '../../shared/components/name-input/name-input.module';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { VisibilityMenuModule } from '../../shared/components/visibility-menu/visibility-menu.module';\nimport { VisibilityToggleModule } from '../../shared/components/visibility-toggle/visibility-toggle.module';\nimport { LeftSidebarComponent } from './left-sidebar.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { JsonFileReaderModule } from '../../shared/components/json-file-reader/json-file-reader.module';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatTooltipModule,\n\n    MatDividerModule,\n    DetailsLabelModule,\n    LabeledSlideToggleModule,\n    NameInputModule,\n    VisibilityToggleModule,\n    ExtractionSetDropdownModule,\n    OpacitySliderModule,\n    VisibilityMenuModule,\n    VisibilityToggleModule,\n    JsonFileReaderModule\n  ],\n  declarations: [LeftSidebarComponent],\n  exports: [LeftSidebarComponent]\n})\nexport class LeftSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:50\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:50\n                        \n                    \n\n            \n                \n                    Counter used to give each message a unique id.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:83\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:93\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:103\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        nextMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:112\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:70\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:163\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:153\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                        \n                    \n\n            \n                \n                    The message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:130\n                        \n                    \n\n            \n                \n                    The message listener.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MetaDataField.html":{"url":"interfaces/MetaDataField.html","title":"interface - MetaDataField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MetaDataField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/meta-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MetaDataField {\n  label: string;\n  value: string;\n}\n\nexport type MetaData = MetaDataField[];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelStateModel.html":{"url":"interfaces/ModelStateModel.html","title":"interface - ModelStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModelStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data contained in the stage state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            blockSize\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            extractionSites\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            organDimensions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organIri\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            showPrevious\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slicesConfig\n                                        \n                                \n                                \n                                        \n                                            viewSide\n                                        \n                                \n                                \n                                        \n                                            viewType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Anatomical structures for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockSize:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Block size\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:         ExtractionSet[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtractionSet[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sets\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Possible extraction sites\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organDimensions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organDimensions:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference Organ Dimensions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reference Organ IRI\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model position\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model rotation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sex if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPrevious\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPrevious:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether previous registration blocks are visible\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Side if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slicesConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slicesConfig:         SlicesConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SlicesConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Slice configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewSide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewSide:         ViewSide\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewSide\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View side\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewType:         ViewType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { EMPTY, Observable } from 'rxjs';\nimport {\n  debounceTime, delay, distinctUntilChanged, filter, mapTo, pluck, skipUntil, switchMap, take, tap, throttleTime,\n} from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    side: 'left',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(pluck('id'));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(pluck('blockSize'));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(pluck('rotation'));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(pluck('position'));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(pluck('slicesConfig'));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(pluck('viewType'));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(pluck('viewSide'));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(pluck('organ'));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(pluck('organIri'));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(pluck('organDimensions'));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(pluck('sex'));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(pluck('side'));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(pluck('showPrevious'));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(pluck('extractionSites'));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(pluck('anatomicalStructures'));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(pluck('extractionSets'));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      mapTo(undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      switchMap(organConfig => {\n        const organName = organConfig.name.toLowerCase();\n        const organSide = organConfig.side;\n        const ontologyId = organConfig.ontologyId;\n        // check for an id match\n        let organInfo = this.idMatches(ontologyId, organSide);\n        // if no id matches, check for a name match\n        if (!organInfo) {\n          organInfo = this.nameMatches(organName, organSide);\n        }\n        if (organInfo) {\n          this.ctx.patchState({\n            organ: organInfo,\n            sex: organConfig.sex?.toLowerCase() as 'male' | 'female',\n            side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n          });\n          return this.referenceData.state$.pipe(\n            debounceTime(100),\n            take(1),\n            delay(200),\n            tap(() => this.onOrganIriChange())\n          );\n        }\n        return EMPTY;\n      })\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n        delay(5)\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    this.ga.event('organ_select', 'organ', organ.name);\n    this.ctx.patchState({ organ });\n    if (organ.side) {\n      this.ctx.patchState({ side: organ.side });\n    }\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: Object.values(asLookup) });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: false,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name')\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameInputComponent.html":{"url":"components/NameInputComponent.html","title":"component - NameInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NameInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for inputting the researcher's name\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-name-input\n            \n\n            \n                styleUrls\n                ./name-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                firstNameValidator\n                            \n                            \n                                lastNameValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:68\n                            \n                        \n\n                \n                    \n                            Creates an instance of name input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:50\n                            \n                        \n                \n                    \n                        Current user name\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nameChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:68\n                            \n                        \n                \n                    \n                        Emits a UserName object\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-name-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateName\n                        \n                    \n                \n            \n            \n                \nupdateName(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:83\n                \n            \n\n\n            \n                \n                    Updates username with a new entry and emits the UserName object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        firstName or lastName\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                \n                    \n                        Default value : {\n    firstName: '',\n    lastName: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:40\n                        \n                    \n\n            \n                \n                    Used to validate the first name input field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:44\n                        \n                    \n\n            \n                \n                    Used to validate the last name input field.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:50\n                                \n                            \n                    \n                        \n                                Current user name\n\n\n                                \n                                    Returns :         UserName\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: UserName)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:54\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            UserName\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new FormControl('', [Validators.required]);\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new FormControl('', [Validators.required]);\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n    \n        \n  First Name \n  \n\n\n\n  Last Name \n  \n\n\n    \n\n    \n                \n                    ./name-input.component.scss\n                \n                :host {\n  display: flex;\n\n  .field {\n\n    &:not(:last-child) {\n      padding-right: 0.75rem;\n    }\n\n    .input {\n      text-align: left;\n      width: 100%;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  First Name     Last Name   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NameInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NameInputModule.html":{"url":"modules/NameInputModule.html","title":"module - NameInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NameInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\n\n\nNameInputModule\n\nNameInputModule\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NameInputComponent } from './name-input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSlideToggleModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule\n  ],\n  declarations: [NameInputComponent],\n  exports: [NameInputComponent]\n})\nexport class NameInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganData.html":{"url":"interfaces/OrganData.html","title":"interface - OrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return key ? db.organIRILookup[key] : undefined;\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[iri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageState.html":{"url":"injectables/PageState.html","title":"injectable - PageState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                General page global state\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                registrationCallbackSet$\n                            \n                            \n                                    Readonly\n                                registrationStarted$\n                            \n                            \n                                    Readonly\n                                useCancelRegistrationCallback$\n                            \n                            \n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelRegistration\n                            \n                            \n                                clearHasChanges\n                            \n                            \n                                    Private\n                                initSkipConfirmationListeners\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                registrationStarted\n                            \n                            \n                                setHasChanges\n                            \n                            \n                                setUseCancelRegistrationCallback\n                            \n                            \n                                setUserName\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skipConfirmation$\n                                \n                                \n                                    globalSkipConfirmation$\n                                \n                                \n                                    hasChanges$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:78\n                            \n                        \n\n                \n                    \n                            Creates an instance of page state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelRegistration\n                        \n                    \n                \n            \n            \n                \ncancelRegistration()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHasChanges\n                        \n                    \n                \n            \n            \n                \nclearHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSkipConfirmationListeners\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSkipConfirmationListeners()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:94\n                \n            \n\n\n            \n                \n                    Initializes this service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationStarted\n                        \n                    \n                \n            \n            \n                \nregistrationStarted()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:145\n                \n            \n\n\n            \n                \n                    Sets registrationStarted to true (when initial registration modal is closed)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setHasChanges\n                        \n                    \n                \n            \n            \n                \nsetHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUseCancelRegistrationCallback\n                        \n                    \n                \n            \n            \n                \nsetUseCancelRegistrationCallback(use: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    use\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserName\n                        \n                    \n                \n            \n            \n                \nsetUserName(name: Pick)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:135\n                \n            \n\n\n            \n                \n                    Sets the name of the active user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The first and last name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationCallbackSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('registrationCallbackSet'))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationStarted$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluckUnique('registrationStarted'))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:58\n                        \n                    \n\n            \n                \n                    RegistrationStated observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useCancelRegistrationCallback$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('useCancelRegistrationCallback'))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('user'))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:56\n                        \n                    \n\n            \n                \n                    Active user observable\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skipConfirmation$\n                    \n                \n\n                \n                    \n                        getskipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        globalSkipConfirmation$\n                    \n                \n\n                \n                    \n                        getglobalSkipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:68\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasChanges$\n                    \n                \n\n                \n                    \n                        gethasChanges$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:76\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, pluck, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n}\n\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(pluck('user'));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(pluck('useCancelRegistrationCallback'));\n  readonly registrationCallbackSet$ = this.state$.pipe(pluck('registrationCallbackSet'));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageStateModel.html":{"url":"interfaces/PageStateModel.html","title":"interface - PageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Page state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hasChanges\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                                \n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                        \n                                            skipConfirmation\n                                        \n                                \n                                \n                                        \n                                            useCancelRegistrationCallback\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasChanges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasChanges:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the initial registration modal has been closed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useCancelRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useCancelRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Active user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, pluck, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n}\n\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(pluck('user'));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(pluck('useCancelRegistrationCallback'));\n  readonly registrationCallbackSet$ = this.state$.pipe(pluck('registrationCallbackSet'));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A record with information about a single person\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, pluck, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  lastName: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n}\n\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(pluck('user'));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(pluck('useCancelRegistrationCallback'));\n  readonly registrationCallbackSet$ = this.state$.pipe(pluck('registrationCallbackSet'));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch(name)\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferenceDataState.html":{"url":"injectables/ReferenceDataState.html","title":"injectable - ReferenceDataState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReferenceDataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data for the main 3d model display\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrganData\n                            \n                            \n                                getReferenceOrganIri\n                            \n                            \n                                    Private\n                                getSourceDB\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                normalizePlacement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globals: GlobalsService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globals\n                                                  \n                                                        \n                                                                    GlobalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganData\n                        \n                    \n                \n            \n            \n                \ngetOrganData(iri: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:155\n                \n            \n\n\n            \n                \n                    Looks up organ information from an IRI\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    iri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The IRI\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OrganData | undefined\n\n                    \n                    \n                        A populated organ data if the IRI is valid, otherwise undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganIri\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganIri(organ: string, sex?: \"Male\" | \"Female\" | string, side?: \"Left\" | \"Right\" | string, organInfo?: OrganInfo)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:135\n                \n            \n\n\n            \n                \n                    Looks up an IRI for a potential reference organ.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the organ\n\n                                    \n                                \n                                \n                                    sex\n                                    \n                                            \"Male\" | \"Female\" | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        the sex: male, female, or undefined\n\n                                    \n                                \n                                \n                                    side\n                                    \n                                            \"Left\" | \"Right\" | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        the side: left, right, or undefined\n\n                                    \n                                \n                                \n                                    organInfo\n                                    \n                                                OrganInfo\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        An IRI if there is a reference organ for this state, otherwise undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSourceDB\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceDB()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:87\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizePlacement\n                        \n                    \n                \n            \n            \n                \nnormalizePlacement(place: SpatialPlacementJsonLd)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    place\n                                    \n                                            SpatialPlacementJsonLd\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialPlacementJsonLd\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return key ? db.organIRILookup[key] : undefined;\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[iri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReferenceDataStateModel.html":{"url":"interfaces/ReferenceDataStateModel.html","title":"interface - ReferenceDataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReferenceDataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            organIRILookup\n                                        \n                                \n                                \n                                        \n                                            organSpatialEntities\n                                        \n                                \n                                \n                                        \n                                            placementPatches\n                                        \n                                \n                                \n                                        \n                                            sceneNodeLookup\n                                        \n                                \n                                \n                                        \n                                            simpleSceneNodeLookup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIRILookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIRILookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organSpatialEntities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organSpatialEntities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placementPatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placementPatches:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        simpleSceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        simpleSceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return key ? db.organIRILookup[key] : undefined;\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[iri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationContentComponent.html":{"url":"components/RegistrationContentComponent.html","title":"component - RegistrationContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing content of the initial registration modal\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-content\n            \n\n            \n                styleUrls\n                ./registration-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                currentOrgan\n                            \n                            \n                                currentSex\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                nameValid\n                            \n                            \n                                organList\n                            \n                            \n                                organSelected\n                            \n                            \n                                    Readonly\n                                sexByLabel$\n                            \n                            \n                                sexSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameValid\n                            \n                            \n                                closeDialog\n                            \n                            \n                                organSelect\n                            \n                            \n                                registerButtonClick\n                            \n                            \n                                setSexFromLabel\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of the registration dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page state\n\n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameValid\n                        \n                    \n                \n            \n            \n                \ncheckNameValid(event: Pick)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:75\n                \n            \n\n\n            \n                \n                    Checks to see if a first and last name has been entered\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:109\n                \n            \n\n\n            \n                \n                    Closes the dialog and sets the correct sex and organ in the model state\nUpdates page state to signal registration has started\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelect\n                        \n                    \n                \n            \n            \n                \norganSelect(organ: OrganInfo)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:84\n                \n            \n\n\n            \n                \n                    Updates current organ selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                                OrganInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Organ selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:95\n                \n            \n\n\n            \n                \n                    Handles button click\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The click event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        Returns nothing is no organ is selected\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:65\n                \n            \n\n\n            \n                \n                    Updates current sex selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                            \"Female\" | \"Male\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Sex selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentOrgan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganInfo\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:40\n                        \n                    \n\n            \n                \n                    Current organ selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:37\n                        \n                    \n\n            \n                \n                    Current sex selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:55\n                        \n                    \n\n            \n                \n                    Registration dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:34\n                        \n                    \n\n            \n                \n                    Whether  an organ has been selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:23\n                        \n                    \n\n            \n                \n                    Current sex in the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sexSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { PageState, Person } from '../../../core/store/page/page.state';\nimport { ModelState, RUI_ORGANS } from '../../../core/store/model/model.state';\nimport { map } from 'rxjs/operators';\nimport { OrganInfo } from 'ccf-shared';\n\n\n/**\n * Component containing content of the initial registration modal\n */\n@Component({\n  selector: 'ccf-registration-content',\n  templateUrl: './registration-content.component.html',\n  styleUrls: ['./registration-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegistrationContentComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-content';\n\n  /** Current sex in the model state */\n  readonly sexByLabel$ = this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  );\n\n  /** HTML class name */\n  organList = RUI_ORGANS;\n\n  /** HTML class name */\n  sexSelected: boolean;\n\n  /** Whether  an organ has been selected */\n  organSelected: boolean;\n\n  /** Current sex selected */\n  currentSex: string;\n\n  /** Current organ selected */\n  currentOrgan: OrganInfo;\n\n  nameValid: boolean;\n\n  /**\n   * Creates an instance of the registration dialog\n   *\n   * @param page Page state\n   * @param model Model state\n   * @param registration Registration state\n   * @param dialogRef Registration dialog\n   */\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    public dialogRef: MatDialogRef\n  ) {\n    dialogRef.disableClose = true;\n  }\n\n  /**\n   * Updates current sex selected\n   *\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.currentSex = label;\n    this.sexSelected = true;\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   *\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current organ selected\n   *\n   * @param organ Organ selected\n   */\n  organSelect(organ: OrganInfo): void {\n    this.currentOrgan = organ;\n    this.organSelected = true;\n  }\n\n  /**\n   * Handles button click\n   *\n   * @param [event] The click event\n   * @returns  Returns nothing is no organ is selected\n   */\n  registerButtonClick(event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.organSelected || !this.nameValid) {\n      return;\n    }\n    this.closeDialog();\n  }\n\n  /**\n   * Closes the dialog and sets the correct sex and organ in the model state\n   * Updates page state to signal registration has started\n   */\n  closeDialog(): void {\n    this.model.setSex(this.currentSex === 'Female' ? 'female' : 'male');\n    this.model.setOrgan(this.currentOrgan);\n    this.dialogRef.close(true);\n    this.page.registrationStarted();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n\n    \n      Donor Sex:\n      \n      \n    \n\n    Select an organ\n\n    \n      \n    \n  \n  START REGISTRATION\n\n    \n\n    \n                \n                    ./registration-content.component.scss\n                \n                .modal {\n  padding: 1rem;\n  border-radius: 4px;\n  max-width: 47rem;\n\n  .organ-sliders {\n    .slider-label {\n      font-weight: 600;\n    }\n\n    display: flex;\n    height: 3rem;\n    align-items: center;\n  }\n\n  .selector-label {\n    font-weight: 600;\n    height: 3rem;\n    line-height: 3rem;\n  }\n\n  .selector-container {\n    margin: 0 auto;\n  }\n\n  .registration-button {\n    display: block;\n    margin: 0 auto;\n    margin-top: 2rem;\n    transition: 0.6s;\n\n    &.disabled {\n      pointer-events: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Donor Sex:                    Select an organ                  START REGISTRATION'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationContentModule.html":{"url":"modules/RegistrationContentModule.html","title":"module - RegistrationContentModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationContentModule_imports\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nRegistrationContentModule -->\n\nLabeledSlideToggleModule->RegistrationContentModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nRegistrationContentModule -->\n\nNameInputModule->RegistrationContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LabeledSlideToggleModule\n                        \n                        \n                            NameInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RegistrationContentComponent } from './registration-content.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NameInputModule } from '../../../shared/components/name-input/name-input.module';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\nimport { OrganSelectorModule } from 'ccf-shared';\n\n\n@NgModule({\n  declarations: [RegistrationContentComponent],\n  imports: [CommonModule, MatButtonModule, MatTooltipModule, NameInputModule, LabeledSlideToggleModule, OrganSelectorModule],\n  exports: [RegistrationContentComponent]\n})\nexport class RegistrationContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationModalComponent.html":{"url":"components/RegistrationModalComponent.html","title":"component - RegistrationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Registration modal that appears on startup\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./registration-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, page: PageState, model: ModelState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog for the modal\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:37\n                \n            \n\n\n            \n                \n                    Opens the dialog on startup (but not if cancel registration callback is set)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:54\n                \n            \n\n\n            \n                \n                    Opens dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:29\n                        \n                    \n\n            \n                \n                    Dialog for the modal\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { combineLatest } from 'rxjs';\nimport { debounceTime, take, tap } from 'rxjs/operators';\n\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState } from '../../../core/store/page/page.state';\nimport { RegistrationContentComponent } from '../registration-content/registration-content.component';\n\n\n/**\n * Registration modal that appears on startup\n */\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  selector: 'ccf-registration-modal',\n  templateUrl: './registration-modal.component.html'\n})\nexport class RegistrationModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-modal';\n\n  /**\n   * Creates an instance of registration modal component.\n   *\n   * @param dialog Dialog for the modal\n   */\n  constructor(\n    public dialog: MatDialog,\n    private readonly page: PageState,\n    private readonly model: ModelState\n  ) {}\n\n  /**\n   * Opens the dialog on startup (but not if cancel registration callback is set)\n   */\n  ngOnInit(): void {\n    combineLatest([this.page.user$, this.model.organ$]).pipe(\n      debounceTime(500),\n      take(1),\n      tap(([user, organ]) => {\n        if (user.firstName !== '' && user.lastName !== '' && organ.src !== '') {\n          return;\n        }\n\n        this.openDialog();\n      })\n    ).subscribe();\n  }\n\n  /**\n   * Opens dialog\n   */\n  openDialog(): void {\n    this.dialog.open(RegistrationContentComponent, {\n      autoFocus: false\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationModalModule.html":{"url":"modules/RegistrationModalModule.html","title":"module - RegistrationModalModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_RegistrationModalModule_imports\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegistrationContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationModalComponent } from './registration-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RegistrationContentModule } from '../registration-content/registration-content.module';\n\n@NgModule({\n  declarations: [RegistrationModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, RegistrationContentModule],\n  exports: [RegistrationModalComponent]\n})\nexport class RegistrationModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegistrationState.html":{"url":"injectables/RegistrationState.html","title":"injectable - RegistrationState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegistrationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data for model registrations\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                displayErrors$\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                refData\n                            \n                            \n                                    Private\n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRegistration\n                            \n                            \n                                    Private\n                                buildJsonLd\n                            \n                            \n                                    Private\n                                buildMetadata\n                            \n                            \n                                    Async\n                                editRegistration\n                            \n                            \n                                isDataValid\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                register\n                            \n                            \n                                setDisplayErrors\n                            \n                            \n                                setUseRegistrationCallback\n                            \n                            \n                                    Private\n                                xyzTripletToString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    metadata$\n                                \n                                \n                                    jsonld$\n                                \n                                \n                                    valid$\n                                \n                                \n                                    previousRegistrations$\n                                \n                                \n                                    currentIdentifier\n                                \n                                \n                                    currentDate\n                                \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:116\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRegistration\n                        \n                    \n                \n            \n            \n                \naddRegistration(registration: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:220\n                \n            \n\n\n            \n                \n                    Adds an entry to the previous registrations\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    registration\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildJsonLd\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildJsonLd(page: Immutable, model: Immutable, tags: Tag[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:317\n                \n            \n\n\n            \n                \n                    Converts the registration data into jsonld format.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current page state data\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current model state data\n\n                                    \n                                \n                                \n                                    tags\n                                    \n                                                Tag[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        A jsonld object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildMetadata\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildMetadata(page: Immutable, model: Immutable, tags: Tag[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:283\n                \n            \n\n\n            \n                \n                    Builds a metadata array from the specified data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current page state data\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current model state data\n\n                                    \n                                \n                                \n                                    tags\n                                    \n                                                Tag[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MetaData\n\n                    \n                    \n                        metadata An array of label-value objects\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editRegistration\n                        \n                    \n                \n            \n            \n                \n                    \n                    editRegistration(reg: SpatialEntityJsonLd)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reg\n                                    \n                                            SpatialEntityJsonLd\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDataValid\n                        \n                    \n                \n            \n            \n                \nisDataValid(page: Immutable, model: Immutable)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:134\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(useCallback?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:248\n                \n            \n\n\n            \n                \n                    Registers or downloads json data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    useCallback\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Explicit override selecting the register/download action\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDisplayErrors\n                        \n                    \n                \n            \n            \n                \nsetDisplayErrors(displayErrors: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:210\n                \n            \n\n\n            \n                \n                    Set's whether or not we should display the user's registration errors\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    displayErrors\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the value to set it to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUseRegistrationCallback\n                        \n                    \n                \n            \n            \n                \nsetUseRegistrationCallback(use: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:200\n                \n            \n\n\n            \n                \n                    Sets whether to use the registration callback function or download.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    use\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        True to use the callback, false to download\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        xyzTripletToString\n                        \n                    \n                \n            \n            \n                \n                    \n                    xyzTripletToString(xyz: XYZTriplet)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:370\n                \n            \n\n\n            \n                \n                    Format a XYZTriplet as a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    xyz\n                                    \n                                                XYZTriplet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The triplet values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The string representation\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        displayErrors$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('displayErrors'))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:110\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:107\n                        \n                    \n\n            \n                \n                    Reference to the page state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        refData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferenceDataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:116\n                        \n                    \n\n            \n                \n                    Reference to the reference data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnatomicalStructureTagState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:113\n                        \n                    \n\n            \n                \n                    Reference to the AS Tag state\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        metadata$\n                    \n                \n\n                \n                    \n                        getmetadata$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:56\n                                \n                            \n                    \n                        \n                                Observable of registration metadata\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        jsonld$\n                    \n                \n\n                \n                    \n                        getjsonld$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:64\n                                \n                            \n                    \n                        \n                                Observable of registration data in jsonld format\n\n\n                                \n                                    Returns :     Observable>\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        valid$\n                    \n                \n\n                \n                    \n                        getvalid$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        previousRegistrations$\n                    \n                \n\n                \n                    \n                        getpreviousRegistrations$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:81\n                                \n                            \n                    \n                        \n                                Observable of previous registrations\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentIdentifier\n                    \n                \n\n                \n                    \n                        getcurrentIdentifier()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:96\n                                \n                            \n                    \n                        \n                                Current uuid identifier used when registering\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n\n                \n                    \n                        getcurrentDate()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:102\n                                \n                            \n                    \n                        \n                                Time of last modification to registration data\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/registration/registration.state.ts:239\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { insertItem, patch } from '@ngxs/store/operators';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { saveAs } from 'file-saver';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, pluck, startWith, switchMap, take, tap } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { Tag } from '../../models/anatomical-structure-tag';\nimport { MetaData } from '../../models/meta-data';\nimport { GlobalConfig } from '../../services/config/config';\nimport { AnatomicalStructureTagState } from '../anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState, ModelStateModel, XYZTriplet } from '../model/model.state';\nimport { PageState, PageStateModel } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/**\n * Registration state model\n */\nexport interface RegistrationStateModel {\n  /** Whether to use the registration callback function */\n  useRegistrationCallback: boolean;\n  /** Whether or not to display user registration errors */\n  displayErrors: boolean;\n  /** Previous registrations */\n  registrations: Record[];\n}\n\n\n/**\n * Data for model registrations\n */\n@StateRepository()\n@State({\n  name: 'registration',\n  defaults: {\n    useRegistrationCallback: false,\n    displayErrors: false,\n    registrations: []\n  }\n})\n@Injectable()\nexport class RegistrationState extends NgxsImmutableDataRepository {\n  readonly displayErrors$ = this.state$.pipe(pluck('displayErrors'));\n\n  /** Observable of registration metadata */\n  @Computed()\n  get metadata$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildMetadata(page, model, tags))\n    );\n  }\n\n  /** Observable of registration data in jsonld format */\n  @Computed()\n  get jsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags))\n    );\n  }\n\n  @Computed()\n  get valid$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$]).pipe(\n      map(() => this.isValid)\n    );\n  }\n\n  /**\n   * Observable of previous registrations\n   */\n  @Computed()\n  get previousRegistrations$(): Observable[]> {\n    const { globalConfig, state$ } = this;\n    const regs = state$.pipe(pluck('registrations'));\n    const fetched = globalConfig.getOption('fetchPreviousRegistrations').pipe(\n      switchMap(fetch => fetch?.() ?? [[]]),\n      startWith([])\n    );\n\n    return combineLatest([regs, fetched]).pipe(\n      map(([local, external]) => [...local, ...external])\n    );\n  }\n\n  /** Current uuid identifier used when registering */\n  @Computed()\n  private get currentIdentifier(): string {\n    return uuidV4();\n  }\n\n  /** Time of last modification to registration data */\n  @Computed()\n  private get currentDate(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /** Reference to the page state */\n  private page: PageState;\n\n  /** Reference to the model state */\n  private model: ModelState;\n\n  /** Reference to the AS Tag state */\n  private tags: AnatomicalStructureTagState;\n\n  /** Reference to the reference data state */\n  private refData: ReferenceDataState;\n\n  /**\n   * Creates an instance of registration state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.page = this.injector.get(PageState);\n    this.model = this.injector.get(ModelState);\n    this.tags = this.injector.get(AnatomicalStructureTagState);\n    this.refData = this.injector.get(ReferenceDataState);\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(({ useDownload, register }) => this.ctx.patchState({\n        useRegistrationCallback: !!(!useDownload && register)\n      }))\n    ).subscribe();\n\n    this.globalConfig.getOption('editRegistration').pipe(\n      filterNulls(),\n      tap(reg => this.editRegistration(reg as SpatialEntityJsonLd))\n    ).subscribe();\n  }\n\n  async editRegistration(reg: SpatialEntityJsonLd): Promise {\n    const place = this.refData.normalizePlacement(\n      Array.isArray(reg.placement) ? reg.placement[0] : reg.placement\n    );\n    const data = this.refData.getOrganData(place.target);\n\n    this.page.setUserName({ firstName: reg.creator_first_name, lastName: reg.creator_last_name });\n\n    if (data) {\n      this.model.setOrgan(data.organ);\n      if (data.sex) {\n        this.model.setSex(data.sex);\n      }\n      if (data.side) {\n        this.model.setSide(data.side);\n      }\n    }\n\n    this.model.setBlockSize({ x: reg.x_dimension, y: reg.y_dimension, z: reg.z_dimension });\n    this.model.setRotation({ x: place.x_rotation, y: place.y_rotation, z: place.z_rotation });\n    this.model.setSlicesConfig({ thickness: reg.slice_thickness || NaN, numSlices: reg.slice_count || NaN });\n\n    await new Promise(r => {\n      setTimeout(r, 1000);\n    });\n\n    this.model.setPosition({ x: place.x_translation, y: place.y_translation, z: place.z_translation });\n    const iris = new Set(reg.ccf_annotations);\n    this.tags.addTags(\n      this.model.snapshot.anatomicalStructures\n        .filter(item => iris.has(item.id as string))\n        .map((item) => ({ id: item.id, label: item.name, type: 'added' }))\n    );\n\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets whether to use the registration callback function or download.\n   *\n   * @param use True to use the callback, false to download\n   */\n  @DataAction()\n  setUseRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useRegistrationCallback: use });\n  }\n\n  /**\n   * Set's whether or not we should display the user's registration errors\n   *\n   * @param displayErrors the value to set it to\n   */\n  @DataAction()\n  setDisplayErrors(displayErrors: boolean): void {\n    this.ctx.patchState({ displayErrors });\n  }\n\n  /**\n   * Adds an entry to the previous registrations\n   *\n   * @param registration The new entry\n   */\n  @DataAction()\n  addRegistration(registration: Record): void {\n    this.ctx.setState(patch>({\n      registrations: insertItem(registration as Immutable>)\n    }));\n  }\n\n  isDataValid(page: Immutable, model: Immutable): boolean {\n    const requiredValues = [\n      page.user.firstName,\n      page.user.lastName,\n      model.organ.src,\n      model.organ.name,\n      model.organ.organ\n    ];\n\n    return requiredValues.every(value => !!value);\n  }\n\n  @Computed()\n  get isValid(): boolean {\n    return this.isDataValid(this.page.snapshot, this.model.snapshot);\n  }\n\n  /**\n   * Registers or downloads json data.\n   *\n   * @param [useCallback] Explicit override selecting the register/download action\n   */\n  register(useCallback?: boolean): void {\n    if (!this.isValid) {\n      return;\n    }\n\n    const {\n      globalConfig: { snapshot: { register: registrationCallback } },\n      page, model, snapshot\n    } = this;\n    const jsonObj = this.buildJsonLd(page.snapshot, model.snapshot, this.tags.latestTags);\n    const json = JSON.stringify(jsonObj, undefined, 2);\n\n    if (useCallback || (useCallback === undefined && snapshot.useRegistrationCallback)) {\n      registrationCallback?.(json);\n    } else {\n      const data = new Blob([json], {\n        type: 'application/json',\n        endings: 'native'\n      });\n\n      saveAs(data, 'registration-data.json');\n    }\n\n    this.addRegistration(jsonObj);\n    this.setDisplayErrors(false);\n    this.page.clearHasChanges();\n  }\n\n  /**\n   * Builds a metadata array from the specified data.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns metadata An array of label-value objects\n   */\n  private buildMetadata(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): MetaData {\n    const data: MetaData = [];\n\n    if (!page.registrationCallbackSet) {\n      data.push(\n        { label: 'First Name', value: page.user.firstName },\n        { label: 'Last Name', value: page.user.lastName }\n      );\n    }\n\n    data.push(\n      { label: 'Reference Organ Name', value: model.organ.name },\n      { label: 'Tissue Block Dimensions (mm)', value: this.xyzTripletToString(model.blockSize) },\n      { label: 'Tissue Block Position (mm)', value: this.xyzTripletToString(model.position) },\n      { label: 'Tissue Block Rotation', value: this.xyzTripletToString(model.rotation) },\n      { label: 'Anatomical Structure Tags', value: tags.map(t => t.label).join(', ') },\n      { label: 'Time Stamp', value: this.currentDate },\n      { label: 'Alignment ID', value: this.currentIdentifier }\n    );\n\n    return data;\n  }\n\n  /**\n   * Converts the registration data into jsonld format.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns A jsonld object\n   */\n  private buildJsonLd(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): Record {\n    return {\n      '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n      '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}`,\n      '@type': 'SpatialEntity',\n      label: model.label || undefined,\n      creator: `${page.user.firstName} ${page.user.lastName}`,\n      creator_first_name: page.user.firstName,\n      creator_last_name: page.user.lastName,\n      // creator_orcid: data.alignment_operator_orcid,\n      creation_date: this.currentDate,\n      ccf_annotations: tags.map(tag => tag.id),\n      slice_thickness: model.slicesConfig?.thickness || undefined,\n      slice_count: model.slicesConfig?.numSlices || undefined,\n\n      x_dimension: +model.blockSize.x.toFixed(3),\n      y_dimension: +model.blockSize.y.toFixed(3),\n      z_dimension: +model.blockSize.z.toFixed(3),\n      dimension_units: 'millimeter',\n\n      placement: {\n        '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}_placement`,\n        '@type': 'SpatialPlacement',\n        target: model.organIri as string,\n        placement_date: this.currentDate,\n\n        x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n\n        x_rotation: +model.rotation.x.toFixed(3),\n        y_rotation: +model.rotation.y.toFixed(3),\n        z_rotation: +model.rotation.z.toFixed(3),\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n\n        x_translation: +model.position.x.toFixed(3),\n        y_translation: +model.position.y.toFixed(3),\n        z_translation: +model.position.z.toFixed(3),\n        translation_units: 'millimeter'\n      }\n    };\n  }\n\n  /**\n   * Format a XYZTriplet as a string.\n   *\n   * @param xyz The triplet values\n   * @returns The string representation\n   */\n  private xyzTripletToString(xyz: XYZTriplet): string {\n    return `${Math.round(xyz.x)}, ${Math.round(xyz.y)}, ${Math.round(xyz.z)}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationStateModel.html":{"url":"interfaces/RegistrationStateModel.html","title":"interface - RegistrationStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Registration state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayErrors\n                                        \n                                \n                                \n                                        \n                                            registrations\n                                        \n                                \n                                \n                                        \n                                            useRegistrationCallback\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayErrors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not to display user registration errors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrations:     Record[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Previous registrations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to use the registration callback function\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { insertItem, patch } from '@ngxs/store/operators';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { saveAs } from 'file-saver';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, pluck, startWith, switchMap, take, tap } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { Tag } from '../../models/anatomical-structure-tag';\nimport { MetaData } from '../../models/meta-data';\nimport { GlobalConfig } from '../../services/config/config';\nimport { AnatomicalStructureTagState } from '../anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState, ModelStateModel, XYZTriplet } from '../model/model.state';\nimport { PageState, PageStateModel } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/**\n * Registration state model\n */\nexport interface RegistrationStateModel {\n  /** Whether to use the registration callback function */\n  useRegistrationCallback: boolean;\n  /** Whether or not to display user registration errors */\n  displayErrors: boolean;\n  /** Previous registrations */\n  registrations: Record[];\n}\n\n\n/**\n * Data for model registrations\n */\n@StateRepository()\n@State({\n  name: 'registration',\n  defaults: {\n    useRegistrationCallback: false,\n    displayErrors: false,\n    registrations: []\n  }\n})\n@Injectable()\nexport class RegistrationState extends NgxsImmutableDataRepository {\n  readonly displayErrors$ = this.state$.pipe(pluck('displayErrors'));\n\n  /** Observable of registration metadata */\n  @Computed()\n  get metadata$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildMetadata(page, model, tags))\n    );\n  }\n\n  /** Observable of registration data in jsonld format */\n  @Computed()\n  get jsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags))\n    );\n  }\n\n  @Computed()\n  get valid$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$]).pipe(\n      map(() => this.isValid)\n    );\n  }\n\n  /**\n   * Observable of previous registrations\n   */\n  @Computed()\n  get previousRegistrations$(): Observable[]> {\n    const { globalConfig, state$ } = this;\n    const regs = state$.pipe(pluck('registrations'));\n    const fetched = globalConfig.getOption('fetchPreviousRegistrations').pipe(\n      switchMap(fetch => fetch?.() ?? [[]]),\n      startWith([])\n    );\n\n    return combineLatest([regs, fetched]).pipe(\n      map(([local, external]) => [...local, ...external])\n    );\n  }\n\n  /** Current uuid identifier used when registering */\n  @Computed()\n  private get currentIdentifier(): string {\n    return uuidV4();\n  }\n\n  /** Time of last modification to registration data */\n  @Computed()\n  private get currentDate(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /** Reference to the page state */\n  private page: PageState;\n\n  /** Reference to the model state */\n  private model: ModelState;\n\n  /** Reference to the AS Tag state */\n  private tags: AnatomicalStructureTagState;\n\n  /** Reference to the reference data state */\n  private refData: ReferenceDataState;\n\n  /**\n   * Creates an instance of registration state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.page = this.injector.get(PageState);\n    this.model = this.injector.get(ModelState);\n    this.tags = this.injector.get(AnatomicalStructureTagState);\n    this.refData = this.injector.get(ReferenceDataState);\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(({ useDownload, register }) => this.ctx.patchState({\n        useRegistrationCallback: !!(!useDownload && register)\n      }))\n    ).subscribe();\n\n    this.globalConfig.getOption('editRegistration').pipe(\n      filterNulls(),\n      tap(reg => this.editRegistration(reg as SpatialEntityJsonLd))\n    ).subscribe();\n  }\n\n  async editRegistration(reg: SpatialEntityJsonLd): Promise {\n    const place = this.refData.normalizePlacement(\n      Array.isArray(reg.placement) ? reg.placement[0] : reg.placement\n    );\n    const data = this.refData.getOrganData(place.target);\n\n    this.page.setUserName({ firstName: reg.creator_first_name, lastName: reg.creator_last_name });\n\n    if (data) {\n      this.model.setOrgan(data.organ);\n      if (data.sex) {\n        this.model.setSex(data.sex);\n      }\n      if (data.side) {\n        this.model.setSide(data.side);\n      }\n    }\n\n    this.model.setBlockSize({ x: reg.x_dimension, y: reg.y_dimension, z: reg.z_dimension });\n    this.model.setRotation({ x: place.x_rotation, y: place.y_rotation, z: place.z_rotation });\n    this.model.setSlicesConfig({ thickness: reg.slice_thickness || NaN, numSlices: reg.slice_count || NaN });\n\n    await new Promise(r => {\n      setTimeout(r, 1000);\n    });\n\n    this.model.setPosition({ x: place.x_translation, y: place.y_translation, z: place.z_translation });\n    const iris = new Set(reg.ccf_annotations);\n    this.tags.addTags(\n      this.model.snapshot.anatomicalStructures\n        .filter(item => iris.has(item.id as string))\n        .map((item) => ({ id: item.id, label: item.name, type: 'added' }))\n    );\n\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets whether to use the registration callback function or download.\n   *\n   * @param use True to use the callback, false to download\n   */\n  @DataAction()\n  setUseRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useRegistrationCallback: use });\n  }\n\n  /**\n   * Set's whether or not we should display the user's registration errors\n   *\n   * @param displayErrors the value to set it to\n   */\n  @DataAction()\n  setDisplayErrors(displayErrors: boolean): void {\n    this.ctx.patchState({ displayErrors });\n  }\n\n  /**\n   * Adds an entry to the previous registrations\n   *\n   * @param registration The new entry\n   */\n  @DataAction()\n  addRegistration(registration: Record): void {\n    this.ctx.setState(patch>({\n      registrations: insertItem(registration as Immutable>)\n    }));\n  }\n\n  isDataValid(page: Immutable, model: Immutable): boolean {\n    const requiredValues = [\n      page.user.firstName,\n      page.user.lastName,\n      model.organ.src,\n      model.organ.name,\n      model.organ.organ\n    ];\n\n    return requiredValues.every(value => !!value);\n  }\n\n  @Computed()\n  get isValid(): boolean {\n    return this.isDataValid(this.page.snapshot, this.model.snapshot);\n  }\n\n  /**\n   * Registers or downloads json data.\n   *\n   * @param [useCallback] Explicit override selecting the register/download action\n   */\n  register(useCallback?: boolean): void {\n    if (!this.isValid) {\n      return;\n    }\n\n    const {\n      globalConfig: { snapshot: { register: registrationCallback } },\n      page, model, snapshot\n    } = this;\n    const jsonObj = this.buildJsonLd(page.snapshot, model.snapshot, this.tags.latestTags);\n    const json = JSON.stringify(jsonObj, undefined, 2);\n\n    if (useCallback || (useCallback === undefined && snapshot.useRegistrationCallback)) {\n      registrationCallback?.(json);\n    } else {\n      const data = new Blob([json], {\n        type: 'application/json',\n        endings: 'native'\n      });\n\n      saveAs(data, 'registration-data.json');\n    }\n\n    this.addRegistration(jsonObj);\n    this.setDisplayErrors(false);\n    this.page.clearHasChanges();\n  }\n\n  /**\n   * Builds a metadata array from the specified data.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns metadata An array of label-value objects\n   */\n  private buildMetadata(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): MetaData {\n    const data: MetaData = [];\n\n    if (!page.registrationCallbackSet) {\n      data.push(\n        { label: 'First Name', value: page.user.firstName },\n        { label: 'Last Name', value: page.user.lastName }\n      );\n    }\n\n    data.push(\n      { label: 'Reference Organ Name', value: model.organ.name },\n      { label: 'Tissue Block Dimensions (mm)', value: this.xyzTripletToString(model.blockSize) },\n      { label: 'Tissue Block Position (mm)', value: this.xyzTripletToString(model.position) },\n      { label: 'Tissue Block Rotation', value: this.xyzTripletToString(model.rotation) },\n      { label: 'Anatomical Structure Tags', value: tags.map(t => t.label).join(', ') },\n      { label: 'Time Stamp', value: this.currentDate },\n      { label: 'Alignment ID', value: this.currentIdentifier }\n    );\n\n    return data;\n  }\n\n  /**\n   * Converts the registration data into jsonld format.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns A jsonld object\n   */\n  private buildJsonLd(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): Record {\n    return {\n      '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n      '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}`,\n      '@type': 'SpatialEntity',\n      label: model.label || undefined,\n      creator: `${page.user.firstName} ${page.user.lastName}`,\n      creator_first_name: page.user.firstName,\n      creator_last_name: page.user.lastName,\n      // creator_orcid: data.alignment_operator_orcid,\n      creation_date: this.currentDate,\n      ccf_annotations: tags.map(tag => tag.id),\n      slice_thickness: model.slicesConfig?.thickness || undefined,\n      slice_count: model.slicesConfig?.numSlices || undefined,\n\n      x_dimension: +model.blockSize.x.toFixed(3),\n      y_dimension: +model.blockSize.y.toFixed(3),\n      z_dimension: +model.blockSize.z.toFixed(3),\n      dimension_units: 'millimeter',\n\n      placement: {\n        '@context': 'https://hubmapconsortium.github.io/hubmap-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}_placement`,\n        '@type': 'SpatialPlacement',\n        target: model.organIri as string,\n        placement_date: this.currentDate,\n\n        x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n\n        x_rotation: +model.rotation.x.toFixed(3),\n        y_rotation: +model.rotation.y.toFixed(3),\n        z_rotation: +model.rotation.z.toFixed(3),\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n\n        x_translation: +model.position.x.toFixed(3),\n        y_translation: +model.position.y.toFixed(3),\n        z_translation: +model.position.z.toFixed(3),\n        translation_units: 'millimeter'\n      }\n    };\n  }\n\n  /**\n   * Format a XYZTriplet as a string.\n   *\n   * @param xyz The triplet values\n   * @returns The string representation\n   */\n  private xyzTripletToString(xyz: XYZTriplet): string {\n    return `${Math.round(xyz.x)}, ${Math.round(xyz.y)}, ${Math.round(xyz.z)}`;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewButtonComponent.html":{"url":"components/ReviewButtonComponent.html","title":"component - ReviewButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to launch the ReviewModal component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-button\n            \n\n            \n                styleUrls\n                ./review-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchReviewModal\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrors\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                            \n                                registrationIsValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                enterErrorMode\n                            \n                            \n                                registerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:54\n                            \n                        \n\n                \n                    \n                            Creates an instance of review button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayErrors\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:35\n                            \n                        \n                \n                    \n                        Whether or not the app is currently displaying errors\nDecides how the button should be styled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metaData\n                    \n                \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:29\n                            \n                        \n                \n                    \n                        Input object of information to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registrationCallbackSet\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:24\n                            \n                        \n                \n                    \n                        Input to set whether the component should be in register (true) or download (false) mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registrationIsValid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:42\n                            \n                        \n                \n                    \n                        Whether or not all the necessary data has been inputted from\nthe user.  Decides whether or not to let the user open the\nregistration / download modal\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        enterErrorMode\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:54\n                            \n                        \n                \n                    \n                        Turns on the 'error mode' for the application.\nUsed to begin showing the user what they need to\ndo to be able to register / download.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registerData\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:47\n                            \n                        \n                \n                    \n                        Output that emits when the modal's register button was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchReviewModal\n                        \n                    \n                \n            \n            \n                \nlaunchReviewModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:100\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:68\n                \n            \n\n\n            \n                \n                    Updates the value of registrationIsValid based on the\nmeta data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:85\n                \n            \n\n\n            \n                \n                    Handles the click action for the register button.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:78\n                                \n                            \n                    \n                        \n                                Decides whether or not the download / register button should\nbe disabled.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, OnChanges, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { MetaData } from '../../../core/models/meta-data';\nimport { ReviewModalComponent } from '../review-modal/review-modal.component';\n\n\n/**\n * Component to launch the ReviewModal component.\n */\n@Component({\n  selector: 'ccf-review-button',\n  templateUrl: './review-button.component.html',\n  styleUrls: ['./review-button.component.scss']\n})\nexport class ReviewButtonComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-button';\n\n  /**\n   * Input to set whether the component should be in register (true) or download (false) mode\n   */\n  @Input() registrationCallbackSet = true;\n\n  /**\n   * Input object of information to display in the modal\n   */\n  @Input() metaData: MetaData = [];\n\n  /**\n   * Whether or not the app is currently displaying errors\n   * Decides how the button should be styled\n   */\n  @Input() displayErrors = true;\n\n  /**\n   * Whether or not all the necessary data has been inputted from\n   * the user.  Decides whether or not to let the user open the\n   * registration / download modal\n   */\n  @Input() registrationIsValid = false;\n\n  /**\n   * Output that emits when the modal's register button was clicked\n   */\n  @Output() readonly registerData = new EventEmitter();\n\n  /**\n   * Turns on the 'error mode' for the application.\n   * Used to begin showing the user what they need to\n   * do to be able to register / download.\n   */\n  @Output() readonly enterErrorMode = new EventEmitter();\n\n  /**\n   * Creates an instance of review button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param ga Analytics service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates the value of registrationIsValid based on the\n   * meta data.\n   */\n  ngOnChanges(): void {\n    this.registrationIsValid =\n      this.metaData.length >= 3 &&\n      this.metaData.slice(0, 3).every(entry => entry.value);\n  }\n\n  /**\n   * Decides whether or not the download / register button should\n   * be disabled.\n   */\n  get disabled(): boolean {\n    return !this.registrationIsValid;\n  }\n\n  /**\n   * Handles the click action for the register button.\n   */\n  registerButtonClick(event?: MouseEvent): false {\n    if (event) {\n      event.preventDefault();\n    }\n    this.enterErrorMode.emit();\n    if (this.registrationIsValid) {\n      this.ga.event('review_start', 'review_button');\n      this.launchReviewModal();\n    }\n    return false;\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchReviewModal(): void {\n    const dialogRef = this.dialog.open(ReviewModalComponent, {\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        registrationCallbackSet: this.registrationCallbackSet,\n        metaData: this.metaData\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      data => {\n        if (data) {\n          this.ga.event('register', 'review_button');\n          this.registerData.emit();\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    {{ registrationCallbackSet ? 'REVIEW AND REGISTER' : 'REVIEW AND DOWNLOAD' }}\n\n\n    \n\n    \n                \n                    ./review-button.component.scss\n                \n                .review-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: .6s;\n    font-weight: 500;\n\n    &.disabled {\n        cursor: not-allowed;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ registrationCallbackSet ? \\'REVIEW AND REGISTER\\' : \\'REVIEW AND DOWNLOAD\\' }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewButtonModule.html":{"url":"modules/ReviewButtonModule.html","title":"module - ReviewButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-button/review-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReviewModalModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewButtonComponent } from './review-button.component';\nimport { ReviewModalModule } from '../review-modal/review-modal.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [ReviewButtonComponent],\n  imports: [\n    CommonModule,\n    ReviewModalModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  exports: [ReviewButtonComponent]\n})\nexport class ReviewButtonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewModalComponent.html":{"url":"components/ReviewModalComponent.html","title":"component - ReviewModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal for reviewing the registration\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-modal\n            \n\n            \n                styleUrls\n                ./review-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ReviewModalData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:35\n                            \n                        \n\n                \n                    \n                            Creates an instance of the review modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ReviewModalData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:54\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewModalData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:44\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:35\n                        \n                    \n\n            \n                \n                    The object containing all of the review information for displaying inside the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationCallbackSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether or not the cancel registration callback is set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, HostBinding, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss']\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(()=>{\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      Registration Review\n\n      \n        \n          \n            {{ data.label }}\n            {{ data.value }}\n          \n        \n      \n\n      \n        {{ registrationCallbackSet ? 'REGISTER' : 'DOWNLOAD REGISTRATION DATA' }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./review-modal.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n:host {\n  .ccf-about.wrapper {\n    .container {\n      .content {\n        padding: 3rem;\n        background-color: white;\n\n        .title {\n            text-align: center;\n            font-size: 1.5rem;\n            margin-bottom: 0;\n          }\n\n        .mat-typography {\n            justify-content: space-around;\n            display: flex;\n\n            .display-fields {\n                margin-top: 2rem;\n                margin-bottom: 2rem;\n                width: 100%;\n\n                .field {\n                    display: flex;\n\n                    .label {\n                        width: 50%;\n                        text-align: right;\n                        padding-right: 1rem;\n                    }\n\n                    .data {\n                        width: 50%;\n                        text-align: left;\n                        padding-left: 1rem;\n                    }\n                }\n            }\n        }\n      }\n\n      .close {\n        .close-icon {\n          float: right;\n          margin-top: 1rem;\n          margin-right: 1rem;\n          cursor: pointer;\n        }\n      }\n\n      .footer {\n        padding-top: 1.5rem;\n        display: flex;\n        justify-content: space-around;\n\n        .review-button {\n            height: 3rem;\n            transition: 0.6s;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              Registration Review                                    {{ data.label }}            {{ data.value }}                                      {{ registrationCallbackSet ? \\'REGISTER\\' : \\'DOWNLOAD REGISTRATION DATA\\' }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewModalData.html":{"url":"interfaces/ReviewModalData.html","title":"interface - ReviewModalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewModalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n        \n\n\n            \n                Description\n            \n            \n                The expected format of the review modal's data input.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metaData\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metaData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metaData:         MetaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MetaData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The object containing all of the review information for displaying inside the modal\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the cancel registration callback is set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, HostBinding, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss']\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(()=>{\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewModalModule.html":{"url":"modules/ReviewModalModule.html","title":"module - ReviewModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-modal/review-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewModalComponent } from './review-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [ReviewModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatButtonModule],\n  exports: [ReviewModalComponent]\n})\nexport class ReviewModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RightSidebarComponent.html":{"url":"components/RightSidebarComponent.html","title":"component - RightSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RightSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The right sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-right-sidebar\n            \n\n            \n                styleUrls\n                ./right-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./right-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, registration: RegistrationState, page: PageState, astags: AnatomicalStructureTagState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of right sidebar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state service\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration state service\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        astags\n                                                  \n                                                        \n                                                                        AnatomicalStructureTagState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The anatomical structure tags state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-right-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { ModelState } from '../../core/store/model/model.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { AnatomicalStructureTagState } from '../../core/store/anatomical-structure-tags/anatomical-structure-tags.state';\n\n\n/**\n * The right sidebar\n */\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RightSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-right-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  /**\n   * Creates an instance of right sidebar component.\n   *\n   * @param model Model state service\n   * @param registration Registration state service\n   * @param page The page state\n   * @param astags The anatomical structure tags state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n    readonly astags: AnatomicalStructureTagState\n  ) { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n    \n\n\n    \n    \n\n    \n    \n\n    \n    \n      \n        Anatomical Structure Tags\n      \n\n      \n      \n\n      \n      \n      \n      \n\n      \n        \n        Assigned\n        \n        Added\n      \n    \n    \n\n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./right-sidebar.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 3rem);\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n\n  .scroll-wrapper {\n    // overflow-y: scroll;\n    height: 100%;\n    margin-right: 0.375rem;\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    \n\n    .container {\n      display: flex;\n      flex-direction: column;\n      min-height: 100%;\n      margin-left: 1.5rem;\n      margin-right: 0.375rem;\n\n      .info-button-container {\n        height: 3.75rem;\n        display: flex;\n        justify-content: flex-end;\n      }\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n\n        mat-expansion-panel-header {\n          padding: 0 0.5rem 0 0;\n          font-weight: bold;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          font-size: 1rem;\n        }\n      }\n\n      .tags-container {\n        // Allow tag search to overflow when displaying results\n        overflow: visible;\n\n        ::ng-deep .mat-expansion-panel-body {\n          padding-left: 0;\n          padding-right: 0;\n        }\n\n        .header {\n          height: 3rem;\n        }\n\n        .search {\n          margin-top: 1rem;\n\n          .icon.add {\n            position: absolute;\n            // Sizes and offsets found by experimentation\n            width: 3.625rem;\n            height: 3.625rem;\n            font-size: 3.625rem;\n            top: -1.9375rem;\n            right: -1.1875rem;\n          }\n        }\n\n        .tag-list {\n          max-height: 32rem;\n          margin-left: -1rem;\n        }\n\n        .tag-list-placeholder {\n          display: flex;\n          height: 4rem;\n          align-items: center;\n          justify-content: center;\n          font-weight: 400;\n        }\n\n        .legend {\n          display: flex;\n          width: 100%;\n          margin-top: 1.5rem;\n          align-items: center;\n          font-size: 0.9rem;\n\n          .dot {\n            display: inline-block;\n            width: 1rem;\n            height: 1rem;\n            border-radius: 50%;\n\n            &.assigned {\n              margin-left: 0.5rem;\n            }\n\n            &.added {\n              \n              margin-left: 1rem;\n            }\n          }\n\n          .text {\n            margin-left: 0.5rem;\n          }\n        }\n      }\n\n      .filler {\n        flex-grow: 1;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Anatomical Structure Tags                                                                Assigned                Added                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RightSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RightSidebarModule.html":{"url":"modules/RightSidebarModule.html","title":"module - RightSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    RightSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockSizeInputModule\n                        \n                        \n                            ReviewButtonModule\n                        \n                        \n                            RotationSliderModule\n                        \n                        \n                            SlicesInputModule\n                        \n                        \n                            TagListModule\n                        \n                        \n                            TagSearchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { TagListModule } from '../../shared/components/tag-list/tag-list.module';\nimport { TagSearchModule } from '../../shared/components/tag-search/tag-search.module';\nimport { ReviewButtonModule } from '../review/review-button/review-button.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\n\nimport { InfoButtonModule } from 'ccf-shared';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatExpansionModule,\n    MatDividerModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n\n    BlockSizeInputModule,\n    ReviewButtonModule,\n    RotationSliderModule,\n    SlicesInputModule,\n    TagListModule,\n    TagSearchModule,\n    InfoButtonModule\n  ],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent]\n})\nexport class RightSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rotation.html":{"url":"interfaces/Rotation.html","title":"interface - Rotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Type in which the values of the sliders are stored.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z slider value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   *\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.ga.event('rotation_update', 'rotation_slider', axis, +newRotation);\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(): void {\n    this.rotation = DEFAULT_ROTATION;\n    this.ga.event('rotation_reset', 'rotation_slider');\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationSliderComponent.html":{"url":"components/RotationSliderComponent.html","title":"component - RotationSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RotationSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that enables the setting of a Rotation object via either 3 draggable sliders\nor through an Input method.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-rotation-slider\n            \n\n            \n                styleUrls\n                ./rotation-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRotation\n                            \n                            \n                                resetRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotationChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of rotation slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotation\n                    \n                \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ROTATION\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:39\n                            \n                        \n                \n                    \n                        Input that allows the rotation to be changed from outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rotationChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:44\n                            \n                        \n                \n                    \n                        Output that emits the new rotation whenever it is changed from within the component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-rotation-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRotation\n                        \n                    \n                \n            \n            \n                \nchangeRotation(newRotation: number | string, axis: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:59\n                \n            \n\n\n            \n                \n                    Function that handles updating the rotation and emitting the new value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newRotation\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new value for one of the axis to be set to\n\n                                    \n                                \n                                \n                                    axis\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        which axis to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetRotation\n                        \n                    \n                \n            \n            \n                \nresetRotation()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:68\n                \n            \n\n\n            \n                \n                    Function to easily reset the rotations to 0 and emit this change.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   *\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.ga.event('rotation_update', 'rotation_slider', axis, +newRotation);\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(): void {\n    this.rotation = DEFAULT_ROTATION;\n    this.ga.event('rotation_reset', 'rotation_slider');\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Rotation\n  \n  refresh\n\n\n\n  X\n  \n    \n  \n  {{ rotation.x }}\n\n\n\n  Y\n  \n      \n  \n  {{ rotation.y }}\n\n\n\n  Z\n  \n      \n    \n  {{ rotation.z }}\n\n\n    \n\n    \n                \n                    ./rotation-slider.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 1.5rem;\n\n    .title {\n      font-weight: 600;\n    }\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n      \n      &:hover {\n        border-radius: 2px;\n      }\n\n    }\n  }\n\n  .slider-box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 4rem;\n    padding-left: 0.5rem;\n\n    .label {\n      width: 1rem;\n    }\n\n    .value {\n      width: 2.75rem;\n      text-align: center;\n    }\n\n    .slider-container {\n      width: 100%;\n      padding-left: 2rem;\n      padding-right: 2rem;\n      padding-bottom: 1rem;\n      padding-top: 1rem;\n\n      .slider {\n        width: 100%;\n        \n        &:not(.cdk-focused) {\n          ::ng-deep .mat-slider-thumb {\n            width: 1.25rem;\n            height: 1.25rem;\n            transform: none;\n          }\n        }\n      }\n\n      ::ng-deep .mat-slider-horizontal {\n        .mat-slider-wrapper {\n          right: 0.625rem;\n          &:after {\n            margin-top: -0.25rem;\n            height: 0.625rem !important;\n          }\n        }\n      \n        .mat-slider-ticks-container {\n          margin-top: -0.25rem;\n          height: 0.625rem;\n\n          .mat-slider-ticks {\n            height: 0.625rem;\n          }\n        }\n      \n      }\n    }\n\n    .filler {\n      flex-grow: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Rotation    refresh  X          {{ rotation.x }}  Y            {{ rotation.y }}  Z              {{ rotation.z }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RotationSliderModule.html":{"url":"modules/RotationSliderModule.html","title":"module - RotationSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    RotationSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule,\n    MatTooltipModule\n  ],\n  exports: [RotationSliderComponent]\n})\nexport class RotationSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                gizmo$\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                referenceData\n                            \n                            \n                                    Private\n                                registration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSceneNodes\n                            \n                            \n                                ngxsOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodes$\n                                \n                                \n                                    rotatedNodes$\n                                \n                                \n                                    referenceOrganNodes$\n                                \n                                \n                                    referenceOrganSimpleNodes$\n                                \n                                \n                                    nodeCollisions$\n                                \n                                \n                                    previousRegistrationNodes$\n                                \n                                \n                                    placementCube$\n                                \n                                \n                                    placementCube\n                                \n                                \n                                    rotation$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:223\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSceneNodes\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSceneNodes(organIri: string, items: VisibilityItem[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n                                    \n                                                VisibilityItem[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:239\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gizmo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:221\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        referenceData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferenceDataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:223\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegistrationState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:222\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodes$\n                    \n                \n\n                \n                    \n                        getnodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:52\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotatedNodes$\n                    \n                \n\n                \n                    \n                        getrotatedNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:80\n                                \n                            \n                    \n                        \n                                Observable of spatial nodes\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganSimpleNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganSimpleNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:90\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nodeCollisions$\n                    \n                \n\n                \n                    \n                        getnodeCollisions$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:118\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        previousRegistrationNodes$\n                    \n                \n\n                \n                    \n                        getpreviousRegistrationNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube$\n                    \n                \n\n                \n                    \n                        getplacementCube$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:157\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube\n                    \n                \n\n                \n                    \n                        getplacementCube()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:164\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotation$\n                    \n                \n\n                \n                    \n                        getrotation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:182\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { Computed, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { debounceTime, filter, map } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions]) => [\n        ...placement, ...prevNodes, ...nodes, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      debounceTime(400),\n      map(([anatomicalStructures, extractionSites, organIri]) =>\n        this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[])\n      )\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      )\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.placementCube$]).pipe(\n      filter(([_nodes, placement]) => placement.length > 0),\n      map(([nodes, placement]) => {\n        const bbox = getNodeBbox(placement[0]);\n        return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n      })\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get placementCube$(): Observable | [] {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube])\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Scene state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            showCollisions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        showCollisions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCollisions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { Computed, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { debounceTime, filter, map } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions]) => [\n        ...placement, ...prevNodes, ...nodes, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      debounceTime(400),\n      map(([anatomicalStructures, extractionSites, organIri]) =>\n        this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[])\n      )\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      )\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.placementCube$]).pipe(\n      filter(([_nodes, placement]) => placement.length > 0),\n      map(([nodes, placement]) => {\n        const bbox = getNodeBbox(placement[0]);\n        return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n      })\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get placementCube$(): Observable | [] {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube])\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig.html":{"url":"interfaces/SlicesConfig.html","title":"interface - SlicesConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Slices configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices per block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { EMPTY, Observable } from 'rxjs';\nimport {\n  debounceTime, delay, distinctUntilChanged, filter, mapTo, pluck, skipUntil, switchMap, take, tap, throttleTime,\n} from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    side: 'left',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(pluck('id'));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(pluck('blockSize'));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(pluck('rotation'));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(pluck('position'));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(pluck('slicesConfig'));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(pluck('viewType'));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(pluck('viewSide'));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(pluck('organ'));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(pluck('organIri'));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(pluck('organDimensions'));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(pluck('sex'));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(pluck('side'));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(pluck('showPrevious'));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(pluck('extractionSites'));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(pluck('anatomicalStructures'));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(pluck('extractionSets'));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      mapTo(undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      switchMap(organConfig => {\n        const organName = organConfig.name.toLowerCase();\n        const organSide = organConfig.side;\n        const ontologyId = organConfig.ontologyId;\n        // check for an id match\n        let organInfo = this.idMatches(ontologyId, organSide);\n        // if no id matches, check for a name match\n        if (!organInfo) {\n          organInfo = this.nameMatches(organName, organSide);\n        }\n        if (organInfo) {\n          this.ctx.patchState({\n            organ: organInfo,\n            sex: organConfig.sex?.toLowerCase() as 'male' | 'female',\n            side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n          });\n          return this.referenceData.state$.pipe(\n            debounceTime(100),\n            take(1),\n            delay(200),\n            tap(() => this.onOrganIriChange())\n          );\n        }\n        return EMPTY;\n      })\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n        delay(5)\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    this.ga.event('organ_select', 'organ', organ.name);\n    this.ctx.patchState({ organ });\n    if (organ.side) {\n      this.ctx.patchState({ side: organ.side });\n    }\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: Object.values(asLookup) });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: false,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name')\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig-1.html":{"url":"interfaces/SlicesConfig-1.html","title":"interface - SlicesConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface containing slices data of the tissue block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices in the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of each tissue slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlicesInputComponent.html":{"url":"components/SlicesInputComponent.html","title":"component - SlicesInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlicesInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering data on block slices\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-slices-input\n            \n\n            \n                styleUrls\n                ./slices-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slices-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshSlices\n                            \n                            \n                                updateSlicesData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfigChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasThicknessValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of slices input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        slicesConfig\n                    \n                \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_SLICES_CONFIG\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:36\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        slicesConfigChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:41\n                            \n                        \n                \n                    \n                        Emitter for slice data values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-slices-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshSlices\n                        \n                    \n                \n            \n            \n                \nrefreshSlices()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:73\n                \n            \n\n\n            \n                \n                    Refreshes all slice data values to empty values\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSlicesData\n                        \n                    \n                \n            \n            \n                \nupdateSlicesData(input: InputEvent, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:63\n                \n            \n\n\n            \n                \n                    Limits the length of the input if needed and updates values when an input changes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            InputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        InputEvent from the input element which contains the new value\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the dimension to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasThicknessValue\n                    \n                \n\n                \n                    \n                        gethasThicknessValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:46\n                                \n                            \n                    \n                        \n                                Returns whether a valid thickness value has been entered.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n    \n        \n  Tissue Sections\n  \n  \n    refresh\n  \n\n\n\n  \n    Thickness\n    \n    μm\n  \n\n  \n    # Sections\n    \n  \n\n\n    \n\n    \n                \n                    ./slices-input.component.scss\n                \n                :host {\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: 600;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .slices-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      &.mat-focused .suffix, .suffix.show {\n        display: initial;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Sections        refresh        Thickness        μm        # Sections      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlicesInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlicesInputModule.html":{"url":"modules/SlicesInputModule.html","title":"module - SlicesInputModule","body":"\n                   \n\n\n\n\n    Modules\n    SlicesInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { NumbersOnlyModule } from 'ccf-shared';\nimport { SlicesInputComponent } from './slices-input.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    NumbersOnlyModule\n  ],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent]\n})\nexport class SlicesInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StageNavComponent.html":{"url":"components/StageNavComponent.html","title":"component - StageNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StageNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that allows the user to change the viewing angle and rendering mode of the stage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-stage-nav\n            \n\n            \n                styleUrls\n                ./stage-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stage-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                isDropdownActive\n                            \n                            \n                                isDropdownHidden\n                            \n                            \n                                labelRef\n                            \n                            \n                                optionsRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleClick\n                            \n                            \n                                updateSide\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                useDropdownMenu\n                            \n                            \n                                view3D\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChange\n                            \n                            \n                                view3DChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    useDropdownMenu\n                                \n                                \n                                    labelEl\n                                \n                                \n                                    optionsEl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of stage nav component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         Side\n\n                    \n                \n                \n                    \n                        Default value : 'anterior'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows changing the current side from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:23\n                            \n                        \n                \n                    \n                        Whether to use a drop down menu instead of a options bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3D\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:32\n                            \n                        \n                \n                    \n                        Input that allows toggling of 3D view on / off from outside the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:35\n                            \n                        \n                \n                    \n                        Output that emits whenever the current side selection changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3DChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:38\n                            \n                        \n                \n                    \n                        Output that emits whenever the 3D view is toggled on / off\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-stage-nav\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:76\n                \n            \n\n\n            \n                \n                    Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleClick\n                        \n                    \n                \n            \n            \n                \nhandleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:76\n                \n            \n\n\n            \n                \n                    Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSide\n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: Side)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:91\n                \n            \n\n\n            \n                \n                    Handles the updating of the side selection and calling the event emitter\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                Side\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new selected side\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateView\n                        \n                    \n                \n            \n            \n                \nupdateView(selection: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:109\n                \n            \n\n\n            \n                \n                    Handles updating of the boolean that keeps track of current view\nand calling the event emitter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        3D (true) or Register (false)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:47\n                        \n                    \n\n            \n                \n                    Whether this component shows a dropdown menu or an options bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownHidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:50\n                        \n                    \n\n            \n                \n                    Whether the dropdown menu is hidden\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:41\n                        \n                    \n\n            \n                \n                    Label for dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionsRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('options', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:44\n                        \n                    \n\n            \n                \n                    Options dropdown\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n\n\n                \n                    \n                        setuseDropdownMenu(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:23\n                                \n                            \n                    \n                        \n                                Whether to use a drop down menu instead of a options bar\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        labelEl\n                    \n                \n\n                \n                    \n                        getlabelEl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:53\n                                \n                            \n                    \n                        \n                                Simple helper for accessing the native label element\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        optionsEl\n                    \n                \n\n                \n                    \n                        getoptionsEl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:58\n                                \n                            \n                    \n                        \n                                Simple helper for accessing the native options element\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output, ViewChild,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior' | '3D';\n\n/** Component that allows the user to change the viewing angle and rendering mode of the stage. */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StageNavComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-stage-nav';\n\n  /** Whether to use a drop down menu instead of a options bar */\n  @Input()\n  set useDropdownMenu(value: boolean) {\n    this.isDropdownActive = value;\n    this.isDropdownHidden = true;\n  }\n\n  /** Input that allows changing the current side from outside the component */\n  @Input() side: Side = 'anterior';\n\n  /** Input that allows toggling of 3D view on / off from outside the component */\n  @Input() view3D = false;\n\n  /** Output that emits whenever the current side selection changes */\n  @Output() readonly sideChange = new EventEmitter();\n\n  /** Output that emits whenever the 3D view is toggled on / off */\n  @Output() readonly view3DChange = new EventEmitter();\n\n  /** Label for dropdown */\n  @ViewChild('label', { static: true }) labelRef: ElementRef;\n\n  /** Options dropdown */\n  @ViewChild('options', { static: true }) optionsRef: ElementRef;\n\n  /** Whether this component shows a dropdown menu or an options bar */\n  isDropdownActive = false;\n\n  /** Whether the dropdown menu is hidden */\n  isDropdownHidden = true;\n\n  /** Simple helper for accessing the native label element */\n  private get labelEl(): HTMLElement {\n    return this.labelRef.nativeElement;\n  }\n\n  /** Simple helper for accessing the native options element */\n  private get optionsEl(): HTMLElement {\n    return this.optionsRef.nativeElement;\n  }\n\n  /**\n   * Creates an instance of stage nav component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   *\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const { isDropdownHidden, labelEl, optionsEl } = this;\n\n    if (labelEl.contains(target)) {\n      this.isDropdownHidden = !isDropdownHidden;\n    } else if (!optionsEl.contains(target)) {\n      this.isDropdownHidden = true;\n    }\n  }\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   *\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.ga.event('side_update', 'stage_nav', selection);\n\n    if (selection === '3D') {\n      this.updateView(true);\n    } else {\n      this.updateView(false);\n      this.side = selection;\n      this.sideChange.emit(this.side);\n    }\n  }\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   *\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.ga.event('view_update', 'stage_nav', selection ? '3D' : 'Register');\n    this.view3DChange.emit(this.view3D);\n  }\n}\n\n    \n\n    \n        \n  Options\n  arrow_drop_down\n\n\n\n  \n    Left\n    Right\n    Anterior\n    Posterior\n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./stage-nav.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  .dropdown-label {\n    display: none;\n    align-items: center;\n\n    mat-label,\n    mat-icon {\n      line-height: 1.5rem;\n    }\n\n    &.dropdown {\n      display: flex;\n      cursor: pointer;\n      align-items: start;\n    }\n  }\n\n  .stage-options {\n    display: flex;\n    align-items: center;\n\n    .input-group {\n      .nav-input {\n        margin-right: 1.5rem;\n        margin-bottom: 1.5rem;\n      }\n    }\n\n    .view-slider {\n      margin-left: -1rem;\n      margin-bottom: 1.5rem;\n      white-space: nowrap;\n    }\n\n    &.dropdowncontainer {\n      display: flex;\n      flex-direction: column;\n      border-radius: 0.25rem;\n      width: 16.5rem;\n      position: absolute;\n      top: 3.5rem;\n      z-index: 1;\n      transition: opacity 0.25s;\n\n      :first-child {\n        margin-top: 0.5rem;\n      }\n\n      :last-child {\n        margin-bottom: 0.5rem;\n      }\n\n      .input-group {\n        margin-left: 1.5rem;\n        margin-right: 0;\n        display: flex;\n        flex-wrap: wrap;\n\n        .nav-input {\n          display: flex;\n          margin: 0;\n          margin-right: 1.5rem;\n          height: 2.5rem;\n        }\n      }\n\n      .view-slider {\n        display: flex;\n        align-items: center;\n        height: 3rem;\n        margin: 0 0.5rem;\n      }\n\n      mat-divider {\n        visibility: visible;\n        border-top: 2px solid;\n      }\n    }\n\n    &.hidden {\n      visibility: hidden;\n      opacity: 0;\n      transition: visibility 0.25s, opacity 0.25s;\n\n      mat-divider {\n        visibility: hidden;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Options  arrow_drop_down      Left    Right    Anterior    Posterior    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StageNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StageNavModule.html":{"url":"modules/StageNavModule.html","title":"module - StageNavModule","body":"\n                   \n\n\n\n\n    Modules\n    StageNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_StageNavModule_imports\n\n\n\ncluster_StageNavModule_declarations\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\n\n\nStageNavModule\n\nStageNavModule\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LabeledSlideToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDividerModule,\n    LabeledSlideToggleModule,\n    MatTooltipModule\n  ],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent]\n})\nexport class StageNavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\nimport { AnatomicalStructureTagState } from './anatomical-structure-tags/anatomical-structure-tags.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ModelState } from './model/model.state';\nimport { PageState } from './page/page.state';\nimport { ReferenceDataState } from './reference-data/reference-data.state';\nimport { RegistrationState } from './registration/registration.state';\nimport { SceneState } from './scene/scene.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Must come before all other plugins except the ngxs data plugin!\n    NgxsStoragePluginModule.forRoot({\n      key: ['registration.registrations']\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                A tag\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         TagId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TagId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"assigned\" | \"added\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"assigned\" | \"added\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How the tag was added\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagListComponent.html":{"url":"components/TagListComponent.html","title":"component - TagListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        A list of removable tags\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tag-list\n            \n\n            \n                styleUrls\n                ./tag-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tag-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeTag\n                            \n                            \n                                tagClasses\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tagRemoved\n                            \n                            \n                                tagsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of tag list component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tags\n                    \n                \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:23\n                            \n                        \n                \n                    \n                        The tags\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tagRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:28\n                            \n                        \n                \n                    \n                        Emits when a tag is removed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tagsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:33\n                            \n                        \n                \n                    \n                        Emits the new array of tags when a tag has been removed\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tag-list\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeTag\n                        \n                    \n                \n            \n            \n                \nremoveTag(tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:62\n                \n            \n\n\n            \n                \n                    Removes a tag from the list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tag to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagClasses\n                        \n                    \n                \n            \n            \n                \ntagClasses(tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagId\n                        \n                    \n                \n            \n            \n                \ntagId(_index: number, tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:49\n                \n            \n\n\n            \n                \n                    Gets the unique identifier for a tag\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A tag\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { Tag } from '../../../core/models/anatomical-structure-tag';\n\n\n/**\n * A list of removable tags\n */\n@Component({\n  selector: 'ccf-tag-list',\n  templateUrl: './tag-list.component.html',\n  styleUrls: ['./tag-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagListComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-list';\n\n  /**\n   * The tags\n   */\n  @Input() tags: Tag[];\n\n  /**\n   * Emits when a tag is removed\n   */\n  @Output() readonly tagRemoved = new EventEmitter();\n\n  /**\n   * Emits the new array of tags when a tag has been removed\n   */\n  @Output() readonly tagsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of tag list component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Gets the unique identifier for a tag\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns An identifier\n   */\n  tagId(_index: number, tag: Tag): unknown {\n    return tag.id;\n  }\n\n  tagClasses(tag: Tag): string[] {\n    return tag.type === 'added' ? ['added'] : ['assigned'];\n  }\n\n  /**\n   * Removes a tag from the list\n   *\n   * @param tag Tag to remove\n   */\n  removeTag(tag: Tag): void {\n    this.tags = this.tags.filter(obj => obj !== tag);\n    this.ga.event('tag_removed', 'tag_list', tag.label);\n    this.tagRemoved.emit(tag);\n    this.tagsChange.emit(this.tags);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ tag.label }}\n    cancel\n  \n\n\n    \n\n    \n                \n                    ./tag-list.component.scss\n                \n                :host {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  ::ng-deep .mat-chip-list-wrapper {\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tag.label }}    cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagListModule.html":{"url":"modules/TagListModule.html","title":"module - TagListModule","body":"\n                   \n\n\n\n\n    Modules\n    TagListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_declarations\n\n\n\ncluster_TagListModule_exports\n\n\n\n\nTagListComponent\n\nTagListComponent\n\n\n\nTagListModule\n\nTagListModule\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/tag-list/tag-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TagListComponent } from './tag-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatChipsModule,\n    MatIconModule\n  ],\n  declarations: [TagListComponent],\n  exports: [TagListComponent],\n})\nexport class TagListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagSearchComponent.html":{"url":"components/TagSearchComponent.html","title":"component - TagSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for searching, selecting, and adding tags.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tag-search\n            \n\n            \n                styleUrls\n                ./tag-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tag-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkedResults\n                            \n                            \n                                closeSearch\n                            \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                countMapping\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroy$\n                            \n                            \n                                resultsVisible\n                            \n                            \n                                    Readonly\n                                searchControl\n                            \n                            \n                                searchResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTags\n                            \n                            \n                                closeResults\n                            \n                            \n                                    Private\n                                executeSearch\n                            \n                            \n                                    Private\n                                getUpdatedCheckedResults\n                            \n                            \n                                hasCheckedTags\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openResults\n                            \n                            \n                                tagId\n                            \n                            \n                                    Private\n                                truncateResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                            \n                                search\n                            \n                            \n                                searchLimit\n                            \n                            \n                                searchThrottle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                added\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                focusin\n                            \n                            \n                                window:click\n                            \n                            \n                                window:focusin\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, ga: GoogleAnalyticsService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:73\n                            \n                        \n\n                \n                    \n                            Creates an instance of tag search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Element for this component\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to change detector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add Anatomical Structures ...'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:37\n                            \n                        \n                \n                    \n                        Placeholder text\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:40\n                            \n                        \n                \n                    \n                        Search method\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchLimit\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:43\n                            \n                        \n                \n                    \n                        Maximum number of results to show\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        searchThrottle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:46\n                            \n                        \n                \n                    \n                        Throttle time between search calls\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        added\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:49\n                            \n                        \n                \n                    \n                        Emits when tags are added\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tag-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Opens the results panel\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        focusin\n                        \n                    \n                \n            \n            \n                \nfocusin()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Opens the results panel\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:click(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:163\n                \n            \n\n\n            \n                \n                    Closes the results panel\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DOM event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:focusin\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:focusin(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:163\n                \n            \n\n\n            \n                \n                    Closes the results panel\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DOM event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTags\n                        \n                    \n                \n            \n            \n                \naddTags()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:132\n                \n            \n\n\n            \n                \n                    Emits selected tags and resets the search and selections\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeResults\n                        \n                    \n                \n            \n            \n                \ncloseResults(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:click', ['$event'])@HostListener('window:focusin', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:163\n                \n            \n\n\n            \n                \n                    Closes the results panel\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        DOM event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        executeSearch\n                        \n                    \n                \n            \n            \n                \n                    \n                    executeSearch(text: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:179\n                \n            \n\n\n            \n                \n                    Executes a search on a piece of text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Search text\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObservableInput\n\n                    \n                    \n                        An observable of the search result.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getUpdatedCheckedResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedCheckedResults(result: TagSearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:218\n                \n            \n\n\n            \n                \n                    Computes a new checked object for result items. Already checked items are preserved.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                TagSearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New results\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Record\n\n                    \n                    \n                        A new checked object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasCheckedTags\n                        \n                    \n                \n            \n            \n                \nhasCheckedTags()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:125\n                \n            \n\n\n            \n                \n                    Determines whether any tags have been checked\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if any tag has been checked by the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:104\n                \n            \n\n\n            \n                \n                    Cleans up component on destruction\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openResults\n                        \n                    \n                \n            \n            \n                \nopenResults()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')@HostListener('focusin')\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Opens the results panel\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagId\n                        \n                    \n                \n            \n            \n                \ntagId(_index: number, tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:116\n                \n            \n\n\n            \n                \n                    Extracts the tag identifier\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A tag\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TagId\n\n                    \n                    \n                        The identifier corresponding to the tag\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        truncateResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    truncateResults(result: TagSearchResult)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:198\n                \n            \n\n\n            \n                \n                    Truncates the number of results returned by a search\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                TagSearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The results\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TagSearchResult\n\n                    \n                    \n                        Results with at most searchLimit items\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checkedResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:67\n                        \n                    \n\n            \n                \n                    Object of currently checked search results\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('closeSearch', {read: ElementRef, static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:52\n                        \n                    \n\n            \n                \n                    Element for close search button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        countMapping\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    '=1': '1 result',\n    other: '# results'\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:55\n                        \n                    \n\n            \n                \n                    Mapping for pluralizing the result total count\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:73\n                        \n                    \n\n            \n                \n                    Emits and completes when component is destroyed. Used to clean up observables.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:70\n                        \n                    \n\n            \n                \n                    Whether results are shown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        searchControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:61\n                        \n                    \n\n            \n                \n                    Search field controller\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchResults\n                        \n                    \n                \n            \n                \n                    \n                        Default value : EMPTY_RESULT\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts:64\n                        \n                    \n\n            \n                \n                    Search results\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input,\n  OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { from, interval, ObservableInput, Subject } from 'rxjs';\nimport { catchError, map, switchMap, takeUntil, throttle } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../../core/models/anatomical-structure-tag';\n\n\n/** Default search results limit */\nconst DEFAULT_SEARCH_LIMIT = 5;\n/** Default search throttle time in ms */\nconst DEFAULT_SEARCH_THROTTLE = 100;\n/** Empty search result object */\nconst EMPTY_RESULT: TagSearchResult = { totalCount: 0, results: [] };\n\n\n/**\n * Component for searching, selecting, and adding tags.\n */\n@Component({\n  selector: 'ccf-tag-search',\n  templateUrl: './tag-search.component.html',\n  styleUrls: ['./tag-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagSearchComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-search';\n\n  /** Placeholder text */\n  @Input() placeholder = 'Add Anatomical Structures ...';\n\n  /** Search method */\n  @Input() search?: (text: string, limit: number) => ObservableInput;\n\n  /** Maximum number of results to show */\n  @Input() searchLimit?: number;\n\n  /** Throttle time between search calls */\n  @Input() searchThrottle?: number;\n\n  /** Emits when tags are added */\n  @Output() readonly added = new EventEmitter();\n\n  /** Element for close search button */\n  @ViewChild('closeSearch', { read: ElementRef, static: false }) closeSearch: ElementRef;\n\n  /** Mapping for pluralizing the result total count */\n  readonly countMapping = {\n    '=1': '1 result',\n    other: '# results'\n  };\n\n  /** Search field controller */\n  readonly searchControl = new FormControl();\n\n  /** Search results */\n  searchResults = EMPTY_RESULT;\n\n  /** Object of currently checked search results */\n  checkedResults: Record = {};\n\n  /** Whether results are shown */\n  resultsVisible = false;\n\n  /** Emits and completes when component is destroyed. Used to clean up observables. */\n  private readonly destroy$ = new Subject();\n\n  /**\n   * Creates an instance of tag search component.\n   *\n   * @param el Element for this component\n   * @param ga Analytics service\n   * @param cdr Reference to change detector\n   */\n  constructor(\n    private readonly el: ElementRef,\n    private readonly ga: GoogleAnalyticsService,\n    cdr: ChangeDetectorRef\n  ) {\n    this.searchControl.valueChanges.pipe(\n      takeUntil(this.destroy$),\n      throttle(\n        () => interval(this.searchThrottle ?? DEFAULT_SEARCH_THROTTLE),\n        { leading: true, trailing: true }\n      ),\n      switchMap(this.executeSearch),\n    ).subscribe(result => {\n      this.searchResults = result;\n      this.checkedResults = this.getUpdatedCheckedResults(result);\n      cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up component on destruction\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Extracts the tag identifier\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns The identifier corresponding to the tag\n   */\n  tagId(_index: number, tag: Tag): TagId {\n    return tag.id;\n  }\n\n  /**\n   * Determines whether any tags have been checked\n   *\n   * @returns true if any tag has been checked by the user\n   */\n  hasCheckedTags(): boolean {\n    return Object.values(this.checkedResults).some(v => v);\n  }\n\n  /**\n   * Emits selected tags and resets the search and selections\n   */\n  addTags(): void {\n    const { searchControl, searchResults, checkedResults } = this;\n    const tags = searchResults.results.filter(tag => checkedResults[tag.id]);\n\n    if (tags.length > 0) {\n      searchControl.reset();\n      this.searchResults = EMPTY_RESULT;\n      this.checkedResults = {};\n      this.ga.event('tags_added', 'tag_search', tags.map(tag => tag.label).join(','));\n      this.added.emit(tags);\n    }\n  }\n\n  /**\n   * Opens the results panel\n   */\n  @HostListener('click') // eslint-disable-line\n  @HostListener('focusin') // eslint-disable-line\n  openResults(): void {\n    if (!this.resultsVisible) {\n      this.resultsVisible = true;\n    }\n  }\n\n  /**\n   * Closes the results panel\n   *\n   * @param event DOM event\n   */\n  @HostListener('window:click', ['$event']) // eslint-disable-line\n  @HostListener('window:focusin', ['$event']) // eslint-disable-line\n  closeResults(event: Event): void {\n    const { closeSearch } = this;\n    if (this.resultsVisible && event.target instanceof Node) {\n      if (!this.el.nativeElement.contains(event.target) || closeSearch.nativeElement.contains(event.target)) {\n        this.resultsVisible = false;\n      }\n    }\n  }\n\n  /**\n   * Executes a search on a piece of text.\n   *\n   * @param text Search text\n   * @returns An observable of the search result.\n   */\n  @Bind\n  private executeSearch(text: string): ObservableInput {\n    const { search, searchLimit = DEFAULT_SEARCH_LIMIT } = this;\n    if (!text || !search) {\n      return [EMPTY_RESULT];\n    }\n\n    return from(search(text, searchLimit)).pipe(\n      catchError(() => [EMPTY_RESULT]),\n      map(this.truncateResults)\n    );\n  }\n\n  /**\n   * Truncates the number of results returned by a search\n   *\n   * @param result The results\n   * @returns Results with at most `searchLimit` items\n   */\n  @Bind\n  private truncateResults(result: TagSearchResult): TagSearchResult {\n    const { searchLimit = DEFAULT_SEARCH_LIMIT } = this;\n    const items = result.results;\n\n    if (items.length > searchLimit) {\n      return {\n        ...result,\n        results: items.slice(0, searchLimit)\n      };\n    }\n\n    return result;\n  }\n\n  /**\n   * Computes a new checked object for result items. Already checked items are preserved.\n   *\n   * @param result New results\n   * @returns A new checked object\n   */\n  private getUpdatedCheckedResults(result: TagSearchResult): Record {\n    const prev = this.checkedResults;\n    return result.results.reduce((acc, { id }) => {\n      acc[id] = prev[id] ?? false;\n      return acc;\n    }, {});\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n    \n      add\n    \n  \n\n  \n    \n      \n        {{ result.label }}\n      \n    \n\n    \n      {{ searchResults.totalCount | i18nPlural:countMapping }}\n    \n  \n\n\n    \n\n    \n                \n                    ./tag-search.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n\n  .spacer {\n    // Calculated by adding up all padding/margin/height of material form fields\n    height: 3.25rem;\n  }\n\n  .overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 10;\n\n    .search-box {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      height: 3rem;\n\n      .add-button {\n        border-radius: 0.25rem;\n        border: none;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n        height: 100%;\n      }\n    }\n\n    .results {\n      margin-top: 0.5rem;\n\n      .count {\n        margin-top: 0.5rem;\n        font-size: 0.75rem;\n        text-align: end;\n      }\n    }\n\n    ::ng-deep {\n      .mat-form-field-wrapper {\n        padding-bottom: 0;\n        border-radius: 0.5rem;\n\n        .mat-form-field-flex {\n          padding-right: 0 !important;\n        }\n      }\n\n      .mat-form-field-outline {\n        opacity: 1 !important;\n      }\n\n      .mat-form-field-outline-thick {\n        opacity: 0 !important;\n      }\n\n      .mat-form-field-infix {\n        padding: 0.063rem;\n        padding-top: 0.313rem;\n        border: 0;\n      }\n    }\n\n    &.expanded {\n      ::ng-deep {\n        .mat-form-field-wrapper {\n          box-shadow: 0rem 0rem 0.3rem 0.1rem #9e9e9e5e;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                add                          {{ result.label }}                    {{ searchResults.totalCount | i18nPlural:countMapping }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagSearchModule.html":{"url":"modules/TagSearchModule.html","title":"module - TagSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TagSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\ncluster_TagSearchModule_exports\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/tag-search/tag-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TagSearchComponent } from './tag-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n  ],\n  declarations: [TagSearchComponent],\n  exports: [TagSearchComponent]\n})\nexport class TagSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagSearchResult.html":{"url":"interfaces/TagSearchResult.html","title":"interface - TagSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Partial results up to a limit\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of possible results\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                element\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyThemeClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:83\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:39\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:21\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:71\n                \n            \n\n\n            \n                \n                    Binds theming service to a component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            ElementRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:60\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:48\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:16\n                        \n                    \n\n            \n                \n                    Default theme class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:18\n                        \n                    \n\n            \n                \n                    Currently active theme class.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, ElementRef, Inject, Injector, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element: ElementRef;\n  private injector: Injector;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:85\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:65\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:75\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:97\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:40\n                        \n                    \n\n            \n                \n                    Whether the owning drawer is opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                        \n                    \n\n            \n                \n                    Position of the owning side drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:27\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      ([expand, collapse] = [collapse, expand]);\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  arrow_right\n\n\n  arrow_left\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  transition: .25s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: absolute;\n    right: 0rem;\n    transition: .6s;\n    padding-left: .15rem;\n\n    &.hidden {\n      opacity: 0;\n    }\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  right: 0.3rem;\n  top: .675rem;\n  padding-top: .05rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  arrow_right  arrow_left'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, Subscription, ReplaySubject } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState, RUI_ORGANS } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList = RUI_ORGANS;\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserName.html":{"url":"interfaces/UserName.html","title":"interface - UserName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                User name data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new FormControl('', [Validators.required]);\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new FormControl('', [Validators.required]);\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalComponent.html":{"url":"components/VideoModalComponent.html","title":"component - VideoModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a youtube video inside of an angular material modal.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal\n            \n\n            \n                styleUrls\n                ./video-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                loadYoutubePlayerAPI\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer2: Renderer2, dialogRef: MatDialogRef, data, document: Document)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer2\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:46\n                \n            \n\n\n            \n                \n                    Closes the video modal component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYoutubePlayerAPI\n                        \n                    \n                \n            \n            \n                \nloadYoutubePlayerAPI()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:37\n                \n            \n\n\n            \n                \n                    loads the IFrame Player API code asynchronously from YouTube.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:30\n                \n            \n\n\n            \n                \n                    load the youtube player api in on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding, Inject, Renderer2 } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Component for displaying a youtube video inside of an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal',\n  templateUrl: './video-modal.component.html',\n  styleUrls: ['./video-modal.component.scss']\n})\nexport class VideoModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal';\n\n  /**\n   * Creates an instance of video modal component.\n   */\n  constructor(\n    private renderer2: Renderer2,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown,\n    @Inject(DOCUMENT) private document: Document\n  ) { }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    this.loadYoutubePlayerAPI();\n  }\n\n  /**\n   * loads the IFrame Player API code asynchronously from YouTube.\n   */\n  loadYoutubePlayerAPI(): void {\n    const script = this.renderer2.createElement('script') as HTMLScriptElement;\n    script.src = 'https://www.youtube.com/iframe_api';\n    this.renderer2.appendChild(this.document.body, script);\n  }\n\n  /**\n   * Closes the video modal component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    \n        clear\n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./video-modal.component.scss\n                \n                ::ng-deep {\n  .mat-dialog-container {\n    padding: 0;\n  }\n\n  .mat-dialog-content {\n    display: block;\n    margin: auto;\n    padding: 0;\n    max-height: 65vh;\n    overflow: auto;\n    width: fit-content;\n  }\n}\n\n:host {\n  .video-modal.wrapper {\n    width: fit-content;\n\n    .container {\n      position: relative;\n\n      .content {\n        padding: 0.5rem;\n        padding-top: 3rem;\n        width: fit-content;\n        border-radius: .5rem;\n      }\n\n      .close-icon {\n        cursor: pointer;\n        position: absolute;\n        right: 0rem;\n        font-size: 2.5rem;\n        width: 2.5rem;\n        height: 2.5rem;\n        transition: .5s color;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalLauncherComponent.html":{"url":"components/VideoModalLauncherComponent.html","title":"component - VideoModalLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for launching an angular material modal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal-launcher\n            \n\n            \n                styleUrls\n                ./video-modal-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchVideoModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal launcher component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n                \n                    \n                        Input used to toggle the launcher on and off.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal-launcher\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchVideoModal\n                        \n                    \n                \n            \n            \n                \nlaunchVideoModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:32\n                \n            \n\n\n            \n                \n                    Launches the video modal component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { VideoModalComponent } from '../video-modal/video-modal.component';\n\n/**\n * Component for launching an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal-launcher',\n  templateUrl: './video-modal-launcher.component.html',\n  styleUrls: ['./video-modal-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoModalLauncherComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal-launcher';\n\n  /**\n   * Input used to toggle the launcher on and off.\n   */\n  @Input() visible = true;\n\n  /**\n   * Creates an instance of video modal launcher component.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Launches the video modal component.\n   */\n  launchVideoModal(): void {\n    this.dialog.open(VideoModalComponent, {\n      width: '46rem',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n    WATCH\n    \"How to use the HuBMAP Registration User Interface\"\n\n\n    play_circle_outline\n\n    \n\n    \n                \n                    ./video-modal-launcher.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n\n    .video-description {\n        margin-bottom: 1.5rem;\n        text-align: center;\n        width: 30rem;\n\n        .title {\n            margin-bottom: 1rem;\n        }\n    }\n\n    .play-icon-button {\n        cursor: pointer;\n        font-size: 5rem;\n        width: 5rem;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    WATCH    \"How to use the HuBMAP Registration User Interface\"    play_circle_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalLauncherModule.html":{"url":"modules/VideoModalLauncherModule.html","title":"module - VideoModalLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoModalLauncherComponent } from './video-modal-launcher.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ VideoModalLauncherComponent ],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ VideoModalLauncherComponent ]\n})\nexport class VideoModalLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalModule.html":{"url":"modules/VideoModalModule.html","title":"module - VideoModalModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\ncluster_VideoModalModule_exports\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoModalComponent } from './video-modal.component';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ VideoModalComponent ],\n  imports: [\n    CommonModule,\n    YouTubePlayerModule,\n    MatIconModule,\n    MatDialogModule\n  ],\n  exports: [ VideoModalComponent ]\n})\nexport class VideoModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisibilityItem.html":{"url":"interfaces/VisibilityItem.html","title":"interface - VisibilityItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisibilityItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/visibility-item.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for visibility item data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            visible\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Opacity value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tooltip text to be displayed in the stage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the item is currently highlighted\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface VisibilityItem {\n  /**\n   * Id of the item\n   */\n  id: string | number;\n\n  /**\n   * Name of the item\n   */\n  name: string;\n\n  /**\n   * Whether the item is currently highlighted\n   */\n  visible: boolean;\n\n  /**\n   * Opacity value\n   */\n  opacity?: number;\n\n  /**\n   * Tooltip text to be displayed in the stage\n   */\n  tooltip?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityMenuComponent.html":{"url":"components/VisibilityMenuComponent.html","title":"component - VisibilityMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Menu for displaying visibility options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-menu\n            \n\n            \n                styleUrls\n                ./visibility-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                resetItem\n                            \n                            \n                                setAllOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                            \n                                updateOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hover\n                            \n                            \n                                itemsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility menu component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         VisibilityItem[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:26\n                            \n                        \n                \n                    \n                        Items to be displayed in the visibility menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         VisibilityItem | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:31\n                            \n                        \n                \n                    \n                        The currently selected item\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hover\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:36\n                            \n                        \n                \n                    \n                        Emits the currently hovered item\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:41\n                            \n                        \n                \n                    \n                        Emits whenever there is a change to one or more items.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-menu\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId(_index: number, item: VisibilityItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:132\n                \n            \n\n\n            \n                \n                    Returns the id of an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    item\n                                    \n                                                VisibilityItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item to get an id for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | number\n\n                    \n                    \n                        id Id of the item\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOut\n                        \n                    \n                \n            \n            \n                \nmouseOut()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:80\n                \n            \n\n\n            \n                \n                    Clears current selection and emits undefined in response to mouse out\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOver\n                        \n                    \n                \n            \n            \n                \nmouseOver(item: VisibilityItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:70\n                \n            \n\n\n            \n                \n                    Changes current selection to hovered over item and emits the item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                VisibilityItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Menu item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetItem\n                        \n                    \n                \n            \n            \n                \nresetItem()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:104\n                \n            \n\n\n            \n                \n                    Resets item to opacity 20 and visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllOpacity\n                        \n                    \n                \n            \n            \n                \nsetAllOpacity(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:119\n                \n            \n\n\n            \n                \n                    Sets all items to the same opacity and makes them visible\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Updated opacity value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility(item: VisibilityItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:55\n                \n            \n\n\n            \n                \n                    Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                VisibilityItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Menu item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \nupdateOpacity(value: number | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:90\n                \n            \n\n\n            \n                \n                    Updates opacity of the currently selected item (if one is selected) and emits the new items\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            number | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Updated opacity value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { VisibilityItem } from '../../../core/models/visibility-item';\n\n\n/**\n * Menu for displaying visibility options\n */\n@Component({\n  selector: 'ccf-visibility-menu',\n  templateUrl: './visibility-menu.component.html',\n  styleUrls: ['./visibility-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisibilityMenuComponent {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-menu';\n\n  /**\n   * Items to be displayed in the visibility menu\n   */\n  @Input() items: VisibilityItem[];\n\n  /**\n   * The currently selected item\n   */\n  @Input() selection: VisibilityItem | undefined;\n\n  /**\n   * Emits the currently hovered item\n   */\n  @Output() readonly hover = new EventEmitter();\n\n  /**\n   * Emits whenever there is a change to one or more items.\n   */\n  @Output() readonly itemsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility menu component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n   *\n   * @param item Menu item\n   */\n  toggleVisibility(item: VisibilityItem): void {\n    item = { ...item, visible: !item.visible };\n    if (this.selection && item.id === this.selection.id) {\n      this.selection = { ...this.selection, visible: item.visible };\n    }\n\n    this.ga.event('visibility_toggled', 'visibility_menu', '' + item.id, +item.visible);\n    this.updateOpacity(item.opacity);\n  }\n\n  /**\n   * Changes current selection to hovered over item and emits the item\n   *\n   * @param item Menu item\n   */\n  mouseOver(item: VisibilityItem): void {\n    this.selection = item === this.selection ? undefined : item;\n    this.hover.emit(item);\n  }\n\n  /**\n   * Clears current selection and emits undefined in response to mouse out\n   *\n   * @param item Menu item\n   */\n  mouseOut(): void {\n    this.selection = undefined;\n    this.hover.emit(undefined);\n  }\n\n  /**\n   * Updates opacity of the currently selected item (if one is selected) and emits the new items\n   *\n   * @param value Updated opacity value\n   */\n  updateOpacity(value: number | undefined): void {\n    if (!this.selection) {\n      return;\n    }\n    const updatedSelection = { ...this.selection, opacity: value };\n    this.selection = updatedSelection;\n    this.items = this.items.map(item => item.id === updatedSelection.id ? updatedSelection : item);\n    this.ga.event('opacity_update', 'visibility_menu', '' + updatedSelection.id, updatedSelection.opacity);\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Resets item to opacity 20 and visible\n   */\n  resetItem(): void {\n    if (this.selection) {\n      const updatedSelection = { ...this.selection, opacity: 20, visible: true };\n      this.selection = updatedSelection;\n      this.items = this.items.map(item => item.id === updatedSelection.id ? updatedSelection : item);\n      this.ga.event('item_reset', 'visibility_menu', '' + updatedSelection.id);\n      this.itemsChange.emit(this.items);\n    }\n  }\n\n  /**\n   * Sets all items to the same opacity and makes them visible\n   *\n   * @param value Updated opacity value\n   */\n  setAllOpacity(value: number): void {\n    this.items = this.items.map(i => ({ ...i, opacity: value, visible: true }));\n    this.ga.event('all_items_opacity_update', 'visibility_menu', undefined, value);\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Returns the id of an item\n   *\n   * @param index Index of item in items array\n   * @param item The item to get an id for\n   * @returns id Id of the item\n   */\n  getId(_index: number, item: VisibilityItem): string | number {\n    return item.id;\n  }\n}\n\n    \n\n    \n        refresh\n\n\n  \n  {{ item.name }}\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./visibility-menu.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  margin-right: 0;\n  margin-left: 0;\n  max-height: 18rem;\n  overflow-y: auto;\n  scrollbar-width: thin;\n\n  .icon {\n    padding: 0.25rem;\n    border-radius: 0.25rem;\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: .6s;\n    position: absolute;\n    top: 3rem;\n    \n    &:hover {\n      border-radius: 2px;\n    }\n  }\n\n  .item-entry {\n    display: flex;\n    height: 2.25rem;\n    align-items: center;\n    flex-shrink: 0;\n    position: relative;\n\n    .opacity {\n      cursor: pointer;\n    }\n\n    .opacity-icon {\n      z-index: 1;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n\n    .item-name {\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      margin-left: 0.5rem;\n      opacity: 1;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      max-width: calc(100% - 2.5rem);\n\n      &.hidden {\n        opacity: 0;\n      }\n    }\n\n    .slider {\n      width: calc(100% - 2rem);\n      transition-duration: 0.3s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      left: 2rem;\n      position: absolute;\n      opacity: 1;\n\n      &.hidden {\n        opacity: 0;\n        transition-duration: 0.1s;\n        transition-timing-function: ease-in-out;\n        transition-property: opacity;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'refresh    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityMenuModule.html":{"url":"modules/VisibilityMenuModule.html","title":"module - VisibilityMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { VisibilityMenuComponent } from './visibility-menu.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, OpacitySliderModule],\n  declarations: [VisibilityMenuComponent],\n  exports: [VisibilityMenuComponent]\n})\nexport class VisibilityMenuModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityToggleComponent.html":{"url":"components/VisibilityToggleComponent.html","title":"component - VisibilityToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for easily adding a visibility toggle with customizable label and\npre set up emitter.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-toggle\n            \n\n            \n                styleUrls\n                ./visibility-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                toggleLabel\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                visibilityChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows the label to be set from outside the component,\nmaking it more reusable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:23\n                            \n                        \n                \n                    \n                        Keeps track of the current visibility state of the toggle.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        visibilityChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n                \n                    \n                        Outputs the new visibility state whenever toggleVisibility()\nchanges it.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:52\n                \n            \n\n\n            \n                \n                    Toggles visibility and emits the new value.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for easily adding a visibility toggle with customizable label and\n * pre set up emitter.\n */\n@Component({\n  selector: 'ccf-visibility-toggle',\n  templateUrl: './visibility-toggle.component.html',\n  styleUrls: ['./visibility-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisibilityToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-toggle';\n\n  /**\n   * Keeps track of the current visibility state of the toggle.\n   */\n  @Input() visible = false;\n\n  /**\n   * Input that allows the label to be set from outside the component,\n   * making it more reusable.\n   */\n  @Input() toggleLabel = '';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Outputs the new visibility state whenever toggleVisibility()\n   * changes it.\n   */\n  @Output() readonly visibilityChanged = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Toggles visibility and emits the new value.\n   */\n  toggleVisibility(): void {\n    this.visible = !this.visible;\n\n    this.ga.event('visibility_toggled', 'visibility_toggle', '' + this.visible);\n    this.visibilityChanged.emit(this.visible);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            done\n        \n       \n        {{ toggleLabel }}\n        \n\n    \n\n    \n                \n                    ./visibility-toggle.component.scss\n                \n                :host {\n    height: 3rem;\n    display: flex;\n    align-items: center;\n    \n    ::ng-deep .mat-chip {\n        padding: 0 !important;\n\n        &.disabled {\n            cursor: not-allowed !important;\n        }\n    }\n\n    .toggle-div {\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        padding-top: 1.5rem;\n\n        .toggle-wrapper {\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            display: flex;\n            padding-left: .5rem;\n            cursor: pointer;\n            align-items: center;\n            position: relative;\n            border-width: 0.075rem;\n            border-style: solid;\n            height: 2.25rem;\n            border-radius: 1.5rem;\n            transition: background-color 0.2s ease-in-out;\n\n            .icon-background {\n                border-radius: 1.5rem;\n                height: 2.06rem;\n                width: 2.06rem;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                .icon {\n                    transition: .6s;\n                    position: absolute;\n                    &.block {\n                        width: 1.125rem;\n                    }\n                    &.hidden {\n                        opacity: 0;\n                    }\n                }\n            }\n            \n            .toggle-label {\n                font-weight: bold;\n                margin-left: 0.5rem;\n                padding-right: 1.25rem;\n                padding-left: 0.25rem;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    done                       {{ toggleLabel }}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityToggleModule.html":{"url":"modules/VisibilityToggleModule.html","title":"module - VisibilityToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisibilityToggleComponent } from './visibility-toggle.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\n\n@NgModule({\n  declarations: [VisibilityToggleComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatChipsModule\n  ],\n  exports: [ VisibilityToggleComponent ]\n})\nexport class VisibilityToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A object with x, y, and z channels of the same type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z channel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { EMPTY, Observable } from 'rxjs';\nimport {\n  debounceTime, delay, distinctUntilChanged, filter, mapTo, pluck, skipUntil, switchMap, take, tap, throttleTime,\n} from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    side: 'left',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(pluck('id'));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(pluck('blockSize'));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(pluck('rotation'));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(pluck('position'));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(pluck('slicesConfig'));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(pluck('viewType'));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(pluck('viewSide'));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(pluck('organ'));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(pluck('organIri'));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(pluck('organDimensions'));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(pluck('sex'));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(pluck('side'));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(pluck('showPrevious'));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(pluck('extractionSites'));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(pluck('anatomicalStructures'));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(pluck('extractionSets'));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      mapTo(undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      switchMap(organConfig => {\n        const organName = organConfig.name.toLowerCase();\n        const organSide = organConfig.side;\n        const ontologyId = organConfig.ontologyId;\n        // check for an id match\n        let organInfo = this.idMatches(ontologyId, organSide);\n        // if no id matches, check for a name match\n        if (!organInfo) {\n          organInfo = this.nameMatches(organName, organSide);\n        }\n        if (organInfo) {\n          this.ctx.patchState({\n            organ: organInfo,\n            sex: organConfig.sex?.toLowerCase() as 'male' | 'female',\n            side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n          });\n          return this.referenceData.state$.pipe(\n            debounceTime(100),\n            take(1),\n            delay(200),\n            tap(() => this.onOrganIriChange())\n          );\n        }\n        return EMPTY;\n      })\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n        delay(5)\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    this.ga.event('organ_select', 'organ', organ.name);\n    this.ctx.patchState({ organ });\n    if (organ.side) {\n      this.ctx.patchState({ side: organ.side });\n    }\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: Object.values(asLookup) });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: false,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name')\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-rui/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n            \n            interface\n            Tag\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n            \n            interface\n            TagSearchResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/documentation.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/extraction-set.ts\n            \n            interface\n            ExtractionSet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/meta-data.ts\n            \n            interface\n            MetaDataField\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/visibility-item.ts\n            \n            interface\n            VisibilityItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            function\n            globalConfigFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            variable\n            GLOBAL_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            variable\n            ruiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n            \n            injectable\n            ThemingService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n            \n            injectable\n            AnatomicalStructureTagState\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n            \n            interface\n            AnatomicalStructureTagStateModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n            \n            interface\n            DefaultIconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n            \n            variable\n            DEFAULT_ICONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            injectable\n            IconRegistryState\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            injectable\n            ModelState\n            \n                89 %\n                (34/38)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            ModelStateModel\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            SlicesConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            XYZTriplet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            variable\n            RUI_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            injectable\n            PageState\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            interface\n            PageStateModel\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            interface\n            Person\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            injectable\n            ReferenceDataState\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            interface\n            OrganData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            interface\n            ReferenceDataStateModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            function\n            applySpatialPlacement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            injectable\n            RegistrationState\n            \n                82 %\n                (14/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            interface\n            RegistrationStateModel\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            injectable\n            SceneState\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            SceneStateModel\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            function\n            getNodeBbox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n            \n            component\n            StageNavComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n            \n            component\n            VideoModalLauncherComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n            \n            component\n            VideoModalComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n            \n            component\n            LeftSidebarComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts\n            \n            component\n            RegistrationContentComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n            \n            component\n            RegistrationModalComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts\n            \n            component\n            ReviewButtonComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n            \n            component\n            ReviewModalComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n            \n            interface\n            ReviewModalData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n            \n            component\n            RightSidebarComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            component\n            BlockSizeInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            interface\n            BlockSize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            variable\n            DEFAULT_BLOCK_SIZE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n            \n            component\n            DetailsLabelComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n            \n            function\n            throwDuplicateDrawersError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            class\n            InitializationState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            variable\n            EXPAND_COLLAPSE_PARAMS_DEFAULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            ContentContainerChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerContainersChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerInitialized\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerToggled\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            variable\n            MessageService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n            \n            component\n            ToggleButtonComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n            \n            component\n            ExtractionSetDropdownComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts\n            \n            component\n            JsonFileReaderComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n            \n            component\n            LabeledSlideToggleComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n            \n            component\n            NameInputComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n            \n            interface\n            UserName\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            component\n            RotationSliderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            interface\n            Rotation\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            variable\n            DEFAULT_ROTATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            component\n            SlicesInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            interface\n            SlicesConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            variable\n            DEFAULT_SLICES_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts\n            \n            component\n            TagListComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            component\n            TagSearchComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            DEFAULT_SEARCH_LIMIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            DEFAULT_SEARCH_THROTTLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            EMPTY_RESULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts\n            \n            component\n            VisibilityMenuComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n            \n            component\n            VisibilityToggleComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            class\n            MessageChannel\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            MessageServiceConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.5.7\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.7\n        \n            @math.gl/core : ^3.5.5\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.1\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : ^5.1.1\n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^10.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^6.0.0\n        \n            n3 : ^1.8.1\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applySpatialPlacement   (projects/.../reference-data.state.ts)\n                        \n                        \n                            getNodeBbox   (projects/.../scene.state.ts)\n                        \n                        \n                            globalConfigFactory   (projects/.../config.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (projects/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applySpatialPlacement\n                        \n                    \n                \n            \n            \n                \napplySpatialPlacement(tx, placement)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    placement\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Matrix4\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getNodeBbox\n                        \n                    \n                \n            \n            \n                \ngetNodeBbox(model)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AABB\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        globalConfigFactory\n                        \n                    \n                \n            \n            \n                \nglobalConfigFactory(globals)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    globals\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GlobalConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                    Helper function for creating drawer errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The position of the drawer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockSizeInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailsLabelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExtractionSetDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JsonFileReaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabeledSlideToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeftSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NameInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RightSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RotationSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlicesInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StageNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_declarations\n\n\n\ncluster_TagListModule_exports\n\n\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\ncluster_TagSearchModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\ncluster_VideoModalModule_exports\n\n\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\nContentComponent\n\nContentComponent\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\nLeftSidebarModule -->\n\nDetailsLabelModule->LeftSidebarModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\nLeftSidebarModule -->\n\nJsonFileReaderModule->LeftSidebarModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\nLeftSidebarModule -->\n\nLabeledSlideToggleModule->LeftSidebarModule\n\n\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nLabeledSlideToggleModule->RegistrationContentModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\nRegistrationContentModule -->\n\nNameInputModule->RegistrationContentModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nTagListComponent\n\nTagListComponent\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        29 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CancelRegistrationCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            FetchPreviousRegistrationsCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            MetaData   (projects/.../meta-data.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            Organ   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            RegistrationCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Side   (projects/.../stage-nav.component.ts)\n                        \n                        \n                            TagId   (projects/.../anatomical-structure-tag.ts)\n                        \n                        \n                            User   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            ViewSide   (projects/.../model.state.ts)\n                        \n                        \n                            ViewType   (projects/.../model.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/app-web-component.component.ts\n    \n    \n        \n            \n                \n                    \n                    CancelRegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPreviousRegistrationsCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Organ\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/models/meta-data.ts\n    \n    \n        \n            \n                \n                    \n                    MetaData\n                \n            \n            \n                \n                            MetaDataField[]\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n    \n    \n        \n            \n                \n                    \n                    Side\n                \n            \n            \n                \n                    Valid values for side.\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\" | \"3D\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n    \n    \n        \n            \n                \n                    \n                    TagId\n                \n            \n            \n                \n                    Type for tag identifiers\n\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/store/model/model.state.ts\n    \n    \n        \n            \n                \n                    \n                    ViewSide\n                \n            \n            \n                \n                    Side which the model is viewed from\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ViewType\n                \n            \n            \n                \n                    Model view type\n\n                \n            \n            \n                \n                        \"register\" | \"3d\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BLOCK_SIZE   (projects/.../block-size-input.component.ts)\n                        \n                        \n                            DEFAULT_ICONS   (projects/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_ROTATION   (projects/.../rotation-slider.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_LIMIT   (projects/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_THROTTLE   (projects/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SLICES_CONFIG   (projects/.../slices-input.component.ts)\n                        \n                        \n                            DEFAULT_THEME   (projects/.../theming.service.ts)\n                        \n                        \n                            EMPTY_RESULT   (projects/.../tag-search.component.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (projects/.../drawer.component.ts)\n                        \n                        \n                            GLOBAL_CONFIG   (projects/.../config.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                        \n                            RUI_ORGANS   (projects/.../model.state.ts)\n                        \n                        \n                            ruiConfig   (projects/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_BLOCK_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 10,\n  y: 10,\n  z: 10\n}\n                    \n                \n\n            \n                \n                    Defaults for block sizes.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' }\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROTATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 0,\n  y: 0,\n  z: 0\n}\n                    \n                \n\n            \n                \n                    Default values for rotation.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n            \n                \n                    Default search results limit\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_THROTTLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n\n            \n                \n                    Default search throttle time in ms\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EMPTY_RESULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagSearchResult\n\n                    \n                \n                \n                    \n                        Default value : { totalCount: 0, results: [] }\n                    \n                \n\n            \n                \n                    Empty search result object\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SLICES_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  thickness: NaN,\n  numSlices: NaN\n}\n                    \n                \n\n            \n                \n                    Default values for slices config.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GLOBAL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Global configuration object'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ruiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConfig\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-rui/src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n)\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/model/model.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RUI_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_ORGANS\n                    \n                \n\n            \n                \n                    All organs to be displayed\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
