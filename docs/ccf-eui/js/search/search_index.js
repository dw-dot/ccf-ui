var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.199,1,3.006]],["body/modules/AppModule.html",[1,6.246,2,1.336,3,1.763,4,4.016,5,4.016,6,4.016,7,2.473,8,0.013,9,2.389,10,5.231,11,5.231,12,4.913,13,5.231,14,5.231,15,5.231,16,5.231,17,5.231,18,1.943,19,1.425,20,1.177,21,0.133,22,0.163,23,0.133,24,0.118,25,4.596,26,2.222,27,6.064,28,2.008,29,1.14,30,6.786,31,1.004,32,4.596,33,0.973,34,1.283,35,0.331,36,4.118,37,4.016,38,1.243,39,3.349,40,4.016,41,4.795,42,3.121,43,4.596,44,4.016,45,6.064,46,4.347,47,1.943,48,0.275,49,3.013,50,2.102,51,6.064,52,4.016,53,3.634,54,4.795,55,3.634,56,5.299,57,3.868,58,2.387,59,5.299,60,4.016,61,6.064,62,6.064,63,6.064,64,6.064,65,0.8,66,1.574,67,4.418,68,4.596,69,4.596,70,4.596,71,4.016,72,3.121,73,4.596,74,4.596,75,2.387,76,4.596,77,4.596,78,4.418,79,4.596,80,4.596,81,4.016,82,3.121,83,4.016,84,4.596,85,3.349,86,4.596,87,4.596,88,2.932,89,3.121,90,4.596,91,2.501,92,4.418,93,3.634,94,3.121,95,2.932,96,4.016,97,4.016,98,0.163,99,0.133,100,1.628,101,2.501,102,0.855,103,0.8,104,6.064,105,4.596,106,4.016,107,4.596,108,3.121,109,0.007,110,0.009,111,0.007]],["title/interfaces/AppOptions.html",[112,0.605,113,3.262]],["body/interfaces/AppOptions.html",[7,0.897,8,0.013,19,0.897,21,0.084,22,0.103,23,0.084,24,0.056,29,1.084,34,1.4,35,0.308,36,2.966,37,2.529,38,1.079,39,2.108,40,2.529,46,3.532,48,0.173,52,2.529,53,2.288,58,3.045,65,1.095,66,0.991,71,2.529,72,1.965,88,1.846,95,4.704,96,4.598,98,0.103,99,0.084,100,1.025,102,1.501,103,0.76,109,0.004,110,0.006,111,0.009,112,0.424,113,3.454,114,0.991,115,2.529,116,1.781,117,4.598,118,0.546,119,0.64,120,1.241,121,4.22,122,4.975,123,5.862,124,4.975,125,1.595,126,0.765,127,1.348,128,0.991,129,2.632,130,0.895,131,2.966,132,3.817,133,2.288,134,4.368,135,3.183,136,1.138,137,2.632,138,2.966,139,2.894,140,5.262,141,2.529,142,1.846,143,3.424,144,2.108,145,0.991,146,1.574,147,1.574,148,2.894,149,1.138,150,4.368,151,2.894,152,2.894,153,2.894,154,1.846,155,1.846,156,4.493,157,2.529,158,2.966,159,2.786,160,2.894,161,2.288,162,2.377,163,2.529,164,2.863,165,2.894,166,1.743,167,2.108,168,2.497,169,2.529,170,1.312,171,2.529,172,1.58,173,2.894,174,2.288,175,1.438,176,1.501,177,2.894,178,2.288,179,1.435,180,2.894,181,1.743,182,0.927,183,1.025,184,2.894,185,0.991,186,2.894,187,0.991,188,0.991,189,2.894,190,1.503,191,1.686,192,2.894,193,0.789,194,3.817,195,2.966,196,1.118,197,2.406,198,4.635,199,2.529,200,2.894,201,3.356,202,2.894,203,4.161,204,2.894,205,1.447,206,2.632,207,2.288,208,3.189,209,2.894,210,1.355,211,2.108,212,3.189,213,2.269,214,2.632,215,2.894,216,1.743,217,2.894,218,2.894,219,0.827,220,2.894,221,2.894,222,2.894,223,2.288,224,2.894,225,2.894,226,1.419,227,2.894,228,1.574,229,1.846,230,2.786,231,0.927,232,2.894,233,2.894,234,2.894,235,2.894,236,2.265,237,2.529,238,2.894,239,2.894,240,3.573,241,4.161,242,2.894,243,2.894,244,2.894,245,2.108,246,2.894,247,2.894,248,2.894,249,2.288,250,2.894,251,1.27,252,0.789,253,1.611,254,1.716,255,0.741,256,2.529,257,2.288,258,1.654,259,4.368,260,2.894,261,0.789,262,2.288,263,1.743,264,2.894,265,2.894,266,2.894,267,2.894,268,2.894,269,2.894,270,2.894,271,2.894,272,2.894,273,2.894,274,2.894,275,2.894,276,2.894,277,2.894,278,3.834,279,2.894,280,1.846,281,2.894,282,2.894,283,2.894,284,2.894,285,2.894,286,2.894,287,2.529,288,2.894,289,2.894,290,2.894,291,2.108,292,2.894,293,1.438,294,2.894,295,2.894,296,2.894,297,1.654,298,2.529,299,2.894,300,2.632,301,4.368,302,4.368,303,1.658,304,5.262,305,2.894,306,2.894,307,4.368,308,2.529,309,1.781,310,2.894,311,2.894,312,2.894,313,5.262,314,2.108,315,1.574,316,1.781,317,0.632,318,2.069,319,2.913,320,3.454,321,5.781,322,4.161,323,1.929,324,4.368,325,2.894,326,2.288,327,2.894,328,2.894,329,2.894,330,2.894,331,2.894,332,2.894,333,4.368,334,2.894,335,2.894,336,1.815,337,2.894,338,2.894,339,2.894,340,2.529,341,2.894,342,2.529,343,1.743,344,1.743,345,2.894,346,2.108,347,1.965,348,2.894,349,2.894,350,2.288,351,2.529,352,1.965,353,2.288,354,1.378,355,1.965,356,1.998,357,2.497,358,2.894,359,1.225,360,3.817,361,3.817,362,5.262,363,4.368,364,4.368,365,6.616,366,4.368,367,6.616,368,5.862,369,2.894,370,2.894,371,0.958,372,1.846,373,1.921,374,2.894,375,4.368,376,1.098,377,2.894,378,4.368,379,2.894,380,2.894,381,2.894,382,2.108,383,2.894,384,2.288,385,2.894,386,2.894,387,2.894,388,4.368,389,1.846,390,2.894,391,2.894,392,2.894,393,2.894,394,1.378,395,2.894,396,1.743,397,2.529,398,2.894,399,2.529,400,2.632,401,2.529,402,2.894,403,2.894]],["title/injectables/AppRootOverlayContainer.html",[36,2.801,404,0.991]],["body/injectables/AppRootOverlayContainer.html",[8,0.013,21,0.153,22,0.187,23,0.153,24,0.155,29,1.645,31,1.711,33,1.534,34,1.692,35,0.257,36,4.503,38,1.734,39,5.824,41,5.731,42,3.586,48,0.316,98,0.187,99,0.153,109,0.008,110,0.01,111,0.008,116,2.704,118,0.548,119,0.972,120,0.889,126,0.717,131,5.428,191,2.322,210,1.638,226,1.191,256,5.794,261,2.257,317,1.154,404,1.594,405,2.624,406,6.984,407,4.614,408,7.248,409,7.248,410,5.281,411,7.602,412,7.602,413,6.63,414,5.28,415,5.28,416,6.63,417,5.28,418,1.269,419,0.95,420,1.154,421,5.28,422,5.28,423,2.873,424,7.248,425,5.28,426,6.63,427,5.28,428,3.181,429,5.28,430,4.175,431,5.28,432,2.415,433,6.63,434,2.743,435,2.743,436,2.624,437,2.235,438,2.873,439,3.368,440,3.368,441,5.28,442,5.28,443,5.28]],["title/components/AppWebComponent.html",[9,1.279,130,0.522]],["body/components/AppWebComponent.html",[7,1.174,8,0.013,9,2.064,21,0.109,22,0.134,23,0.109,24,0.159,31,1.785,35,0.258,38,1.258,48,0.226,65,1.477,66,1.296,89,5.577,95,3.915,98,0.134,99,0.109,103,1.068,109,0.005,110,0.008,111,0.008,116,2.166,118,0.393,119,0.779,120,0.637,121,4.245,122,4.853,124,4.853,125,1.719,126,0.884,127,1.536,128,1.296,129,4.01,130,0.777,138,4.519,154,2.414,155,2.414,170,1.136,172,1.136,176,1.571,179,1.674,182,2.708,187,1.819,188,1.819,196,1.571,216,1.253,219,0.595,226,1.198,231,1.213,249,5.262,254,1.032,255,1.36,263,4.01,394,1.803,418,0.91,419,1.105,420,1.161,444,1.34,445,1.174,446,6.494,447,2.992,448,6.138,449,1.296,450,5.312,451,1.647,452,3.34,453,2.166,454,6.655,455,6.138,456,6.138,457,6.138,458,6.138,459,6.138,460,4.853,461,5.262,462,3.784,463,5.312,464,5.312,465,3.784,466,3.784,467,3.784,468,3.784,469,3.784,470,3.784,471,3.784,472,3.784,473,3.784,474,3.784,475,3.784,476,3.784,477,3.784,478,3.194,479,3.784,480,3.784,481,3.784,482,3.307,483,2.598,484,3.784,485,7.01,486,3.871,487,3.784,488,3.784,489,3.784,490,4.642,491,3.784,492,3.784,493,3.784,494,2.992,495,3.784,496,2.414,497,3.784,498,3.784,499,2.757,500,3.784,501,3.784,502,3.784,503,3.784,504,3.784,505,2.992,506,6.138,507,1.34,508,1.647,509,1.647,510,1.34,511,2.357,512,1.34,513,1.34,514,1.34,515,1.174,516,1.34,517,1.174,518,1.34,519,1.174,520,1.881,521,1.174,522,1.213,523,1.34,524,1.34,525,1.174,526,1.34,527,1.174,528,1.296,529,1.34,530,1.174,531,1.647,532,1.34,533,1.174,534,1.34,535,1.174,536,1.34,537,1.174,538,1.34,539,1.213,540,1.34,541,1.174,542,1.34,543,1.174,544,1.759,545,1.496,546,1,547,1.34,548,1.174,549,1.34,550,1.174,551,1.34,552,1.174,553,1.296,554,1.34,555,1.174,556,1.174,557,1.174,558,1.34,559,1.174,560,1.066,561,1.34,562,1.174,563,1.34,564,1.34]],["title/components/CheckboxComponent.html",[130,0.522,515,1.279]],["body/components/CheckboxComponent.html",[7,1.078,8,0.013,9,1.078,21,0.1,22,0.123,23,0.1,24,0.145,29,1.24,31,1.591,33,0.735,34,1.058,35,0.227,38,0.712,48,0.208,65,1.459,98,0.123,99,0.1,101,1.89,102,0.93,103,0.605,109,0.005,110,0.007,111,0.007,118,0.36,120,0.842,125,1.128,126,0.788,127,1.366,128,1.19,130,0.922,158,5.06,170,1.043,172,1.043,176,1.28,179,1.597,182,2.686,183,1.77,185,1.712,187,1.712,188,1.712,193,1.364,196,1.499,197,3.408,205,1.655,213,2.596,216,1.151,219,0.546,228,2.72,229,3.189,231,1.113,251,1.862,252,1.364,253,1.499,255,0.89,300,3.012,303,1.319,309,2.881,316,2.388,317,1.092,323,1.273,350,3.953,354,3.05,371,1.151,372,3.189,382,3.643,418,1.201,419,1.152,420,1.399,444,1.23,445,1.078,449,1.19,451,1.078,453,2.038,478,2.668,507,1.23,508,1.55,509,1.55,510,1.23,511,2.268,512,1.23,513,1.23,514,1.23,515,1.986,516,1.23,517,1.078,518,1.23,519,1.078,520,1.77,521,1.078,522,1.113,523,1.23,524,1.23,525,1.078,526,1.23,527,1.078,528,1.19,529,1.23,530,1.078,531,1.55,532,1.23,533,1.078,534,1.23,535,1.078,536,1.23,537,1.078,538,1.23,539,1.113,540,1.23,541,1.078,542,1.23,543,1.078,544,1.655,545,1.408,546,0.918,547,1.23,548,1.078,549,1.23,550,1.078,551,1.23,552,1.078,553,1.19,554,1.23,555,1.078,556,1.078,557,1.078,558,1.23,559,1.078,560,0.978,561,1.23,562,1.078,563,1.23,564,1.23,565,1.19,566,3.036,567,1.2,568,4.999,569,4.999,570,7.066,571,2.596,572,4.999,573,7.091,574,5.855,575,4.999,576,4.999,577,6.785,578,3.66,579,2.286,580,4.63,581,2.359,582,3.858,583,4.999,584,3.528,585,3.186,586,1.28,587,1.649,588,3.953,589,3.474,590,3.474,591,4.999,592,3.953,593,4.999,594,4.999,595,3.474,596,3.953,597,5.064,598,3.953,599,3.474,600,6.731,601,3.953,602,6.404,603,2.478,604,4.368,605,3.012,606,3.643,607,4.999,608,6.404,609,5.478,610,3.474,611,3.643,612,3.189,613,4.999,614,4.368,615,4.349,616,2.929,617,3.643,618,4.999,619,4.999,620,2.198,621,2.747,622,1.986,623,1.89,624,3.474,625,4.63,626,3.474,627,4.999,628,3.474,629,3.474,630,3.036,631,2.093,632,1.986,633,3.041,634,3.474,635,3.036,636,3.474,637,2.532,638,3.474,639,3.036,640,2.359,641,3.474,642,2.198,643,1.832,644,1.655,645,1.727,646,2.532,647,1.986,648,2.093,649,2.532,650,2.574,651,1.986,652,2.532,653,4.999,654,3.474,655,1.602,656,3.036,657,3.474,658,3.036,659,3.474]],["title/modules/CheckboxModule.html",[0,1.199,660,2.801]],["body/modules/CheckboxModule.html",[2,1.783,3,2.112,8,0.012,18,2.328,19,1.902,20,1.57,21,0.177,22,0.217,23,0.177,24,0.119,26,2.663,28,2.031,35,0.31,47,2.328,48,0.367,98,0.217,99,0.177,109,0.009,110,0.01,111,0.009,515,2.662,621,4.85,660,5.682,661,5.36,662,5.36,663,5.36,664,6.133,665,2.573,666,2.757,667,2.172,668,6.348,669,6.133]],["title/interfaces/Color.html",[112,0.605,303,1.565]],["body/interfaces/Color.html",[8,0.013,21,0.125,22,0.153,23,0.125,24,0.084,34,0.913,35,0.305,48,0.258,98,0.249,99,0.125,102,1.308,103,1.224,109,0.006,110,0.008,111,0.006,112,0.852,114,1.476,116,1.758,118,0.447,119,0.852,126,0.711,127,1.391,145,1.476,147,2.346,149,1.696,175,2.143,191,1.382,214,3.501,219,0.678,226,1.656,236,2.25,261,1.176,303,3.217,336,1.14,359,1.825,373,1.896,376,1.636,404,1.397,419,0.776,587,2.342,670,2.928,671,2.24,672,2.928,673,4.85,674,5.512,675,4.192,676,3.142,677,3.414,678,1.696,679,3.018,680,2.768,681,2.24,682,3.501,683,2.24,684,2.054,685,3.41,686,3.142,687,3.142,688,3.018,689,3.96,690,2.928,691,3.142,692,3.142,693,3.142,694,3.142,695,3.142,696,3.142,697,3.142,698,3.142,699,3.142,700,3.142,701,3.142,702,3.142,703,2.928,704,3.142,705,2.75,706,3.142,707,2.928,708,4.595,709,6.298,710,4.893,711,2.598,712,6.421,713,4.777,714,3.41,715,2.598,716,2.465,717,4.595,718,2.143,719,4.595,720,3.41,721,3.41,722,3.41,723,3.41,724,5.197,725,5.197,726,3.41,727,3.41,728,4.595,729,3.41,730,3.41,731,3.41,732,3.41,733,3.41,734,3.41,735,3.41,736,3.41,737,3.41,738,3.946,739,3.41,740,4.595,741,4.595,742,4.595,743,4.595,744,3.501,745,3.41,746,3.41,747,3.41,748,3.41]],["title/injectables/ColorAssignmentState.html",[404,0.991,718,2.05]],["body/injectables/ColorAssignmentState.html",[8,0.013,21,0.113,22,0.138,23,0.113,24,0.149,29,1.344,31,1.644,33,1.319,34,1.147,35,0.298,48,0.233,98,0.239,99,0.113,102,1.496,103,1.173,109,0.006,110,0.008,111,0.006,112,0.794,116,2.209,118,0.404,119,0.794,120,1.049,126,0.674,127,1.435,145,1.333,147,2.118,149,1.531,175,1.935,191,1.736,214,3.264,219,0.852,226,1.598,236,2.307,261,1.7,303,3.155,317,1.548,336,1.029,359,2.293,373,1.712,376,1.477,404,1.302,405,1.935,418,1.498,419,1.213,420,1.548,567,0.798,587,1.995,670,5.21,671,3.985,672,2.644,673,4.533,674,4.541,675,4.518,676,2.837,677,3.679,678,1.531,679,2.814,680,2.581,681,2.022,682,3.755,683,2.022,684,1.854,685,3.078,686,2.837,687,2.837,688,3.237,689,4.267,690,2.644,691,2.837,692,2.837,693,2.837,694,2.837,695,2.837,696,2.837,697,2.837,698,2.837,699,2.837,700,2.837,701,2.837,702,2.837,703,2.644,704,2.837,705,2.483,706,2.837,707,2.644,708,4.284,709,6.162,710,4.883,711,2.346,712,6.409,713,5.109,714,4.284,715,2.346,716,2.225,717,4.284,718,2.692,719,5.799,720,4.284,721,4.284,722,4.284,723,4.284,724,4.928,725,4.928,726,3.078,727,3.078,728,5.328,729,3.078,730,3.078,731,3.078,732,3.078,733,3.078,734,3.078,735,3.078,736,3.078,737,3.078,738,3.68,739,3.078,740,4.284,741,4.284,742,4.284,743,4.284,744,3.264,745,3.078,746,3.078,747,3.078,748,3.078,749,5.418,750,5.418,751,5.418,752,3.893,753,2.209,754,3.893,755,3.893,756,3.893,757,3.893,758,3.893,759,3.893,760,3.893,761,3.893]],["title/interfaces/ColorAssignmentStateModel.html",[112,0.605,707,2.801]],["body/interfaces/ColorAssignmentStateModel.html",[8,0.013,21,0.124,22,0.152,23,0.124,24,0.083,34,0.91,35,0.305,48,0.257,98,0.249,99,0.124,102,1.307,103,1.223,109,0.006,110,0.008,111,0.006,112,0.85,114,1.472,116,1.753,118,0.446,119,0.85,126,0.817,127,1.32,145,1.472,147,2.339,149,1.691,175,2.136,191,1.378,214,3.494,219,0.676,226,1.655,236,2.247,261,1.173,303,3.216,336,1.136,359,1.819,373,1.89,376,1.632,404,1.394,419,0.774,587,2.066,670,2.92,671,2.233,672,2.92,673,4.654,674,4.782,675,4.186,676,3.133,677,3.409,678,1.691,679,3.012,680,2.762,681,2.233,682,3.494,683,2.233,684,2.048,685,3.4,686,3.133,687,3.133,688,3.012,689,3.954,690,2.92,691,3.133,692,3.133,693,3.133,694,3.133,695,3.133,696,3.133,697,3.133,698,3.133,699,3.133,700,3.133,701,3.133,702,3.133,703,2.92,704,3.133,705,2.742,706,3.133,707,3.938,708,5.8,709,6.466,710,4.985,711,3.954,712,6.543,713,4.771,714,3.4,715,2.59,716,2.457,717,4.586,718,2.136,719,4.586,720,3.4,721,3.4,722,3.4,723,3.4,724,5.189,725,5.189,726,3.4,727,3.4,728,4.586,729,3.4,730,3.4,731,3.4,732,3.4,733,3.4,734,3.4,735,3.4,736,3.4,737,3.4,738,3.938,739,3.4,740,4.586,741,4.586,742,4.586,743,4.586,744,3.494,745,3.4,746,3.4,747,3.4,748,3.4,762,4.586]],["title/components/ContainerComponent.html",[130,0.522,517,1.279]],["body/components/ContainerComponent.html",[7,0.919,8,0.013,9,0.919,21,0.086,22,0.105,23,0.086,24,0.153,29,1.103,31,1.703,33,1.465,34,1.256,35,0.259,38,0.607,48,0.177,65,1.45,91,2.42,98,0.105,99,0.193,100,1.575,102,0.993,103,1.033,109,0.004,110,0.006,111,0.006,118,0.461,119,0.652,120,0.749,125,1.338,126,0.803,127,0.533,128,1.014,129,3.574,130,0.954,145,1.014,149,1.165,170,0.89,172,1.781,174,3.516,176,1.709,179,2.159,182,2.642,183,1.575,185,1.523,187,1.523,188,1.523,193,1.213,196,1.367,205,1.473,210,2.147,216,0.981,219,0.839,226,1.338,231,0.949,251,1.293,252,1.213,253,1.519,255,0.759,261,2.235,263,3.574,280,1.89,297,2.542,315,4.037,317,1.166,336,0.783,344,1.785,359,1.882,371,0.981,376,2.026,394,2.118,418,1.069,419,1.068,420,1.166,428,1.785,444,1.049,445,0.919,449,1.014,451,0.919,494,2.343,507,1.049,508,1.971,509,1.379,510,1.049,511,2.101,512,1.049,513,1.049,514,1.049,515,0.919,516,1.049,517,1.84,518,1.049,519,1.84,520,1.575,521,0.919,522,0.949,523,1.049,524,1.049,525,0.919,526,1.049,527,0.919,528,1.014,529,1.049,530,0.919,531,1.379,532,1.049,533,0.919,534,1.049,535,0.919,536,1.049,537,0.919,538,1.049,539,0.949,540,1.049,541,0.919,542,1.049,543,0.919,544,1.473,545,1.252,546,0.783,547,1.049,548,0.919,549,1.049,550,0.919,551,1.049,552,0.919,553,1.014,554,1.049,555,0.919,556,0.919,557,0.919,558,1.049,559,0.919,560,0.834,561,1.049,562,0.919,563,1.049,564,1.049,565,1.014,567,1.094,586,1.138,587,1.252,616,3.053,642,3.454,753,2.419,763,2.343,764,4.221,765,2.772,766,3.886,767,4.447,768,2.904,769,5.338,770,4.447,771,3.028,772,3.051,773,5.338,774,5.338,775,4.702,776,3.516,777,4.691,778,3.081,779,5.932,780,2.42,781,3.02,782,3.454,783,5.338,784,3.886,785,4.447,786,2.034,787,2.907,788,3.081,789,3.24,790,1.813,791,4.447,792,4.447,793,2.722,794,2.963,795,3.886,796,4.447,797,3.24,798,3.02,799,3.02,800,2.963,801,2.608,802,3.886,803,4.447,804,2.963,805,3.02,806,2.963,807,4.447,808,4.447,809,2.441,810,2.963,811,2.836,812,2.31,813,6.923,814,4.447,815,5.932,816,2.963,817,4.029,818,3.886,819,5.932,820,4.447,821,2.963,822,3.02,823,3.886,824,4.447,825,2.963,826,3.625,827,3.24,828,2.963,829,2.963,830,3.886,831,2.963,832,2.963,833,2.963,834,1.539,835,2.963,836,2.589,837,2.589,838,2.159,839,2.343,840,1.785,841,2.589,842,2.69,843,2.589,844,3.516,845,2.963,846,2.589,847,2.963,848,2.589,849,3.051,850,2.772,851,2.343,852,2.963,853,2.963,854,2.963,855,2.963,856,1.89,857,2.343,858,2.589,859,2.159,860,2.963,861,2.963,862,3.886,863,1.785,864,2.31,865,3.886,866,2.963,867,2.963,868,2.012,869,2.963,870,1.694,871,2.963,872,2.963,873,4.447,874,4.447,875,2.963,876,2.963,877,2.963,878,2.963,879,2.963,880,2.963,881,2.963,882,1.612,883,1.694,884,3.02,885,1.694,886,2.963,887,2.589,888,2.589]],["title/components/ContentComponent.html",[130,0.522,519,1.279]],["body/components/ContentComponent.html",[7,0.848,8,0.013,9,0.848,20,0.7,21,0.079,22,0.097,23,0.079,24,0.154,29,1.038,31,1.718,33,1.299,34,1.37,35,0.238,38,0.561,48,0.164,65,1.439,98,0.097,99,0.187,100,1.482,102,0.945,103,1.173,109,0.004,110,0.006,111,0.006,118,0.434,119,0.613,120,0.856,125,1.519,126,0.811,127,0.492,128,0.936,129,3.431,130,0.902,145,0.936,170,0.821,172,1.843,176,1.071,179,2.213,182,2.618,185,1.433,187,1.433,188,1.433,191,2.158,193,1.141,196,1.301,205,2.301,210,2.089,216,0.906,219,0.658,226,1.285,231,0.876,236,1.74,251,1.217,252,1.141,253,1.724,255,0.7,261,2.112,263,3.431,280,1.744,291,1.993,315,3.339,317,1.659,318,2.545,323,2.372,336,1.78,343,1.648,344,1.648,371,0.906,372,2.669,376,1.038,394,1.303,418,1.222,419,1.104,420,1.638,428,1.648,444,0.968,445,0.848,449,0.936,451,1.298,452,1.488,507,0.968,508,1.903,509,1.298,510,0.968,511,2.017,512,0.968,513,0.968,514,0.968,515,0.848,516,0.968,517,0.848,518,0.968,519,1.766,520,1.482,521,0.848,522,0.876,523,0.968,524,0.968,525,0.848,526,0.968,527,0.848,528,0.936,529,0.968,530,0.848,531,1.298,532,0.968,533,0.848,534,0.968,535,0.848,536,0.968,537,0.848,538,0.968,539,0.876,540,0.968,541,0.848,542,0.968,543,0.848,544,1.386,545,1.178,546,0.723,547,0.968,548,0.848,549,0.968,550,0.848,551,0.968,552,0.848,553,0.936,554,0.968,555,0.848,556,0.848,557,0.848,558,0.968,559,0.848,560,0.77,561,0.968,562,0.848,563,0.968,564,0.968,565,0.936,567,1.167,586,1.071,587,2.046,615,1.857,616,2.96,643,2.961,655,2.282,753,2.502,765,2.64,768,2.639,772,2.905,775,4.574,776,3.309,778,2.957,780,2.277,782,3.48,784,3.657,786,1.914,787,2.604,788,2.957,789,3.049,790,1.706,793,2.545,797,3.049,798,2.842,799,2.842,801,1.84,805,2.842,812,2.173,823,3.657,826,3.452,827,3.049,834,1.42,838,1.993,842,2.41,849,3.85,850,3.362,859,1.993,863,1.648,864,1.42,868,1.857,882,1.488,884,1.857,889,2.39,890,4.184,891,6.458,892,2.079,893,4.442,894,5.083,895,6.137,896,5.083,897,5.083,898,5.694,899,4.184,900,4.184,901,4.184,902,5.694,903,5.694,904,5.694,905,4.184,906,2.669,907,4.184,908,4.019,909,4.184,910,4.184,911,3.704,912,4.184,913,3.971,914,4.184,915,3.309,916,2.735,917,3.309,918,3.309,919,2.735,920,2.735,921,4.184,922,3.431,923,2.277,924,4.184,925,4.453,926,2.735,927,4.184,928,2.735,929,2.842,930,3.049,931,4.184,932,5.694,933,2.39,934,3.062,935,1.993,936,2.39,937,2.162,938,2.735,939,2.735,940,1.771,941,2.735,942,2.735,943,2.735,944,2.735,945,2.735,946,2.39,947,2.162,948,2.905,949,4.184,950,2.735,951,4.184,952,2.735,953,1.648,954,1.744,955,2.735,956,2.735,957,2.735,958,5.083,959,2.735,960,2.735,961,4.184,962,2.735,963,2.735,964,4.184,965,2.735,966,2.735,967,2.735,968,1.202,969,1.993,970,2.39,971,1.744,972,2.735,973,2.735,974,2.735,975,1.744]],["title/interfaces/ContentContainerChanged.html",[112,0.605,976,2.485]],["body/interfaces/ContentContainerChanged.html",[8,0.013,21,0.14,22,0.171,23,0.14,24,0.094,35,0.187,98,0.293,99,0.14,103,0.84,109,0.007,110,0.009,111,0.007,112,1.078,114,1.653,118,0.501,119,0.918,125,1.412,126,0.928,130,0.965,176,1.603,179,2.281,181,2.908,193,1.317,205,2.073,208,2.626,219,0.984,236,1.653,309,2.998,315,3.407,359,2.043,434,2.507,435,2.507,436,2.399,437,2.043,438,2.626,439,3.079,440,3.079,452,2.626,483,2.941,560,1.359,567,0.989,586,1.603,587,1.763,642,2.753,643,2.295,655,2.006,678,2.892,768,2.834,771,2.299,782,3.58,786,2.207,787,2.863,790,2.834,793,3.289,809,2.863,863,2.908,864,3.252,925,3.772,929,3.278,953,2.908,976,4.187,977,2.908,978,4.248,979,4.252,980,4.252,981,4.432,982,3.278,983,3.772,984,3.278,985,2.759,986,3.772,987,4.252,988,3.517,989,3.517,990,3.772,991,3.772,992,3.111,993,3.517,994,2.299,995,3.278,996,4.252,997,2.908,998,3.609]],["title/modules/CoreModule.html",[0,1.199,10,2.801]],["body/modules/CoreModule.html",[0,1.953,2,1.568,3,1.953,8,0.013,10,5.737,18,2.152,19,1.672,20,1.381,21,0.156,22,0.191,23,0.156,24,0.105,28,2.225,35,0.324,38,1.105,47,2.152,48,0.323,65,1.274,66,1.846,91,2.934,92,3.929,97,4.712,98,0.191,99,0.156,108,3.662,109,0.008,110,0.01,111,0.008,120,0.908,137,4.047,141,4.712,154,3.439,155,3.439,219,1.056,494,4.264,665,2.379,999,4.712,1000,4.712,1001,4.712,1002,5.737,1003,5.456,1004,5.456,1005,5.392,1006,6.718,1007,5.392,1008,4.562,1009,6.718,1010,5.392,1011,6.718,1012,5.392,1013,5.392,1014,4.712,1015,5.392,1016,4.562,1017,5.392,1018,3.662,1019,4.264,1020,5.392,1021,5.392,1022,5.392,1023,5.392,1024,5.392,1025,5.392,1026,5.392,1027,5.392,1028,5.392,1029,4.712,1030,7.317,1031,5.392,1032,4.264,1033,5.392]],["title/interfaces/DataStateModel.html",[112,0.605,1034,3.262]],["body/interfaces/DataStateModel.html",[8,0.013,21,0.074,22,0.211,23,0.074,24,0.05,33,1.511,34,1.335,35,0.271,48,0.153,65,0.85,66,0.878,98,0.195,99,0.074,100,0.908,101,1.394,102,1.518,103,0.693,108,1.74,109,0.01,110,0.006,111,0.004,112,0.584,114,0.878,116,1.045,118,0.413,119,0.584,120,0.431,125,0.578,126,0.682,127,0.878,136,1.919,137,2.398,142,2.539,143,3.58,144,1.867,145,0.878,146,1.394,147,1.394,149,1.008,161,3.148,162,1.394,193,1.625,195,2.703,196,1.249,197,1.82,203,3.859,210,0.795,211,1.867,219,1.123,226,1.611,228,1.394,229,1.635,236,2.392,237,2.24,240,1.74,241,2.027,245,4.795,251,0.745,252,0.699,253,1.862,254,2.203,258,2.275,261,2.086,300,1.544,309,1.045,316,3.434,317,0.56,353,3.148,373,2.146,376,0.973,394,3.134,404,0.957,419,0.461,420,0.87,428,2.398,434,1.331,435,1.331,436,2.425,437,1.085,531,0.795,556,1.234,567,0.525,571,3.971,586,1.019,587,0.722,632,1.465,677,2.535,678,1.008,679,2.067,680,1.896,681,1.331,683,1.331,684,1.221,688,3.835,716,1.465,786,1.172,793,1.008,839,3.859,840,1.544,844,3.859,849,1.465,922,1.544,923,2.655,948,1.465,985,2.79,997,1.544,1034,3.148,1035,1.74,1036,6.794,1037,6.306,1038,5.75,1039,6.306,1040,3.148,1041,3.314,1042,5.09,1043,1.867,1044,2.24,1045,3.98,1046,2.027,1047,2.027,1048,3.98,1049,6.803,1050,3.98,1051,3.478,1052,1.867,1053,4.88,1054,2.563,1055,2.563,1056,3.98,1057,2.24,1058,2.24,1059,1.867,1060,1.74,1061,2.703,1062,3.556,1063,1.635,1064,2.027,1065,2.24,1066,2.24,1067,2.24,1068,2.027,1069,2.027,1070,2.027,1071,1.74,1072,2.24,1073,2.24,1074,2.24,1075,6.192,1076,1.465,1077,2.563,1078,2.027,1079,2.027,1080,4.265,1081,4.595,1082,2.027,1083,4.808,1084,2.027,1085,3.478,1086,2.563,1087,1.465,1088,1.544,1089,2.24,1090,2.24,1091,2.563,1092,3.478,1093,2.24,1094,2.24,1095,2.24,1096,2.24,1097,2.027,1098,6.409,1099,1.544,1100,4.957,1101,3.113,1102,2.027,1103,1.74,1104,2.563,1105,2.563,1106,2.563,1107,2.563,1108,2.563,1109,2.24,1110,2.563,1111,2.563,1112,2.563,1113,4.795,1114,3.98,1115,2.563,1116,3.98,1117,2.563,1118,3.98,1119,2.563,1120,3.98,1121,2.563,1122,3.98,1123,2.563,1124,3.98,1125,2.563,1126,3.98,1127,2.563,1128,3.98,1129,3.478,1130,3.98,1131,3.98,1132,3.98,1133,2.563,1134,3.98,1135,6.58,1136,2.563,1137,2.563,1138,3.98,1139,3.478,1140,2.563,1141,2.563,1142,4.009,1143,5.502,1144,3.98,1145,2.563,1146,2.563,1147,3.98,1148,2.563,1149,2.563,1150,3.98,1151,2.563,1152,2.563,1153,3.478,1154,3.98,1155,2.563,1156,2.563,1157,3.98,1158,3.98,1159,2.563,1160,2.563,1161,2.563,1162,2.563,1163,2.563,1164,2.563,1165,2.563,1166,2.563,1167,2.563,1168,2.563,1169,2.563,1170,2.563,1171,2.563,1172,2.563,1173,2.563,1174,2.563,1175,2.563,1176,2.563,1177,2.563,1178,2.563,1179,2.563,1180,2.563,1181,1.544,1182,2.563,1183,2.563,1184,2.563,1185,2.563,1186,2.563,1187,2.563,1188,2.563,1189,2.563,1190,2.563,1191,2.027,1192,2.563,1193,2.563,1194,2.563,1195,2.563,1196,2.563,1197,2.563,1198,2.563,1199,2.563,1200,2.563,1201,2.563,1202,2.563,1203,2.563,1204,2.027,1205,2.563,1206,2.563,1207,3.98,1208,2.703,1209,2.563,1210,2.563,1211,2.24,1212,2.563,1213,3.98,1214,2.563,1215,1.74,1216,2.563,1217,2.563,1218,1.74,1219,2.563,1220,2.563,1221,4.341,1222,2.563,1223,2.563,1224,6.58,1225,2.563,1226,2.563,1227,2.563,1228,2.563,1229,2.563,1230,2.563,1231,2.563,1232,2.563,1233,2.563,1234,2.563,1235,2.563,1236,2.563,1237,2.563,1238,2.563,1239,2.563,1240,2.563,1241,2.563]],["title/interfaces/DefaultIconDefinition.html",[112,0.605,1242,3.006]],["body/interfaces/DefaultIconDefinition.html",[8,0.013,21,0.102,22,0.125,23,0.102,24,0.069,88,5.474,98,0.179,103,0.615,109,0.005,110,0.007,111,0.005,112,0.518,114,1.21,118,0.367,119,0.742,120,1.26,126,0.698,127,1.423,212,4.698,213,2.628,293,3.531,316,1.441,318,2.686,323,2.503,357,2.02,419,1.553,508,2.269,567,0.724,790,1.441,870,2.892,940,1.496,1218,2.4,1242,4.307,1243,2.4,1244,2.794,1245,2.794,1246,2.794,1247,4.401,1248,3.088,1249,4.001,1250,3.534,1251,3.534,1252,2.4,1253,3.534,1254,3.088,1255,2.794,1256,3.088,1257,6.283,1258,3.687,1259,4.703,1260,5.103,1261,3.687,1262,2.4,1263,2.794,1264,2.4,1265,5.149,1266,3.088,1267,7.46,1268,3.088,1269,3.088,1270,3.088,1271,4.422,1272,3.088,1273,3.088,1274,3.088,1275,3.088,1276,3.088,1277,3.088,1278,5.64,1279,5.64,1280,5.969,1281,5.969,1282,2.575,1283,3.088,1284,4.638,1285,3.088,1286,3.088,1287,3.088,1288,4.422,1289,4.422,1290,4.422,1291,3.088,1292,3.088,1293,5.969,1294,3.088,1295,4.422,1296,3.088,1297,3.088,1298,3.088,1299,3.088,1300,3.088,1301,5.64,1302,3.088,1303,3.088,1304,4.422,1305,3.088,1306,3.088,1307,3.088,1308,3.088,1309,3.088,1310,3.088,1311,4.422,1312,2.575,1313,3.088,1314,3.088,1315,3.088,1316,3.088,1317,3.088,1318,5.64,1319,3.088,1320,3.088,1321,5.64,1322,3.088,1323,3.088,1324,2.575,1325,3.088,1326,3.088,1327,5.969,1328,3.088,1329,4.422,1330,3.088,1331,2.794,1332,3.088,1333,2.794,1334,3.088,1335,3.088]],["title/interfaces/DelegateDataSourceOptions.html",[112,0.605,1336,3.006]],["body/interfaces/DelegateDataSourceOptions.html",[8,0.013,21,0.167,22,0.205,23,0.167,24,0.112,35,0.304,38,1.185,48,0.346,65,1.006,66,1.979,98,0.249,99,0.167,103,1.006,109,0.008,110,0.01,111,0.008,112,0.848,114,1.979,116,2.357,118,0.6,119,1.028,120,1.321,125,1.703,126,0.758,127,1.358,154,3.687,155,3.687,226,1.703,254,1.577,359,2.447,404,1.685,410,4.212,423,3.146,460,6.461,461,6.461,486,4.212,546,1.528,1016,3.926,1018,3.926,1019,4.571,1336,5.499,1337,3.926,1338,4.212,1339,6.127,1340,6.127,1341,6.127,1342,5.052,1343,6.127,1344,4.762,1345,5.109,1346,5.052,1347,5.052]],["title/injectables/DelegateDataSourceService.html",[404,0.991,1016,2.801]],["body/injectables/DelegateDataSourceService.html",[8,0.013,21,0.166,22,0.204,23,0.166,24,0.136,29,1.732,31,1.255,33,1.216,35,0.304,38,1.177,48,0.344,65,1,66,1.966,98,0.248,99,0.166,103,1,109,0.008,110,0.01,111,0.008,112,0.842,116,2.848,118,0.596,120,0.967,125,1.295,126,0.621,127,1.033,154,3.663,155,3.663,226,1.698,254,1.566,359,2.43,404,1.678,405,2.854,410,5.483,418,1.38,419,1.033,423,3.125,460,5.95,461,5.95,486,4.184,546,1.845,1016,4.742,1018,4.742,1019,4.541,1336,5.705,1337,4.742,1338,4.184,1339,6.576,1340,6.102,1341,6.102,1342,5.018,1343,6.576,1344,4.742,1345,5.088,1346,6.102,1347,5.018,1348,6.983,1349,5.743]],["title/components/DonorCardComponent.html",[130,0.522,521,1.279]],["body/components/DonorCardComponent.html",[7,0.726,8,0.013,9,0.726,20,0.599,21,0.175,22,0.083,23,0.068,24,0.146,29,0.92,31,1.622,33,0.974,34,1.285,35,0.179,38,0.48,48,0.14,65,1.418,98,0.083,99,0.175,101,1.274,102,1.129,109,0.003,110,0.005,111,0.005,118,0.243,119,0.544,120,0.624,125,1.038,126,0.781,127,1.144,128,0.802,130,0.928,136,0.921,170,0.703,172,0.703,174,1.851,176,0.949,179,1.256,182,2.566,183,1.313,185,1.269,187,1.269,188,1.269,191,2.038,194,3.24,195,2.518,196,1.179,210,0.726,212,3.303,216,0.775,219,0.823,223,2.932,228,2.017,229,2.365,231,0.75,236,2.325,251,1.078,252,1.011,253,0.949,254,1.011,255,0.599,293,3.016,303,2.413,309,1.512,317,1.39,318,2.387,323,1.687,336,1.908,356,3.106,371,2.01,376,1.987,389,3.34,418,0.891,419,1.144,420,1.326,428,3.657,432,2.61,437,1.569,444,0.829,445,0.726,449,0.802,451,0.726,453,1.512,478,2.387,507,0.829,508,1.77,509,1.77,510,0.829,511,1.854,512,0.829,513,0.829,514,0.829,515,0.726,516,0.829,517,0.726,518,0.829,519,0.726,520,1.313,521,1.624,522,2.531,523,0.829,524,0.829,525,0.726,526,0.829,527,0.726,528,0.802,529,0.829,530,0.726,531,1.15,532,0.829,533,0.726,534,0.829,535,0.726,536,0.829,537,0.726,538,0.829,539,0.75,540,0.829,541,0.726,542,0.829,543,0.726,544,1.228,545,1.044,546,0.619,547,0.829,548,0.726,549,0.829,550,0.726,551,0.829,552,0.726,553,0.802,554,0.829,555,0.726,556,1.972,557,1.428,558,0.829,559,0.726,560,0.659,561,0.829,562,0.726,563,0.829,564,0.829,565,0.802,567,1.17,573,6.202,579,1.696,581,1.59,582,3.155,584,2.774,585,2.505,586,0.949,596,2.932,600,4.986,603,2.415,604,4.575,616,1.696,620,2.024,622,1.338,623,1.274,631,2.774,632,2.631,633,3.153,635,3.24,639,3.24,640,3.556,642,1.029,643,2.646,644,2.494,645,2.288,646,4.806,647,3.635,648,2.774,650,2.986,655,2.274,753,0.955,780,2.017,782,2.302,798,2.518,799,2.518,801,2.302,812,1.926,834,1.216,842,1.948,850,1.926,864,1.926,882,1.274,883,2.119,884,2.518,885,1.338,892,3.016,911,1.706,913,3.262,935,1.115,940,2.216,948,2.119,968,2.796,971,1.493,975,2.936,992,3.457,1047,3.64,1076,1.338,1247,2.017,1331,2.932,1333,2.932,1350,4.521,1351,5.934,1352,5.468,1353,2.046,1354,6.734,1355,3.24,1356,3.24,1357,4.603,1358,3.708,1359,4.023,1360,4.603,1361,5.236,1362,3.708,1363,5.236,1364,4.986,1365,3.354,1366,4.603,1367,3.708,1368,2.341,1369,4.423,1370,3.469,1371,3.872,1372,2.341,1373,2.341,1374,2.341,1375,2.341,1376,2.341,1377,2.341,1378,3.872,1379,3.708,1380,2.341,1381,4.14,1382,2.702,1383,3.708,1384,2.341,1385,3.24,1386,3.24,1387,2.365,1388,3.708,1389,3.708,1390,2.518,1391,2.234,1392,2.341,1393,2.932,1394,2.702,1395,3.708,1396,3.24,1397,6.07,1398,2.341,1399,4.603,1400,4.603,1401,3.708,1402,4.575,1403,2.341,1404,2.341,1405,2.341,1406,3.24,1407,3.708,1408,3.708,1409,5.304,1410,5.236,1411,3.708,1412,3.708,1413,3.708,1414,3.708,1415,3.708,1416,3.708,1417,1.493,1418,1.493,1419,3.153,1420,3.105,1421,3.016,1422,2.518,1423,1.842,1424,1.274,1425,1.851,1426,2.119,1427,2.631,1428,2.391,1429,2.341,1430,2.341,1431,2.341,1432,2.341,1433,2.046,1434,2.341,1435,1.851,1436,2.341,1437,2.341,1438,3.64,1439,2.341,1440,1.59,1441,2.718,1442,2.505,1443,3.64,1444,3.24,1445,1.706,1446,1.851,1447,5.763,1448,1.274,1449,4.986,1450,2.046,1451,3.354,1452,3.64,1453,2.341,1454,3.24,1455,2.341,1456,2.341,1457,2.341,1458,2.341,1459,2.341,1460,2.341,1461,1.216,1462,2.341,1463,2.602,1464,1.493,1465,2.046,1466,2.341,1467,2.774,1468,2.341,1469,2.341,1470,3.708,1471,2.046,1472,2.341,1473,2.932,1474,2.341,1475,2.341,1476,2.046,1477,2.341,1478,2.341,1479,1.706,1480,2.341]],["title/modules/DonorCardModule.html",[0,1.199,1481,2.801]],["body/modules/DonorCardModule.html",[2,1.674,3,2.034,8,0.013,18,2.241,19,1.786,20,1.474,21,0.166,22,0.204,23,0.166,24,0.112,26,2.564,28,2.316,35,0.32,47,2.241,48,0.344,49,3.476,50,2.633,98,0.204,99,0.166,109,0.008,110,0.01,111,0.008,521,2.642,522,1.845,556,1.786,557,2.169,621,4.553,665,2.477,666,2.654,667,2.039,668,6.112,1350,3.469,1351,4.553,1352,4.196,1481,5.763,1482,5.032,1483,5.032,1484,5.032,1485,5.032,1486,5.544,1487,5.544,1488,5.758,1489,5.758,1490,3.91,1491,5.758,1492,5.758,1493,4.196,1494,5.758]],["title/interfaces/DrawerContainersChanged.html",[112,0.605,983,2.485]],["body/interfaces/DrawerContainersChanged.html",[8,0.013,21,0.138,22,0.17,23,0.138,24,0.093,35,0.186,98,0.293,99,0.138,103,0.833,109,0.007,110,0.009,111,0.007,112,1.074,114,1.638,118,0.496,119,0.913,125,1.404,126,0.929,130,0.928,176,1.772,179,2.298,181,2.882,193,1.305,205,2.061,208,2.603,219,0.752,236,1.638,309,2.988,315,4.134,359,2.634,434,2.485,435,2.485,436,2.377,437,2.025,438,2.603,439,3.051,440,3.051,452,2.603,483,2.928,560,1.347,567,0.981,586,1.594,587,1.753,642,2.737,643,2.281,655,1.995,678,2.882,768,2.822,771,2.279,782,3.222,786,2.188,787,2.847,790,2.538,793,3.285,809,2.847,863,2.882,864,3.233,925,3.75,929,4.227,953,2.882,976,3.75,977,2.882,978,4.238,979,4.227,980,4.227,981,4.414,982,3.249,983,4.169,984,4.227,985,3.558,986,3.75,987,4.227,988,3.486,989,3.486,990,3.75,991,3.75,992,3.093,993,3.486,994,2.279,995,3.249,996,4.227,997,2.882,998,3.594]],["title/interfaces/DrawerInitialized.html",[112,0.605,990,2.485]],["body/interfaces/DrawerInitialized.html",[8,0.013,21,0.141,22,0.172,23,0.141,24,0.094,35,0.189,98,0.294,99,0.141,103,0.847,109,0.007,110,0.009,111,0.007,112,1.081,114,1.666,118,0.505,119,0.923,125,1.42,126,0.928,130,0.883,176,1.611,179,2.294,181,2.931,193,1.327,205,2.084,208,2.647,219,0.765,236,1.666,309,2.844,315,3.424,359,2.059,434,2.527,435,2.527,436,2.417,437,2.059,438,2.647,439,3.103,440,3.103,452,2.647,483,2.952,560,1.37,567,0.997,586,1.611,587,1.772,642,2.767,643,2.306,655,2.016,678,2.9,768,2.844,771,2.317,782,3.243,786,2.225,787,2.878,790,2.566,793,3.292,809,2.878,863,2.931,864,3.268,925,3.791,929,3.304,953,2.931,976,3.791,977,2.931,978,4.257,979,4.273,980,4.273,981,4.449,982,3.304,983,3.791,984,3.304,985,2.781,986,3.791,987,4.273,988,4.585,989,4.585,990,4.203,991,3.791,992,3.127,993,3.545,994,2.317,995,3.304,996,4.273,997,2.931,998,3.623]],["title/modules/DrawerModule.html",[0,1.199,11,2.801]],["body/modules/DrawerModule.html",[2,1.59,3,1.97,8,0.013,11,5.82,18,2.171,19,1.695,20,1.4,21,0.158,22,0.194,23,0.158,24,0.106,26,2.483,28,1.81,35,0.323,47,2.171,48,0.327,49,3.367,50,2.5,56,5.921,57,4.322,58,2.84,59,5.921,60,4.777,91,2.975,92,3.984,93,4.323,98,0.194,99,0.158,109,0.008,110,0.01,111,0.008,172,2.541,517,2.625,519,2.625,559,2.625,560,1.54,665,2.4,837,4.777,838,3.984,982,3.713,1495,4.777,1496,4.777,1497,4.777,1498,5.467,1499,4.082,1500,4.082,1501,5.467,1502,4.323,1503,5.467]],["title/interfaces/DrawerToggled.html",[112,0.605,991,2.485]],["body/interfaces/DrawerToggled.html",[8,0.013,21,0.134,22,0.164,23,0.134,24,0.09,35,0.18,98,0.291,99,0.134,103,0.807,109,0.007,110,0.009,111,0.007,112,1.061,114,1.587,118,0.481,119,0.894,125,1.742,126,0.931,130,0.863,176,1.561,179,2.311,181,2.793,193,1.663,205,2.397,208,3.318,219,0.729,236,2.088,309,2.952,315,3.318,359,1.962,434,2.408,435,2.408,436,2.303,437,1.962,438,2.522,439,2.957,440,2.957,452,2.522,483,2.884,560,1.717,567,0.95,586,1.561,587,2.174,642,2.681,643,2.83,655,2.474,678,2.847,768,2.779,771,2.208,782,3.183,786,2.789,787,2.789,790,2.486,793,3.271,809,2.789,863,2.793,864,3.167,925,4.652,929,3.148,953,2.793,976,3.674,977,2.793,978,4.092,979,4.141,980,4.141,981,4.346,982,3.148,983,3.674,984,3.148,985,2.65,986,3.674,987,4.141,988,3.378,989,3.378,990,3.674,991,4.106,992,3.837,993,4.443,994,2.905,995,4.141,996,4.141,997,2.793,998,3.539]],["title/components/DropdownComponent.html",[130,0.522,525,1.279]],["body/components/DropdownComponent.html",[7,1.017,8,0.013,9,1.017,21,0.095,22,0.116,23,0.095,24,0.145,29,1.189,31,1.603,33,1.015,34,1.319,35,0.186,38,0.672,48,0.196,65,1.455,98,0.116,99,0.095,101,1.784,102,0.892,109,0.005,110,0.007,111,0.007,118,0.34,119,0.703,120,0.807,126,0.774,127,1.368,128,1.123,130,0.947,158,4.503,170,0.985,172,0.985,176,1.227,179,1.546,182,2.671,183,1.698,185,1.641,187,1.641,188,1.641,193,1.308,196,1.451,197,3.168,216,1.086,219,0.891,228,2.609,230,2.092,231,1.051,251,1.394,252,1.308,253,1.227,255,0.84,278,2.39,317,0.717,318,2.451,323,1.757,336,1.647,356,3.354,376,1.245,384,2.593,418,1.152,419,1.122,420,1.603,430,3.791,432,2.591,444,1.161,445,1.017,449,1.123,451,1.017,453,1.955,478,2.451,507,1.161,508,1.487,509,1.487,510,1.161,511,2.208,512,1.161,513,1.161,514,1.161,515,1.017,516,1.161,517,1.017,518,1.161,519,1.017,520,1.698,521,1.017,522,1.051,523,1.161,524,1.161,525,1.933,526,1.161,527,1.017,528,1.123,529,1.161,530,1.017,531,1.487,532,1.161,533,1.017,534,1.161,535,1.017,536,1.161,537,1.017,538,1.161,539,1.051,540,1.161,541,1.017,542,1.161,543,1.017,544,1.588,545,1.35,546,0.867,547,1.161,548,1.017,549,1.161,550,1.017,551,1.161,552,1.017,553,1.123,554,1.161,555,1.017,556,1.017,557,1.017,558,1.161,559,1.017,560,0.924,561,1.161,562,1.017,563,1.161,564,1.161,565,1.123,567,1.162,571,2.49,578,3.239,579,2.192,580,4.48,581,2.227,582,3.756,584,3.414,585,3.083,586,1.227,603,2.398,609,4.981,620,2.108,622,1.875,623,1.784,625,2.593,631,3.995,632,3.79,633,3.809,640,3.256,644,2.284,645,3.295,647,3.239,648,1.976,649,2.39,650,1.442,655,2.292,842,1.388,864,2.49,908,4.929,913,2.74,922,2.888,934,1.976,935,1.562,940,2.398,968,2.741,1052,3.493,1076,1.875,1417,2.092,1418,3.614,1421,3.442,1423,3.097,1440,2.227,1441,1.562,1448,1.784,1461,1.703,1463,2.382,1504,2.866,1505,6.934,1506,6.409,1507,5.666,1508,4.794,1509,5.666,1510,4.794,1511,6.233,1512,4.794,1513,3.28,1514,3.791,1515,3.28,1516,4.794,1517,2.888,1518,3.28,1519,3.28,1520,4.794,1521,3.28,1522,3.28,1523,4.794,1524,4.929,1525,4.929,1526,4.189,1527,3.493,1528,3.79,1529,4.794,1530,3.28,1531,3.28,1532,3.28,1533,4.189,1534,4.794,1535,3.28,1536,4.189,1537,4.31,1538,4.089,1539,4.129,1540,5.666,1541,2.593,1542,2.593,1543,2.943,1544,3.256,1545,2.39,1546,3.976,1547,3.791,1548,2.092,1549,4.542,1550,2.227,1551,4.189,1552,2.866,1553,3.28,1554,2.866,1555,2.866,1556,3.493,1557,2.866,1558,3.28,1559,2.593,1560,3.28,1561,1.875,1562,2.092,1563,3.28,1564,2.593,1565,3.28,1566,2.866,1567,2.866,1568,3.28]],["title/modules/DropdownModule.html",[0,1.199,1569,2.801]],["body/modules/DropdownModule.html",[2,1.766,3,2.1,8,0.012,18,2.314,19,1.883,20,1.555,21,0.176,22,0.215,23,0.176,24,0.118,26,2.647,28,2.011,35,0.316,47,2.314,48,0.363,98,0.215,99,0.176,109,0.009,110,0.01,111,0.009,525,2.659,665,2.558,666,2.741,667,2.151,1538,3.471,1569,5.671,1570,5.307,1571,5.307,1572,5.307,1573,6.073,1574,5.711,1575,4.802,1576,5.711,1577,4.802,1578,6.073]],["title/components/DualSliderComponent.html",[130,0.522,527,1.279]],["body/components/DualSliderComponent.html",[7,0.567,8,0.013,9,0.567,21,0.053,22,0.065,23,0.053,24,0.151,29,0.752,31,1.694,33,1.359,34,1.536,35,0.195,38,0.375,42,1.241,48,0.109,53,1.445,65,1.356,82,5.29,98,0.065,99,0.053,100,1.074,102,0.564,103,1.045,109,0.003,110,0.004,111,0.004,118,0.19,119,0.663,120,0.965,126,0.776,127,0.903,130,0.813,131,4.076,133,1.445,158,4.474,170,0.549,172,0.549,176,0.777,179,1.061,182,2.471,183,1.074,185,1.039,190,2.351,191,1.995,193,1.477,196,0.995,197,2.745,198,3.074,205,1.499,210,1.557,216,0.605,219,0.611,226,1.132,228,2.462,230,4.377,231,0.586,251,1.316,252,0.827,253,1.386,255,0.777,261,1.797,278,1.332,308,3.955,309,2.207,317,0.85,318,1.529,323,1.425,326,6.214,336,1.646,343,1.828,346,2.21,352,1.241,356,1.387,359,1.284,371,1.793,373,1.334,376,1.476,418,1.378,419,1.155,420,1.585,430,2.399,432,1.387,434,2.019,435,2.019,437,1.645,444,0.647,445,0.567,449,0.626,451,1.206,452,2.462,453,1.237,478,2.129,507,0.647,508,0.941,509,2.196,510,0.647,511,1.603,512,0.647,513,0.647,514,0.647,515,0.567,516,0.647,517,0.567,518,0.647,519,0.567,520,1.074,521,0.567,522,0.586,523,0.647,524,0.647,525,0.567,526,0.647,527,1.403,528,2.198,529,0.647,530,0.567,531,0.941,532,0.647,533,0.567,534,0.647,535,0.567,536,0.647,537,0.567,538,0.647,539,0.586,540,0.647,541,0.567,542,0.647,543,0.567,544,1.005,545,0.854,546,0.483,547,0.647,548,0.567,549,0.647,550,0.567,551,0.647,552,0.567,553,0.626,554,0.647,555,0.567,556,0.567,557,0.567,558,0.647,559,0.567,560,0.515,561,0.647,562,0.567,563,0.647,564,0.647,565,1.039,567,1.23,571,2.351,578,3.849,579,1.387,580,3.074,582,2.727,584,2.727,585,2.115,586,1.159,587,1.69,598,1.445,601,2.399,603,1.645,616,3.413,620,1.334,622,1.045,623,0.995,625,1.445,630,1.597,631,2.727,632,2.587,633,2.607,640,1.241,643,1.84,644,2.391,645,2.249,647,2.869,648,1.828,649,2.21,650,2.521,651,1.734,655,1.837,713,2.64,753,1.585,765,2.607,778,2.351,781,2.06,782,0.804,788,1.575,790,2.447,801,1.334,805,2.06,842,1.284,849,1.734,850,0.949,864,0.949,870,1.734,885,1.045,888,3.955,892,1.507,908,3.969,913,3.278,922,3.752,935,0.871,940,2.124,968,2.38,985,2.587,994,2.859,1052,2.21,1076,1.045,1215,3.073,1221,2.21,1371,2.887,1378,1.935,1387,2.887,1391,1.828,1417,1.166,1418,1.935,1419,2.019,1420,1.65,1421,2.69,1422,1.241,1423,1.507,1426,1.045,1428,3.422,1441,2.156,1442,0.995,1448,0.995,1461,0.949,1463,1.932,1514,2.399,1524,2.399,1525,2.399,1527,3.944,1528,2.869,1533,2.651,1536,2.651,1537,3.024,1538,2.869,1539,2.21,1541,1.445,1542,2.399,1543,2.351,1544,1.241,1545,1.332,1546,2.887,1547,2.399,1548,1.166,1549,3.298,1550,2.06,1551,2.651,1554,1.597,1555,1.597,1556,2.21,1557,1.597,1559,1.445,1561,1.045,1564,2.399,1566,1.597,1567,1.597,1579,6.16,1580,1.597,1581,2.21,1582,6.056,1583,3.074,1584,3.888,1585,3.033,1586,3.888,1587,6.002,1588,5.413,1589,6.002,1590,6.228,1591,5.735,1592,4.526,1593,4.526,1594,3.033,1595,4.526,1596,2.399,1597,3.033,1598,3.033,1599,5.413,1600,4.526,1601,4.526,1602,3.888,1603,3.033,1604,3.033,1605,3.033,1606,5.019,1607,1.828,1608,3.033,1609,2.651,1610,3.033,1611,2.21,1612,1.828,1613,3.033,1614,1.828,1615,6.228,1616,1.828,1617,2.21,1618,3.033,1619,1.828,1620,2.399,1621,4.386,1622,1.828,1623,4.386,1624,3.888,1625,3.955,1626,4.526,1627,4.526,1628,3.955,1629,4.526,1630,4.526,1631,4.526,1632,4.526,1633,1.828,1634,3.033,1635,3.033,1636,1.828,1637,1.828,1638,1.828,1639,2.399,1640,3.578,1641,1.828,1642,3.033,1643,1.828,1644,3.033,1645,2.651,1646,1.828,1647,5.019,1648,1.828,1649,5.735,1650,3.888,1651,4.526,1652,3.888,1653,3.033,1654,1.828,1655,4.526,1656,1.828,1657,2.651,1658,1.828,1659,3.033,1660,1.828,1661,3.397,1662,1.828,1663,1.828,1664,4.526,1665,2.399,1666,1.828,1667,2.651,1668,1.828,1669,1.828,1670,1.828,1671,3.033,1672,3.033,1673,1.828,1674,2.399,1675,3.888,1676,3.033,1677,1.828,1678,1.828,1679,1.828,1680,3.033,1681,2.651,1682,3.033,1683,1.597,1684,1.597,1685,3.578,1686,1.828,1687,1.828,1688,1.828,1689,1.828,1690,3.033,1691,1.828,1692,1.828,1693,1.828,1694,1.828,1695,1.828,1696,1.828,1697,1.828,1698,1.597,1699,1.828,1700,3.033,1701,1.828,1702,3.033,1703,1.828,1704,1.828,1705,3.033,1706,3.033,1707,1.828,1708,3.888,1709,1.828,1710,1.828,1711,1.828,1712,1.828,1713,1.828,1714,1.828,1715,1.828,1716,1.828,1717,1.828,1718,1.828,1719,3.033,1720,3.888,1721,3.033,1722,3.888,1723,1.828,1724,1.828,1725,1.828,1726,1.828,1727,1.828,1728,1.828,1729,4.526,1730,1.828,1731,1.828,1732,1.828,1733,3.033,1734,3.033,1735,3.033,1736,1.828,1737,1.935,1738,1.828,1739,1.828,1740,2.06,1741,1.828,1742,1.828,1743,1.828,1744,3.033,1745,1.828,1746,1.828,1747,1.828,1748,1.828,1749,1.445,1750,3.033,1751,1.597,1752,1.828,1753,1.828,1754,1.828]],["title/modules/DualSliderModule.html",[0,1.199,12,2.631]],["body/modules/DualSliderModule.html",[2,1.708,3,2.059,8,0.013,12,5.291,18,2.269,19,1.822,20,1.504,21,0.17,22,0.208,23,0.17,24,0.114,26,2.595,28,1.946,35,0.325,42,3.99,47,2.269,48,0.351,82,3.99,98,0.208,99,0.17,109,0.008,110,0.01,111,0.008,527,2.649,528,2.012,665,2.508,666,2.687,667,2.081,1538,3.358,1574,5.599,1575,4.646,1576,5.599,1577,4.646,1579,4.646,1582,4.281,1683,5.134,1685,4.646,1755,5.134,1756,5.134,1757,5.134,1758,5.875,1759,7.08,1760,7.08,1761,7.08,1762,5.875]],["title/components/FiltersContentComponent.html",[130,0.522,530,1.279]],["body/components/FiltersContentComponent.html",[7,0.91,8,0.013,9,0.91,21,0.085,22,0.104,23,0.085,24,0.152,29,1.095,31,1.699,33,1.249,34,1.503,35,0.258,38,0.601,48,0.175,65,1.445,66,1.004,91,2.401,98,0.104,99,0.085,101,1.596,102,1.098,109,0.004,110,0.006,111,0.006,118,0.304,119,0.647,120,0.743,125,0.995,126,0.813,127,1.242,128,1.004,130,0.874,163,2.563,170,0.881,172,0.881,176,1.511,179,1.447,182,2.639,183,1.563,185,1.511,187,1.511,188,1.511,196,1.358,213,2.292,216,0.971,219,0.995,228,3.863,231,0.94,251,1.283,252,1.204,253,1.358,254,1.61,255,0.751,291,3.866,293,2.193,309,1.799,316,3.14,317,0.641,318,1.153,323,1.617,336,1.757,347,1.992,354,3.167,371,1.954,418,1.061,419,1.062,420,1.453,444,1.039,445,0.91,449,1.004,451,0.91,453,1.799,478,2.615,483,1.241,507,1.039,508,1.369,509,1.369,510,1.039,511,2.09,512,1.039,513,1.039,514,1.039,515,0.91,516,1.039,517,0.91,518,1.039,519,0.91,520,1.563,521,0.91,522,0.94,523,1.039,524,1.039,525,0.91,526,1.039,527,0.91,528,1.511,529,1.039,530,1.83,531,2.569,532,1.039,533,0.91,534,1.039,535,0.91,536,1.039,537,0.91,538,1.039,539,0.94,540,1.039,541,0.91,542,1.039,543,1.369,544,2.451,545,1.999,546,1.402,547,1.039,548,0.91,549,1.039,550,0.91,551,1.039,552,0.91,553,1.004,554,1.039,555,0.91,556,0.91,557,0.91,558,1.039,559,0.91,560,0.826,561,1.039,562,0.91,563,1.039,564,1.039,565,1.004,567,1.088,571,2.292,579,2.018,581,1.992,582,3.556,584,3.196,585,2.887,586,1.13,603,2.92,609,1.992,615,1.992,617,3.215,620,2.595,622,1.676,623,1.596,642,1.94,643,2.32,644,2.102,650,2.783,651,1.676,652,2.137,655,2.028,656,3.856,658,2.563,711,2.659,713,4.686,782,2.924,788,2.292,850,1.523,885,3.801,892,2.636,893,4.636,922,2.659,934,1.767,935,3.167,940,2.245,994,3.167,1062,2.137,1071,2.997,1076,1.676,1247,1.596,1356,2.563,1369,3.215,1370,1.676,1371,2.815,1378,2.815,1381,3.489,1419,2.292,1420,2.401,1421,2.193,1422,2.997,1423,2.636,1424,1.596,1426,2.522,1427,1.676,1428,1.523,1441,2.527,1448,1.596,1463,2.193,1479,2.137,1505,2.563,1527,3.215,1528,2.522,1546,1.871,1556,2.137,1561,1.676,1562,1.871,1582,2.137,1763,5.326,1764,5.714,1765,2.563,1766,3.489,1767,4.667,1768,4.413,1769,3.384,1770,5.53,1771,5.902,1772,5.902,1773,5.902,1774,4.413,1775,4.636,1776,4.636,1777,4.636,1778,4.636,1779,4.636,1780,4.636,1781,6.329,1782,4.413,1783,2.933,1784,2.933,1785,2.933,1786,4.413,1787,2.933,1788,3.215,1789,2.933,1790,3.856,1791,2.933,1792,3.856,1793,2.933,1794,3.856,1795,2.933,1796,5.902,1797,2.933,1798,2.933,1799,4.413,1800,4.413,1801,2.933,1802,4.413,1803,5.902,1804,2.933,1805,2.319,1806,2.563,1807,2.933,1808,2.137,1809,2.563,1810,2.933,1811,4.636,1812,2.933,1813,5.305,1814,2.933,1815,4.413,1816,2.933,1817,2.933,1818,2.933,1819,2.933,1820,4.413,1821,4.413,1822,4.413,1823,4.667,1824,4.636,1825,2.933,1826,2.933,1827,2.933,1828,2.137,1829,4.413,1830,2.933,1831,1.992,1832,2.933,1833,2.563,1834,2.137]],["title/modules/FiltersContentModule.html",[0,1.199,1835,2.801]],["body/modules/FiltersContentModule.html",[2,1.641,3,2.009,8,0.013,12,5.182,18,2.214,19,1.751,20,1.445,21,0.163,22,0.2,23,0.163,24,0.11,26,2.533,28,2.289,35,0.325,47,2.214,48,0.338,49,3.434,50,2.582,65,0.983,66,1.933,81,4.933,82,3.834,83,4.933,98,0.2,99,0.163,109,0.008,110,0.01,111,0.008,530,2.636,531,1.751,660,5.518,665,2.447,666,2.623,667,1.999,1569,5.518,1763,3.834,1764,4.114,1835,5.792,1836,4.933,1837,4.933,1838,5.645,1839,4.933,1840,5.645,1841,4.408,1842,3.601,1843,6.911,1844,5.645,1845,5.645,1846,5.645]],["title/components/FiltersPopoverComponent.html",[130,0.522,170,1.238]],["body/components/FiltersPopoverComponent.html",[7,1,8,0.013,9,1,20,1.437,21,0.093,22,0.114,23,0.093,24,0.151,29,1.175,31,1.678,33,1.188,34,1.458,35,0.184,38,0.661,48,0.193,65,1.452,66,1.104,72,5.275,91,2.577,98,0.114,99,0.093,102,0.881,109,0.005,110,0.007,111,0.007,118,0.582,119,0.694,120,0.543,125,1.068,126,0.79,127,1.113,128,1.104,130,0.834,170,1.857,172,0.969,176,1.213,179,1.797,182,2.666,183,1.677,185,1.622,187,1.622,188,1.622,191,1.798,195,4.2,196,1.437,201,3.945,205,2.048,213,2.46,216,1.068,219,0.745,228,3.747,231,1.034,253,0.826,254,1.687,291,2.35,293,3.073,316,2.522,317,1.035,318,1.862,323,1.182,326,6.071,336,1.483,344,2.854,346,3.451,354,3.28,355,3.216,376,1.224,394,2.256,396,2.854,418,0.775,419,1.01,420,1.035,444,1.142,445,1,449,1.104,451,1,453,1.931,478,2.708,499,2.35,507,1.142,508,1.469,509,1.469,510,1.142,511,2.19,512,1.142,513,1.142,514,1.142,515,1,516,1.142,517,1,518,1.142,519,1,520,1.677,521,1,522,1.034,523,1.142,524,1.142,525,1,526,1.142,527,1,528,1.104,529,1.142,530,1,531,2.599,532,1.142,533,1,534,1.142,535,1,536,1.142,537,1,538,1.142,539,1.034,540,1.142,541,1,542,1.142,543,1,544,2.28,545,1.741,546,0.852,547,1.142,548,1,549,1.142,550,1,551,1.142,552,1,553,1.104,554,1.142,555,1,556,1,557,1,558,1.142,559,1,560,0.908,561,1.142,562,1,563,1.142,564,1.142,565,1.922,567,0.971,571,3.212,579,2.166,603,2.788,612,2.058,620,2.468,640,2.191,642,2.082,643,1.182,644,1.537,646,2.35,655,1.982,711,3.969,788,2.46,842,2.788,870,3.535,883,3.208,885,1.844,935,3.39,940,2.375,968,1.418,975,3.58,992,2.789,1052,3.451,1071,3.216,1076,1.844,1218,3.216,1369,3.451,1370,1.844,1371,3.021,1421,2.789,1423,2.789,1424,1.755,1427,1.844,1428,2.46,1441,2.256,1448,4.053,1461,1.675,1463,2.354,1467,1.944,1473,2.551,1528,3.765,1543,3.212,1546,2.058,1550,3.216,1556,3.451,1561,1.844,1581,2.35,1763,5.275,1766,5.445,1767,3.745,1775,4.904,1776,4.904,1777,4.904,1778,4.139,1779,4.904,1780,4.904,1788,3.451,1794,4.139,1806,2.819,1811,2.819,1824,5.404,1828,2.35,1831,2.191,1847,2.819,1848,5.612,1849,4.736,1850,5.612,1851,6.184,1852,6.184,1853,5.612,1854,3.226,1855,5.404,1856,4.736,1857,3.226,1858,4.139,1859,4.139,1860,4.139,1861,3.226,1862,3.226,1863,3.226,1864,3.226,1865,3.226,1866,4.736,1867,3.226,1868,6.184,1869,3.226,1870,3.226,1871,3.226,1872,5.612,1873,3.226,1874,3.226,1875,4.736,1876,3.226,1877,3.226,1878,3.226,1879,3.226,1880,3.226,1881,3.226,1882,3.226]],["title/modules/FiltersPopoverModule.html",[0,1.199,13,2.801]],["body/modules/FiltersPopoverModule.html",[2,1.734,3,2.077,8,0.012,13,5.735,18,2.289,19,1.85,20,1.527,21,0.172,22,0.211,23,0.172,24,0.116,26,2.619,28,2.366,35,0.314,47,2.289,48,0.357,49,3.55,50,2.728,72,4.05,98,0.211,99,0.172,109,0.009,110,0.01,111,0.009,170,2.569,171,5.212,531,2.216,665,2.53,666,2.711,667,2.112,1763,4.05,1764,4.346,1835,5.589,1883,5.212,1884,5.212,1885,5.964,1886,5.212,1887,5.964,1888,5.964]],["title/classes/FlatNode.html",[99,0.119,1889,3.262]],["body/classes/FlatNode.html",[8,0.013,21,0.133,22,0.163,23,0.133,24,0.155,29,1.507,31,1.718,33,1.529,35,0.179,65,0.803,98,0.163,99,0.133,102,0.858,109,0.007,110,0.009,111,0.007,118,0.478,119,0.891,120,1.343,125,1.63,126,0.85,127,1.094,130,0.77,136,1.813,190,3.53,193,1.657,196,2.043,197,3.434,205,2.012,210,1.884,213,4.005,219,1.181,226,1.533,251,2.1,252,1.657,253,1.85,255,1.18,317,1.328,319,3.019,336,1.218,418,1.46,419,1.094,420,1.328,445,2.474,567,1.393,587,2.295,781,4.126,940,2.876,1528,3.885,1609,5.31,1665,4.805,1889,5.713,1890,3.36,1891,6.972,1892,4.029,1893,4.421,1894,5.374,1895,5.939,1896,4.611,1897,5.014,1898,6.111,1899,4.611,1900,7.12,1901,8.072,1902,4.611,1903,5.31,1904,4.611,1905,4.611,1906,6.076,1907,4.611,1908,6.076,1909,4.611,1910,4.611,1911,6.076,1912,4.611,1913,4.611,1914,6.076,1915,4.805,1916,4.611,1917,4.611,1918,4.611,1919,4.611]],["title/components/HeaderComponent.html",[130,0.522,533,1.279]],["body/components/HeaderComponent.html",[7,1.199,8,0.013,9,1.199,21,0.179,22,0.137,23,0.112,24,0.149,31,1.641,35,0.15,38,0.792,48,0.231,65,1.477,94,2.625,98,0.137,99,0.112,102,1.003,109,0.006,110,0.008,111,0.008,118,0.401,121,4.506,122,4.909,124,4.909,125,1.515,126,0.812,127,1.209,128,1.323,130,0.786,170,1.161,172,1.161,176,1.38,179,1.693,182,2.713,183,1.909,185,1.846,187,1.846,188,1.846,196,1.589,211,4.894,212,2.933,216,1.28,219,0.848,231,1.239,249,4.909,254,1.471,300,3.248,303,1.467,314,3.928,316,2.881,323,1.417,336,1.641,371,2.339,376,1.467,389,3.439,399,4.711,401,5.425,419,0.97,432,2.839,444,1.369,445,1.199,449,1.323,451,1.199,453,2.198,478,2.877,507,1.369,508,1.672,509,1.672,510,1.369,511,2.379,512,1.369,513,1.369,514,1.369,515,1.199,516,1.369,517,1.199,518,1.369,519,1.199,520,1.909,521,1.199,522,1.239,523,1.369,524,1.369,525,1.199,526,1.369,527,1.199,528,1.323,529,1.369,530,1.199,531,2.191,532,1.369,533,2.083,534,1.369,535,1.199,536,1.369,537,1.199,538,1.369,539,1.239,540,1.369,541,1.199,542,1.369,543,1.199,544,1.785,545,1.518,546,1.021,547,1.369,548,1.199,549,1.369,550,1.199,551,1.369,552,1.199,553,1.323,554,1.369,555,1.199,556,1.199,557,1.199,558,1.369,559,1.199,560,1.088,561,1.369,562,1.199,563,1.369,564,1.369,565,1.323,567,0.792,571,3.489,579,2.466,598,3.056,603,2.99,617,3.928,620,2.73,643,1.976,645,2.679,647,3.082,648,2.329,650,3.106,655,2.152,711,3.248,846,4.711,892,3.085,913,2.209,934,2.329,935,1.841,968,3.106,984,2.625,994,3.2,1057,4.711,1370,3.082,1378,4.667,1419,3.224,1420,3.378,1421,2.679,1423,3.085,1424,2.103,1425,3.056,1427,2.209,1428,2.008,1440,2.625,1442,2.103,1445,2.817,1463,1.921,1467,3.74,1517,3.248,1543,2.8,1548,2.466,1561,2.209,1562,2.466,1767,4.263,1823,4.909,1920,3.378,1921,5.87,1922,6.394,1923,6.717,1924,3.661,1925,6.208,1926,5.391,1927,6.208,1928,6.208,1929,3.865,1930,3.865,1931,4.524,1932,3.865,1933,5.391,1934,3.865,1935,3.865,1936,3.865,1937,3.865,1938,5.391,1939,3.378,1940,3.865,1941,3.378,1942,3.865,1943,2.817,1944,3.865,1945,3.865,1946,3.865,1947,3.865,1948,3.056,1949,3.865,1950,3.865,1951,3.865,1952,3.865,1953,3.865,1954,3.865,1955,3.865,1956,2.329]],["title/modules/HeaderModule.html",[0,1.199,1002,2.801]],["body/modules/HeaderModule.html",[2,1.739,3,2.081,8,0.013,18,2.293,19,1.855,20,1.531,21,0.173,22,0.212,23,0.173,24,0.116,26,2.623,28,1.981,35,0.323,47,2.293,48,0.358,49,3.556,50,2.735,54,5.659,55,4.729,98,0.212,99,0.173,109,0.009,110,0.01,111,0.009,533,2.654,665,2.534,666,2.716,667,2.118,1002,5.654,1841,4.565,1842,3.815,1957,5.226,1958,5.226,1959,5.226,1960,5.981,1961,7.156,1962,5.981,1963,5.981]],["title/interfaces/IconDefinition.html",[112,0.605,1964,3.006]],["body/interfaces/IconDefinition.html",[8,0.013,21,0.114,22,0.139,23,0.114,24,0.076,33,1.432,34,0.832,35,0.293,48,0.235,50,1.797,57,2.506,58,2.04,98,0.193,99,0.114,102,0.731,103,1.339,109,0.006,110,0.008,111,0.006,112,0.576,114,1.345,116,1.602,118,0.408,119,0.799,120,1.331,125,1.23,126,0.732,127,1.384,191,2.356,193,1.708,210,1.942,212,4.416,213,2.832,219,0.857,226,1.735,236,2.316,251,1.142,252,1.072,253,1.883,255,1.006,261,1.845,293,3.654,317,1.192,320,3.106,373,1.727,404,1.31,419,1.47,420,0.859,483,2.863,508,2.499,567,0.805,586,1.006,611,5.178,633,2.832,677,2.832,679,2.832,680,2.597,681,2.04,683,2.04,684,1.871,870,3.117,1032,3.106,1040,4.311,1113,2.863,1181,2.367,1243,2.668,1246,6.08,1247,4.604,1252,4.594,1257,5.871,1258,5.178,1259,5.496,1260,5.349,1261,3.973,1262,4.594,1264,3.703,1390,3.703,1391,3.285,1611,2.863,1620,3.106,1964,5.496,1965,2.863,1966,3.106,1967,4.764,1968,5.911,1969,5.349,1970,5.472,1971,4.311,1972,3.433,1973,2.506,1974,6.426,1975,3.433,1976,4.311,1977,3.433,1978,3.433,1979,2.245,1980,3.433,1981,3.106,1982,3.433,1983,3.433,1984,3.433,1985,4.764,1986,4.311,1987,3.433,1988,3.433,1989,3.433,1990,3.433,1991,3.433,1992,4.764,1993,3.433,1994,3.433,1995,3.433,1996,3.433,1997,3.106,1998,3.433,1999,3.433,2000,5.472,2001,3.433,2002,3.106,2003,3.433,2004,3.433,2005,3.433,2006,3.433,2007,3.433,2008,3.433,2009,3.433,2010,3.433,2011,3.433,2012,3.433,2013,3.433,2014,3.433,2015,3.433]],["title/injectables/IconRegistryState.html",[404,0.991,1973,2.631]],["body/injectables/IconRegistryState.html",[8,0.013,21,0.103,22,0.127,23,0.103,24,0.138,29,1.265,31,1.499,33,1.589,34,0.756,35,0.285,48,0.214,50,1.634,57,2.278,58,1.855,98,0.181,99,0.103,102,0.664,103,1.307,109,0.005,110,0.007,111,0.005,112,0.524,116,2.079,118,0.371,120,1.236,125,1.463,126,0.742,127,1.234,191,2.405,193,1.945,210,2.127,212,4.157,213,1.855,219,0.562,226,1.693,236,2.442,251,1.483,252,1.391,253,1.826,255,1.305,261,2.114,293,2.955,317,1.3,320,4.032,373,2.242,404,1.226,405,1.775,418,1.648,419,1.466,420,0.781,483,2.745,508,2.369,567,1.33,586,1.305,611,5.469,633,3.369,677,3.089,679,2.648,680,2.429,681,1.855,683,1.855,684,1.701,753,1.456,870,2.042,1032,4.032,1040,4.702,1113,3.715,1181,2.152,1243,4.843,1246,6.041,1247,4.573,1252,5.097,1257,5.469,1258,4.726,1259,5.469,1260,4.032,1261,2.603,1262,4.404,1264,3.463,1390,4.404,1391,3.908,1611,3.715,1620,4.032,1964,5.865,1965,5.197,1966,2.824,1967,3.121,1968,4.456,1969,4.032,1970,6.232,1971,5.128,1972,3.121,1973,3.252,1974,6.772,1975,4.456,1976,5.128,1977,4.456,1978,4.456,1979,3.399,1980,3.121,1981,2.824,1982,3.121,1983,3.121,1984,4.456,1985,5.667,1986,5.128,1987,4.456,1988,3.121,1989,4.456,1990,5.667,1991,4.456,1992,4.456,1993,3.121,1994,3.121,1995,3.121,1996,3.121,1997,2.824,1998,3.121,1999,3.121,2000,5.196,2001,3.121,2002,2.824,2003,3.121,2004,3.121,2005,3.121,2006,5.196,2007,3.121,2008,3.121,2009,3.121,2010,3.121,2011,3.121,2012,3.121,2013,4.456,2014,5.196,2015,3.121,2016,5.099,2017,3.572,2018,3.572,2019,3.572,2020,3.572,2021,3.572,2022,3.572,2023,3.572,2024,3.572]],["title/classes/InitializationState.html",[99,0.119,2025,3.262]],["body/classes/InitializationState.html",[8,0.013,20,0.914,21,0.065,22,0.079,23,0.065,24,0.121,29,0.885,31,1.299,33,1.258,34,1.553,35,0.216,48,0.133,65,0.621,98,0.079,99,0.129,100,0.79,102,1.036,103,1.194,109,0.003,110,0.005,111,0.003,118,0.232,119,0.523,125,1.608,126,0.643,128,0.764,129,2.15,130,0.753,131,2.423,145,0.764,172,1.339,176,0.571,179,2.228,182,0.715,183,0.79,185,0.764,187,0.764,188,0.764,190,2.316,191,2.077,193,0.973,205,2.066,208,3.993,210,2.172,213,1.853,219,0.981,226,1.723,229,1.423,236,2.653,251,0.649,252,0.609,253,1.598,255,0.571,261,2.179,263,2.15,280,1.423,293,3.48,297,2.04,309,0.91,317,1.114,318,1.403,319,2.953,323,1.308,336,1.913,343,1.344,346,2.6,347,2.423,394,2.124,396,2.15,418,0.858,420,1.218,434,3.703,435,3.703,436,2.216,437,3.017,438,2.427,439,2.844,440,2.844,452,3.032,478,2.004,483,0.944,508,1.107,509,1.935,560,0.628,565,0.764,567,0.457,571,2.316,586,0.571,587,1.005,603,0.944,615,3.46,616,2.33,617,1.626,620,2.744,643,2.722,655,2.379,764,2.822,765,1.853,766,1.95,768,2.078,771,2.124,772,1.275,775,3.028,777,1.764,778,1.159,787,1.632,788,1.853,789,1.626,790,1.455,793,1.754,795,1.95,797,1.626,799,1.515,801,0.981,805,1.515,809,1.632,811,1.423,812,1.159,826,2.423,827,1.626,830,3.118,834,1.159,842,2.157,849,3.705,850,3.367,856,1.423,857,1.764,858,1.95,859,1.626,862,3.118,868,1.515,883,2.04,891,1.95,915,1.764,918,1.764,925,4.219,930,1.626,933,1.95,934,3.76,935,1.7,936,1.95,937,1.764,946,1.95,947,1.764,948,1.275,953,2.15,954,1.423,969,2.6,975,2.276,986,1.344,992,3.598,1081,1.626,1087,1.275,1088,2.15,1099,2.15,1255,1.764,1382,1.626,1402,5.194,1526,1.95,1543,1.159,1547,1.764,1549,4.061,1628,1.95,1638,1.344,1674,1.764,1684,1.95,1890,1.626,2025,3.526,2026,1.626,2027,3.569,2028,4.46,2029,6.24,2030,5.096,2031,5.096,2032,5.096,2033,3.569,2034,4.46,2035,2.231,2036,7.003,2037,4.46,2038,2.231,2039,2.231,2040,2.231,2041,2.231,2042,2.231,2043,4.46,2044,2.231,2045,2.231,2046,1.95,2047,3.897,2048,5.453,2049,5.286,2050,3.897,2051,3.897,2052,5.194,2053,3.897,2054,4.87,2055,3.118,2056,3.897,2057,3.526,2058,4.029,2059,3.118,2060,4.453,2061,3.569,2062,2.231,2063,2.231,2064,2.231,2065,2.231,2066,2.231,2067,2.231,2068,2.231,2069,2.231,2070,3.569,2071,2.231,2072,3.569,2073,2.231,2074,2.231,2075,2.231,2076,1.764,2077,5.573,2078,2.231,2079,2.231,2080,2.231,2081,3.897,2082,1.95,2083,3.118,2084,3.569,2085,2.231,2086,5.096,2087,2.231,2088,3.569,2089,2.231,2090,2.231,2091,2.231,2092,4.46,2093,2.231,2094,2.231,2095,2.231,2096,2.844,2097,2.231,2098,4.46,2099,2.231,2100,2.231,2101,3.118,2102,2.231,2103,2.231,2104,2.231,2105,5.943,2106,3.569,2107,5.096,2108,3.569,2109,3.569,2110,2.231,2111,4.46,2112,3.569,2113,2.231,2114,2.231,2115,2.231,2116,2.231,2117,3.569,2118,3.569,2119,2.231,2120,2.231,2121,4.46,2122,2.231,2123,2.231,2124,2.231,2125,2.231,2126,3.569,2127,2.231,2128,2.231,2129,1.95,2130,2.231,2131,2.231,2132,2.231,2133,4.453,2134,4.46,2135,5.096,2136,3.569,2137,3.569,2138,2.231,2139,2.231,2140,2.231,2141,2.231,2142,2.231,2143,2.231,2144,1.95,2145,1.95,2146,2.231,2147,3.569,2148,2.231,2149,2.231,2150,2.231,2151,2.231,2152,2.231,2153,2.231,2154,2.231,2155,2.231,2156,1.515,2157,2.231,2158,2.231,2159,3.569,2160,2.231,2161,2.231,2162,2.231,2163,2.231,2164,2.231,2165,2.231,2166,3.569,2167,4.46,2168,2.231,2169,2.231,2170,3.569,2171,2.231,2172,2.231,2173,2.231,2174,2.231,2175,2.231,2176,1.764,2177,2.231,2178,2.231,2179,2.231]],["title/interfaces/ListResult.html",[112,0.605,2180,2.631]],["body/interfaces/ListResult.html",[8,0.012,21,0.179,22,0.219,23,0.179,24,0.12,35,0.24,65,1.077,98,0.219,109,0.009,110,0.011,111,0.009,112,0.907,114,2.118,118,0.642,119,1.07,120,1.351,125,1.752,126,0.868,127,1.398,136,2.433,303,3.045,356,3.67,587,2.188,673,4.835,1047,6.346,1365,5.847,2180,4.657,2181,5.406,2182,5.406]],["title/injectables/ListResultsState.html",[164,2.244,404,0.991]],["body/injectables/ListResultsState.html",[8,0.013,21,0.109,22,0.133,23,0.109,24,0.155,29,1.312,31,1.731,33,1.535,34,1.692,35,0.307,46,4.721,48,0.225,65,0.655,66,1.288,98,0.188,99,0.109,100,1.332,102,1.415,103,1.155,109,0.01,110,0.008,111,0.01,112,0.551,116,2.157,118,0.39,119,0.775,120,1.177,126,0.806,127,1.194,137,3.999,142,3.374,145,1.288,146,2.047,147,2.047,149,1.479,162,3.947,164,2.878,166,4.817,191,1.205,193,1.443,210,1.166,226,0.848,236,2.738,251,1.538,252,1.443,253,1.354,254,1.81,255,1.566,258,4.146,261,2.075,297,3.023,303,2.753,317,1.156,354,3.162,356,2.419,359,1.592,371,2.198,404,1.271,405,1.869,418,1.681,419,1.305,420,1.156,567,1.084,586,1.699,671,1.954,673,2.266,677,3.177,678,1.479,679,2.747,680,2.519,681,1.954,682,3.686,683,1.954,684,1.792,689,4.214,710,3.686,715,2.266,716,2.15,718,3.04,738,2.554,744,3.686,753,1.534,923,2.047,1041,4.926,1061,2.554,1101,2.399,1181,2.266,1208,2.554,1365,4.458,1638,3.187,1924,2.554,2180,5.141,2183,6.323,2184,2.974,2185,5.285,2186,5.321,2187,5.289,2188,5.289,2189,5.289,2190,5.289,2191,5.8,2192,3.287,2193,5.289,2194,3.854,2195,4.458,2196,4.154,2197,4.622,2198,3.761,2199,4.622,2200,3.761,2201,2.628,2202,3.761,2203,4.622,2204,3.761,2205,3.761,2206,3.761,2207,3.761,2208,3.854,2209,3.761,2210,4.622,2211,3.761,2212,4.622,2213,3.761,2214,3.592,2215,2.974,2216,2.399,2217,3.287,2218,2.554,2219,2.554,2220,2.741,2221,3.287,2222,3.287,2223,3.287,2224,2.741,2225,2.741,2226,2.399,2227,2.741,2228,2.741,2229,2.554,2230,2.741,2231,2.741,2232,2.741,2233,2.741,2234,3.287,2235,2.741,2236,3.287,2237,3.287,2238,3.287,2239,3.287,2240,3.287,2241,3.287,2242,3.287,2243,3.287,2244,3.287,2245,3.287,2246,3.287,2247,3.287]],["title/interfaces/ListResultsStateModel.html",[112,0.605,2220,3.006]],["body/interfaces/ListResultsStateModel.html",[8,0.013,21,0.13,22,0.16,23,0.13,24,0.088,34,1.622,35,0.317,46,4.491,48,0.27,65,0.785,66,1.544,98,0.212,99,0.13,100,1.597,102,1.332,103,1.247,109,0.009,110,0.009,111,0.01,112,0.661,114,1.544,116,1.839,118,0.468,119,0.878,120,1.008,126,0.648,127,1.289,137,3.608,142,3.819,145,1.544,146,2.454,147,2.454,149,1.773,162,3.658,164,2.454,166,2.717,191,1.445,193,1.23,210,1.399,226,1.017,236,2.677,251,1.311,252,1.23,253,1.533,254,1.633,255,1.533,258,3.842,261,1.954,297,2.578,303,2.829,354,2.852,356,2.738,359,1.909,371,1.983,404,1.439,419,0.812,586,1.533,671,2.342,673,2.717,677,3.11,678,1.773,679,3.11,680,2.852,681,2.342,682,3.608,683,2.342,684,2.148,689,4.05,710,2.717,715,2.717,716,2.578,718,2.976,738,3.063,744,4.05,923,2.454,1041,4.565,1061,3.063,1101,2.877,1181,2.717,1208,3.063,1365,4.898,1638,2.717,1924,3.063,2180,5.126,2183,3.566,2184,3.566,2185,5.697,2186,5.512,2191,3.941,2194,3.286,2195,4.363,2196,4.066,2197,3.941,2199,3.941,2201,2.241,2203,3.941,2208,3.286,2210,3.941,2212,3.941,2214,3.063,2215,3.566,2216,2.877,2217,3.941,2218,3.063,2219,3.063,2220,4.363,2221,3.941,2222,3.941,2223,3.941,2224,3.286,2225,3.286,2226,2.877,2227,3.286,2228,3.286,2229,3.063,2230,3.286,2231,3.286,2232,3.286,2233,3.286,2234,3.941,2235,3.286,2236,3.941,2237,3.941,2238,3.941,2239,3.941,2240,3.941,2241,3.941,2242,3.941,2243,3.941,2244,3.941,2245,3.941,2246,3.941,2247,3.941]],["title/interfaces/Message.html",[112,0.605,793,1.622]],["body/interfaces/Message.html",[8,0.013,21,0.111,22,0.292,23,0.111,24,0.075,33,1.492,34,1.136,35,0.24,38,1.1,48,0.23,98,0.259,99,0.155,100,1.36,102,1.151,103,0.934,109,0.006,110,0.008,111,0.006,112,0.787,114,1.315,118,0.399,119,0.787,120,0.904,125,0.867,126,0.762,143,4.4,145,1.315,149,1.511,190,1.995,193,1.048,205,1.272,210,1.191,219,1.108,226,1.59,251,1.799,252,1.048,253,1.989,254,1.464,255,0.983,261,1.992,316,1.566,317,0.839,319,3.075,336,1.015,400,2.314,404,1.29,423,2.921,451,1.919,483,2.983,496,3.947,546,1.419,567,0.787,578,2.196,586,1.958,587,1.985,605,4.247,678,3.128,688,3.479,765,2.788,768,2.189,771,3.749,778,1.995,786,1.757,787,3.638,793,3.364,801,1.689,809,2.455,811,2.45,840,2.314,856,3.424,906,2.45,954,3.424,978,3.973,998,1.995,1008,3.645,1060,2.609,1087,2.196,1099,2.314,1103,5.09,1499,2.314,1500,3.234,1979,2.196,2096,3.947,2156,2.609,2201,3.629,2248,2.45,2249,4.549,2250,4.273,2251,3.068,2252,3.911,2253,2.609,2254,3.424,2255,2.799,2256,4.247,2257,3.728,2258,2.799,2259,3.645,2260,2.45,2261,2.609,2262,2.799,2263,3.424,2264,2.799,2265,2.799,2266,2.799,2267,2.799,2268,2.799,2269,2.799,2270,3.911,2271,2.799,2272,2.799,2273,2.799,2274,2.799,2275,3.645,2276,2.799,2277,3.911,2278,2.799,2279,2.799,2280,2.799,2281,2.799,2282,2.799,2283,2.799,2284,2.799,2285,2.799,2286,4.509,2287,2.799,2288,2.799,2289,2.799,2290,2.799,2291,2.799,2292,2.799,2293,2.799,2294,2.799,2295,2.799]],["title/classes/MessageChannel.html",[99,0.119,809,1.886]],["body/classes/MessageChannel.html",[8,0.013,21,0.098,22,0.291,23,0.098,24,0.144,29,1.219,31,1.58,33,1.622,34,1.223,35,0.224,38,1.007,48,0.203,98,0.248,99,0.142,100,1.202,102,1.074,103,0.855,109,0.005,110,0.007,111,0.005,112,0.72,118,0.352,119,0.72,120,1.18,125,0.765,126,0.782,143,4.551,145,1.162,149,1.334,190,3.001,193,1.34,205,1.124,210,1.052,219,1.102,226,1.516,251,1.954,252,0.925,253,1.932,254,0.925,255,1.258,261,2.09,316,1.383,317,1.074,319,3.483,336,1.299,400,2.044,404,1.181,418,1.522,419,1.14,420,0.741,423,2.674,451,1.792,483,2.845,496,4.47,546,1.299,567,1.378,578,1.939,586,1.895,587,1.974,605,4.05,678,3.052,688,3.755,765,2.552,768,2.004,771,3.771,778,1.762,786,2.247,787,3.753,793,3.355,801,1.492,809,2.642,811,2.164,840,2.044,856,3.134,906,3.134,954,3.134,978,4.028,998,2.552,1008,3.337,1060,2.304,1087,2.809,1099,2.044,1103,4.909,1499,2.044,1500,2.961,1890,2.472,1979,1.939,2096,4.47,2156,3.337,2201,3.147,2248,2.164,2249,4.565,2250,4.288,2251,1.939,2252,2.472,2253,2.304,2254,3.134,2255,2.472,2256,4.05,2257,3.481,2258,2.472,2259,3.337,2260,2.164,2261,2.304,2262,3.58,2263,4.288,2264,3.58,2265,3.58,2266,3.58,2267,3.58,2268,2.472,2269,2.472,2270,3.58,2271,3.58,2272,3.58,2273,4.615,2274,2.472,2275,4.301,2276,3.58,2277,3.58,2278,3.58,2279,3.58,2280,2.472,2281,4.615,2282,2.472,2283,2.472,2284,2.472,2285,2.472,2286,4.21,2287,2.472,2288,2.472,2289,2.472,2290,2.472,2291,2.472,2292,2.472,2293,2.472,2294,2.472,2295,2.472,2296,4.914,2297,4.914,2298,4.914,2299,3.393,2300,4.914,2301,3.393,2302,3.393,2303,3.393,2304,3.393,2305,3.393]],["title/injectables/MessageService.html",[404,0.991,768,1.682]],["body/injectables/MessageService.html",[8,0.013,21,0.104,22,0.288,23,0.104,24,0.139,29,1.275,31,1.505,33,1.559,34,1.267,35,0.232,38,1.054,48,0.216,98,0.254,99,0.149,100,1.28,102,1.113,103,0.895,109,0.005,110,0.007,111,0.005,112,0.754,118,0.375,119,0.754,120,1.098,125,0.815,126,0.745,143,4.388,145,1.237,149,1.421,190,1.877,193,0.986,205,1.197,210,1.121,219,1.158,226,1.554,251,1.896,252,1.402,253,1.961,254,0.986,255,1.316,261,2.119,316,1.474,317,1.124,319,2.974,336,0.955,400,2.177,404,1.236,405,1.796,418,1.236,419,0.925,420,0.79,423,2.798,451,1.856,483,2.915,496,3.817,546,1.582,567,1.227,578,2.065,586,2.032,587,1.685,605,4.536,678,2.961,688,3.578,765,2.67,768,2.809,771,3.841,778,3.386,786,1.653,787,3.688,793,3.358,801,2.261,809,2.737,811,3.279,840,3.098,856,3.279,906,2.305,954,3.279,978,3.896,998,1.877,1008,3.492,1060,2.454,1087,2.065,1099,3.098,1103,4.678,1499,2.177,1500,3.098,1979,3.421,2096,3.817,2156,2.454,2201,2.974,2248,2.305,2249,4.064,2250,3.817,2251,2.065,2252,2.633,2253,2.454,2254,3.279,2255,2.633,2256,4.314,2257,4.151,2258,2.633,2259,3.492,2260,2.305,2261,2.454,2262,2.633,2263,3.279,2264,2.633,2265,2.633,2266,2.633,2267,2.633,2268,2.633,2269,2.633,2270,3.746,2271,2.633,2272,2.633,2273,2.633,2274,2.633,2275,3.492,2276,2.633,2277,3.746,2278,2.633,2279,2.633,2280,2.633,2281,2.633,2282,2.633,2283,3.746,2284,2.633,2285,2.633,2286,4.361,2287,2.633,2288,2.633,2289,2.633,2290,2.633,2291,3.746,2292,2.633,2293,3.746,2294,3.746,2295,2.633,2306,4.493,2307,3.614,2308,5.141,2309,3.614,2310,3.614,2311,3.614]],["title/interfaces/MessageServiceConfig.html",[112,0.605,2257,2.485]],["body/interfaces/MessageServiceConfig.html",[8,0.013,21,0.112,22,0.287,23,0.112,24,0.075,33,1.498,34,1.145,35,0.242,38,1.109,48,0.232,98,0.26,99,0.156,100,1.376,102,1.158,103,0.942,109,0.006,110,0.008,111,0.006,112,0.793,114,1.331,118,0.403,119,0.793,120,0.911,125,1.405,126,0.728,143,4.409,145,1.331,149,1.528,190,2.018,193,1.06,205,1.792,210,1.205,219,1.113,226,1.597,251,1.81,252,1.06,253,1.994,254,1.06,255,0.995,261,1.999,316,1.585,317,0.849,319,3.094,336,1.027,400,2.341,404,1.301,423,2.944,451,1.931,483,2.996,496,3.971,546,1.43,567,0.797,578,3.093,586,1.994,587,1.753,605,4.416,678,3.016,688,3.497,765,2.811,768,2.207,771,3.71,778,2.018,786,1.777,787,3.678,793,3.348,801,1.709,809,2.475,811,2.479,840,2.341,856,3.452,906,2.479,954,3.452,978,3.851,998,2.018,1008,3.675,1060,2.639,1087,2.221,1099,2.341,1103,4.807,1499,2.341,1500,3.26,1979,2.221,2096,3.971,2156,2.639,2201,3.094,2248,2.479,2249,4.228,2250,3.971,2251,2.221,2252,2.832,2253,2.639,2254,3.452,2255,2.832,2256,4.416,2257,4.056,2258,3.943,2259,4.807,2260,2.479,2261,2.639,2262,2.832,2263,3.452,2264,2.832,2265,2.832,2266,2.832,2267,2.832,2268,2.832,2269,2.832,2270,3.943,2271,2.832,2272,2.832,2273,2.832,2274,2.832,2275,3.675,2276,2.832,2277,3.943,2278,2.832,2279,2.832,2280,2.832,2281,2.832,2282,2.832,2283,2.832,2284,2.832,2285,2.832,2286,4.537,2287,2.832,2288,2.832,2289,2.832,2290,2.832,2291,2.832,2292,2.832,2293,2.832,2294,2.832,2295,2.832]],["title/modules/OntologyExplorationModule.html",[0,1.199,14,2.801]],["body/modules/OntologyExplorationModule.html",[2,1.676,3,2.035,8,0.013,14,5.806,18,2.243,19,1.788,20,1.476,21,0.167,22,0.204,23,0.167,24,0.112,28,2.318,35,0.312,47,2.243,48,0.345,75,2.995,98,0.204,99,0.167,109,0.008,110,0.01,111,0.008,196,1.93,665,2.479,666,2.657,667,2.042,2312,5.038,2313,5.038,2314,5.038,2315,5.435,2316,5.786,2317,5.435,2318,3.137,2319,5.766,2320,3.296,2321,5.038,2322,4.201,2323,5.766,2324,3.474,2325,5.038]],["title/components/OntologySearchComponent.html",[130,0.522,535,1.279]],["body/components/OntologySearchComponent.html",[7,0.796,8,0.013,9,0.796,21,0.074,22,0.091,23,0.074,24,0.145,29,0.989,31,1.614,33,1.441,34,1.512,35,0.271,38,0.526,48,0.154,65,1.425,75,3.888,98,0.091,99,0.074,100,1.412,102,0.741,103,0.694,109,0.01,110,0.006,111,0.011,118,0.414,119,0.584,120,1.004,126,0.756,127,1.185,128,0.879,130,0.834,132,4.269,136,1.01,143,3.434,145,0.879,146,1.397,149,1.01,170,0.771,172,0.771,176,1.021,179,1.333,182,2.598,183,1.412,185,1.365,187,1.365,188,1.365,191,1.277,196,1.976,197,2.519,208,2.658,216,0.85,219,0.768,226,1.102,228,2.169,231,0.823,251,1.159,252,1.907,253,1.616,255,0.657,261,0.7,287,4.813,300,3.318,316,1.992,317,0.871,318,1.01,319,2.737,322,3.152,336,2.001,356,3.011,357,2.278,371,1.824,376,2.395,394,3.006,396,2.402,418,1.433,419,1.185,420,1.686,432,1.823,444,0.909,445,0.796,449,0.879,451,0.796,453,1.625,478,1.921,486,1.871,507,0.909,508,1.236,509,1.236,510,0.909,511,1.95,512,0.909,513,0.909,514,0.909,515,0.796,516,0.909,517,0.796,518,0.909,519,0.796,520,1.412,521,0.796,522,0.823,523,0.909,524,0.909,525,0.796,526,0.909,527,0.796,528,0.879,529,0.909,530,0.796,531,1.236,532,0.909,533,0.796,534,0.909,535,1.708,536,0.909,537,0.796,538,0.909,539,0.823,540,0.909,541,0.796,542,0.909,543,0.796,544,1.32,545,2.312,546,0.678,547,0.909,548,0.796,549,0.909,550,0.796,551,0.909,552,0.796,553,0.879,554,0.909,555,0.796,556,0.796,557,0.796,558,0.909,559,0.796,560,0.723,561,0.909,562,0.796,563,0.909,564,0.909,565,0.879,567,1.294,579,1.823,582,3.318,584,3.318,585,2.658,586,1.41,587,1.122,597,3.152,603,2.068,609,3.74,616,2.519,620,2.422,622,1.468,623,1.397,631,2.944,632,2.793,633,3.778,642,1.129,643,2.019,644,1.223,645,2.428,650,1.129,655,2.022,836,3.483,849,2.278,850,2.07,884,1.744,948,2.278,968,2.422,971,1.638,1036,3.483,1058,2.244,1087,2.278,1097,3.863,1142,1.871,1324,1.871,1390,2.707,1417,1.638,1418,1.638,1423,3.615,1424,3.244,1441,1.899,1442,1.397,1446,2.03,1463,3.382,1464,2.542,1467,1.547,1517,2.402,1527,2.904,1537,4.451,1538,4.158,1539,1.871,1541,2.03,1543,3.097,1545,1.871,1548,1.638,1559,3.152,1562,1.638,1617,2.904,1645,3.483,1751,2.244,1769,2.542,1828,4.598,1834,1.871,1893,3.097,1897,3.513,1939,2.244,1948,2.03,2176,3.152,2201,1.981,2215,2.03,2216,1.638,2275,2.707,2318,4.073,2320,4.328,2326,2.244,2327,3.986,2328,3.483,2329,4.886,2330,3.986,2331,4.886,2332,4.886,2333,6.807,2334,6.585,2335,3.986,2336,3.986,2337,3.986,2338,3.986,2339,4.269,2340,2.567,2341,3.408,2342,3.986,2343,4.886,2344,4.715,2345,2.567,2346,2.567,2347,3.986,2348,3.483,2349,3.986,2350,4.851,2351,2.567,2352,3.986,2353,3.986,2354,2.03,2355,7.717,2356,3.986,2357,2.567,2358,3.986,2359,3.986,2360,3.152,2361,3.986,2362,6.31,2363,2.567,2364,3.483,2365,3.986,2366,3.986,2367,2.567,2368,5.507,2369,3.986,2370,3.986,2371,2.567,2372,3.986,2373,2.567,2374,4.886,2375,2.567,2376,3.986,2377,3.986,2378,2.567,2379,1.871,2380,2.244,2381,2.244,2382,2.244,2383,2.567,2384,2.567,2385,2.567,2386,2.567,2387,2.567,2388,2.03,2389,2.567,2390,2.567,2391,2.567,2392,2.567,2393,2.567,2394,2.567,2395,2.567,2396,2.567,2397,2.567,2398,2.567,2399,2.567,2400,2.567,2401,2.567,2402,2.567,2403,2.567,2404,2.567,2405,3.986,2406,3.986,2407,3.986,2408,3.986,2409,2.03,2410,2.567,2411,2.567,2412,3.986,2413,2.244]],["title/modules/OntologySearchModule.html",[0,1.199,2315,2.631]],["body/modules/OntologySearchModule.html",[2,1.706,3,2.057,8,0.013,18,2.267,19,1.82,20,1.502,21,0.17,22,0.208,23,0.17,24,0.114,26,2.593,28,1.943,35,0.325,47,2.267,48,0.351,49,3.516,50,2.683,75,3.047,98,0.208,99,0.17,109,0.008,110,0.01,111,0.008,196,1.502,535,2.648,665,2.505,666,2.685,667,2.078,1538,3.354,1574,5.594,1575,4.639,2315,5.29,2318,3.192,2320,3.354,2379,4.275,2380,5.127,2414,5.127,2415,5.127,2416,5.127,2417,5.867,2418,6.182,2419,7.075,2420,7.075,2421,7.075,2422,5.867,2423,5.867]],["title/injectables/OntologySearchService.html",[404,0.991,2341,2.358]],["body/injectables/OntologySearchService.html",[8,0.013,21,0.093,22,0.113,23,0.093,24,0.149,29,1.168,31,1.652,33,1.622,34,0.997,35,0.275,38,0.965,48,0.191,65,0.557,98,0.167,99,0.093,102,1.383,103,1.143,109,0.009,110,0.007,111,0.011,112,0.69,118,0.795,119,0.69,120,1.156,126,0.788,127,1.478,135,5.003,136,1.258,143,3.039,144,2.331,145,1.095,146,2.562,149,1.258,175,1.59,196,2.052,197,3.724,219,0.878,226,1.481,245,3.431,252,0.873,253,1.865,254,0.873,261,2.028,316,1.92,317,1.221,319,2.34,357,4.477,372,3.003,373,3.019,404,1.481,405,1.59,418,1.65,419,1.236,420,1.435,445,1.91,545,2.347,567,1.408,587,1.573,675,3.929,753,1.305,790,1.92,801,2.07,817,3.197,822,3.197,948,3.521,1042,4.489,1043,2.331,1088,2.837,1142,5.651,1393,2.53,1394,3.431,1442,3.352,1464,2.041,1517,1.928,1537,2.837,1617,4.489,1740,3.197,1769,4.379,1788,3.431,1893,4.135,1897,4.996,1915,5.759,1943,5.307,2216,2.041,2251,1.829,2320,4.381,2341,3.521,2344,2.53,2350,3.793,2360,3.723,2388,3.723,2409,3.723,2424,6.061,2425,2.53,2426,4.114,2427,4.114,2428,4.881,2429,5.759,2430,4.708,2431,4.708,2432,4.708,2433,4.708,2434,4.708,2435,3.2,2436,4.114,2437,7.044,2438,3.2,2439,4.114,2440,4.114,2441,5.383,2442,4.114,2443,4.114,2444,3.2,2445,4.114,2446,4.114,2447,4.114,2448,3.2,2449,4.114,2450,3.2,2451,4.114,2452,4.114,2453,4.114,2454,3.2,2455,5.383,2456,4.114,2457,3.2,2458,4.114,2459,3.2,2460,3.2,2461,3.2,2462,2.796,2463,2.796,2464,4.881,2465,2.796,2466,2.53,2467,2.796,2468,2.796,2469,2.796,2470,2.796,2471,2.796,2472,2.796,2473,4.114,2474,2.796,2475,4.114,2476,4.114,2477,4.114,2478,4.114,2479,2.796,2480,2.796,2481,2.796,2482,2.796,2483,2.796,2484,2.796,2485,4.114,2486,4.114,2487,2.53,2488,2.796,2489,2.796]],["title/interfaces/OntologySelection.html",[112,0.605,156,2.801]],["body/interfaces/OntologySelection.html",[8,0.012,21,0.181,22,0.222,23,0.181,24,0.121,35,0.242,65,1.088,98,0.222,109,0.009,110,0.011,111,0.009,112,0.916,114,2.139,118,0.648,119,1.077,126,0.844,127,1.497,136,2.457,156,4.988,197,3.682,359,3.301,1897,5.135,2201,4.001,2490,5.46,2491,5.46,2492,6.366]],["title/components/OntologySelectionComponent.html",[130,0.522,537,1.279]],["body/components/OntologySelectionComponent.html",[7,1.036,8,0.013,9,1.036,21,0.097,22,0.118,23,0.097,24,0.153,29,1.205,31,1.709,33,1.028,34,1.331,35,0.259,38,0.685,48,0.2,65,1.457,75,4.101,88,3.099,91,2.644,98,0.118,99,0.097,100,1.721,102,0.621,103,0.581,109,0.005,110,0.007,111,0.009,118,0.347,119,0.712,120,0.964,121,3.652,125,1.096,126,0.846,127,1.132,128,1.144,130,0.98,133,2.641,135,4.172,136,1.314,156,4.27,157,2.919,158,5.253,170,1.003,172,1.003,176,1.61,179,1.562,182,2.676,183,1.721,185,1.664,187,1.664,188,1.664,190,2.524,191,1.557,193,1.325,196,2.18,198,5.512,199,4.246,216,1.106,219,0.525,231,1.07,251,1.413,252,1.325,253,1.244,254,1.325,255,1.244,309,1.981,316,1.981,350,3.842,354,2.314,355,3.299,356,3.371,357,1.909,371,2.082,418,1.376,419,1.202,444,1.183,445,2.502,449,1.144,451,1.036,453,1.981,478,2.955,507,1.183,508,1.507,509,1.507,510,1.183,511,2.227,512,1.183,513,1.183,514,1.183,515,1.036,516,1.183,517,1.036,518,1.183,519,1.036,520,1.721,521,1.036,522,1.07,523,1.183,524,1.183,525,1.036,526,1.183,527,1.036,528,1.144,529,1.183,530,1.036,531,1.507,532,1.183,533,1.036,534,1.183,535,1.036,536,1.183,537,1.95,538,1.183,539,2.015,540,1.183,541,1.036,542,1.183,543,1.036,544,1.609,545,2.076,546,0.883,547,1.183,548,1.036,549,1.183,550,1.036,551,1.183,552,1.036,553,1.144,554,1.183,555,1.036,556,1.036,557,1.036,558,1.183,559,1.036,560,0.941,561,1.183,562,1.036,563,1.183,564,1.183,565,1.144,567,1.174,571,2.524,579,2.222,586,1.466,603,2.423,616,2.222,620,2.136,711,4.441,753,1.362,788,3.266,1129,6.092,1215,3.299,1371,3.099,1386,4.246,1440,3.299,1464,3.099,1583,4.528,1596,3.842,1639,3.842,1640,4.972,1769,3.652,1893,3.47,1897,4.011,2226,3.099,2318,4.296,2320,1.909,2322,5.753,2324,2.013,2328,5.004,2339,5.004,2341,4.471,2381,2.919,2382,2.919,2429,4.972,2466,2.641,2487,2.641,2493,2.919,2494,4.859,2495,5.726,2496,4.859,2497,5.726,2498,5.726,2499,5.726,2500,3.34,2501,4.859,2502,3.34,2503,3.34,2504,4.246,2505,3.34,2506,3.34,2507,3.34,2508,3.34,2509,4.859,2510,4.859,2511,3.34,2512,4.859,2513,3.34,2514,4.859,2515,3.34,2516,4.859,2517,3.34,2518,2.919,2519,3.34,2520,3.34,2521,3.34]],["title/modules/OntologySelectionModule.html",[0,1.199,2316,2.801]],["body/modules/OntologySelectionModule.html",[2,1.69,3,2.045,8,0.013,18,2.254,19,1.802,20,1.488,21,0.168,22,0.206,23,0.168,24,0.113,26,2.578,28,2.33,35,0.312,47,2.254,48,0.348,75,3.019,98,0.206,99,0.168,109,0.008,110,0.01,111,0.008,196,1.937,537,2.661,665,2.491,666,2.67,667,2.058,2315,5.218,2316,5.77,2317,5.218,2318,3.162,2320,3.322,2321,5.079,2322,4.235,2324,3.502,2325,5.079,2341,4.324,2522,5.079,2523,5.079,2524,5.812,2525,5.079,2526,5.079,2527,5.812,2528,5.812]],["title/modules/OntologyTreeModule.html",[0,1.199,2317,2.631]],["body/modules/OntologyTreeModule.html",[2,1.708,3,2.059,8,0.013,18,2.269,19,1.822,20,1.504,21,0.17,22,0.208,23,0.17,24,0.114,26,2.595,28,1.946,35,0.325,47,2.269,48,0.351,49,3.518,50,2.687,54,5.599,55,4.646,65,1.023,66,2.012,75,3.052,98,0.208,99,0.17,109,0.008,110,0.01,111,0.008,196,1.504,539,2.736,665,2.508,666,2.687,667,2.081,1841,4.516,1842,3.747,2317,5.291,2318,3.197,2324,3.54,2518,5.134,2529,5.134,2530,5.134,2531,5.134,2532,5.875,2533,7.08,2534,5.875,2535,7.08]],["title/components/ResultsBrowserComponent.html",[130,0.522,541,1.279]],["body/components/ResultsBrowserComponent.html",[7,0.834,8,0.013,9,0.834,21,0.078,22,0.095,23,0.078,24,0.153,29,1.025,31,1.713,33,1.289,34,1.463,35,0.236,38,0.551,48,0.161,58,3.823,65,1.424,78,6.099,98,0.095,99,0.078,101,1.463,102,1.196,103,0.719,109,0.011,110,0.006,111,0.011,118,0.279,119,0.606,120,1.025,121,3.6,125,1.374,126,0.835,127,1.275,128,0.921,130,0.897,136,1.057,170,0.807,172,0.807,175,1.336,176,1.058,178,3.266,179,1.372,182,2.612,183,1.463,185,1.414,187,1.414,188,1.414,191,1.324,193,1.754,195,2.805,196,1.288,197,2.3,205,2.129,214,1.62,216,1.666,219,0.958,226,0.607,231,0.862,251,1.201,252,1.127,253,1.559,255,0.688,293,2.053,317,0.588,323,1.843,336,1.092,342,2.349,354,3.189,356,3.16,371,2.129,373,1.816,382,3.01,389,4.614,418,1.464,419,1.205,420,0.903,432,1.23,437,1.138,444,0.952,445,0.834,449,0.921,451,0.834,453,1.684,478,2.937,507,0.952,508,1.281,509,1.56,510,0.952,511,1.999,512,0.952,513,0.952,514,0.952,515,0.834,516,0.952,517,0.834,518,0.952,519,0.834,520,1.463,521,0.834,522,0.862,523,0.952,524,0.952,525,0.834,526,0.952,527,0.834,528,0.921,529,0.952,530,0.834,531,1.281,532,0.952,533,0.834,534,0.952,535,0.834,536,0.952,537,0.834,538,0.952,539,0.862,540,0.952,541,1.75,542,0.952,543,0.834,544,1.368,545,1.163,546,0.711,547,0.952,548,0.834,549,0.952,550,0.834,551,0.952,552,0.834,553,0.921,554,0.952,555,0.834,556,0.834,557,0.834,558,0.952,559,0.834,560,0.757,561,0.952,562,0.834,563,0.952,564,0.952,565,0.921,567,1.248,579,1.889,581,1.826,582,3.4,584,3.03,585,2.737,586,1.058,603,3.115,606,3.01,612,1.715,616,2.94,620,3.284,622,1.537,623,1.463,642,2.482,643,1.843,644,1.281,645,3.521,647,2.875,648,2.489,650,2.827,651,2.875,652,3.01,655,1.808,675,4.407,676,1.959,802,3.609,842,1.138,884,1.826,885,2.361,887,3.609,913,1.537,968,2.827,969,1.959,970,2.349,971,1.715,1044,2.349,1139,4.395,1215,2.805,1324,1.959,1350,4.756,1364,4.395,1371,2.635,1378,3.6,1381,3.266,1387,3.6,1417,1.715,1418,2.635,1419,1.396,1421,2.053,1428,1.396,1438,2.126,1441,1.968,1442,1.463,1443,3.977,1444,2.349,1448,1.463,1461,1.396,1467,3.4,1471,2.349,1543,2.145,1544,2.805,1611,3.01,1621,3.609,1698,3.609,1737,2.635,1834,1.959,1855,3.609,1859,3.609,2096,4.101,2180,1.715,2186,3.416,2201,1.336,2413,2.349,2536,2.349,2537,4.131,2538,5.644,2539,5.644,2540,4.131,2541,5.644,2542,4.131,2543,4.131,2544,5.03,2545,4.131,2546,5.03,2547,4.131,2548,4.131,2549,4.131,2550,5.03,2551,4.131,2552,6.09,2553,5.03,2554,5.03,2555,4.395,2556,5.03,2557,5.03,2558,4.131,2559,2.689,2560,2.689,2561,2.689,2562,2.689,2563,2.689,2564,4.131,2565,2.689,2566,2.689,2567,2.689,2568,4.131,2569,4.131,2570,2.689,2571,4.131,2572,2.689,2573,2.689,2574,2.689,2575,4.131,2576,2.689,2577,5.644,2578,4.131,2579,2.689,2580,4.131,2581,4.131,2582,2.689,2583,4.131,2584,5.03,2585,2.689,2586,7.086,2587,4.131,2588,4.131,2589,4.131,2590,3.609,2591,5.03,2592,2.689,2593,2.689,2594,2.689,2595,2.689,2596,2.689,2597,2.689,2598,2.689,2599,4.131,2600,4.131,2601,4.131,2602,4.131,2603,2.689,2604,4.131,2605,4.131,2606,5.644,2607,2.689,2608,2.689,2609,2.349,2610,2.689,2611,4.131,2612,2.689,2613,2.126]],["title/modules/ResultsBrowserModule.html",[0,1.199,15,2.801]],["body/modules/ResultsBrowserModule.html",[2,1.727,3,2.072,8,0.013,15,5.731,18,2.284,19,1.842,20,1.521,21,0.172,22,0.211,23,0.172,24,0.115,26,2.612,28,2.36,35,0.314,47,2.284,48,0.355,78,5.193,98,0.211,99,0.172,109,0.009,110,0.01,111,0.01,522,1.903,541,2.652,665,2.524,666,2.705,667,2.104,1350,3.579,1352,4.328,1481,5.584,2614,5.19,2615,5.19,2616,5.94,2617,5.19,2618,5.94,2619,7.127,2620,5.94,2621,5.94,2622,5.94]],["title/injectables/SceneState.html",[168,2.358,404,0.991]],["body/injectables/SceneState.html",[8,0.013,21,0.131,22,0.107,23,0.087,24,0.154,29,1.12,31,1.723,33,1.476,34,1.656,35,0.294,46,4.493,48,0.181,65,0.786,66,1.036,98,0.192,99,0.087,100,1.071,102,1.455,103,1.043,109,0.004,110,0.007,111,0.004,112,0.444,116,1.842,118,0.314,119,0.662,120,1.132,125,1.219,126,0.792,127,0.813,137,3.611,142,2.881,145,1.036,146,1.646,147,1.646,149,1.19,162,3.66,164,2.941,166,1.823,167,2.204,168,2.581,191,0.969,193,1.232,201,1.93,206,2.721,219,0.942,226,1.019,236,2.7,240,2.054,251,1.313,252,1.232,253,1.642,254,1.635,255,1.384,258,4.737,261,2.065,297,3.845,303,2.275,309,1.234,317,1.31,336,0.799,352,3.067,354,1.441,356,3.077,371,1.985,404,1.085,405,1.503,418,1.617,419,1.255,420,1.31,483,1.28,567,1.229,586,1.535,587,1.688,592,2.392,616,1.383,637,2.204,671,1.571,677,3.621,678,1.19,679,2.346,680,2.151,681,1.571,682,3.256,683,1.571,684,1.441,689,4.413,705,1.93,710,3.256,715,1.823,716,1.729,718,2.686,744,3.256,753,2.204,790,3.126,911,2.204,923,1.646,940,1.28,1041,4.568,1046,5.792,1059,2.204,1061,2.054,1101,1.93,1181,1.823,1204,2.392,1208,3.067,1218,2.054,1265,4.561,1282,2.204,1284,2.054,1312,2.204,1382,2.204,1387,1.93,1528,1.729,1638,2.721,1893,3.621,1894,2.392,1924,2.054,1956,1.823,2185,3.938,2186,3.67,2192,2.643,2194,3.291,2195,3.938,2196,3.67,2208,3.291,2214,4.07,2218,2.054,2219,2.054,2224,2.204,2225,2.204,2226,1.93,2227,2.204,2228,2.204,2229,3.067,2230,2.204,2231,2.204,2232,2.204,2233,2.204,2235,2.204,2623,2.204,2624,5.238,2625,6.517,2626,6.262,2627,4.723,2628,4.516,2629,5.238,2630,4.516,2631,4.516,2632,4.516,2633,4.516,2634,3.025,2635,3.025,2636,5.238,2637,3.025,2638,3.947,2639,3.947,2640,3.947,2641,3.025,2642,3.025,2643,3.025,2644,5.337,2645,3.025,2646,4.367,2647,3.025,2648,3.025,2649,3.067,2650,3.025,2651,3.025,2652,3.025,2653,3.025,2654,3.947,2655,3.025,2656,3.947,2657,3.025,2658,3.947,2659,3.025,2660,3.947,2661,3.025,2662,2.204,2663,3.947,2664,2.204,2665,2.392,2666,2.204,2667,3.947,2668,3.947,2669,2.643,2670,2.643,2671,2.643,2672,2.643,2673,2.643,2674,3.947,2675,3.947,2676,5.238,2677,2.643,2678,4.723,2679,2.643,2680,2.643,2681,2.643,2682,2.643,2683,2.643,2684,2.643,2685,2.643,2686,2.392,2687,2.643,2688,2.643,2689,2.643,2690,2.643,2691,2.643,2692,2.643,2693,2.643,2694,2.643,2695,2.643,2696,2.643,2697,2.643,2698,2.643,2699,2.643,2700,2.643,2701,2.643,2702,2.643,2703,2.643,2704,2.643,2705,2.643,2706,2.643,2707,2.643,2708,2.643,2709,2.643,2710,2.643,2711,2.643,2712,2.643,2713,2.643,2714,2.643,2715,2.643,2716,2.643,2717,2.643,2718,2.643,2719,2.643,2720,2.392,2721,2.643,2722,2.643,2723,2.643,2724,2.643,2725,2.643]],["title/interfaces/SceneStateModel.html",[112,0.605,2666,3.006]],["body/interfaces/SceneStateModel.html",[8,0.013,21,0.147,22,0.127,23,0.103,24,0.069,34,1.554,35,0.304,46,4.132,48,0.214,65,0.888,66,1.223,98,0.211,99,0.103,100,1.265,102,1.326,103,1.129,109,0.005,110,0.007,111,0.005,112,0.524,114,1.223,116,1.456,118,0.371,119,0.748,120,0.858,125,1.341,126,0.812,127,1.167,137,3.072,142,3.252,145,1.223,146,1.944,147,1.944,149,1.405,162,3.236,164,2.774,166,2.152,167,2.603,168,2.042,191,1.145,193,0.974,201,2.278,206,3.072,219,1.02,226,1.15,236,2.616,240,2.426,251,1.039,252,0.974,253,1.756,254,1.391,255,1.305,258,4.72,261,1.871,297,3.399,303,2.257,309,1.456,336,0.944,352,3.463,354,1.701,356,2.966,371,1.689,404,1.226,419,0.643,483,1.512,586,1.305,587,1.826,592,2.824,616,1.634,637,2.603,671,1.855,677,3.369,678,1.405,679,2.648,680,2.429,681,1.855,682,3.072,683,1.855,684,1.701,689,4.132,705,2.278,710,2.152,715,2.152,716,2.042,718,2.534,744,3.583,762,4.032,790,2.993,911,2.603,923,1.944,940,1.512,1041,4.038,1046,5.805,1059,2.603,1061,2.426,1101,2.278,1181,2.152,1204,2.824,1208,3.463,1218,2.426,1265,4.297,1282,2.603,1284,2.426,1312,2.603,1382,2.603,1387,2.278,1528,2.042,1638,2.152,1893,3.562,1894,2.824,1924,2.426,1956,2.152,2185,4.333,2186,2.426,2194,2.603,2195,3.715,2196,3.463,2208,2.603,2214,3.463,2218,2.426,2219,2.426,2224,2.603,2225,2.603,2226,2.278,2227,2.603,2228,2.603,2229,3.463,2230,2.603,2231,2.603,2232,2.603,2233,2.603,2235,2.603,2623,2.603,2624,5.993,2625,6.772,2626,6.559,2627,3.121,2629,3.121,2636,4.456,2638,3.121,2639,3.121,2640,3.121,2644,5.567,2646,3.715,2649,2.426,2654,3.121,2656,3.121,2658,3.121,2660,3.121,2662,2.603,2663,4.456,2664,2.603,2665,2.824,2666,3.715,2667,5.993,2668,5.993,2669,3.121,2670,3.121,2671,3.121,2672,3.121,2673,3.121,2674,4.456,2675,4.456,2676,5.667,2677,3.121,2678,5.196,2679,3.121,2680,3.121,2681,3.121,2682,3.121,2683,3.121,2684,3.121,2685,3.121,2686,2.824,2687,3.121,2688,3.121,2689,3.121,2690,3.121,2691,3.121,2692,3.121,2693,3.121,2694,3.121,2695,3.121,2696,3.121,2697,3.121,2698,3.121,2699,3.121,2700,3.121,2701,3.121,2702,3.121,2703,3.121,2704,3.121,2705,3.121,2706,3.121,2707,3.121,2708,3.121,2709,3.121,2710,3.121,2711,3.121,2712,3.121,2713,3.121,2714,3.121,2715,3.121,2716,3.121,2717,3.121,2718,3.121,2719,3.121,2720,2.824,2721,3.121,2722,3.121,2723,3.121,2724,3.121,2725,3.121]],["title/interfaces/SearchResult.html",[112,0.605,2350,2.801]],["body/interfaces/SearchResult.html",[8,0.013,21,0.114,22,0.139,23,0.114,24,0.076,33,1.504,34,0.832,35,0.293,38,0.805,48,0.235,65,0.684,98,0.193,99,0.114,102,1.165,103,1.237,109,0.011,110,0.008,111,0.011,112,0.918,114,1.345,118,0.836,119,0.799,126,0.769,127,1.423,135,4.563,136,1.545,143,2.967,144,2.863,145,1.345,146,2.967,149,1.545,175,1.952,196,1.969,197,3.653,219,0.857,226,1.603,245,2.863,252,1.487,253,1.969,254,1.487,261,1.708,319,1.952,357,4.311,372,2.506,373,2.753,404,1.505,420,0.859,445,1.691,545,2.351,567,0.805,587,1.905,675,3.478,790,1.602,801,1.727,817,2.668,822,2.668,948,3.117,1042,4.563,1043,2.863,1088,2.367,1142,5.359,1393,4.311,1394,2.863,1442,2.967,1464,3.478,1517,3.285,1537,2.367,1617,3.973,1740,2.668,1769,3.478,1788,2.863,1893,4.185,1897,5.095,1915,5.349,1943,5.359,2216,2.506,2251,3.117,2320,2.245,2341,3.117,2344,4.311,2350,4.253,2360,3.106,2388,3.106,2409,3.106,2424,3.106,2425,3.106,2426,3.433,2427,3.433,2428,3.433,2429,4.952,2436,3.433,2437,6.98,2439,3.433,2440,3.433,2441,4.764,2442,3.433,2443,3.433,2445,3.433,2446,3.433,2447,3.433,2449,3.433,2451,3.433,2452,3.433,2453,3.433,2455,4.764,2456,3.433,2458,3.433,2462,3.433,2463,4.764,2464,6.426,2465,3.433,2466,3.106,2467,3.433,2468,3.433,2469,3.433,2470,3.433,2471,3.433,2472,3.433,2473,4.764,2474,3.433,2475,4.764,2476,4.764,2477,4.764,2478,4.764,2479,3.433,2480,3.433,2481,3.433,2482,3.433,2483,3.433,2484,3.433,2485,4.764,2486,4.764,2487,3.106,2488,3.433,2489,3.433]],["title/components/SpatialSearchConfigBehaviorComponent.html",[130,0.522,543,1.279]],["body/components/SpatialSearchConfigBehaviorComponent.html",[7,1.043,8,0.013,9,1.043,21,0.097,22,0.119,23,0.097,24,0.157,29,1.211,31,1.754,33,1.479,34,1.658,35,0.271,38,0.69,48,0.201,65,1.458,66,1.152,98,0.119,99,0.097,100,1.729,102,1.47,103,0.586,109,0.005,110,0.007,111,0.007,118,0.349,119,0.716,120,1.128,126,0.78,128,1.152,129,3.801,130,0.728,168,3.606,169,2.939,170,1.01,172,1.01,176,1.25,179,1.568,181,2.027,182,2.678,183,1.729,185,1.672,187,1.672,188,1.672,196,1.472,206,3.464,216,1.114,219,1.161,231,1.078,255,1.25,258,3.286,261,1.721,263,2.942,280,2.145,317,1.464,396,3.801,418,1.382,419,1.206,420,1.464,434,1.747,435,1.747,436,1.671,437,1.424,438,1.83,444,1.191,445,1.043,449,1.152,451,1.043,507,1.191,508,1.514,509,1.514,510,1.191,511,2.234,512,1.191,513,1.191,514,1.191,515,1.043,516,1.191,517,1.043,518,1.191,519,1.043,520,1.729,521,1.043,522,1.078,523,1.191,524,1.191,525,1.043,526,1.191,527,1.043,528,1.152,529,1.191,530,1.043,531,1.514,532,1.191,533,1.043,534,1.191,535,1.043,536,1.191,537,1.043,538,1.191,539,1.078,540,1.191,541,1.043,542,1.191,543,1.956,544,2.532,545,2.416,546,2.261,547,1.191,548,1.514,549,1.191,550,1.043,551,1.191,552,1.043,553,1.152,554,1.191,555,1.043,556,1.043,557,1.043,558,1.191,559,1.043,560,0.947,561,1.191,562,1.043,563,1.191,564,1.191,565,1.152,603,3.051,765,2.986,775,3.904,778,3.276,826,3.904,868,2.284,1063,4.995,1265,3.801,1805,2.66,1808,5.884,2354,2.66,2644,5.645,2726,5.151,2727,2.939,2728,4.883,2729,5.749,2730,4.883,2731,5.749,2732,5.749,2733,5.749,2734,5.024,2735,5.749,2736,5.512,2737,6.308,2738,4.267,2739,4.267,2740,3.364,2741,5.749,2742,6.308,2743,4.883,2744,3.364,2745,3.364,2746,3.364,2747,3.364,2748,4.883,2749,3.364,2750,4.883,2751,3.364,2752,3.364,2753,3.364,2754,3.364,2755,3.364,2756,3.364,2757,3.861,2758,3.364,2759,3.364,2760,3.364,2761,2.145,2762,2.939,2763,3.364,2764,3.364,2765,4.883,2766,3.364,2767,5.749,2768,3.364,2769,6.308,2770,3.364,2771,3.364,2772,3.364,2773,3.364,2774,3.364,2775,3.364,2776,3.364,2777,3.364,2778,3.364,2779,3.364,2780,3.364,2781,3.364]],["title/modules/SpatialSearchConfigBehaviorModule.html",[0,1.199,2782,3.006]],["body/modules/SpatialSearchConfigBehaviorModule.html",[2,1.711,3,2.06,8,0.013,18,2.271,19,1.825,20,1.506,21,0.17,22,0.209,23,0.17,24,0.114,26,2.597,28,2.347,35,0.313,47,2.271,48,0.352,98,0.209,99,0.17,109,0.008,110,0.01,111,0.008,543,2.649,544,2.347,545,2.275,546,2.01,665,2.51,666,2.689,667,2.084,1805,4.652,1808,4.287,1809,5.141,2726,3.753,2761,3.753,2782,6.14,2783,5.141,2784,5.141,2785,5.141,2786,5.141,2787,5.572,2788,5.883,2789,7.086,2790,5.883]],["title/components/SpatialSearchConfigComponent.html",[130,0.522,548,1.279]],["body/components/SpatialSearchConfigComponent.html",[7,1.086,8,0.013,9,1.086,21,0.17,22,0.124,23,0.101,24,0.15,31,1.662,35,0.195,38,0.718,48,0.21,65,1.475,66,1.199,98,0.178,99,0.17,102,1.357,109,0.005,110,0.007,111,0.007,118,0.363,119,0.737,121,3.207,126,0.835,127,0.63,128,1.199,130,0.745,170,1.052,172,1.052,176,1.287,179,1.604,182,2.694,183,1.781,185,1.722,187,1.722,188,1.722,196,1.506,197,1.602,206,3.544,216,1.16,219,1.011,231,1.122,317,1.099,318,1.377,323,1.843,336,1.872,347,2.379,371,2.254,396,3.029,419,0.905,420,1.099,432,1.602,444,1.24,445,1.086,449,1.199,451,1.086,453,2.05,478,2.528,507,1.24,508,1.559,509,1.559,510,1.24,511,2.276,512,1.24,513,1.24,514,1.24,515,1.086,516,1.24,517,1.086,518,1.24,519,1.086,520,1.781,521,1.086,522,1.885,523,1.24,524,1.24,525,1.086,526,1.24,527,1.086,528,1.199,529,1.24,530,1.086,531,1.559,532,1.24,533,1.086,534,1.24,535,1.086,536,1.24,537,1.086,538,1.24,539,1.122,540,1.24,541,1.086,542,1.24,543,1.086,544,2.675,545,2.402,546,1.929,547,1.24,548,1.993,549,1.24,550,1.086,551,1.24,552,1.086,553,1.199,554,1.24,555,1.086,556,1.086,557,1.086,558,1.24,559,1.086,560,1.416,561,1.24,562,1.086,563,1.24,564,1.24,565,1.199,579,2.299,603,3.218,612,2.234,620,2.993,631,2.11,632,2.002,633,2.612,643,1.843,644,2.802,645,2.499,647,2.874,650,3.283,651,2.874,652,2.552,655,2.06,753,1.428,772,3.362,780,2.736,782,2.211,812,2.612,834,1.819,849,2.002,882,1.906,892,2.923,913,2.874,934,2.11,935,1.668,940,1.482,968,2.586,994,2.802,1063,4.85,1076,2.874,1265,4.101,1370,2.002,1419,3.055,1420,3.2,1421,3.194,1422,4.365,1423,3.521,1424,3.2,1426,2.874,1427,2.874,1428,3.055,1443,2.77,1448,2.736,1449,4.394,1450,3.061,1451,2.552,1452,3.976,1463,1.74,1473,2.77,1479,2.552,1537,3.029,1538,2.874,1539,2.552,1543,3.339,1544,3.414,1545,2.552,1546,2.234,1548,2.234,1561,2.002,1562,2.234,1737,2.234,1828,2.552,1831,2.379,1941,5.617,1956,2.11,2609,3.061,2644,4.96,2726,4.922,2734,5.14,2736,5.14,2738,5.14,2739,5.14,2757,4.651,2761,4.922,2791,2.77,2792,5.882,2793,5.028,2794,5.882,2795,3.502,2796,3.502,2797,3.502,2798,3.502,2799,3.502,2800,3.502,2801,3.502,2802,5.028,2803,5.14,2804,5.028,2805,5.028,2806,5.882,2807,3.502,2808,3.502,2809,3.502,2810,5.028,2811,3.502,2812,3.502,2813,3.502]],["title/modules/SpatialSearchConfigModule.html",[0,1.199,2787,2.801]],["body/modules/SpatialSearchConfigModule.html",[2,1.706,3,2.057,8,0.013,18,2.267,19,1.82,20,1.502,21,0.17,22,0.208,23,0.17,24,0.114,26,2.593,28,1.943,35,0.325,47,2.267,48,0.351,49,3.516,50,2.683,98,0.208,99,0.17,109,0.008,110,0.01,111,0.008,544,1.943,545,2.139,548,2.648,665,2.505,666,2.685,667,2.078,1576,5.594,1577,4.639,1841,4.512,1842,3.742,2379,4.275,2418,6.182,2726,3.742,2761,3.742,2762,5.127,2787,5.632,2814,5.127,2815,5.127,2816,5.127,2817,5.867,2818,7.075,2819,5.867]],["title/components/SpinnerOverlayComponent.html",[130,0.522,550,1.279]],["body/components/SpinnerOverlayComponent.html",[7,1.291,8,0.013,9,1.291,20,1.453,21,0.12,22,0.148,23,0.12,24,0.141,31,1.515,35,0.161,38,0.853,48,0.249,65,1.492,85,5.286,98,0.148,99,0.216,102,1.201,109,0.006,110,0.008,111,0.008,118,0.589,119,0.832,120,1.167,125,0.939,126,0.75,127,1.162,128,1.425,130,0.919,170,1.25,172,1.25,176,1.453,179,1.761,182,2.73,183,2.009,185,1.943,187,1.943,188,1.943,191,1.818,196,1.653,205,1.879,216,1.379,230,5.1,231,2.684,317,1.411,336,1.499,344,2.508,371,1.379,376,2.153,419,1.021,420,1.411,432,2.595,444,1.474,445,1.291,449,1.425,451,1.291,453,2.314,478,2.538,507,1.474,508,2.25,509,1.76,510,1.474,511,2.455,512,1.474,513,1.474,514,1.474,515,1.291,516,1.474,517,1.291,518,1.474,519,1.291,520,2.009,521,1.291,522,1.334,523,1.474,524,1.474,525,1.291,526,1.474,527,1.291,528,1.425,529,1.474,530,1.291,531,1.76,532,1.474,533,1.291,534,1.474,535,1.291,536,1.474,537,1.291,538,1.474,539,1.334,540,1.474,541,1.291,542,1.474,543,1.291,544,1.879,545,1.598,546,1.1,547,1.474,548,1.291,549,1.474,550,2.15,551,1.474,552,1.291,553,1.425,554,1.474,555,1.291,556,1.291,557,1.291,558,1.474,559,1.291,560,1.172,561,1.474,562,1.291,563,1.474,564,1.474,565,1.425,567,1.487,612,3.619,633,2.947,643,1.526,644,1.983,645,2.069,650,2.495,651,2.379,655,1.334,753,1.697,772,3.69,780,3.087,782,1.83,812,2.947,834,2.162,842,1.762,882,2.265,885,2.379,892,2.82,935,2.703,940,3.168,968,1.83,971,2.655,975,3.619,1355,4.958,1419,2.162,1420,2.265,1426,2.379,1428,2.947,1442,4.302,1461,2.162,1517,3.419,1528,2.379,1543,2.162,1550,3.853,1661,5.641,1737,2.655,1831,2.827,2649,4.708,2820,5.736,2821,3.638,2822,5.674,2823,6.455,2824,5.674,2825,4.163,2826,5.674,2827,4.163,2828,5.674,2829,5.674,2830,4.163,2831,4.163,2832,4.163]],["title/modules/SpinnerOverlayModule.html",[0,1.199,16,2.801]],["body/modules/SpinnerOverlayModule.html",[2,1.773,3,2.105,8,0.012,16,5.676,18,2.32,19,1.891,20,1.561,21,0.176,22,0.216,23,0.176,24,0.118,26,2.654,28,2.02,35,0.31,47,2.32,48,0.365,85,4.444,98,0.216,99,0.176,109,0.009,110,0.01,111,0.009,231,2.32,550,2.66,665,2.564,666,2.748,667,2.16,2820,4.823,2833,5.329,2834,5.329,2835,5.329,2836,6.099,2837,6.327,2838,5.329,2839,6.099]],["title/modules/StoreModule.html",[0,1.199,1003,2.801]],["body/modules/StoreModule.html",[0,1.637,2,1.637,8,0.013,21,0.163,22,0.2,23,0.163,24,0.109,28,1.865,35,0.328,47,2.211,48,0.337,65,0.98,66,2.362,88,3.591,98,0.245,99,0.163,103,0.98,109,0.008,110,0.01,111,0.008,138,4.686,154,3.591,155,3.591,162,3.754,164,3.754,166,3.392,167,4.103,168,3.944,254,1.536,303,2.137,353,4.452,354,2.682,384,4.452,671,2.925,680,2.682,684,2.682,718,3.429,923,3.064,1003,4.686,1247,3.064,1956,3.392,1965,4.103,1973,4.401,2218,3.824,2219,3.824,2840,4.452,2841,5.631,2842,4.92,2843,5.631,2844,4.92,2845,6.519,2846,5.631,2847,5.631,2848,5.631,2849,4.92,2850,4.452,2851,5.631,2852,5.631,2853,5.631,2854,4.92,2855,5.631,2856,5.631,2857,5.631,2858,5.631,2859,6.9,2860,5.631,2861,5.631,2862,5.631,2863,5.631,2864,5.631,2865,5.631,2866,5.631]],["title/modules/ThemingModule.html",[0,1.199,1004,2.801]],["body/modules/ThemingModule.html",[2,1.817,3,2.135,8,0.012,18,2.353,19,1.938,20,1.6,21,0.181,22,0.222,23,0.181,24,0.121,35,0.285,47,2.353,48,0.374,91,3.996,92,4.553,93,4.941,98,0.222,99,0.181,109,0.009,110,0.011,111,0.009,159,5.305,210,1.938,1004,5.648,2867,5.46,2868,5.46,2869,6.248,2870,7.345,2871,6.248,2872,6.248,2873,6.248]],["title/injectables/ThemingService.html",[159,2.631,404,0.991]],["body/injectables/ThemingService.html",[8,0.013,21,0.107,22,0.132,23,0.107,24,0.155,29,1.3,31,1.727,33,1.529,34,1.654,35,0.203,38,0.761,41,2.936,42,2.521,46,4.959,48,0.222,67,2.705,95,5.436,98,0.186,99,0.233,103,1.32,106,3.244,109,0.005,110,0.008,111,0.005,118,0.385,119,0.768,120,1.276,126,0.834,127,1.466,130,0.915,131,4.905,159,3.343,176,1.342,190,3.155,205,1.736,219,0.955,226,1.489,230,3.343,251,1.524,253,1.782,255,0.951,257,5.87,261,2.222,293,2.604,297,2.996,314,3.819,317,1.657,355,5.149,382,5.524,400,2.237,404,1.26,405,1.845,418,1.673,419,1.253,420,0.811,452,2.02,509,2.302,567,1.353,586,1.849,611,5.071,614,6.312,801,2.304,818,3.244,843,3.244,844,2.936,1029,3.244,1088,3.158,1221,3.819,1441,1.769,1623,3.244,1657,4.58,1898,2.705,1979,3.772,1997,2.936,2253,2.521,2254,2.368,2260,2.368,2492,2.936,2649,5.149,2686,5.218,2874,2.936,2875,5.241,2876,7.424,2877,5.241,2878,6.599,2879,6.599,2880,5.241,2881,3.713,2882,3.713,2883,5.241,2884,3.713,2885,4.58,2886,4.58,2887,6.96,2888,3.713,2889,5.241,2890,6.599,2891,3.713,2892,5.241,2893,5.241,2894,5.241,2895,3.713,2896,5.241,2897,3.713,2898,5.241,2899,3.713,2900,3.713,2901,3.713,2902,3.713,2903,3.713,2904,3.713,2905,3.244,2906,3.713,2907,3.713,2908,3.713,2909,3.713,2910,6.599,2911,3.713,2912,3.713,2913,3.713,2914,3.713,2915,3.713,2916,5.241,2917,3.713,2918,3.713,2919,3.713,2920,3.713,2921,3.713,2922,3.713,2923,3.713,2924,3.713]],["title/components/ThumbnailCarouselComponent.html",[130,0.522,552,1.279]],["body/components/ThumbnailCarouselComponent.html",[7,0.868,8,0.013,9,0.868,20,1.091,21,0.081,22,0.099,23,0.081,24,0.144,29,1.057,31,1.598,33,1.313,35,0.224,38,0.574,48,0.168,65,1.452,98,0.099,99,0.189,102,1.419,103,0.487,109,0.007,110,0.006,111,0.006,118,0.442,119,0.625,120,0.471,126,0.735,127,1.222,128,0.959,130,0.653,136,1.101,170,0.841,172,0.841,175,2.117,176,1.091,179,1.407,182,2.648,183,1.509,185,1.459,187,1.459,188,1.459,191,1.365,196,1.32,207,5.96,210,1.321,214,4.217,216,0.927,219,0.44,226,1.399,231,0.897,252,1.162,253,1.091,254,1.692,317,1.428,318,2.028,323,1.026,336,1.895,343,2.567,344,1.687,371,1.909,376,2.354,389,3.956,418,0.673,419,0.928,420,1.355,432,1.949,436,2.864,437,1.803,444,0.992,445,0.868,449,0.959,451,0.868,453,1.737,478,1.675,499,2.04,507,0.992,508,2.026,509,1.321,510,0.992,511,2.041,512,0.992,513,0.992,514,0.992,515,0.868,516,0.992,517,0.868,518,0.992,519,0.868,520,1.509,521,0.868,522,1.653,523,0.992,524,0.992,525,0.868,526,0.992,527,0.868,528,0.959,529,0.992,530,0.868,531,1.321,532,0.992,533,0.868,534,0.992,535,0.868,536,0.992,537,0.868,538,0.992,539,0.897,540,0.992,541,0.868,542,0.992,543,0.868,544,1.411,545,1.2,546,1.523,547,0.992,548,0.868,549,0.992,550,0.868,551,0.992,552,1.788,553,2.663,554,0.992,555,0.868,556,0.868,557,0.868,558,0.992,559,0.868,560,0.788,561,0.992,562,0.868,563,0.992,564,0.992,565,0.959,567,0.873,579,2.636,587,1.452,603,2.183,612,2.718,620,1.873,631,1.687,632,1.6,645,2.563,647,2.948,648,1.687,649,2.04,650,2.872,651,1.6,655,2.176,753,1.142,772,2.948,780,2.318,781,2.893,782,2.268,812,2.213,834,1.454,842,2.625,870,2.435,882,1.524,883,2.435,892,3.082,913,2.948,934,1.687,935,2.03,940,2.765,948,2.435,968,3.152,969,3.105,971,2.718,975,2.718,992,2.117,994,3.415,1076,1.6,1370,2.948,1378,2.718,1409,3.723,1419,2.679,1420,3.375,1421,2.563,1422,2.893,1423,2.563,1424,1.524,1426,2.435,1427,2.435,1428,2.679,1438,3.369,1441,2.03,1442,1.524,1445,2.04,1447,3.723,1448,2.806,1451,2.04,1452,2.214,1454,2.447,1461,2.679,1463,1.391,1467,3.107,1490,5.048,1524,3.369,1542,2.214,1543,2.679,1548,4.332,1550,2.893,1562,1.786,1581,3.105,1737,1.786,1749,3.369,1860,3.723,1948,2.214,1956,1.687,2201,2.864,2249,4.612,2250,4.332,2256,3.473,2263,3.29,2348,3.723,2555,4.507,2649,1.901,2925,5.417,2926,2.214,2927,3.723,2928,3.723,2929,4.261,2930,5.158,2931,4.261,2932,4.904,2933,5.158,2934,4.261,2935,5.158,2936,5.158,2937,6.533,2938,2.8,2939,2.8,2940,4.261,2941,5.158,2942,4.507,2943,4.261,2944,2.8,2945,4.261,2946,4.261,2947,4.261,2948,5.158,2949,4.261,2950,4.261,2951,5.708,2952,4.261,2953,4.261,2954,4.261,2955,4.261,2956,2.8,2957,5.669,2958,5.158,2959,4.261,2960,4.261,2961,4.261,2962,4.261,2963,3.723,2964,4.261,2965,4.261,2966,4.261,2967,4.261,2968,4.261,2969,4.261,2970,2.8,2971,4.078,2972,2.8,2973,4.261,2974,2.8,2975,2.8,2976,3.723,2977,6.533,2978,2.8,2979,2.8,2980,2.8,2981,4.261,2982,4.261,2983,2.8,2984,4.261,2985,4.261,2986,4.261,2987,4.261,2988,2.8,2989,5.158,2990,2.8,2991,2.8,2992,2.8,2993,2.8,2994,2.8,2995,2.8,2996,2.8,2997,2.8]],["title/modules/ThumbnailCarouselModule.html",[0,1.199,1486,2.801]],["body/modules/ThumbnailCarouselModule.html",[2,2.059,3,2.059,8,0.013,18,2.269,19,1.822,20,1.504,21,0.17,22,0.208,23,0.17,24,0.114,26,2.595,28,1.946,35,0.322,47,2.269,48,0.351,49,3.518,50,2.687,98,0.208,99,0.17,109,0.008,110,0.01,111,0.008,255,1.504,552,2.649,553,2.012,665,2.508,666,2.687,667,2.081,1486,5.634,1490,3.99,1841,4.516,1842,3.747,2925,4.281,2932,4.646,2957,5.599,2998,5.134,2999,5.134,3000,5.134,3001,5.875,3002,7.08,3003,5.875,3004,5.875,3005,5.875,3006,5.875,3007,5.875]],["title/components/TissueSectionVisComponent.html",[130,0.522,555,1.279]],["body/components/TissueSectionVisComponent.html",[7,1.199,8,0.013,9,1.199,21,0.112,22,0.137,23,0.112,24,0.142,29,1.337,31,1.544,33,1.314,35,0.209,38,0.792,48,0.231,65,1.486,98,0.137,99,0.212,102,1.155,109,0.006,110,0.008,111,0.008,118,0.644,119,0.79,120,0.651,125,1.216,126,0.764,127,0.696,128,1.323,130,0.786,136,1.52,170,1.161,172,1.161,176,1.38,179,1.693,182,2.713,183,1.909,185,1.846,187,1.846,188,1.846,191,1.239,193,1.832,196,1.589,197,2.466,205,1.785,210,1.199,216,1.28,226,1.216,231,1.239,254,1.471,303,2.046,317,1.178,318,2.12,323,2.275,336,1.775,340,3.378,343,2.329,344,3.248,371,1.785,373,2.37,376,2.046,418,0.929,419,1.317,420,1.178,432,2.839,437,1.636,444,1.369,445,1.199,449,1.323,451,1.199,453,2.198,478,2.441,507,1.369,508,2.191,509,1.672,510,1.369,511,2.379,512,1.369,513,1.369,514,1.369,515,1.199,516,1.369,517,1.199,518,1.369,519,1.199,520,1.909,521,1.199,522,1.239,523,1.369,524,1.369,525,1.199,526,1.369,527,1.199,528,1.323,529,1.369,530,1.199,531,1.672,532,1.369,533,1.199,534,1.369,535,1.199,536,1.369,537,1.199,538,1.369,539,1.239,540,1.369,541,1.199,542,1.369,543,1.199,544,1.785,545,1.518,546,1.021,547,1.369,548,1.199,549,1.369,550,1.199,551,1.369,552,1.199,553,1.323,554,1.369,555,2.083,556,2.554,557,2.64,558,1.369,559,1.199,560,1.088,561,1.369,562,1.199,563,1.369,564,1.369,565,1.323,587,2.114,642,1.7,643,1.976,644,2.568,650,2.73,655,1.989,753,1.576,780,2.933,782,1.7,812,2.8,834,2.008,842,2.282,850,2.8,882,2.103,883,2.209,968,2.73,1350,4.408,1359,5.425,1421,3.085,1426,2.209,1441,1.841,1445,2.817,1446,3.056,1451,2.817,1461,2.008,1479,2.817,1493,5.331,1561,3.082,1834,4.524,2076,3.056,2590,4.711,3008,5.786,3009,3.378,3010,7.317,3011,6.208,3012,5.391,3013,5.391,3014,6.208,3015,7.064,3016,6.208,3017,3.865,3018,4.711,3019,4.711,3020,3.865,3021,5.391,3022,5.391,3023,5.391,3024,5.391,3025,5.391,3026,3.865,3027,5.391,3028,5.391,3029,5.391,3030,3.865,3031,3.865,3032,3.865,3033,3.865,3034,3.865,3035,3.865,3036,3.865]],["title/modules/TissueSectionVisModule.html",[0,1.199,1487,2.801]],["body/modules/TissueSectionVisModule.html",[2,1.781,3,2.11,8,0.012,18,2.326,19,1.899,20,1.568,21,0.177,22,0.217,23,0.177,24,0.119,26,2.66,28,2.028,35,0.3,47,2.326,48,0.366,98,0.217,99,0.177,109,0.009,110,0.01,111,0.009,555,2.662,556,1.899,557,2.399,665,2.571,666,2.755,667,2.169,1350,3.69,1487,5.68,1493,4.463,3008,4.843,3037,5.352,3038,5.352,3039,5.352,3040,6.125,3041,6.125]],["title/components/ToggleButtonComponent.html",[130,0.522,559,1.279]],["body/components/ToggleButtonComponent.html",[7,0.907,8,0.013,9,0.907,21,0.085,22,0.104,23,0.085,24,0.151,29,1.092,31,1.682,33,1.459,34,1.406,35,0.229,38,0.6,48,0.175,65,1.455,98,0.104,99,0.192,100,2.087,101,1.591,102,0.985,103,0.922,109,0.004,110,0.006,111,0.006,118,0.303,119,0.646,120,0.741,125,1.426,126,0.719,127,0.953,128,1.001,129,3.551,130,0.919,145,1.001,170,0.878,172,1.898,176,1.127,179,2.279,182,2.638,183,1.56,185,1.508,187,1.508,188,1.508,191,1.697,193,1.201,196,1.356,205,2.093,210,1.643,216,0.969,219,0.692,226,1.33,231,0.937,236,1.508,251,1.28,252,1.201,253,1.509,255,0.749,261,2.017,263,3.551,280,1.866,315,2.396,317,1.381,318,1.732,319,2.188,323,2.16,371,1.754,418,1.058,419,1.195,420,1.381,434,1.519,435,1.519,437,1.238,444,1.036,445,0.907,449,1.001,451,0.907,507,1.036,508,1.96,509,1.366,510,1.036,511,2.087,512,1.036,513,1.036,514,1.036,515,0.907,516,1.036,517,0.907,518,1.036,519,0.907,520,1.56,521,0.907,522,0.937,523,1.036,524,1.036,525,0.907,526,1.036,527,0.907,528,1.001,529,1.036,530,0.907,531,1.366,532,1.036,533,0.907,534,1.036,535,0.907,536,1.036,537,0.907,538,1.036,539,0.937,540,1.036,541,0.907,542,1.036,543,0.907,544,1.458,545,1.24,546,0.773,547,1.036,548,0.907,549,1.036,550,0.907,551,1.036,552,0.907,553,1.001,554,1.036,555,0.907,556,0.907,557,0.907,558,1.036,559,1.828,560,2.304,561,1.036,562,0.907,563,1.036,564,1.036,565,1.001,567,1.086,586,1.127,616,3.038,644,1.393,650,1.286,655,0.937,753,1.193,764,4.188,765,2.751,768,2.893,771,1.393,772,3.027,775,4.681,776,3.482,777,4.66,778,3.061,780,2.396,781,2.991,786,2.014,787,2.422,788,3.061,789,3.209,790,1.796,793,2.612,797,3.209,798,2.991,799,2.991,801,1.936,805,2.991,812,2.287,826,3.597,827,3.209,834,1.519,838,2.131,842,3.13,849,3.369,850,3.953,857,2.313,859,2.131,865,2.556,868,1.986,882,1.591,883,1.672,892,1.453,906,2.809,915,3.482,917,3.482,918,3.482,922,2.653,925,4.153,930,4.84,935,2.098,947,2.313,953,1.762,968,1.286,992,2.188,994,3.81,1247,3.949,1418,1.866,1419,1.519,1420,1.591,1423,2.188,1424,2.396,1427,1.672,1428,1.519,1441,1.393,1461,1.519,1463,3.301,1502,6.146,1546,3.759,1561,1.672,1638,2.653,1831,1.986,2076,2.313,2081,2.556,2082,4.628,2083,4.628,2101,3.848,2129,2.556,2133,3.848,2144,5.805,2145,5.805,3042,6.791,3043,2.556,3044,5.296,3045,4.404,3046,4.404,3047,2.925,3048,4.404,3049,6.643,3050,4.404,3051,4.404,3052,5.296,3053,2.925,3054,2.925,3055,2.925,3056,2.925,3057,2.925,3058,2.925,3059,2.925,3060,2.925,3061,2.925,3062,2.925,3063,2.925,3064,2.925,3065,2.925,3066,2.925,3067,2.925,3068,2.925,3069,2.925,3070,2.925,3071,2.925,3072,4.404,3073,4.404,3074,2.925,3075,2.925]],["title/components/ViewerComponent.html",[130,0.522,562,1.279]],["body/components/ViewerComponent.html",[7,1.152,8,0.013,9,1.152,21,0.107,22,0.132,23,0.107,24,0.152,29,1.301,31,1.685,33,1.11,34,1.397,35,0.203,38,0.762,48,0.222,57,2.37,58,1.93,65,1.477,98,0.132,99,0.176,100,1.857,101,2.022,102,0.975,103,0.647,109,0.005,110,0.008,111,0.008,118,0.386,119,0.769,120,0.883,126,0.803,127,1.094,128,1.272,130,0.77,170,1.116,172,1.116,176,1.343,179,1.658,182,2.703,183,1.857,185,1.796,187,1.796,188,1.796,196,1.556,208,2.853,210,1.885,212,4.126,216,2.511,219,0.584,230,2.37,231,1.68,255,0.951,261,1.658,309,2.138,317,1.521,318,1.461,323,2.227,336,1.909,371,2.013,396,2.239,397,4.583,418,1.26,419,1.188,420,1.521,428,2.239,432,2.779,437,1.573,444,1.316,445,1.152,449,1.272,451,1.152,453,2.138,478,2.062,507,1.316,508,1.626,509,1.626,510,1.316,511,2.338,512,1.316,513,1.316,514,1.316,515,1.152,516,1.316,517,1.152,518,1.316,519,1.152,520,1.857,521,1.152,522,1.191,523,1.316,524,1.316,525,1.152,526,1.316,527,1.152,528,1.272,529,1.316,530,1.152,531,1.626,532,1.316,533,1.152,534,1.316,535,1.152,536,1.316,537,1.152,538,1.316,539,1.191,540,1.316,541,1.152,542,1.316,543,1.152,544,1.737,545,1.477,546,0.982,547,1.316,548,1.152,549,1.316,550,1.152,551,1.316,552,1.152,553,1.272,554,1.316,555,1.152,556,1.885,557,1.152,558,1.316,559,1.152,560,1.046,561,1.316,562,2.047,563,1.316,564,1.316,565,1.272,567,0.762,579,2.398,603,2.572,615,3.561,620,2.306,633,1.93,643,2.227,645,2.606,646,2.708,650,2.903,651,2.124,655,1.947,753,1.515,772,3.474,780,2.853,782,2.306,812,2.724,834,1.93,842,1.573,850,1.93,851,4.147,882,2.022,892,3.02,968,2.672,994,1.77,1038,6.084,1247,2.022,1254,4.583,1391,3.16,1417,2.37,1419,2.724,1420,2.853,1421,1.847,1423,1.847,1424,2.022,1426,2.998,1427,2.124,1435,2.938,1441,1.77,1461,1.93,1463,1.847,1467,3.662,1583,4.806,1596,4.147,1639,4.147,1640,5.22,1737,2.37,1740,3.561,1921,4.583,1931,3.821,1956,2.239,1969,4.806,1971,5.22,1976,4.806,1979,3.979,1981,2.938,2049,4.806,3076,3.247,3077,4.583,3078,6.077,3079,5.244,3080,6.077,3081,6.602,3082,3.716,3083,5.244,3084,3.716,3085,3.716,3086,5.244,3087,3.716,3088,3.716,3089,3.716,3090,4.583,3091,5.244,3092,5.244,3093,5.244,3094,3.716,3095,5.244,3096,3.716,3097,6.077,3098,5.244,3099,4.583,3100,3.716,3101,3.716,3102,3.716]],["title/modules/ViewerModule.html",[0,1.199,17,2.801]],["body/modules/ViewerModule.html",[2,1.746,3,2.086,8,0.013,17,5.659,18,2.299,19,1.863,20,1.538,21,0.174,22,0.213,23,0.174,24,0.117,26,2.629,28,1.989,35,0.32,47,2.299,48,0.359,49,3.565,50,2.747,98,0.213,99,0.174,109,0.009,110,0.01,111,0.009,231,1.924,562,2.656,665,2.541,666,2.723,667,2.127,1841,4.576,1842,3.831,2837,6.269,2838,5.248,3103,5.248,3104,5.248,3105,5.248,3106,6.006,3107,6.006]],["title/injectables/WorkerDataSourceService.html",[404,0.991,1344,2.801]],["body/injectables/WorkerDataSourceService.html",[0,1.545,8,0.013,21,0.154,22,0.188,23,0.154,24,0.148,29,1.651,31,1.588,33,1.409,35,0.296,38,1.089,48,0.318,65,1.159,66,1.819,98,0.188,99,0.154,102,0.988,103,1.265,109,0.008,110,0.01,111,0.008,116,2.714,117,6.658,118,0.551,120,1.224,125,1.64,126,0.849,127,1.198,136,2.089,138,5.174,212,3.955,219,1.143,226,1.64,254,2.078,255,1.704,261,2.078,262,5.263,404,1.6,405,2.64,410,5.296,418,1.747,419,1.308,423,2.891,667,1.881,1337,5.174,1338,3.871,1344,4.52,1345,4.85,3108,6.658,3109,7.268,3110,6.656,3111,6.656,3112,5.313,3113,7.268,3114,7.619,3115,5.313,3116,6.656,3117,5.313,3118,5.313,3119,6.656,3120,5.313,3121,6.656,3122,5.313,3123,5.313,3124,5.313,3125,5.313,3126,5.313,3127,5.313,3128,5.313,3129,5.313,3130,5.313,3131,5.313,3132,5.313,3133,5.313,3134,5.313,3135,5.313]],["title/changelog.html",[3136,2.507,3137,2.507,3138,2.72]],["body/changelog.html",[3,1.381,8,0.01,21,0.172,31,0.433,38,0.406,58,1.682,65,1.378,66,0.678,89,3.82,91,1.077,94,4.355,95,2.066,108,5.377,109,0.003,110,0.005,111,0.009,112,0.871,114,0.678,119,0.29,120,0.333,126,0.214,130,0.602,136,2.06,175,2.604,176,0.829,182,1.038,193,0.883,196,1.586,201,4.091,203,3.756,206,4.708,207,2.561,214,1.192,216,2.124,219,1.008,254,2.096,257,1.565,258,3.542,262,1.565,278,2.36,293,2.361,298,4.916,300,3.733,303,1.803,309,1.676,314,1.442,316,1.937,317,0.433,318,0.778,321,1.729,322,1.565,323,0.725,343,2.862,347,1.344,351,1.729,352,1.344,354,1.543,355,2.792,356,0.905,360,3.592,361,4.151,371,1.735,372,1.262,376,1.229,389,2.066,428,2.477,436,2.951,438,1.762,445,0.614,449,1.626,490,1.729,496,1.262,499,4.099,509,0.614,522,1.038,545,1.903,546,0.523,556,2.21,557,1.004,560,0.912,565,0.678,578,1.851,585,1.077,587,0.557,588,2.561,596,2.561,597,1.565,601,5.897,605,1.192,606,1.442,609,2.199,623,1.077,642,0.87,655,0.634,703,1.344,788,1.028,790,2.862,798,2.199,801,2.304,817,1.344,822,1.344,842,0.838,863,1.192,864,1.682,885,1.131,917,1.565,922,3.157,930,1.442,940,0.838,986,1.192,992,1.609,994,1.543,995,1.344,998,1.028,1059,1.442,1063,2.066,1064,2.561,1068,2.561,1070,1.565,1071,1.344,1078,1.565,1079,3.756,1082,4.143,1084,1.565,1088,1.951,1098,1.565,1100,3.461,1113,1.442,1153,2.83,1191,2.561,1215,2.199,1221,2.36,1247,1.077,1248,1.729,1249,1.565,1252,2.792,1255,3.251,1256,1.729,1262,1.344,1263,1.565,1265,4.293,1284,2.792,1354,1.729,1369,1.442,1370,1.131,1385,2.83,1387,1.262,1390,1.344,1391,1.192,1394,1.442,1396,1.729,1433,4.578,1435,1.565,1448,1.762,1464,3.588,1465,1.729,1476,4.151,1506,1.729,1514,2.561,1517,1.951,1525,1.565,1537,1.192,1538,1.131,1544,1.344,1552,1.729,1564,1.565,1581,2.36,1665,2.561,1667,3.592,1674,2.561,1681,2.83,1740,2.199,1749,1.565,1766,1.565,1769,1.262,1770,3.592,1790,1.729,1792,1.729,1823,3.756,1833,1.729,1858,4.151,1898,2.36,1922,2.83,1931,3.818,1943,2.36,2002,2.561,2057,2.561,2176,1.565,2196,3.226,2201,0.984,2214,4.905,2229,1.344,2251,1.131,2256,2.862,2306,1.729,2364,1.729,2492,2.561,2504,1.729,2613,2.561,2646,2.995,2662,4.924,2720,2.561,2854,1.729,2885,1.729,2886,1.729,2927,1.729,2928,2.83,2932,1.565,2951,1.729,2963,4.151,2976,2.83,3018,4.578,3077,4.151,3099,2.83,3137,2.995,3138,2.561,3139,1.729,3140,1.729,3141,3.239,3142,4.75,3143,1.979,3144,8.515,3145,3.239,3146,3.239,3147,5.625,3148,1.979,3149,1.979,3150,5.625,3151,1.979,3152,6.757,3153,3.239,3154,4.695,3155,7.127,3156,5.189,3157,1.979,3158,5.938,3159,5.189,3160,1.979,3161,1.979,3162,3.239,3163,4.75,3164,1.979,3165,3.239,3166,4.111,3167,1.979,3168,4.111,3169,1.979,3170,1.979,3171,1.979,3172,1.979,3173,1.979,3174,1.979,3175,7.126,3176,1.979,3177,1.979,3178,1.729,3179,1.729,3180,1.729,3181,1.979,3182,3.239,3183,1.729,3184,1.979,3185,3.239,3186,4.75,3187,4.75,3188,4.111,3189,1.979,3190,1.979,3191,1.979,3192,1.979,3193,5.625,3194,4.448,3195,4.578,3196,3.592,3197,1.979,3198,6.598,3199,4.578,3200,1.979,3201,3.239,3202,1.979,3203,4.111,3204,5.414,3205,7.018,3206,3.239,3207,1.979,3208,1.979,3209,3.239,3210,6.757,3211,3.592,3212,1.979,3213,5.625,3214,5.239,3215,1.979,3216,1.979,3217,1.979,3218,1.979,3219,1.979,3220,1.979,3221,2.83,3222,2.83,3223,5.938,3224,5.414,3225,1.979,3226,1.979,3227,1.979,3228,1.979,3229,4.578,3230,1.979,3231,3.239,3232,1.979,3233,3.239,3234,3.239,3235,3.239,3236,3.239,3237,1.979,3238,1.979,3239,1.979,3240,1.979,3241,3.239,3242,3.239,3243,1.979,3244,1.979,3245,3.239,3246,3.239,3247,4.75,3248,1.979,3249,1.979,3250,1.979,3251,1.979,3252,3.239,3253,1.979,3254,1.979,3255,5.625,3256,2.83,3257,1.979,3258,1.979,3259,1.979,3260,4.111,3261,3.239,3262,5.625,3263,2.83,3264,4.75,3265,2.83,3266,1.979,3267,1.979,3268,3.239,3269,3.239,3270,1.979,3271,1.979,3272,3.239,3273,1.979,3274,1.979,3275,1.979,3276,1.979,3277,3.239,3278,1.979,3279,1.979,3280,1.979,3281,1.979,3282,1.979,3283,1.979,3284,1.979,3285,1.979,3286,1.979,3287,3.239,3288,1.979,3289,1.979,3290,4.111,3291,4.111,3292,3.239,3293,1.979,3294,1.979,3295,1.979,3296,3.239,3297,1.979,3298,1.979,3299,1.979,3300,3.239,3301,3.239,3302,4.111,3303,1.979,3304,1.979,3305,1.979,3306,1.979,3307,1.979,3308,3.239,3309,1.979,3310,1.979,3311,1.979,3312,4.111,3313,3.239,3314,1.979,3315,1.979,3316,4.111,3317,3.239,3318,4.75,3319,1.979,3320,1.979,3321,1.979,3322,3.239,3323,1.979,3324,1.979,3325,1.979,3326,1.979,3327,1.979,3328,1.979,3329,4.111,3330,1.979,3331,4.111,3332,5.239,3333,3.239,3334,3.239,3335,3.239,3336,4.111,3337,4.75,3338,5.239,3339,3.239,3340,4.111,3341,1.979,3342,1.979,3343,5.938,3344,4.111,3345,4.75,3346,1.979,3347,1.979,3348,1.979,3349,1.979,3350,3.239,3351,1.979,3352,1.979,3353,1.979,3354,3.239,3355,1.979,3356,1.979,3357,3.592,3358,3.239,3359,3.592,3360,1.979,3361,1.979,3362,1.979,3363,1.979,3364,1.979,3365,1.979,3366,1.979,3367,1.979,3368,1.979,3369,1.979,3370,1.979,3371,4.75,3372,5.625,3373,4.111,3374,1.979,3375,1.979,3376,4.111,3377,1.979,3378,1.979,3379,1.979,3380,3.239,3381,3.239,3382,4.111,3383,1.979,3384,1.979,3385,1.979,3386,1.979,3387,1.979,3388,1.729,3389,1.979,3390,1.979,3391,1.979,3392,1.979,3393,1.979,3394,1.979,3395,1.979,3396,1.979,3397,1.979,3398,1.979,3399,1.979,3400,1.979,3401,1.979,3402,1.979,3403,6.196,3404,1.979,3405,3.592,3406,6.196,3407,4.111,3408,4.75,3409,3.239,3410,4.111,3411,1.979,3412,1.979,3413,1.979,3414,1.979,3415,3.239,3416,1.979,3417,1.979,3418,1.979,3419,3.239,3420,1.979,3421,1.979,3422,1.979,3423,1.979,3424,1.979,3425,1.979,3426,1.979,3427,1.979,3428,1.979,3429,1.979,3430,1.979,3431,1.979,3432,1.979,3433,1.979,3434,1.979,3435,1.979,3436,1.979,3437,1.979,3438,1.979,3439,1.979,3440,1.979,3441,1.979,3442,1.979,3443,1.979,3444,3.239,3445,1.979,3446,3.239,3447,1.979,3448,3.239,3449,3.239,3450,4.75,3451,4.75,3452,3.239,3453,3.239,3454,1.979,3455,1.979,3456,1.979,3457,1.979,3458,1.729,3459,1.979,3460,1.979,3461,1.979,3462,1.979,3463,1.979,3464,1.979,3465,3.239,3466,6.598,3467,4.111,3468,3.239,3469,1.979,3470,3.239,3471,1.979,3472,1.979,3473,1.979,3474,1.979,3475,1.979,3476,1.979,3477,3.239,3478,5.189,3479,3.239,3480,1.979,3481,1.979,3482,1.979,3483,1.979,3484,3.756,3485,1.979,3486,3.239,3487,1.979,3488,1.979,3489,1.979,3490,3.239,3491,1.979,3492,1.979,3493,1.979,3494,3.239,3495,4.111,3496,3.239,3497,1.979,3498,2.83,3499,1.979,3500,1.979,3501,1.979,3502,1.979,3503,1.979,3504,1.979,3505,1.979,3506,1.979,3507,1.979,3508,1.729,3509,1.979,3510,1.979,3511,1.979,3512,1.979,3513,1.979,3514,1.979,3515,1.729,3516,1.979,3517,1.979,3518,3.239,3519,1.979,3520,1.979,3521,1.979,3522,1.979,3523,1.979,3524,1.979,3525,1.979,3526,1.979,3527,1.979,3528,1.979,3529,3.239,3530,1.979,3531,1.979,3532,3.239,3533,1.979,3534,1.979,3535,1.979,3536,1.979,3537,1.979,3538,1.979,3539,1.979,3540,1.979,3541,1.979]],["title/coverage.html",[3484,4.459]],["body/coverage.html",[7,1.066,8,0.013,9,1.066,23,0.099,24,0.169,36,2.335,38,1.017,39,2.505,67,2.505,72,2.335,75,3.51,78,3.615,82,2.335,85,2.505,89,3.369,99,0.168,109,0.005,110,0.007,111,0.005,112,1.2,113,2.719,115,4.336,126,0.372,130,1.055,136,1.352,156,2.335,159,2.193,162,1.871,164,1.871,166,2.989,168,1.965,170,1.032,172,1.032,219,0.541,223,6.325,254,0.938,303,1.305,336,2.163,394,3.219,404,1.87,406,3.005,407,3.005,432,3.906,446,3.923,447,3.923,505,2.719,515,1.066,517,1.066,519,1.066,521,1.066,525,1.066,527,1.066,530,1.066,533,1.066,535,1.066,537,1.066,539,1.102,541,1.066,543,1.066,545,1.795,546,1.311,548,1.066,550,1.066,552,1.066,555,1.066,557,1.539,559,1.066,562,1.066,566,3.005,670,4.328,671,3.31,672,4.328,690,2.335,707,2.335,718,1.709,763,3.923,768,2.023,793,1.352,809,1.573,889,3.005,976,2.072,977,4.072,983,2.072,990,2.072,991,2.072,1016,2.335,1018,3.953,1034,2.719,1035,4.782,1062,2.505,1069,3.923,1102,2.719,1242,2.505,1243,4.328,1244,3.923,1245,3.923,1264,2.335,1336,2.505,1337,4.328,1338,4.242,1344,2.335,1350,3.507,1351,2.719,1352,2.505,1353,3.005,1425,4.603,1490,3.369,1493,2.505,1499,2.072,1500,2.072,1502,2.719,1504,3.005,1579,2.719,1580,3.005,1763,3.369,1764,2.505,1765,3.005,1808,2.505,1847,3.005,1889,2.719,1891,3.005,1892,3.005,1903,3.005,1920,3.005,1964,2.505,1965,3.615,1966,3.923,1973,2.193,2025,2.719,2026,4.242,2058,2.719,2180,2.193,2181,3.005,2182,3.005,2183,3.923,2184,3.923,2220,2.505,2248,4.491,2250,2.193,2257,2.072,2318,3.677,2320,3.327,2322,2.505,2324,3.507,2326,3.005,2341,1.965,2350,2.335,2424,3.923,2425,3.923,2490,3.005,2491,3.005,2493,3.005,2536,3.005,2613,2.719,2623,4.242,2664,2.505,2666,2.505,2726,3.165,2727,3.005,2761,2.193,2791,2.719,2820,2.719,2821,3.005,2840,2.719,2850,2.719,2874,3.923,2925,3.615,2926,3.923,2971,2.719,3008,2.719,3009,3.005,3042,3.005,3043,3.005,3076,3.005,3108,3.005,3154,2.719,3194,2.719,3484,2.719,3542,3.438,3543,4.962,3544,6.373,3545,3.438,3546,3.438,3547,4.962,3548,4.962,3549,3.438,3550,3.438,3551,4.962,3552,5.821,3553,3.438,3554,4.962,3555,3.005,3556,8.054,3557,3.438,3558,3.438,3559,4.962,3560,3.438,3561,3.438,3562,4.962,3563,3.438,3564,3.438,3565,3.005,3566,3.005,3567,5.821,3568,5.821,3569,3.438,3570,3.438,3571,3.438,3572,4.962,3573,3.438,3574,4.962,3575,3.438,3576,3.438,3577,3.438,3578,4.603,3579,3.438,3580,3.005,3581,3.005,3582,3.438,3583,3.438,3584,3.438,3585,3.438,3586,3.438,3587,4.962,3588,3.438,3589,3.005,3590,3.438,3591,3.438,3592,3.438,3593,4.962,3594,4.962,3595,4.962,3596,3.438,3597,3.438,3598,3.438,3599,3.438,3600,3.438]],["title/dependencies.html",[3,1.443,3183,3.006]],["body/dependencies.html",[3,1.427,8,0.013,23,0.142,44,4.29,48,0.294,57,4.037,58,3.288,109,0.007,110,0.009,111,0.007,145,1.681,175,2.439,201,3.131,509,1.963,585,2.671,622,3.618,623,2.671,637,3.577,667,1.739,680,3.015,684,2.338,686,3.577,687,3.577,762,3.882,937,3.882,1042,3.577,1043,4.612,1075,3.882,1259,3.577,1261,3.577,1582,3.577,1625,4.29,1685,3.882,1893,2.55,2216,3.131,2226,3.131,2379,3.577,2842,4.29,2844,4.29,2845,5.531,2942,4.29,2957,3.882,3199,4.29,3221,4.29,3256,4.29,3263,4.29,3357,4.29,3405,5.531,3601,4.909,3602,4.909,3603,8.293,3604,4.909,3605,4.909,3606,4.909,3607,4.909,3608,4.909,3609,4.909,3610,4.909,3611,4.909,3612,4.909,3613,4.909,3614,4.909,3615,4.909,3616,7.005,3617,4.909,3618,6.33,3619,4.909,3620,4.909,3621,4.909,3622,4.909,3623,7.005,3624,4.909,3625,4.909,3626,4.909,3627,4.909,3628,4.909,3629,4.909,3630,4.909,3631,4.909,3632,4.909,3633,4.909,3634,4.909,3635,6.33,3636,4.909,3637,4.909,3638,4.909,3639,4.909,3640,6.33,3641,4.909,3642,4.909,3643,6.33,3644,4.909,3645,4.909,3646,4.909,3647,4.909,3648,4.909,3649,4.909,3650,4.909,3651,4.909,3652,4.909,3653,4.909,3654,4.909,3655,4.909,3656,4.909,3657,4.909,3658,4.29,3659,4.909,3660,4.909,3661,4.909,3662,4.909,3663,4.909,3664,4.909,3665,6.33,3666,4.909,3667,4.909,3668,4.909,3669,4.909,3670,4.909,3671,4.909,3672,4.909,3673,4.909,3674,4.909,3675,4.909,3676,4.909,3677,4.909,3678,4.909,3679,4.909,3680,4.909,3681,4.909,3682,4.909,3683,4.909,3684,4.909,3685,4.909,3686,4.909,3687,4.909,3688,4.909,3689,4.909,3690,4.909,3691,4.909,3692,6.33,3693,4.909,3694,4.909,3695,4.909,3696,4.909,3697,4.909,3698,4.909,3699,4.909,3700,4.909,3701,4.909,3702,4.909,3703,4.909,3704,4.909]],["title/miscellaneous/enumerations.html",[3705,1.966,3706,4.337]],["body/miscellaneous/enumerations.html",[8,0.012,24,0.128,109,0.009,110,0.011,111,0.009,118,0.683,161,5.986,236,2.253,254,1.795,420,1.654,571,3.418,1035,4.469,1075,5.204,1080,6.615,1081,5.516,3705,3.762,3706,5.751,3707,5.204]],["title/miscellaneous/functions.html",[3705,1.966,3708,4.337]],["body/miscellaneous/functions.html",[8,0.012,24,0.145,33,1.688,34,1.19,89,4.682,109,0.008,110,0.01,111,0.008,118,0.583,120,1.366,125,1.269,127,1.012,179,1.881,210,1.744,211,4.097,229,3.587,254,1.534,373,3.278,394,3.799,418,1.917,419,1.435,420,1.229,436,3.426,446,4.447,447,5.452,482,4.914,505,5.452,567,1.593,688,3.873,763,4.447,786,2.572,839,6.146,840,4.154,841,4.914,842,2.918,848,4.914,851,4.447,923,4.057,985,3.941,997,3.388,1035,3.819,1051,4.914,1081,5.024,1082,4.447,1083,6.024,1084,4.447,1085,4.914,1087,3.214,1088,3.388,1089,4.914,1090,4.914,1092,6.024,1093,4.914,1094,4.914,1095,4.914,1096,4.914,1097,4.447,1098,5.896,1099,3.388,1100,4.097,1101,3.587,1102,5.452,2354,4.447,3565,6.024,3566,6.024,3589,6.024,3705,3.214,3707,5.896,3708,4.914,3709,5.623,3710,5.623,3711,5.623]],["title/index.html",[118,0.357,3136,2.507,3137,2.507]],["body/index.html",[8,0.01,21,0.228,65,1.512,94,5.215,108,4.986,109,0.008,110,0.01,111,0.008,112,0.99,114,1.86,130,0.688,175,2.7,206,4.424,300,4.424,438,2.956,606,4.918,788,2.822,870,3.105,892,2.7,1014,6.711,1078,4.296,1079,5.337,1100,3.959,1109,5.898,1191,5.337,1211,4.747,1252,3.689,1370,3.105,1931,3.959,2662,3.959,3138,4.296,3139,5.898,3140,5.898,3154,4.296,3155,5.898,3159,6.711,3178,4.747,3179,4.747,3180,4.747,3195,6.901,3196,6.711,3204,5.898,3211,4.747,3222,5.898,3224,4.747,3265,5.898,3498,4.747,3508,4.747,3712,5.433,3713,5.433,3714,5.433,3715,5.898,3716,5.433,3717,5.433,3718,6.749,3719,6.749,3720,6.749,3721,7.342,3722,5.433,3723,5.433,3724,7.68,3725,7.342,3726,5.433,3727,5.433,3728,6.749,3729,5.433,3730,5.433,3731,5.433,3732,6.749,3733,5.433,3734,5.433,3735,5.433,3736,5.433,3737,5.433,3738,5.433,3739,5.433,3740,5.433,3741,5.433,3742,5.433,3743,5.433,3744,5.433,3745,5.433,3746,5.433,3747,5.433,3748,5.433,3749,5.433,3750,5.433,3751,5.433,3752,5.433]],["title/license.html",[3136,2.507,3137,2.507,3753,3.006]],["body/license.html",[8,0.01,20,1.517,94,4.023,109,0.009,110,0.01,111,0.009,178,4.684,205,1.962,616,2.709,688,3.077,817,4.023,822,5.179,1391,4.287,1406,5.176,1986,4.684,2251,3.386,3194,4.684,3229,6.218,3388,6.218,3458,5.176,3478,5.176,3515,5.176,3658,5.176,3715,7.371,3753,5.176,3754,5.923,3755,7.627,3756,5.923,3757,5.923,3758,7.115,3759,5.923,3760,5.923,3761,5.923,3762,5.923,3763,7.115,3764,5.923,3765,5.923,3766,5.923,3767,5.923,3768,5.923,3769,5.923,3770,5.923,3771,5.923,3772,5.923,3773,5.923,3774,5.923,3775,5.923,3776,7.115,3777,5.923,3778,5.923,3779,5.923,3780,5.923,3781,5.923,3782,7.115,3783,5.923,3784,5.923,3785,5.923,3786,5.923,3787,5.923,3788,5.923,3789,5.923,3790,5.923,3791,5.923,3792,5.923,3793,5.923,3794,5.923,3795,5.923,3796,5.923,3797,5.923,3798,5.923,3799,5.923,3800,5.923,3801,5.923,3802,5.923,3803,5.923,3804,5.923,3805,5.923,3806,5.923]],["title/modules.html",[2,1.639]],["body/modules.html",[1,4.19,2,1.672,8,0.01,10,3.905,11,3.905,12,3.668,13,3.905,14,3.905,15,3.905,16,3.905,17,3.905,58,4.514,109,0.008,110,0.01,111,0.008,660,3.905,1002,3.905,1003,3.905,1004,3.905,1258,6.333,1481,3.905,1486,3.905,1487,3.905,1569,3.905,1835,3.905,2315,3.668,2316,3.905,2317,3.668,2646,4.19,2782,4.19,2787,3.905,3019,5.025,3156,7.594,3807,8.7]],["title/overview.html",[3808,4.927]],["body/overview.html",[1,6.103,2,1.08,3,1.525,4,3.247,5,3.247,6,3.247,7,1.885,8,0.013,9,1.885,10,5.308,11,5.534,12,4.736,13,5.15,14,5.418,15,5.15,16,4.907,17,4.907,18,1.68,19,1.152,20,0.951,109,0.005,110,0.008,111,0.005,114,1.272,159,3.876,170,2.23,172,2.23,176,0.951,405,1.847,515,2.303,517,2.303,519,2.303,521,2.303,525,2.303,527,2.303,530,2.303,533,2.303,535,2.303,537,2.391,539,2.379,541,2.303,543,2.303,548,2.303,550,2.303,552,2.303,555,2.303,559,2.303,562,2.303,588,2.938,660,4.907,661,3.247,662,3.247,663,3.247,999,3.247,1000,3.247,1001,3.247,1002,5.308,1003,4.127,1004,4.728,1481,5.308,1482,3.247,1483,3.247,1484,3.247,1485,3.247,1486,4.907,1487,4.907,1495,3.247,1496,3.247,1497,3.247,1569,4.907,1570,3.247,1571,3.247,1572,3.247,1755,3.247,1756,3.247,1757,3.247,1835,5.418,1836,3.247,1837,3.247,1839,3.247,1883,3.247,1884,3.247,1886,3.247,1890,2.708,1957,3.247,1958,3.247,1959,3.247,2312,3.247,2313,3.247,2314,3.247,2315,5.041,2316,5.5,2317,5.041,2341,3.474,2414,3.247,2415,3.247,2416,3.247,2522,3.247,2523,3.247,2525,3.247,2526,3.247,2529,3.247,2530,3.247,2531,3.247,2614,3.247,2615,3.247,2617,3.247,2782,5.411,2783,3.247,2784,3.247,2785,3.247,2786,3.247,2787,4.907,2814,3.247,2815,3.247,2816,3.247,2833,3.247,2834,3.247,2835,3.247,2867,3.247,2868,3.247,2998,3.247,2999,3.247,3000,3.247,3037,3.247,3038,3.247,3039,3.247,3103,3.247,3104,3.247,3105,3.247,3359,3.247,3808,3.247,3809,5.244,3810,3.716]],["title/miscellaneous/typealiases.html",[3705,1.966,3811,4.963]],["body/miscellaneous/typealiases.html",[8,0.012,24,0.151,75,2.921,109,0.008,110,0.01,111,0.008,118,0.583,126,0.878,176,1.44,179,2.034,181,3.388,208,4.229,236,2.553,315,3.06,357,3.214,394,3.284,545,2.1,586,1.44,605,3.388,642,2.472,678,3.136,768,2.811,771,2.679,787,3.153,793,2.932,809,3.153,883,3.214,976,3.388,977,3.388,978,3.751,979,3.819,980,3.819,981,3.587,983,3.388,986,4.154,987,5.063,990,3.388,991,3.388,992,2.794,996,5.063,997,3.388,998,3.873,1063,4.397,1440,3.819,1893,2.921,2026,4.097,2046,4.914,2047,6.024,2048,6.024,2049,5.452,2050,4.914,2051,6.024,2052,4.914,2053,6.024,2054,4.914,2055,4.914,2056,4.914,2057,4.447,2318,3.06,2324,3.388,2726,3.587,2757,4.447,2761,3.587,2791,5.452,2803,4.914,3136,4.097,3578,5.452,3705,3.214,3812,5.623,3813,7.093,3814,6.515,3815,6.894,3816,4.914,3817,5.623]],["title/miscellaneous/variables.html",[3705,1.966,3818,4.337]],["body/miscellaneous/variables.html",[8,0.013,24,0.15,38,0.637,66,1.063,67,3.356,75,1.613,88,5.434,95,2.937,99,0.159,103,0.541,109,0.004,110,0.007,111,0.004,118,0.322,126,0.735,136,2.158,138,2.109,162,1.69,164,1.69,168,1.775,210,0.963,212,4.635,213,1.613,219,0.955,226,1.238,240,2.109,241,2.456,303,1.748,316,1.878,317,1.764,318,2.55,323,2.377,336,1.451,357,1.775,373,1.365,376,2.083,394,2.194,400,2.775,418,0.746,419,1.533,420,1.717,423,1.69,531,0.963,586,1.554,643,1.138,655,0.995,670,2.109,671,1.613,672,3.127,673,2.775,674,3.356,690,3.127,691,2.263,692,2.263,693,2.263,694,2.263,695,2.263,696,2.263,697,2.263,698,2.263,699,2.263,700,2.263,701,2.263,702,2.263,703,2.109,704,2.263,705,1.981,706,2.263,718,1.543,768,1.878,790,1.878,793,2.158,923,1.69,940,1.314,977,1.871,981,1.981,985,1.775,1018,2.109,1035,2.109,1062,3.356,1063,1.981,1064,2.456,1065,2.714,1066,2.714,1067,2.714,1068,2.456,1069,2.456,1070,2.456,1071,2.109,1072,2.714,1073,2.714,1074,2.714,1242,2.263,1243,2.109,1244,2.456,1245,3.642,1249,2.456,1257,6.201,1262,2.109,1263,2.456,1264,3.127,1265,5.102,1266,2.714,1267,7.389,1268,2.714,1269,2.714,1270,2.714,1271,4.024,1272,2.714,1273,2.714,1274,2.714,1275,2.714,1276,2.714,1277,2.714,1278,5.306,1279,5.306,1280,5.666,1281,5.666,1282,3.356,1283,2.714,1284,4.613,1285,2.714,1286,2.714,1287,2.714,1288,4.024,1289,4.024,1290,4.024,1291,2.714,1292,2.714,1293,5.666,1294,2.714,1295,4.024,1296,2.714,1297,2.714,1298,2.714,1299,2.714,1300,2.714,1301,5.306,1302,2.714,1303,2.714,1304,4.024,1305,2.714,1306,2.714,1307,2.714,1308,2.714,1309,2.714,1310,2.714,1311,4.024,1312,3.356,1313,2.714,1314,2.714,1315,2.714,1316,2.714,1317,2.714,1318,5.306,1319,2.714,1320,2.714,1321,5.306,1322,2.714,1323,2.714,1324,2.263,1325,2.714,1326,2.714,1327,5.666,1328,2.714,1329,4.024,1330,2.714,1331,2.456,1332,2.714,1333,2.456,1334,2.714,1335,2.714,1337,2.109,1345,2.263,1490,2.109,1499,2.775,1500,3.307,1549,2.263,1893,2.392,1895,2.714,1898,2.263,1900,4.024,1973,1.981,2026,2.263,2058,3.642,2059,2.714,2060,2.714,2248,1.981,2254,1.981,2256,3.307,2257,1.871,2259,2.109,2260,2.937,2261,2.109,2263,3.501,2318,1.69,2324,1.871,2623,2.263,2664,3.356,2665,2.456,2840,2.456,2849,2.714,2850,3.642,2874,2.456,2905,2.714,2925,2.263,2926,3.642,2971,3.642,3090,4.024,3555,4.024,3578,4.34,3580,4.024,3581,4.024,3705,1.775,3707,2.456,3813,2.714,3814,2.714,3816,4.024,3818,2.714,3819,3.105,3820,3.105,3821,3.105,3822,3.105,3823,3.105,3824,4.605,3825,3.105,3826,3.105,3827,3.105,3828,3.105,3829,3.105,3830,3.105]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":336,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.063rem",{"_index":1565,"title":{},"body":{"components/DropdownComponent.html":{}}}],["0.095rem",{"_index":1752,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":3704,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1457,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.125rem",{"_index":1548,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.12rem",{"_index":1437,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.14",{"_index":1455,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.15s",{"_index":1460,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.16",{"_index":2810,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["0.18.0",{"_index":3647,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1829,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":1453,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.2.0",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":3666,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1463,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["0.2rem",{"_index":1556,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["0.2s",{"_index":1824,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["0.3125rem",{"_index":2987,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.3s",{"_index":1550,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.4",{"_index":345,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["0.4s",{"_index":2832,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5.0",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":646,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["0.5s",{"_index":3075,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.6",{"_index":2995,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.6.0",{"_index":3498,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.625rem",{"_index":2990,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.6s",{"_index":1831,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.75rem",{"_index":1438,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.875rem",{"_index":1542,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.9375rem",{"_index":1750,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0/1",{"_index":3544,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3597,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3543,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3553,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3554,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3552,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3551,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3547,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3571,"title":{},"body":{"coverage.html":{}}}],["0000001d",{"_index":1830,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0000003e",{"_index":1557,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["00000058",{"_index":1879,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["00e5ff",{"_index":700,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["01",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1433,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["05",{"_index":1476,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["06",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1449,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["0rem",{"_index":1546,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1",{"_index":376,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":3642,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3651,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":3699,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":3072,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["1.12rem",{"_index":1436,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["1.16.0",{"_index":3680,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":3644,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":3405,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":3654,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":3681,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":2607,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["1.25rem",{"_index":2609,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["1.2rem",{"_index":1877,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["1.3.5",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":3357,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":3668,"title":{},"body":{"dependencies.html":{}}}],["1.48rem",{"_index":1878,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["1.5.0",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["1.55rem",{"_index":1558,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":1739,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["1.5rem",{"_index":1467,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["1.6.0",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":3655,"title":{},"body":{"dependencies.html":{}}}],["1.75rem",{"_index":1754,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["1/1",{"_index":3556,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3561,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":499,"title":{},"body":{"components/AppWebComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["10.0.0",{"_index":3664,"title":{},"body":{"dependencies.html":{}}}],["10/12",{"_index":3560,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":3577,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":432,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1456,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["10x",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3359,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11.2.1",{"_index":3682,"title":{},"body":{"dependencies.html":{}}}],["110",{"_index":1066,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":3154,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{}}}],["12.0.1",{"_index":3684,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":3603,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":3607,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":3574,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":3575,"title":{},"body":{"coverage.html":{}}}],["12/16",{"_index":3570,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":3585,"title":{},"body":{"coverage.html":{}}}],["125rem",{"_index":2813,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["13",{"_index":1068,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["13/13",{"_index":3588,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":3573,"title":{},"body":{"coverage.html":{}}}],["136",{"_index":2721,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["14",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["14/15",{"_index":3583,"title":{},"body":{"coverage.html":{}}}],["14/30",{"_index":3546,"title":{},"body":{"coverage.html":{}}}],["14rem",{"_index":2812,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["15.126.1",{"_index":3602,"title":{},"body":{"dependencies.html":{}}}],["15rem",{"_index":1751,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["16",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":3657,"title":{},"body":{"dependencies.html":{}}}],["16rem",{"_index":1471,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["17",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["17rem",{"_index":1477,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["18",{"_index":3810,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":3590,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":2411,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["19.5rem",{"_index":1458,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["1].color",{"_index":733,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["1em",{"_index":1540,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1px",{"_index":1561,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":644,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem/1.25rem",{"_index":1952,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1s",{"_index":1947,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2",{"_index":343,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["2.0.0",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":3661,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":3071,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.1.0",{"_index":3263,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2",{"_index":341,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["2.2.0",{"_index":3256,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":3221,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5rem",{"_index":1446,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["2.6.7",{"_index":3685,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":3653,"title":{},"body":{"dependencies.html":{}}}],["2.8125rem",{"_index":2989,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["2/10",{"_index":3598,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":3594,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":3564,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1903,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["2019",{"_index":3478,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["20em",{"_index":1745,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["20rem",{"_index":2612,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["21",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["21.5rem",{"_index":2809,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["22",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":2722,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["23",{"_index":3809,"title":{},"body":{"overview.html":{}}}],["23.75rem",{"_index":2412,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["24",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["24px.svg",{"_index":1327,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["255",{"_index":705,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["25rem",{"_index":1941,"title":{},"body":{"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["26",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["26/26",{"_index":3596,"title":{},"body":{"coverage.html":{}}}],["26th",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":1551,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["2979ff",{"_index":692,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["2px",{"_index":1451,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["2rem",{"_index":1422,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["3",{"_index":588,"title":{},"body":{"components/CheckboxComponent.html":{},"changelog.html":{},"overview.html":{}}}],["3.0",{"_index":3719,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":3199,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":3623,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":3629,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":3631,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3101,"title":{},"body":{"components/ViewerComponent.html":{}}}],["3.6",{"_index":3740,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":3693,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":3635,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":3637,"title":{},"body":{"dependencies.html":{}}}],["3.75rem",{"_index":2988,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["3/3",{"_index":3593,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":3550,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2720,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["30.5rem",{"_index":2808,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["300",{"_index":2610,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["3000",{"_index":295,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["31",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["32/37",{"_index":3579,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["35rem",{"_index":1880,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["36/39",{"_index":3563,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":2214,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["3rem",{"_index":1418,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["3s",{"_index":1553,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":2951,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["4.0.2",{"_index":3634,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":3659,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":3677,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":3649,"title":{},"body":{"dependencies.html":{}}}],["4.375rem",{"_index":1747,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["4.6.0",{"_index":3670,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3559,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1951,"title":{},"body":{"components/HeaderComponent.html":{}}}],["42/44",{"_index":3591,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":3545,"title":{},"body":{"coverage.html":{}}}],["4em",{"_index":1876,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1454,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["4rem",{"_index":1939,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["5",{"_index":1473,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["5.0.0",{"_index":3671,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":3676,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":970,"title":{},"body":{"components/ContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["5/5",{"_index":3567,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3586,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1425,"title":{},"body":{"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["500",{"_index":1946,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5em",{"_index":1568,"title":{},"body":{"components/DropdownComponent.html":{}}}],["5rem",{"_index":1834,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["5s",{"_index":973,"title":{},"body":{"components/ContentComponent.html":{}}}],["6.0.1",{"_index":3674,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":3687,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3632,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":3696,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":3694,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":3569,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":3568,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3549,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1444,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["66",{"_index":3584,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1450,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["6s",{"_index":1832,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["7.75rem",{"_index":2608,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["7/7",{"_index":3592,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":3557,"title":{},"body":{"coverage.html":{}}}],["7323e2",{"_index":696,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["75",{"_index":3548,"title":{},"body":{"coverage.html":{}}}],["75rem",{"_index":1748,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["76",{"_index":3576,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["8.25rem",{"_index":1945,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.3.2",{"_index":3702,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":3627,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":3616,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":3619,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":3558,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":3587,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1470,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["82b1ff",{"_index":698,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["83",{"_index":1069,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["85",{"_index":1465,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["86",{"_index":3572,"title":{},"body":{"coverage.html":{}}}],["9.5rem",{"_index":1560,"title":{},"body":{"components/DropdownComponent.html":{}}}],["9.85rem",{"_index":1535,"title":{},"body":{"components/DropdownComponent.html":{}}}],["9/9",{"_index":3595,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1833,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["92",{"_index":3562,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":3582,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2613,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["99",{"_index":2831,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["9th",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["_aggregatedataquerystatus",{"_index":1117,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":392,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["_celltypetermoccurencesdataquerystatus",{"_index":1121,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_config",{"_index":3118,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["_createcontainer",{"_index":411,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["_error",{"_index":2005,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":2095,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":2946,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["_measuredmargin",{"_index":2125,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":2119,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":796,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_ontologytermoccurencesdataquerystatus",{"_index":1119,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_opened",{"_index":2091,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":2087,"title":{},"body":{"classes/InitializationState.html":{}}}],["_providerfilterquerystatus",{"_index":1127,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_scenedataquerystatus",{"_index":1123,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_technologyfilterquerystatus",{"_index":1125,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_tissueblockdataquerystatus",{"_index":1115,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["a.color.color",{"_index":748,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["ability",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":3515,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1461,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["acc",{"_index":743,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["acc[item.key",{"_index":741,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["accent",{"_index":635,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["acceptable",{"_index":215,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["acceptableviewerdomains",{"_index":221,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["accepting",{"_index":2175,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessors",{"_index":781,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["according",{"_index":299,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["accordingly",{"_index":1856,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["accurate",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["acf32b",{"_index":697,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":3801,"title":{},"body":{"license.html":{}}}],["actions",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":232,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["active",{"_index":2649,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["active/showing",{"_index":2826,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activeorgans",{"_index":2706,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["activeorgans.has(o.representation_of)).map(o",{"_index":2711,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["activeorgans.has(tag",{"_index":2715,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["actual_component",{"_index":564,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":382,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{}}}],["addclass",{"_index":2921,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":2885,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["addsvgicon",{"_index":2008,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["adjusting",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":764,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["again",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":2164,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":1681,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["agerange",{"_index":1065,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate",{"_index":1138,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregatedata",{"_index":1139,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":1226,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":1116,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1044,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["ala",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":3812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1419,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["all_possible_organs",{"_index":2663,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["allcompleted",{"_index":3565,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["allcompleted(states",{"_index":1085,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["allowed",{"_index":3102,"title":{},"body":{"components/ViewerComponent.html":{}}}],["allowing",{"_index":2564,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":1369,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["allowtouchmove",{"_index":2949,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["along",{"_index":2509,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":2828,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":818,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["alt",{"_index":3723,"title":{},"body":{"index.html":{}}}],["always",{"_index":846,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analytics",{"_index":585,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1010,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1022,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":360,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["anatomicalstructuresettings",{"_index":2668,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["and/or",{"_index":3774,"title":{},"body":{"license.html":{}}}],["angular",{"_index":175,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular's",{"_index":1644,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":937,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3604,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":2045,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{}}}],["angular/cdk/portal",{"_index":1683,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":2620,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":667,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1007,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":3605,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2379,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3606,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2380,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":1842,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/checkbox",{"_index":621,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{}}}],["angular/material/dialog",{"_index":1805,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["angular/material/form",{"_index":1575,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/icon",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":2422,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["angular/material/progress",{"_index":2838,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/radio",{"_index":2819,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["angular/material/select",{"_index":1577,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["angular/material/snack",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["angular/material/toolbar",{"_index":1962,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":2534,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":3609,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":3610,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":933,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animate('.5s",{"_index":2072,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":943,"title":{},"body":{"components/ContentComponent.html":{}}}],["animate(0",{"_index":2071,"title":{},"body":{"classes/InitializationState.html":{}}}],["animation",{"_index":1549,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":891,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":894,"title":{},"body":{"components/ContentComponent.html":{}}}],["api",{"_index":3159,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":3733,"title":{},"body":{"index.html":{}}}],["apiendpointdatasourceservice",{"_index":1340,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["app",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":184,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.component.scss",{"_index":186,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app/core/services/theming/theming.service",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app_bootstrap_listener",{"_index":2870,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":2408,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["appelement",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["appendtoroot",{"_index":412,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["application",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["application/javascript",{"_index":3134,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["applied",{"_index":1790,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["apply",{"_index":1796,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":1771,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilters",{"_index":1778,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":1866,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applythemeclass",{"_index":2877,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":2883,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1025,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":113,"title":{"interfaces/AppOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["approotoverlaycontainer",{"_index":36,"title":{"injectables/AppRootOverlayContainer.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["appropriate",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":9,"title":{"components/AppWebComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["arg",{"_index":1996,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":2000,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter(value",{"_index":2015,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":2013,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":1620,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arising",{"_index":3804,"title":{},"body":{"license.html":{}}}],["array",{"_index":373,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/TissueSectionVisComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array.from(searchresults.values",{"_index":2481,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["array.isarray(val",{"_index":488,"title":{},"body":{"components/AppWebComponent.html":{}}}],["arrow",{"_index":1566,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["arrow_left",{"_index":3063,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":3062,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["asct+b",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["asking",{"_index":594,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assays",{"_index":1825,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["assets/icons/expand_less",{"_index":1334,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/expand_more",{"_index":1332,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/filter.svg",{"_index":1335,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1326,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organs/ico",{"_index":1267,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1329,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assigncolor",{"_index":749,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assigncolor(@payload('key",{"_index":726,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["assigncolor(key",{"_index":752,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment",{"_index":714,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["assignment.state",{"_index":2218,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["assignment.state.ts",{"_index":672,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assignment.state.ts:102",{"_index":757,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:57",{"_index":760,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:59",{"_index":761,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:60",{"_index":758,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:61",{"_index":759,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:63",{"_index":755,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:69",{"_index":754,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment/color",{"_index":671,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assignment/selection",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["assignments",{"_index":2208,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["associated",{"_index":2251,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":2031,"title":{},"body":{"classes/InitializationState.html":{}}}],["at(nodes",{"_index":2488,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atscrollbottom",{"_index":2546,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":3052,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["attached",{"_index":408,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["attempts",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["authentication",{"_index":1944,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authors",{"_index":3795,"title":{},"body":{"license.html":{}}}],["auto",{"_index":971,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["autocomplete",{"_index":2374,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":2331,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["automatic",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":2646,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":2037,"title":{},"body":{"classes/InitializationState.html":{}}}],["awaited",{"_index":2027,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":3751,"title":{},"body":{"index.html":{}}}],["axis",{"_index":3036,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["b92dff",{"_index":694,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1370,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":1989,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{}}}],["base",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":372,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["basepath",{"_index":1027,"title":{},"body":{"modules/CoreModule.html":{}}}],["basewebcomponent",{"_index":448,"title":{},"body":{"components/AppWebComponent.html":{}}}],["basic",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":2113,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.left",{"_index":2116,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.right",{"_index":2115,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1255,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["behavior",{"_index":2728,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior'},{'name",{"_index":547,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["behavior.component",{"_index":1809,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["behavior.component.html",{"_index":2730,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.scss",{"_index":2729,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts",{"_index":2727,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"coverage.html":{}}}],["behavior.component.ts:18",{"_index":2755,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:20",{"_index":2756,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:22",{"_index":2758,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:24",{"_index":2759,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:26",{"_index":2754,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:28",{"_index":2753,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:30",{"_index":2752,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:32",{"_index":2743,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:48",{"_index":2747,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:52",{"_index":2751,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:58",{"_index":2749,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:63",{"_index":2744,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:69",{"_index":2745,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:73",{"_index":2746,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.module.ts",{"_index":2788,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["behavior/spatial",{"_index":1808,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"coverage.html":{}}}],["being",{"_index":2854,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["beta",{"_index":3204,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":347,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["bind",{"_index":1042,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["binds",{"_index":2896,"title":{},"body":{"injectables/ThemingService.html":{}}}],["bladder",{"_index":1266,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1268,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":3132,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["block",{"_index":428,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1269,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1270,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["bmirange",{"_index":1067,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":201,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyui",{"_index":192,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["bodyuicomponent",{"_index":150,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["bodyuimodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["bold",{"_index":649,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["bone",{"_index":1271,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":125,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["booleaninput",{"_index":2043,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":2893,"title":{},"body":{"injectables/ThemingService.html":{}}}],["border",{"_index":1423,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["both",{"_index":1064,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bottom",{"_index":645,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["bound",{"_index":1664,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["box",{"_index":1448,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["brain",{"_index":1274,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1275,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":177,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["breaking",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["breaks",{"_index":2227,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bringing",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3807,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":542,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":2621,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":2545,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":2544,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":2536,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"coverage.html":{}}}],["browser.component.ts:102",{"_index":2585,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:111",{"_index":2574,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:115",{"_index":2582,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:24",{"_index":2562,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:29",{"_index":2559,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:34",{"_index":2563,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:36",{"_index":2561,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:38",{"_index":2560,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:44",{"_index":2567,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:49",{"_index":2572,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:54",{"_index":2570,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:56",{"_index":2565,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:58",{"_index":2566,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:64",{"_index":2558,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:79",{"_index":2579,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:93",{"_index":2576,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":2618,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/donor",{"_index":1351,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"coverage.html":{}}}],["browser/results",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"coverage.html":{}}}],["browser/tissue",{"_index":3008,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["browseranimationsmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browserify",{"_index":3695,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["bubble_chart",{"_index":1410,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["bug",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3716,"title":{},"body":{"index.html":{}}}],["builds",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["builtin_parsers",{"_index":479,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.boolean",{"_index":506,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.json(value",{"_index":491,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":994,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":561,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":1503,"title":{},"body":{"modules/DrawerModule.html":{}}}],["button.component.html",{"_index":3045,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":3044,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":3043,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:19",{"_index":3050,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:22",{"_index":3051,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:27",{"_index":3061,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:38",{"_index":3058,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3057,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:42",{"_index":3048,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:65",{"_index":3054,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:75",{"_index":3055,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:85",{"_index":3053,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:97",{"_index":3056,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button/toggle",{"_index":1502,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["buttonclicked",{"_index":2736,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["c",{"_index":3756,"title":{},"body":{"license.html":{}}}],["c.color",{"_index":737,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["cache",{"_index":3640,"title":{},"body":{"dependencies.html":{}}}],["cacheable",{"_index":3698,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":2117,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":3074,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":969,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["calc(100vh",{"_index":2611,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["calc(50",{"_index":2076,"title":{},"body":{"classes/InitializationState.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":2109,"title":{},"body":{"classes/InitializationState.html":{}}}],["call",{"_index":320,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["callback",{"_index":2364,"title":{},"body":{"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["called",{"_index":1088,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["cancelregistration",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":3645,"title":{},"body":{"dependencies.html":{}}}],["captures",{"_index":350,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["card",{"_index":1354,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["card'},{'name",{"_index":523,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["card.component",{"_index":1492,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["card.component.html",{"_index":1358,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.scss",{"_index":1357,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts",{"_index":1353,"title":{},"body":{"components/DonorCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":1379,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:20",{"_index":1375,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:23",{"_index":1374,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:26",{"_index":1368,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:29",{"_index":1372,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:31",{"_index":1373,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:34",{"_index":1376,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:37",{"_index":1377,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:40",{"_index":1367,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:52",{"_index":1380,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:62",{"_index":1392,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:76",{"_index":1384,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.module",{"_index":2622,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["card.module.ts",{"_index":1488,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["card/donor",{"_index":1352,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/ResultsBrowserModule.html":{},"coverage.html":{}}}],["cards",{"_index":2929,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel",{"_index":207,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["carousel'},{'name",{"_index":554,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["carousel.component",{"_index":3005,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["carousel.component.html",{"_index":2931,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.scss",{"_index":2930,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts",{"_index":2926,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["carousel.component.ts:29",{"_index":2940,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:34",{"_index":2938,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:39",{"_index":2939,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:44",{"_index":2972,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:49",{"_index":2975,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:56",{"_index":2979,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:63",{"_index":2956,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:75",{"_index":2970,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:89",{"_index":2944,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.module",{"_index":1491,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["carousel.module.ts",{"_index":3001,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["carousel/thumbnail",{"_index":1490,"title":{},"body":{"modules/DonorCardModule.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":948,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["cases",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":2004,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["cause",{"_index":3091,"title":{},"body":{"components/ViewerComponent.html":{}}}],["ccf",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["ccfapiconfiguration",{"_index":1011,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfapimodule",{"_index":1012,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfapimodule.forroot",{"_index":1026,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfdatabase",{"_index":3827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccfdatabasedatasourceservice",{"_index":1341,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["ccfdatabaseoptions",{"_index":117,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/WorkerDataSourceService.html":{}}}],["ccfdrawer",{"_index":2064,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":767,"title":{},"body":{"components/ContainerComponent.html":{}}}],["cdk",{"_index":1563,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":1675,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdr",{"_index":263,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["cdr.markforcheck",{"_index":280,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["ceil",{"_index":1708,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cell",{"_index":203,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["celltypeselectionlabel",{"_index":202,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["celltypetermoccurencesdata",{"_index":1147,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdata$.pipe(take(1)).subscribe(celltypetermsfulldata",{"_index":1195,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdata(filter",{"_index":1232,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdataquerystatus",{"_index":1120,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurrences",{"_index":1165,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypeterms",{"_index":241,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["celltypetermsfulldata",{"_index":1132,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetreemodel",{"_index":242,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["center",{"_index":892,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["cff",{"_index":972,"title":{},"body":{"components/ContentComponent.html":{}}}],["change",{"_index":788,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":864,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":187,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":128,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":188,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":129,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["changelog",{"_index":3138,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":309,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["changes.selection",{"_index":1697,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":1695,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["channel",{"_index":771,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["channels",{"_index":2283,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["charge",{"_index":178,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ResultsBrowserComponent.html":{},"license.html":{}}}],["checkbox",{"_index":573,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["checkbox'},{'name",{"_index":516,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":669,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":575,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":574,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":634,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":515,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkboxes",{"_index":570,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":660,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checked",{"_index":600,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["checked.mat",{"_index":1429,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["checkmark",{"_index":636,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":921,"title":{},"body":{"components/ContentComponent.html":{}}}],["checkselected",{"_index":1434,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["child",{"_index":1440,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":1915,"title":{},"body":{"classes/FlatNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["choices",{"_index":1516,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":3798,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":3046,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":901,"title":{},"body":{"components/ContentComponent.html":{}}}],["class.hidden]=\"hidden",{"_index":1822,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["class=\"filter",{"_index":1820,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["classend",{"_index":2082,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1890,"title":{},"body":{"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"overview.html":{}}}],["classname",{"_index":772,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["clean",{"_index":2291,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["cleans",{"_index":805,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["cleanup",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":3098,"title":{},"body":{"components/ViewerComponent.html":{}}}],["click",{"_index":1387,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["clicked",{"_index":1378,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["clicking",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":2639,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["client",{"_index":1014,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["clientheight",{"_index":2599,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["clip",{"_index":2994,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["close",{"_index":396,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ViewerComponent.html":{}}}],["closed",{"_index":2049,"title":{},"body":{"classes/InitializationState.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["closedialog",{"_index":2794,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["closeexpanded",{"_index":2142,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeiframeviewer",{"_index":398,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["closeopendone",{"_index":2149,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1628,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["closesliderpopover",{"_index":1594,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closesliderpopover(target",{"_index":1634,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cls",{"_index":2887,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":1359,"title":{},"body":{"components/DonorCardComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":661,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":662,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":663,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":999,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":1001,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1000,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule",{"_index":1482,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_declarations",{"_index":1483,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_exports",{"_index":1485,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_imports",{"_index":1484,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":1495,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":1497,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":1496,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":1570,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":1571,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":1572,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":1755,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":1756,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":1757,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":1836,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":1839,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":1837,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":1838,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["cluster_filterspopovermodule",{"_index":1883,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":1886,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":1884,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":1885,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_headermodule",{"_index":1957,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1959,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1958,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":2312,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":2313,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":2314,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":2414,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":2416,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":2415,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":2522,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":2523,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":2525,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":2524,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologyselectionmodule_ontologyselectioncomponent_providers",{"_index":2526,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule",{"_index":2529,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":2531,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":2530,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":2614,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":2617,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":2615,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":2616,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_spatialsearchconfigbehaviormodule",{"_index":2783,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_declarations",{"_index":2786,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_exports",{"_index":2784,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_imports",{"_index":2785,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule",{"_index":2814,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule_declarations",{"_index":2815,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule_exports",{"_index":2816,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule",{"_index":2833,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":2834,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":2835,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":2867,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":2868,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule",{"_index":2998,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule_declarations",{"_index":2999,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule_exports",{"_index":3000,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule",{"_index":3037,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule_declarations",{"_index":3038,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule_exports",{"_index":3039,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":3103,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":3104,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":3105,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["coalescing",{"_index":2775,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["code",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["codeblob",{"_index":3131,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["codex",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":2044,"title":{},"body":{"classes/InitializationState.html":{}}}],["collaboration",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["collapse",{"_index":2145,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":2054,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":2141,"title":{},"body":{"classes/InitializationState.html":{}}}],["collisions",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":303,"title":{"interfaces/Color.html":{}},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.color",{"_index":738,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["color.rank",{"_index":2242,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["color].concat(colorsavailable",{"_index":746,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignments",{"_index":710,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colorassignments[key",{"_index":725,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist",{"_index":712,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.filter(a",{"_index":747,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.reduce>>((acc",{"_index":740,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.slice(0",{"_index":734,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist[colorassignmentslist.length",{"_index":732,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentstate",{"_index":718,"title":{"injectables/ColorAssignmentState.html":{}},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colorassignmentstatemodel",{"_index":707,"title":{"interfaces/ColorAssignmentStateModel.html":{}},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{}}}],["colorizing",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["colorpalette",{"_index":708,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colors",{"_index":715,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colors[node['@id']].rgba",{"_index":2723,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colors[tissueblock.spatialentityid",{"_index":2240,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["colorsavailable",{"_index":709,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable.filter(c",{"_index":736,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable.length",{"_index":730,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable[0",{"_index":731,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["column",{"_index":1737,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["columns",{"_index":577,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["combination",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["combined",{"_index":997,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":142,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":276,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["combines",{"_index":1093,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":3648,"title":{},"body":{"dependencies.html":{}}}],["comma",{"_index":383,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["common",{"_index":1191,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":666,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":1219,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":2862,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1081,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["completion",{"_index":2147,"title":{},"body":{"classes/InitializationState.html":{}}}],["complexity",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["componenet",{"_index":2327,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":130,"title":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":1610,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":447,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component.component.ts:31",{"_index":465,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":469,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:34",{"_index":470,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":468,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":472,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":471,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":477,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":475,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:41",{"_index":476,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":466,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:43",{"_index":467,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:44",{"_index":474,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:45",{"_index":473,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:47",{"_index":463,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":512,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":2890,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":176,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":2452,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computations",{"_index":2427,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":1680,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["comunica/query",{"_index":3612,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":3650,"title":{},"body":{"dependencies.html":{}}}],["concat(colorassignmentslist",{"_index":739,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["condition",{"_index":2473,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":3781,"title":{},"body":{"license.html":{}}}],["config",{"_index":546,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["config'},{'name",{"_index":549,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["config.component",{"_index":2762,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["config.component.html",{"_index":2793,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.scss",{"_index":2792,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts",{"_index":2791,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.component.ts:14",{"_index":2802,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:16",{"_index":2795,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:18",{"_index":2796,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:20",{"_index":2797,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:22",{"_index":2801,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:24",{"_index":2800,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:26",{"_index":2798,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:28",{"_index":2799,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.isolated",{"_index":2285,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.module",{"_index":2790,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["config.module.ts",{"_index":2817,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["config/spatial",{"_index":2761,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["configstore",{"_index":464,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":2256,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":2804,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["confirmation",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2306,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["connect(source",{"_index":2294,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":811,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connectedposition",{"_index":1682,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connection",{"_index":3805,"title":{},"body":{"license.html":{}}}],["connects",{"_index":2293,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":140,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["consider",{"_index":2860,"title":{},"body":{"modules/StoreModule.html":{}}}],["consortium",{"_index":3757,"title":{},"body":{"license.html":{}}}],["const",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":3093,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor",{"_index":255,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"modules/ThumbnailCarouselModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["constructor(@inject(message_service_config",{"_index":2284,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1029,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ThemingService.html":{}}}],["constructor(cdr",{"_index":2740,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["constructor(config",{"_index":2307,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":462,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(dataservice",{"_index":2192,"title":{},"body":{"injectables/ListResultsState.html":{},"injectables/SceneState.html":{}}}],["constructor(defaulttheme",{"_index":2881,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(drawer",{"_index":3047,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(ga",{"_index":581,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["constructor(globalconfig",{"_index":3112,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["constructor(messageservice",{"_index":784,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["constructor(ontologysearchservice",{"_index":2500,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":2340,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(original",{"_index":1896,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":1607,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(private",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["constructor(public",{"_index":2383,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":1919,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(registry",{"_index":2017,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(sanitizer",{"_index":3082,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(source",{"_index":2299,"title":{},"body":{"classes/MessageChannel.html":{}}}],["contain",{"_index":984,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["container",{"_index":642,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":518,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":770,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":769,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1501,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":517,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerpayload",{"_index":987,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":863,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["containing",{"_index":870,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ThumbnailCarouselComponent.html":{},"index.html":{}}}],["contains",{"_index":617,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{}}}],["content",{"_index":782,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["content'},{'name",{"_index":520,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":1846,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["content.component.html",{"_index":1768,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.scss",{"_index":893,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{}}}],["content.component.ts",{"_index":1765,"title":{},"body":{"components/FiltersContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:25",{"_index":1784,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:30",{"_index":1783,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:35",{"_index":1789,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:40",{"_index":1785,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:45",{"_index":1787,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:50",{"_index":1791,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:55",{"_index":1793,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:60",{"_index":1782,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:67",{"_index":1804,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:69",{"_index":1797,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:79",{"_index":1801,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:88",{"_index":1795,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:96",{"_index":1798,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.module",{"_index":1888,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["content.module.ts",{"_index":1840,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["content/content.component",{"_index":837,"title":{},"body":{"components/ContainerComponent.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":1764,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["content1",{"_index":773,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":774,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":833,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":814,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":824,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":519,"title":{"components/ContentComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":976,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["contents",{"_index":430,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contentsvisible",{"_index":1586,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["continue",{"_index":2806,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["contract",{"_index":3802,"title":{},"body":{"license.html":{}}}],["control",{"_index":322,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["controls",{"_index":1523,"title":{},"body":{"components/DropdownComponent.html":{}}}],["convention",{"_index":440,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["coordinate",{"_index":3139,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":3776,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3763,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3755,"title":{},"body":{"license.html":{}}}],["core",{"_index":1030,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/list",{"_index":2592,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["core/models/ontology",{"_index":157,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/app",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["core/services/ontology",{"_index":2381,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":160,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/data/data.state",{"_index":163,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersContentComponent.html":{}}}],["core/store/list",{"_index":165,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/scene/scene.state",{"_index":169,"title":{},"body":{"interfaces/AppOptions.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["coremodule",{"_index":10,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["cors",{"_index":3652,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":2263,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":2992,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["coverage",{"_index":3484,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["create",{"_index":1609,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":1906,"title":{},"body":{"classes/FlatNode.html":{}}}],["createcustomelement",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":1665,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"changelog.html":{}}}],["creates",{"_index":251,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":374,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["createworker",{"_index":3110,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["createworker(_config",{"_index":3116,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["creating",{"_index":840,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["credits",{"_index":3742,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1613,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["css",{"_index":2942,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"dependencies.html":{}}}],["ctrlclick",{"_index":2674,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["cuboid",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":571,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":355,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["cursor",{"_index":1427,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["customelements.define('ccf",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["cyberinfrastructure",{"_index":3744,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1466,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["da326f",{"_index":695,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":3799,"title":{},"body":{"license.html":{}}}],["dark",{"_index":313,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark)').addeventlistener('change",{"_index":310,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark)').matches",{"_index":305,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark/light",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":254,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["data.aggregatedata$.subscribe",{"_index":267,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.celltypetermoccurencesdata$.subscribe",{"_index":269,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.pipe(pluck('celltypeterms",{"_index":284,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":275,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.subscribe",{"_index":271,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.ontologytermoccurencesdata$.subscribe",{"_index":268,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.providerfilterdata$.subscribe",{"_index":273,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.scenedata$.subscribe",{"_index":270,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.technologyfilterdata$.subscribe",{"_index":272,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.tissueblockdata$.subscribe",{"_index":266,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data/data.state",{"_index":2219,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["dataaction",{"_index":677,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["database",{"_index":136,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/FlatNode.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databaseready",{"_index":1110,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["databasestatus",{"_index":1045,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["dataquerystate",{"_index":161,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":1083,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["dataquerystate.running",{"_index":237,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{}}}],["dataservice",{"_index":2194,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datasetresult",{"_index":2937,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["datasets",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":260,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["datasourcelike",{"_index":1342,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["datasources",{"_index":454,"title":{},"body":{"components/AppWebComponent.html":{}}}],["datasourceservice",{"_index":137,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datastate",{"_index":162,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datastatemodel",{"_index":1034,"title":{"interfaces/DataStateModel.html":{}},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{}}}],["deal",{"_index":3765,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3806,"title":{},"body":{"license.html":{}}}],["december",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":613,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["deck.gl",{"_index":706,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["deck.gl/core",{"_index":3615,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":3617,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":3620,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":3621,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["decoration",{"_index":1948,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["decorator",{"_index":1043,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["decorators",{"_index":753,"title":{},"body":{"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["deep",{"_index":632,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["deeply",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":317,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_color_palette",{"_index":690,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_color_palette.concat",{"_index":717,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["default_filter",{"_index":1062,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/FiltersContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1264,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_selected_organs",{"_index":2664,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_selected_organs.has(organ.organ",{"_index":2698,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["default_theme",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1242,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":716,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["defaulttheme",{"_index":2876,"title":{},"body":{"injectables/ThemingService.html":{}}}],["defer",{"_index":1048,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["deferred",{"_index":2028,"title":{},"body":{"classes/InitializationState.html":{}}}],["defined",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{}}}],["definition",{"_index":1246,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":1994,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":1993,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["delay",{"_index":1052,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delay(2000",{"_index":1203,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["delegatedatasourceoptions",{"_index":1336,"title":{"interfaces/DelegateDataSourceOptions.html":{}},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasourceservice",{"_index":1016,"title":{"injectables/DelegateDataSourceService.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{}}}],["demo",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["descendants",{"_index":815,"title":{},"body":{"components/ContainerComponent.html":{}}}],["describes",{"_index":591,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["description",{"_index":567,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["deselect",{"_index":2581,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["deselected",{"_index":2571,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["deselectlistresult",{"_index":2187,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["deselectlistresult(result",{"_index":2197,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["details",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["detect",{"_index":1698,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["detected",{"_index":1642,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":797,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":789,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determine",{"_index":2590,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["determines",{"_index":1527,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{}}}],["developed",{"_index":3743,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":2858,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":3508,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":1770,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["dialogref",{"_index":2741,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["diff",{"_index":2602,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["different",{"_index":2176,"title":{},"body":{"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["digits",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["directimport",{"_index":3121,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["direction",{"_index":651,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["directive",{"_index":510,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":563,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":435,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["disabled",{"_index":1956,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["disables",{"_index":2679,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["display",{"_index":371,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":1517,"title":{},"body":{"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":2335,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":2349,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["displaylabel",{"_index":2464,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1355,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":1053,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["distinctuntilchanged",{"_index":689,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["distribute",{"_index":3772,"title":{},"body":{"license.html":{}}}],["dobootstrap",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1625,"title":{},"body":{"components/DualSliderComponent.html":{},"dependencies.html":{}}}],["document:click",{"_index":1604,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:click(target",{"_index":1622,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:touchstart",{"_index":1605,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:touchstart(target",{"_index":1633,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["documentation",{"_index":3194,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":444,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["domains",{"_index":217,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["domsanitizer",{"_index":1971,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["don't",{"_index":381,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["done",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":522,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["donor_card",{"_index":1399,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["donorcardcomponent",{"_index":521,"title":{"components/DonorCardComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["donorcardmodule",{"_index":1481,"title":{"modules/DonorCardModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["donors",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["doreset",{"_index":728,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["dotenv",{"_index":3656,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":199,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":1922,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":1927,"title":{},"body":{"components/HeaderComponent.html":{}}}],["drawer",{"_index":179,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":524,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":3069,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":3068,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":2065,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":2066,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":3070,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":874,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":838,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":172,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":955,"title":{},"body":{"components/ContentComponent.html":{}}}],["drawercontainerschanged",{"_index":983,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":1853,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":990,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":11,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":996,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":315,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":873,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":991,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":1505,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["dropdown'},{'name",{"_index":526,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":1578,"title":{},"body":{"modules/DropdownModule.html":{}}}],["dropdown.component.html",{"_index":1508,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1507,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":525,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":1569,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":528,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dual_slider",{"_index":1725,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["dualslidercomponent",{"_index":527,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":12,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["duration",{"_index":291,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["during",{"_index":1221,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["dynamic",{"_index":3608,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":311,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["e040fb",{"_index":699,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":2265,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ease",{"_index":975,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["easier",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["easily",{"_index":395,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["effect",{"_index":1525,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["efficiency",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":256,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{}}}],["element",{"_index":509,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["element.getboundingclientrect",{"_index":2114,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":2918,"title":{},"body":{"injectables/ThemingService.html":{}}}],["element.nativeelement.contains(target",{"_index":1717,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["elementref",{"_index":131,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["elements",{"_index":2961,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["ellipsis",{"_index":1478,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["embedded",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":604,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["emits",{"_index":228,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{}}}],["emitted",{"_index":211,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{}}}],["emitter",{"_index":2347,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["emitters",{"_index":2542,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":2096,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{}}}],["empty",{"_index":2446,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enable",{"_index":2353,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":911,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["encapsulates",{"_index":2494,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["end",{"_index":850,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["end?.expanded",{"_index":966,"title":{},"body":{"components/ContentComponent.html":{}}}],["end?.opened",{"_index":965,"title":{},"body":{"components/ContentComponent.html":{}}}],["enddrawers",{"_index":875,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":878,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":881,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":964,"title":{},"body":{"components/ContentComponent.html":{}}}],["ensures",{"_index":1393,"title":{},"body":{"components/DonorCardComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":1651,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["entire",{"_index":2849,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":2355,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":2397,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":2398,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entrycomponents",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":1077,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["enumerations",{"_index":3706,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":154,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"modules/StoreModule.html":{}}}],["environment.acceptableviewerdomains",{"_index":222,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["environment.customization",{"_index":503,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":501,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions.remoteapiendpoint",{"_index":1028,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.disabledbworker",{"_index":1347,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["environment.googleanalyticstoken",{"_index":1024,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":2859,"title":{},"body":{"modules/StoreModule.html":{}}}],["environments/environment",{"_index":155,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":844,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ThemingService.html":{}}}],["error('invalid",{"_index":495,"title":{},"body":{"components/AppWebComponent.html":{}}}],["error('the",{"_index":1031,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":852,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":841,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":3646,"title":{},"body":{"dependencies.html":{}}}],["es2015.worker.js",{"_index":3130,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["eslint",{"_index":434,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["eslint/naming",{"_index":439,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["eslint/prefer",{"_index":2773,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["etc",{"_index":995,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["eui",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["eui/src/app/app",{"_index":446,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eui/src/app/app.component.ts",{"_index":115,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["eui/src/app/app.module.ts",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/app.module.ts:55",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/core/core.module.ts",{"_index":1005,"title":{},"body":{"modules/CoreModule.html":{}}}],["eui/src/app/core/header/header.component.ts",{"_index":1920,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["eui/src/app/core/header/header.component.ts:18",{"_index":1930,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:20",{"_index":1934,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:22",{"_index":1935,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:27",{"_index":1932,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:32",{"_index":1929,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:37",{"_index":1937,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:42",{"_index":1936,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.module.ts",{"_index":1960,"title":{},"body":{"modules/HeaderModule.html":{}}}],["eui/src/app/core/models/flat",{"_index":1891,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["eui/src/app/core/models/list",{"_index":2181,"title":{},"body":{"interfaces/ListResult.html":{},"coverage.html":{}}}],["eui/src/app/core/models/ontology",{"_index":2490,"title":{},"body":{"interfaces/OntologySelection.html":{},"coverage.html":{}}}],["eui/src/app/core/services/app",{"_index":406,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["eui/src/app/core/services/data",{"_index":1337,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/services/ontology",{"_index":2424,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["eui/src/app/core/services/theming/theming.module.ts",{"_index":2869,"title":{},"body":{"modules/ThemingModule.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts",{"_index":2874,"title":{},"body":{"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:13",{"_index":2901,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:14",{"_index":2902,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:16",{"_index":2900,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:18",{"_index":2903,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:21",{"_index":2891,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:25",{"_index":2882,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:39",{"_index":2888,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:48",{"_index":2899,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:60",{"_index":2897,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:71",{"_index":2895,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:83",{"_index":2884,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/store/color",{"_index":670,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/data/data.state.ts",{"_index":1035,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/icon",{"_index":1243,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/list",{"_index":2183,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts",{"_index":2623,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:105",{"_index":2648,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:114",{"_index":2637,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:125",{"_index":2641,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:129",{"_index":2642,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:136",{"_index":2634,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:51",{"_index":2657,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:53",{"_index":2661,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:55",{"_index":2659,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:57",{"_index":2655,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:60",{"_index":2653,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:63",{"_index":2652,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:65",{"_index":2633,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:85",{"_index":2651,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:95",{"_index":2645,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/store.module.ts",{"_index":2840,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/modules/filters/filters",{"_index":1763,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["eui/src/app/modules/ontology",{"_index":2318,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/modules/results",{"_index":1350,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts",{"_index":566,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:18",{"_index":590,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:23",{"_index":595,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:28",{"_index":599,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:33",{"_index":589,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":583,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:53",{"_index":610,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.module.ts",{"_index":664,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts",{"_index":763,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:105",{"_index":804,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:115",{"_index":794,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:124",{"_index":806,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":791,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":825,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":816,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":821,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":829,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":832,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":810,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:62",{"_index":785,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:83",{"_index":800,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts",{"_index":889,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:103",{"_index":926,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:116",{"_index":920,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":909,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":910,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":912,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":914,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":907,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":928,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":905,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:60",{"_index":919,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:70",{"_index":916,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/drawer.module.ts",{"_index":1498,"title":{},"body":{"modules/DrawerModule.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":2026,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":2038,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":2035,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:41",{"_index":2039,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:46",{"_index":2040,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:56",{"_index":2042,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:65",{"_index":2041,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/messages.ts",{"_index":977,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/drawer/toggle",{"_index":3042,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts",{"_index":1504,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:18",{"_index":1513,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:23",{"_index":1515,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:28",{"_index":1518,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:33",{"_index":1519,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:38",{"_index":1512,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:50",{"_index":1522,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:59",{"_index":1521,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.module.ts",{"_index":1573,"title":{},"body":{"modules/DropdownModule.html":{}}}],["eui/src/app/shared/components/dual",{"_index":1579,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/spatial",{"_index":2726,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/spinner",{"_index":2820,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/thumbnail",{"_index":2925,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts",{"_index":3076,"title":{},"body":{"components/ViewerComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:17",{"_index":3086,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:19",{"_index":3084,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:21",{"_index":3085,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:23",{"_index":3089,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:29",{"_index":3083,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:33",{"_index":3087,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:39",{"_index":3088,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.module.ts",{"_index":3106,"title":{},"body":{"modules/ViewerModule.html":{}}}],["eui/src/app/shared/services/message/message.service.ts",{"_index":2248,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:103",{"_index":2303,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:112",{"_index":2304,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:128",{"_index":2311,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:130",{"_index":2308,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:153",{"_index":2310,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:163",{"_index":2309,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:50",{"_index":2300,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:70",{"_index":2305,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:83",{"_index":2301,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:93",{"_index":2302,"title":{},"body":{"classes/MessageChannel.html":{}}}],["evenly",{"_index":3034,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["event",{"_index":616,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["event.checked",{"_index":624,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.key",{"_index":1732,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.target",{"_index":1621,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["event.target'])@hostlistener('document:touchstart",{"_index":1636,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["eventemitter",{"_index":603,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":2098,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":612,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["everything",{"_index":1182,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["except",{"_index":2271,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["executionstrategy",{"_index":2863,"title":{},"body":{"modules/StoreModule.html":{}}}],["exists",{"_index":3028,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["expand",{"_index":2144,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":2151,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":2058,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expand_less",{"_index":1333,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"miscellaneous/variables.html":{}}}],["expand_more",{"_index":1331,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"miscellaneous/variables.html":{}}}],["expandable",{"_index":1895,"title":{},"body":{"classes/FlatNode.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":2153,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":992,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":2093,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":2050,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":2099,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":2051,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":2053,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":2104,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":2138,"title":{},"body":{"classes/InitializationState.html":{}}}],["exploration",{"_index":1211,"title":{},"body":{"interfaces/DataStateModel.html":{},"index.html":{}}}],["exploration.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":2319,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["exportas",{"_index":766,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":665,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["express",{"_index":3658,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extended",{"_index":2056,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":116,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/WorkerDataSourceService.html":{}}}],["external",{"_index":3099,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["externalurl",{"_index":3128,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["extra",{"_index":3663,"title":{},"body":{"dependencies.html":{}}}],["extract",{"_index":2945,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["extraction",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1276,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1277,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1305,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f.svg",{"_index":1306,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":2261,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1524,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["faded",{"_index":895,"title":{},"body":{"components/ContentComponent.html":{}}}],["fadein",{"_index":1536,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":900,"title":{},"body":{"components/ContentComponent.html":{}}}],["fafafa",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["fail",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["fallopian",{"_index":1278,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":191,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["favor",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":2803,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fetch",{"_index":1261,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["fetches",{"_index":2445,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["ff8800",{"_index":691,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["ffd740",{"_index":693,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1538,"title":{},"body":{"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":3764,"title":{},"body":{"license.html":{}}}],["fill",{"_index":1554,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["filler",{"_index":1950,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":316,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["filter's",{"_index":325,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filter(organ",{"_index":2692,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(value",{"_index":2388,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter_checkbox",{"_index":627,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filter_content",{"_index":1813,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["filterbox",{"_index":324,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filterbox.removebox",{"_index":332,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filtered",{"_index":2275,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{}}}],["filteredorgans",{"_index":2731,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["filteredresults",{"_index":2332,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filteronchange",{"_index":576,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":607,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filterorgans",{"_index":2737,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["filters",{"_index":531,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["filterschange",{"_index":1779,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":530,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":1835,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":170,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":13,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":1850,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["final",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["finished",{"_index":988,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["finishing",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["fired",{"_index":1632,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["first",{"_index":1394,"title":{},"body":{"components/DonorCardComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["fit",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":3791,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":1900,"title":{},"body":{"classes/FlatNode.html":{},"miscellaneous/variables.html":{}}}],["flatnode",{"_index":1889,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["flatnode(original",{"_index":1918,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":650,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["floor",{"_index":1705,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["fly",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":2997,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["following",{"_index":3780,"title":{},"body":{"license.html":{}}}],["font",{"_index":647,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["forcedunassignment",{"_index":719,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["form",{"_index":1537,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["format",{"_index":703,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["formatlabel",{"_index":2430,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":2436,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":2439,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":2352,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":2333,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":2418,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["forwards",{"_index":1555,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":2440,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["four",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["frame",{"_index":1435,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["framework",{"_index":3140,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":3761,"title":{},"body":{"license.html":{}}}],["fs",{"_index":3662,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":2057,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":394,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":1097,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":3708,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":3749,"title":{},"body":{"index.html":{}}}],["funnel",{"_index":1882,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["furnished",{"_index":3779,"title":{},"body":{"license.html":{}}}],["further",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":584,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["gap",{"_index":2807,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["gatoken",{"_index":1023,"title":{},"body":{"modules/CoreModule.html":{}}}],["generate",{"_index":596,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"changelog.html":{}}}],["generated",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["genericglobalconfig",{"_index":480,"title":{},"body":{"components/AppWebComponent.html":{}}}],["genericmessage",{"_index":979,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":980,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":981,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["get(event",{"_index":2399,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["getarguments",{"_index":2014,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":2019,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getchildren",{"_index":2431,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":2443,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getclassend",{"_index":3059,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcolor",{"_index":750,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["getcolor(key",{"_index":723,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["getcontent",{"_index":828,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getexpandable",{"_index":1912,"title":{},"body":{"classes/FlatNode.html":{}}}],["gethaswrappedcontent",{"_index":831,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":3060,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getindexofmatch",{"_index":2432,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":2447,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":1909,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlevel",{"_index":3580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmessages",{"_index":2273,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":2296,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":2276,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":2297,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":2279,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":2006,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":2021,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getnextbuttonid",{"_index":2978,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["getprevbuttonid",{"_index":2974,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["getrangelabel",{"_index":1678,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["gets",{"_index":319,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{}}}],["getter",{"_index":3090,"title":{},"body":{"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["getter/setter",{"_index":2086,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":2878,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3136,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["getworkerurl",{"_index":3111,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["getworkerurl(directimport",{"_index":3119,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["github",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2264,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":3027,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["gizmo",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":262,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{}}}],["globalconfigstate",{"_index":138,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":2122,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['dboptions",{"_index":502,"title":{},"body":{"components/AppWebComponent.html":{}}}],["good",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":623,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":582,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["gradient",{"_index":2591,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["granted",{"_index":3760,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3019,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"modules.html":{}}}],["graphical",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":3665,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":569,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["grow",{"_index":1445,"title":{},"body":{"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["gtex",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["half",{"_index":2055,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1256,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["handle",{"_index":2638,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["handlecheckbox",{"_index":1361,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["handlehover",{"_index":2547,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlehover(id",{"_index":2573,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlelinkclick",{"_index":2548,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlelinkclick(link",{"_index":2575,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlemessage",{"_index":776,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":792,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":915,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handler",{"_index":1659,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":1381,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["handleselection",{"_index":2549,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handleselection(result",{"_index":2578,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handleunhover",{"_index":2550,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handling",{"_index":1611,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":1792,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happens",{"_index":1385,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["happy",{"_index":2853,"title":{},"body":{"modules/StoreModule.html":{}}}],["haswrappedcontent",{"_index":783,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":121,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["header'},{'name",{"_index":534,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":1963,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1926,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1925,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.module",{"_index":1015,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":533,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":1002,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heart",{"_index":1282,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1283,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":968,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["helmet",{"_index":3669,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":839,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":2229,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["hereby",{"_index":3759,"title":{},"body":{"license.html":{}}}],["hex",{"_index":686,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"dependencies.html":{}}}],["hexrgb",{"_index":685,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["hexrgb(color",{"_index":702,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["hidden",{"_index":885,"title":{},"body":{"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1881,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["hidelimitlabels",{"_index":1711,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1712,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hides",{"_index":1868,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["high",{"_index":1650,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["highlight",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":1364,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highlightedid",{"_index":2624,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["highlightednodeid",{"_index":2185,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["highlightnode",{"_index":2188,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["highlightnode(id",{"_index":2199,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["highlights",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["highvalue",{"_index":1587,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["holders",{"_index":3796,"title":{},"body":{"license.html":{}}}],["home",{"_index":1940,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":122,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["hook",{"_index":1645,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":882,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding",{"_index":834,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":2103,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":931,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('@openclose",{"_index":2102,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":812,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding('class.active",{"_index":2830,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":2081,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":927,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('style.margin",{"_index":932,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbindings",{"_index":780,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostlistener",{"_index":1684,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":2152,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":2148,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":1635,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":1716,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1603,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hover",{"_index":1447,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["hoverable",{"_index":1459,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["hovered",{"_index":1395,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["hovering",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["hoverstate",{"_index":1360,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["html",{"_index":508,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["htmlelement",{"_index":1623,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["htmlinputelement).value",{"_index":1731,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http://purl.obolibrary.org/obo/cl_0000000",{"_index":1073,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":1072,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhfskin",{"_index":2677,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":1006,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://beta",{"_index":3720,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":3732,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":3725,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":3724,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":3727,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":3722,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":2864,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmapasseturl",{"_index":455,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapdataservice",{"_index":456,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapdataurl",{"_index":457,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapportalurl",{"_index":458,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmaptoken",{"_index":459,"title":{},"body":{"components/AppWebComponent.html":{}}}],["icon",{"_index":1247,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["icondefinition",{"_index":1964,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["iconregistry",{"_index":1972,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1973,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1262,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1245,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":2201,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"interfaces/OntologySelection.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["idb",{"_index":3672,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":2250,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"coverage.html":{}}}],["iec",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":397,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ViewerComponent.html":{}}}],["image",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":675,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":1113,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["implemented",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":3788,"title":{},"body":{"license.html":{}}}],["implies",{"_index":993,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["import.meta.url",{"_index":3127,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["important",{"_index":640,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["imported",{"_index":1032,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["importscripts('${externalurl",{"_index":3133,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["improve",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":3783,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3229,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["indeterminate.mat",{"_index":1430,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["index",{"_index":118,"title":{"index.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":3747,"title":{},"body":{"index.html":{}}}],["indicates",{"_index":1914,"title":{},"body":{"classes/FlatNode.html":{}}}],["individual",{"_index":597,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["infinity",{"_index":294,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["infix",{"_index":1541,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["infobuttonmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["information",{"_index":606,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":1875,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["init",{"_index":2358,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":298,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["initialconfig",{"_index":500,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialdelay",{"_index":498,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":2126,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":2025,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{},"coverage.html":{}}}],["initialize",{"_index":2686,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":2889,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":2894,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":452,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":2892,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":1638,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{}}}],["initializesliderpopover",{"_index":1595,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializing",{"_index":989,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["inject",{"_index":2253,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["inject(default_theme",{"_index":2908,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injectable",{"_index":404,"title":{"injectables/AppRootOverlayContainer.html":{},"injectables/ColorAssignmentState.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{}},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":405,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"injectables/ColorAssignmentState.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{},"overview.html":{}}}],["injecting",{"_index":2225,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":2254,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('default",{"_index":2905,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["injector.get(overlaycontainer",{"_index":2919,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":2917,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":2906,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1343,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["inner",{"_index":641,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["input",{"_index":478,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["inputs",{"_index":453,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["inside",{"_index":1742,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["install",{"_index":3006,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["instance",{"_index":252,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["instant",{"_index":2048,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":1749,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["instructions",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":1953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interact",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":112,"title":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"interfaces/ListResult.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologySelection.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":114,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"interfaces/ListResult.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologySelection.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1289,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1290,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invisible",{"_index":908,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["iri",{"_index":2669,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["isexpandable",{"_index":3581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["islighttheme",{"_index":225,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["isn't",{"_index":1389,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["isolated",{"_index":2259,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["issliderinitialized",{"_index":1588,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":1589,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isstring",{"_index":484,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray",{"_index":487,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray(json",{"_index":492,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray(value",{"_index":493,"title":{},"body":{"components/AppWebComponent.html":{}}}],["issue",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["iswhitelisted",{"_index":386,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["it's",{"_index":321,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["item",{"_index":214,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["item.color",{"_index":742,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["item.technology",{"_index":2985,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["item.thumbnail",{"_index":2983,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["itemhovered",{"_index":2553,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["itemid",{"_index":2934,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["itemid(_index",{"_index":2943,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["items",{"_index":1420,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["itemselected",{"_index":2732,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["itemunhovered",{"_index":2554,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["iu",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":3180,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["join",{"_index":2396,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["json",{"_index":490,"title":{},"body":{"components/AppWebComponent.html":{},"changelog.html":{}}}],["json.parse(json.stringify(default_filter",{"_index":1818,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["jsonld",{"_index":3675,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1426,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["keep",{"_index":194,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{}}}],["keeping",{"_index":1128,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":1855,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["key",{"_index":713,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["key/value",{"_index":1802,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["keyboardevent",{"_index":1647,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyframes",{"_index":1533,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keyval",{"_index":3673,"title":{},"body":{"dependencies.html":{}}}],["key}:${value",{"_index":1814,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["kidney",{"_index":1284,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kidney.svg",{"_index":1285,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":3787,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1286,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1287,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":197,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["label.slice(0",{"_index":2484,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.slice(index",{"_index":2485,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":2480,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":2482,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labeled",{"_index":568,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["labels",{"_index":598,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{}}}],["labs/data",{"_index":2842,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":681,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["labs/data/repositories",{"_index":683,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["labs/dispatch",{"_index":3633,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1288,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":384,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"modules/StoreModule.html":{}}}],["latest",{"_index":1100,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["launch",{"_index":3097,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers",{"_index":3618,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":2195,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ld",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":318,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left.closeexpanded",{"_index":329,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["left.open",{"_index":328,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["left.px",{"_index":903,"title":{},"body":{"components/ContentComponent.html":{}}}],["left.svg",{"_index":1280,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["leftmargin",{"_index":896,"title":{},"body":{"components/ContentComponent.html":{}}}],["legend",{"_index":507,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["level",{"_index":1898,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":2372,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["liability",{"_index":3800,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3797,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3178,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":3753,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["lifecycle",{"_index":2359,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["lighter",{"_index":1462,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["limitation",{"_index":3767,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3458,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":437,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["link",{"_index":389,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["linkage",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["linkclick",{"_index":1366,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["linkclicked",{"_index":2555,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["linked",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["linkhandler",{"_index":1362,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["linkhandler(url",{"_index":1383,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["links",{"_index":3211,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":354,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["listen",{"_index":2258,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1099,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["listeners",{"_index":802,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["listens",{"_index":308,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{}}}],["listresult",{"_index":2180,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/ResultsBrowserComponent.html":{},"coverage.html":{}}}],["listresultdeselected",{"_index":2556,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listresults",{"_index":2186,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["listresultselected",{"_index":2557,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listresultsstate",{"_index":164,"title":{"injectables/ListResultsState.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listresultsstatemodel",{"_index":2220,"title":{"interfaces/ListResultsStateModel.html":{}},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["literal",{"_index":762,"title":{},"body":{"interfaces/ColorAssignmentStateModel.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["little",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1291,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1292,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":2196,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["loaded",{"_index":1248,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loaders.gl/core",{"_index":3622,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":3624,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":3625,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":1038,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ViewerComponent.html":{}}}],["loadingmessage",{"_index":238,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["located",{"_index":2080,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":2492,"title":{},"body":{"interfaces/OntologySelection.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["locations",{"_index":1821,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["locationstrategy",{"_index":3114,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["locator",{"_index":3113,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["lock",{"_index":2991,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["lodash",{"_index":2216,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["log",{"_index":3741,"title":{},"body":{"index.html":{}}}],["logged",{"_index":1933,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":401,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{}}}],["logger",{"_index":2865,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":1382,"title":{},"body":{"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["login",{"_index":399,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{}}}],["logindisabled",{"_index":249,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["loginenabled",{"_index":123,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["logo",{"_index":1923,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":124,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["logout",{"_index":1938,"title":{},"body":{"components/HeaderComponent.html":{}}}],["longer",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["looks",{"_index":2451,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":2433,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":2449,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["low",{"_index":1655,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["low/high",{"_index":1699,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":1617,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowvalue",{"_index":1590,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lru",{"_index":3678,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":3626,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1293,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lung.svg",{"_index":1294,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1295,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":1215,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["main",{"_index":174,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{}}}],["major",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":2757,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"miscellaneous/typealiases.html":{}}}],["managed",{"_index":827,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["managers",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["manages",{"_index":2875,"title":{},"body":{"injectables/ThemingService.html":{}}}],["many",{"_index":180,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["map",{"_index":146,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}}}],["map(([scene",{"_index":2703,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([tissueblocks",{"_index":2236,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["map((color",{"_index":701,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["map((node",{"_index":2718,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(nodes",{"_index":2468,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(organ",{"_index":2694,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(reforgans",{"_index":2688,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(searchresults",{"_index":2391,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":235,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["map(states",{"_index":1180,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["march",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":643,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":2060,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":3683,"title":{},"body":{"dependencies.html":{}}}],["marrow",{"_index":1272,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1273,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":633,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["matautocompletemodule",{"_index":2420,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":2362,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":1841,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["match",{"_index":1943,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["matcheckboxchange",{"_index":608,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":668,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{}}}],["matching",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1781,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["matdialogmodule",{"_index":2789,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["matdialogref",{"_index":2742,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["material",{"_index":1975,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matformfieldmodule",{"_index":1574,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{}}}],["math.div($pointer",{"_index":1753,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.gl/core",{"_index":3628,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":3630,"title":{},"body":{"dependencies.html":{}}}],["math.max(...this.selection",{"_index":1703,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(...this.selection",{"_index":1701,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["maticonmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":1970,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":2421,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matprogressspinnermodule",{"_index":2837,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["matradiomodule",{"_index":2818,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["matselectmodule",{"_index":1576,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["matsnackbar",{"_index":134,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["matsnackbarmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":1961,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":2533,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":1559,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["mc",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["measured",{"_index":2118,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":2120,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":2110,"title":{},"body":{"classes/InitializationState.html":{}}}],["memory",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1506,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["merchantability",{"_index":3790,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3770,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":2255,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":793,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1499,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1500,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":809,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":2295,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":2282,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":787,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":768,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":857,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":944,"title":{},"body":{"components/ContentComponent.html":{}}}],["messageserviceconfig",{"_index":2257,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagess",{"_index":1089,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":449,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["method",{"_index":611,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":2003,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":1997,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["min",{"_index":1417,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["minor",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":3705,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3754,"title":{},"body":{"license.html":{}}}],["ml",{"_index":1472,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["mock",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":278,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["model",{"_index":2226,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["models/list",{"_index":2217,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["modify",{"_index":3769,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/filters/filters",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["modules/ontology",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["monorepo",{"_index":3712,"title":{},"body":{"index.html":{}}}],["more",{"_index":1079,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":1626,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1009,"title":{},"body":{"modules/CoreModule.html":{}}}],["moved",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":1627,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mr",{"_index":1474,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["msg",{"_index":918,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":956,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.drawers",{"_index":950,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.opened",{"_index":3066,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":947,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":954,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["mt",{"_index":1475,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["much",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":2873,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3713,"title":{},"body":{"index.html":{}}}],["n3",{"_index":3679,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":419,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["namespace",{"_index":1257,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["navigate_before",{"_index":2984,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["navigate_next",{"_index":2986,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["navigation",{"_index":2932,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"changelog.html":{}}}],["navigationoptions",{"_index":2958,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["necessary",{"_index":1657,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1218,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersPopoverComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["needed",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":798,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["nested",{"_index":1741,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":3745,"title":{},"body":{"index.html":{}}}],["neuron",{"_index":1297,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neuron.svg",{"_index":1298,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":851,"title":{},"body":{"components/ContainerComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":219,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1908,"title":{},"body":{"classes/FlatNode.html":{}}}],["newvalue",{"_index":1729,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":436,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["nextbuttonid",{"_index":2936,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["nextel",{"_index":2968,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["nextmessageid",{"_index":2281,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["nextuid",{"_index":2971,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":631,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["ng5",{"_index":1685,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1761,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":2179,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":2178,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":2177,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":777,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":1596,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ngonchanges(changes",{"_index":1639,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ngondestroy",{"_index":778,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["ngoninit",{"_index":287,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{}}}],["ngx",{"_index":622,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"dependencies.html":{}}}],["ngxs",{"_index":680,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2844,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":3636,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":684,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxsdatapluginmodule",{"_index":2841,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":2856,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1040,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsimmutabledatarepository",{"_index":682,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ngxsloggerpluginmodule",{"_index":2843,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":2866,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":2846,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":2857,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":1041,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nih",{"_index":3750,"title":{},"body":{"index.html":{}}}],["node",{"_index":1893,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["node's",{"_index":1911,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ccf_annotations?.some?.(tag",{"_index":2714,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.children",{"_index":2489,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":2678,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.id",{"_index":2402,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":2474,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.reference_organ",{"_index":2716,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.representation_of",{"_index":2675,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.synonymlabels.find((label",{"_index":2479,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":1892,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["node.ts:11",{"_index":1904,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:13",{"_index":1902,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:18",{"_index":1910,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:25",{"_index":1913,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:36",{"_index":1907,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:38",{"_index":1899,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:9",{"_index":1905,"title":{},"body":{"classes/FlatNode.html":{}}}],["node['@id",{"_index":2676,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodeclickevent",{"_index":2636,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes",{"_index":357,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodes.foreach((node",{"_index":2472,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes.svg",{"_index":1296,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["nodes[node.parent",{"_index":2521,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":1543,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["noninfringement",{"_index":3794,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1860,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["not(:first",{"_index":1439,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["not(:last",{"_index":1949,"title":{},"body":{"components/HeaderComponent.html":{}}}],["note",{"_index":1740,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["notice",{"_index":3388,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["notifies",{"_index":2577,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["now",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":1480,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["null",{"_index":1979,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["null)?.getcontainerelement",{"_index":2920,"title":{},"body":{"injectables/ThemingService.html":{}}}],["nullish",{"_index":2774,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["number",{"_index":587,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["number((event.target",{"_index":1730,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":1733,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":2124,"title":{},"body":{"classes/InitializationState.html":{}}}],["numebr",{"_index":3022,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["numeric",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["numresults",{"_index":1894,"title":{},"body":{"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o",{"_index":1104,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["o.id",{"_index":2708,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o.representation_of",{"_index":2691,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o['@id",{"_index":2712,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["object",{"_index":213,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.hasownproperty.call(colors",{"_index":2719,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["object.values(state.nodes",{"_index":2456,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observable",{"_index":143,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observableinput",{"_index":1049,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":1050,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":3762,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":2497,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":1143,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["occurs",{"_index":1630,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["off/on",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":958,"title":{},"body":{"components/ContentComponent.html":{}}}],["old",{"_index":3726,"title":{},"body":{"index.html":{}}}],["once",{"_index":1033,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":1583,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ondestroy",{"_index":765,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["one",{"_index":1078,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":132,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{}}}],["onkeyhigh",{"_index":1597,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":1646,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":1598,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":1653,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["online",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["onscroll",{"_index":2551,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onscroll(event",{"_index":2583,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onselect",{"_index":2336,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":2361,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":379,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontolgyselection.length",{"_index":375,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontolgyselection[0].label",{"_index":377,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontological",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":196,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology_search",{"_index":2401,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologyexplorationmodule",{"_index":14,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":2498,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2514,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologysearchcomponent",{"_index":535,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":2315,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":2341,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{},"overview.html":{}}}],["ontologyselected(ontologyselection",{"_index":358,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection",{"_index":156,"title":{"interfaces/OntologySelection.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"coverage.html":{}}}],["ontologyselection.map(selection",{"_index":363,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection[0",{"_index":369,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection[0].label",{"_index":370,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselectioncomponent",{"_index":537,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":200,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselectionmodule",{"_index":2316,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":2510,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":2334,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologytermoccurencesdata",{"_index":1144,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdata$.pipe(take(1)).subscribe(ontologytermsfulldata",{"_index":1194,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdata(filter",{"_index":1229,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdataquerystatus",{"_index":1118,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurrences",{"_index":1163,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologyterms",{"_index":240,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["ontologytermsfulldata",{"_index":1130,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":539,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologytreemodel",{"_index":135,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologytreemodule",{"_index":2317,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologytreenode",{"_index":1897,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["opacities",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":940,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":2535,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["open",{"_index":208,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":2101,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["open_in_new",{"_index":1409,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["openapi",{"_index":3222,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/angular",{"_index":1013,"title":{},"body":{"modules/CoreModule.html":{}}}],["openapi/js",{"_index":3737,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":3739,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":3738,"title":{},"body":{"index.html":{}}}],["opened",{"_index":925,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":2089,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":2046,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":2097,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":2047,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":2139,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening",{"_index":2569,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":2063,"title":{},"body":{"classes/InitializationState.html":{}}}],["opens",{"_index":1526,"title":{},"body":{"components/DropdownComponent.html":{},"classes/InitializationState.html":{}}}],["openspatialsearch",{"_index":1772,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["operator",{"_index":1092,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1051,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["opposite",{"_index":2052,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["optimization",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":609,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["option.displaylabel[0",{"_index":2405,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":2406,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":2407,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option?.displaylabel",{"_index":2395,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":120,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":578,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["options.ceil",{"_index":1735,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":1734,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":1599,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":1509,"title":{},"body":{"components/DropdownComponent.html":{}}}],["order",{"_index":2463,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organ",{"_index":206,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{},"index.html":{}}}],["organ.hassex",{"_index":2778,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["organ.name",{"_index":2805,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["organ.sex",{"_index":2779,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["organchange",{"_index":2733,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["organids",{"_index":2689,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organids.has(organ.id",{"_index":2693,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organinfo",{"_index":2644,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["organlistvisible",{"_index":209,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["organs",{"_index":1265,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["organselectormodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["origin",{"_index":2993,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["original",{"_index":1901,"title":{},"body":{"classes/FlatNode.html":{}}}],["originx",{"_index":1686,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":1687,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["orthographic",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["ot",{"_index":1253,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["ot2od026671",{"_index":3752,"title":{},"body":{"index.html":{}}}],["other.expanded",{"_index":2166,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":2167,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":2172,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":2170,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":2169,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":2168,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":2171,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherblocks",{"_index":2238,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["otherblocks.push",{"_index":2243,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["others",{"_index":218,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["otherwise",{"_index":1986,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"license.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1828,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["output",{"_index":620,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":579,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":1371,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ovaries",{"_index":1299,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1300,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1301,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":1396,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["overall",{"_index":592,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["overflow",{"_index":884,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["overlay",{"_index":230,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["overlay'},{'name",{"_index":551,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":2839,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":2824,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":2823,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":2821,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"coverage.html":{}}}],["overlay.component.ts:16",{"_index":2829,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":2825,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":2827,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":1693,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":2836,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":1691,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.service",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["overlay.service.ts",{"_index":407,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["overlay.service.ts:10",{"_index":422,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:11",{"_index":421,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:13",{"_index":417,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:27",{"_index":414,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:32",{"_index":415,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.setrootelement(el",{"_index":265,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["overlay/app",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["overlay/spinner",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"coverage.html":{}}}],["overlaycontainer",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"injectables/ThemingService.html":{}}}],["overlaymodule",{"_index":1759,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":1591,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":1727,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":1728,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":1688,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":1689,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":3808,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owning",{"_index":3049,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":3183,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":1421,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["page",{"_index":1924,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pages",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":2174,"title":{},"body":{"classes/InitializationState.html":{}}}],["paired",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["pancreas",{"_index":1302,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1303,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1564,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["panel",{"_index":1552,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":1694,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":253,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["param0",{"_index":2673,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["parameters",{"_index":418,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":2059,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":605,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":2288,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":504,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsedatasources",{"_index":505,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsedatasources(value",{"_index":482,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":3643,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2356,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["partial",{"_index":1217,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["particular",{"_index":3792,"title":{},"body":{"license.html":{}}}],["partly",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":2007,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":2012,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":2011,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":2010,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":2009,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["passed",{"_index":198,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1386,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["path",{"_index":637,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["patient",{"_index":1356,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{}}}],["payload",{"_index":678,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["payload('doreset",{"_index":727,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["pelvis",{"_index":1304,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":2973,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["performance",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":3758,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3777,"title":{},"body":{"license.html":{}}}],["person",{"_index":1406,"title":{},"body":{"components/DonorCardComponent.html":{},"license.html":{}}}],["persons",{"_index":3778,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":1101,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["pipe(mergeall",{"_index":2290,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["placed",{"_index":2855,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["placeholdertext",{"_index":2339,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["placement",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":3611,"title":{},"body":{"dependencies.html":{}}}],["pluck",{"_index":147,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["plugin",{"_index":2845,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["pointer",{"_index":1428,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["popover",{"_index":326,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["popover's",{"_index":327,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["popover'},{'name",{"_index":532,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":171,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover.component.html",{"_index":1849,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.scss",{"_index":1848,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts",{"_index":1847,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"coverage.html":{}}}],["popover.component.ts:17",{"_index":1857,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:23",{"_index":1854,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:28",{"_index":1863,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:33",{"_index":1861,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:38",{"_index":1862,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":1864,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:48",{"_index":1865,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:53",{"_index":1871,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:58",{"_index":1870,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:65",{"_index":1869,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:74",{"_index":1867,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["popover.module.ts",{"_index":1887,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["popover/filters",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["popoverelement",{"_index":1592,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement?.nativeelement?.contains?.(target",{"_index":1718,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":1593,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1766,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["portal",{"_index":1931,"title":{},"body":{"components/HeaderComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["portalmodule",{"_index":1760,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portions",{"_index":3785,"title":{},"body":{"license.html":{}}}],["position",{"_index":842,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":2085,"title":{},"body":{"classes/InitializationState.html":{}}}],["positions",{"_index":808,"title":{},"body":{"components/ContainerComponent.html":{}}}],["positionstrategy",{"_index":1690,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["possible",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["preclose",{"_index":289,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["prefered",{"_index":2959,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["preference",{"_index":301,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["preferences",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":2409,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":1652,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["prev",{"_index":2981,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevbuttonid",{"_index":2935,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevel",{"_index":2966,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevent",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2976,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["previously",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["primary",{"_index":2941,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["private",{"_index":261,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["process",{"_index":917,"title":{},"body":{"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processed",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":795,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["processing",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":3195,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":2822,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["projected",{"_index":803,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects",{"_index":3714,"title":{},"body":{"index.html":{}}}],["projects/.../app",{"_index":3709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../color",{"_index":3820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../container.component.ts",{"_index":3710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../data",{"_index":3819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data.state.ts",{"_index":3707,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../default",{"_index":3821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../drawer.component.ts",{"_index":3814,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":3824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../messages.ts",{"_index":3813,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ontology",{"_index":3816,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene.state.ts",{"_index":3822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../spatial",{"_index":3817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":3826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../theming.service.ts",{"_index":3823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../thumbnail",{"_index":3825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":2036,"title":{},"body":{"classes/InitializationState.html":{}}}],["promise(resolve",{"_index":2033,"title":{},"body":{"classes/InitializationState.html":{}}}],["prop",{"_index":1995,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["properties",{"_index":119,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["property",{"_index":615,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/ViewerComponent.html":{}}}],["property('expandable",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property('level",{"_index":3829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prostate",{"_index":1307,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1308,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":410,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{}}}],["provide",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":817,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":423,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":1157,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilter",{"_index":1170,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilterdata",{"_index":1158,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilterquerystatus",{"_index":1126,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilters",{"_index":1775,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/ThemingModule.html":{},"changelog.html":{}}}],["providertoken",{"_index":1339,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["provides",{"_index":2344,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":890,"title":{},"body":{"components/ContentComponent.html":{}}}],["public",{"_index":1769,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["publish",{"_index":3771,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["publishreplay",{"_index":1055,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":1108,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["purpose",{"_index":3793,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":2077,"title":{},"body":{"classes/InitializationState.html":{}}}],["python",{"_index":3179,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":3686,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1075,"title":{},"body":{"interfaces/DataStateModel.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["query",{"_index":1098,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["querydata",{"_index":1102,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["querydata(query",{"_index":3711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["querying",{"_index":1094,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["querylist",{"_index":813,"title":{},"body":{"components/ContainerComponent.html":{}}}],["querystatus",{"_index":1172,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["question",{"_index":593,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["quickly",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["radio",{"_index":2811,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["radius",{"_index":1424,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["range",{"_index":1615,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["rangelabel",{"_index":1606,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["rank",{"_index":673,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"miscellaneous/variables.html":{}}}],["rank']).concat(otherblocks",{"_index":2245,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["rc.1",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":3688,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":3614,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":3638,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":3689,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2419,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":1672,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["readable",{"_index":3691,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["ready",{"_index":1039,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["real",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":2852,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":906,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":2262,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":711,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["rectify",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["refcount",{"_index":1056,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["reference",{"_index":790,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["referenceorgans",{"_index":2625,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":929,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["referencing",{"_index":2960,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["refernced",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["reforgandata",{"_index":2705,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reforgans",{"_index":2709,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reforgans.has(node.reference_organ",{"_index":2717,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["refresh",{"_index":1823,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["refreshclicked",{"_index":1928,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshes",{"_index":1799,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["refreshfilters",{"_index":1773,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["regions",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1259,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["registered",{"_index":1263,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1990,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":1987,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":2016,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":1991,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1967,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registers",{"_index":1984,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registration",{"_index":1252,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"index.html":{}}}],["registrations",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["registry",{"_index":1974,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":2847,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1966,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["registry.state.ts:114",{"_index":2022,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:134",{"_index":2020,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:43",{"_index":2018,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:74",{"_index":2023,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:84",{"_index":2024,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1244,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1965,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["registry[methodname",{"_index":1999,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regular",{"_index":1193,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["related",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":883,"title":{},"body":{"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":2568,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["reliability",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":3092,"title":{},"body":{"components/ViewerComponent.html":{}}}],["reloads",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["rem",{"_index":1826,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["remoteapiendpoint",{"_index":460,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["remove",{"_index":614,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/ThemingService.html":{}}}],["removebox",{"_index":1851,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":2922,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["removed/deleted",{"_index":1794,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["removes",{"_index":2886,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["render",{"_index":1859,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":2916,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":2904,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](overlay",{"_index":2924,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":2923,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":2538,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["repeat",{"_index":1057,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{}}}],["repeat(1000",{"_index":1205,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["replay",{"_index":1096,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":144,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["replaysubject(1",{"_index":245,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["replaysubject>(1",{"_index":1131,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["repository",{"_index":1109,"title":{},"body":{"interfaces/DataStateModel.html":{},"index.html":{}}}],["required",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resets",{"_index":314,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["resettheme",{"_index":2879,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resetview",{"_index":334,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["resolve",{"_index":2029,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolved",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["resolves",{"_index":830,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["respond",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["responsible",{"_index":2426,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":3766,"title":{},"body":{"license.html":{}}}],["result",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.ts",{"_index":2182,"title":{},"body":{"interfaces/ListResult.html":{},"coverage.html":{}}}],["resultlabel",{"_index":2552,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.state",{"_index":167,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["results.state.ts",{"_index":2184,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["results.state.ts:30",{"_index":2213,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:31",{"_index":2211,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:35",{"_index":2209,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:38",{"_index":2193,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:58",{"_index":2206,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:62",{"_index":2204,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:66",{"_index":2198,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:70",{"_index":2200,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:74",{"_index":2207,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:81",{"_index":2202,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results/list",{"_index":166,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["results_browser",{"_index":2594,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowser",{"_index":2537,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":541,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":2543,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":15,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":226,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":1192,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["reverse",{"_index":1827,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":687,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"dependencies.html":{}}}],["rgba",{"_index":674,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["rgba(0",{"_index":1452,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["rgba[3",{"_index":704,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":323,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["right.closeexpanded",{"_index":331,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["right.open",{"_index":330,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["right.px",{"_index":904,"title":{},"body":{"components/ContentComponent.html":{}}}],["right.svg",{"_index":1281,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":897,"title":{},"body":{"components/ContentComponent.html":{}}}],["rights",{"_index":3768,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":1432,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["root",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":513,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":2850,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootelement",{"_index":409,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["rootnode",{"_index":2428,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["rotates",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":652,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["ru/common",{"_index":3601,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":2462,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["ru/common/typings/immutability",{"_index":676,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["rui",{"_index":3155,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":799,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["running",{"_index":1080,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runtime",{"_index":1251,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/subscription",{"_index":2760,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rxjsfilter",{"_index":1054,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["rxjsfilter((status",{"_index":1112,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["s",{"_index":1786,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["safedef",{"_index":1980,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["safehtml",{"_index":1968,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1969,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["safeurl",{"_index":3080,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sample",{"_index":2927,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["samples",{"_index":3077,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["sanitize",{"_index":1977,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1254,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ViewerComponent.html":{}}}],["sanitizer",{"_index":1976,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":1982,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":1981,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["sans",{"_index":1954,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sass:math",{"_index":1736,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["saved",{"_index":1803,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["saver",{"_index":3660,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":258,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"changelog.html":{}}}],["scene.filter(node",{"_index":2713,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scene.referenceorgans$.subscribe((organs",{"_index":2763,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["scene/scene.state",{"_index":2848,"title":{},"body":{"modules/StoreModule.html":{}}}],["scenedata",{"_index":1150,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenedata(filter",{"_index":1235,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenedataquerystatus",{"_index":1122,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenenodeclicked",{"_index":2627,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodeclicked(undefined",{"_index":2635,"title":{},"body":{"injectables/SceneState.html":{}}}],["scenenodehovered",{"_index":2628,"title":{},"body":{"injectables/SceneState.html":{}}}],["scenenodehovered(node",{"_index":2640,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodeunhover",{"_index":2629,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenestate",{"_index":168,"title":{"injectables/SceneState.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenestatemodel",{"_index":2666,"title":{"interfaces/SceneStateModel.html":{}},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["scheduled",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":304,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["schemes",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":3746,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2586,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":2413,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":2588,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollheight",{"_index":2600,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":887,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":2619,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["scrolltop",{"_index":2601,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["search",{"_index":545,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["search'},{'name",{"_index":536,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["search.component",{"_index":2423,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.component.html",{"_index":2330,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.scss",{"_index":2329,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts",{"_index":2326,"title":{},"body":{"components/OntologySearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:107",{"_index":2363,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:23",{"_index":2345,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:29",{"_index":2346,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:34",{"_index":2375,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:40",{"_index":2373,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:45",{"_index":2342,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:53",{"_index":2378,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:60",{"_index":2357,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:78",{"_index":2351,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:88",{"_index":2367,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":2371,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":2410,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":2321,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":2417,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.service",{"_index":2382,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":2425,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["search.service.ts:100",{"_index":2448,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:111",{"_index":2438,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:128",{"_index":2444,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:30",{"_index":2461,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:31",{"_index":2460,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:34",{"_index":2457,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:37",{"_index":2459,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:39",{"_index":2454,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:50",{"_index":2435,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:63",{"_index":2450,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":2320,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["searched",{"_index":2360,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searches",{"_index":1788,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":2328,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":2350,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["searchresults",{"_index":2471,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":2475,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":2476,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":2343,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":2437,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":2486,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":557,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["section.description",{"_index":1416,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["section.label",{"_index":1415,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["section.sectionnumber",{"_index":3032,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sectionnumber",{"_index":3030,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sectionnumber).length",{"_index":3033,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sections",{"_index":3023,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["see",{"_index":3265,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":1544,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["selectable",{"_index":1468,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["selected",{"_index":356,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["selected(ontologynode",{"_index":2512,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedanatomicalstructures",{"_index":2667,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selectedorgan",{"_index":2734,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["selectedorgans",{"_index":2704,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selectedreferenceorgans",{"_index":2626,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selecting",{"_index":1514,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["selection",{"_index":158,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["selection'},{'name",{"_index":538,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":2528,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":2496,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":2495,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":2493,"title":{},"body":{"components/OntologySelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:23",{"_index":2517,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":2503,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":2507,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:38",{"_index":2508,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":2505,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:47",{"_index":2502,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:48",{"_index":2506,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":2501,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":2515,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:64",{"_index":2511,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:75",{"_index":2513,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":364,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selection.label",{"_index":380,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selection.module",{"_index":2323,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":2527,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":2491,"title":{},"body":{"interfaces/OntologySelection.html":{},"coverage.html":{}}}],["selection/deselection",{"_index":2580,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selection/ontology",{"_index":2322,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"coverage.html":{}}}],["selectionchange",{"_index":580,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":1510,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":1520,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionlabel",{"_index":204,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selections",{"_index":572,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":378,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selectlistresult",{"_index":2189,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["selectlistresult(result",{"_index":2203,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["selector",{"_index":182,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["selectors",{"_index":2964,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["selects",{"_index":1390,"title":{},"body":{"components/DonorCardComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["selecttoken",{"_index":1348,"title":{},"body":{"injectables/DelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1346,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["sell",{"_index":3775,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":786,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto",{"_index":3566,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto(subject",{"_index":1090,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":1141,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._celltypetermoccurencesdataquerystatus",{"_index":1149,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._ontologytermoccurencesdataquerystatus",{"_index":1146,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._providerfilterquerystatus",{"_index":1160,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._scenedataquerystatus",{"_index":1152,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._technologyfilterquerystatus",{"_index":1156,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._tissueblockdataquerystatus",{"_index":1137,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sender",{"_index":2252,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":2156,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":2127,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":2298,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":2267,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1087,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sendtoggle",{"_index":2157,"title":{},"body":{"classes/InitializationState.html":{}}}],["sennet",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["sent",{"_index":978,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["serif",{"_index":1955,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":586,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":2907,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/data",{"_index":1017,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":982,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1020,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":293,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["set(['skin",{"_index":2665,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["set(reforgandata.filter(o",{"_index":2710,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(reforgans.map(o",{"_index":2690,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(selectedorgans.map(o",{"_index":2707,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setlistresults",{"_index":2190,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["setlistresults(@payload('listresults",{"_index":2221,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["setlistresults(listresults",{"_index":2205,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["setreferenceorgans",{"_index":2630,"title":{},"body":{"injectables/SceneState.html":{}}}],["setreferenceorgans(@payload('referenceorgans",{"_index":2671,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setreferenceorgans(referenceorgans",{"_index":2643,"title":{},"body":{"injectables/SceneState.html":{}}}],["setrootelement",{"_index":413,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["setrootelement(el",{"_index":416,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["sets",{"_index":297,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["setscene",{"_index":2631,"title":{},"body":{"injectables/SceneState.html":{}}}],["setscene(@payload('scene",{"_index":2672,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setscene(scene",{"_index":2647,"title":{},"body":{"injectables/SceneState.html":{}}}],["setselectedreferenceorgans",{"_index":2632,"title":{},"body":{"injectables/SceneState.html":{}}}],["setselectedreferenceorgans(@payload('selectedreferenceorgans",{"_index":2670,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setselectedreferenceorgans(selectedreferenceorgans",{"_index":2650,"title":{},"body":{"injectables/SceneState.html":{}}}],["settheme",{"_index":2880,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":2898,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":2129,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["setting",{"_index":2861,"title":{},"body":{"modules/StoreModule.html":{}}}],["settings",{"_index":1767,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settreemodel",{"_index":2434,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["settreemodel(treemodel",{"_index":2453,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["setup",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":1063,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sexchange",{"_index":2735,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["sexes",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["shadow",{"_index":1076,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["shall",{"_index":3782,"title":{},"body":{"license.html":{}}}],["shared",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":141,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/CoreModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":1844,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":173,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":1845,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/spatial",{"_index":1807,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["shared/components/spinner",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/thumbnail",{"_index":1489,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["shared/components/viewer/viewer.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/src/lib/components/body",{"_index":151,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["shared/web",{"_index":481,"title":{},"body":{"components/AppWebComponent.html":{}}}],["sharereplay",{"_index":148,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["sharing",{"_index":1095,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["shortest",{"_index":3667,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":1581,"title":{},"body":{"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["showing",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1667,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":930,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["sides",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["simplechanges",{"_index":1640,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["simplifies",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["single",{"_index":2266,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["site",{"_index":1921,"title":{},"body":{"components/HeaderComponent.html":{},"components/ViewerComponent.html":{}}}],["sites",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":913,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["skin",{"_index":1309,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1310,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipself",{"_index":1008,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["slide",{"_index":2977,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slideinhorizontaldropdown",{"_index":1534,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":1744,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1582,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":1649,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":529,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":1762,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.component.html",{"_index":1585,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.scss",{"_index":1584,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts",{"_index":1580,"title":{},"body":{"components/DualSliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:122",{"_index":1641,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:136",{"_index":1656,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:152",{"_index":1643,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:165",{"_index":1624,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:184",{"_index":1660,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:201",{"_index":1658,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:212",{"_index":1637,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:226",{"_index":1654,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:23",{"_index":1677,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":1648,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:29",{"_index":1673,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:34",{"_index":1612,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":1616,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1614,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:49",{"_index":1619,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1666,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:59",{"_index":1669,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:64",{"_index":1668,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:69",{"_index":1663,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:74",{"_index":1662,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:79",{"_index":1679,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:90",{"_index":1670,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:95",{"_index":1608,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":1746,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider.module.ts",{"_index":1758,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.wrapper",{"_index":1738,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"coverage.html":{}}}],["slidervaluechanged",{"_index":1600,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidesoffsetafter",{"_index":2952,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slidesoffsetbefore",{"_index":2950,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slidesperview",{"_index":2953,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slightly",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1311,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":259,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["snackbar.dismiss",{"_index":290,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["snapshot",{"_index":1190,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["software",{"_index":3715,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":1562,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["solved",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["sortby",{"_index":2215,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":2392,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(topblocks",{"_index":2244,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["sortbysynonymresult",{"_index":2337,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":2366,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically",{"_index":2338,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":2370,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":2368,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["source.getcelltypetermoccurences().pipe(take(1)).subscribe(celltypetermsfulldata",{"_index":1197,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.getontologytermoccurences().pipe(take(1)).subscribe(ontologytermsfulldata",{"_index":1196,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.pipe",{"_index":1105,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":1019,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["source.service.ts",{"_index":1338,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:10",{"_index":3115,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.service.ts:18",{"_index":3117,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.service.ts:20",{"_index":1349,"title":{},"body":{"injectables/DelegateDataSourceService.html":{}}}],["source.service.ts:23",{"_index":3120,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.worker",{"_index":3126,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.worker.ts",{"_index":3555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source/data",{"_index":1018,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["source/worker",{"_index":3108,"title":{},"body":{"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":496,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["sources.includes(msg.source",{"_index":2280,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":1479,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["spacebetween",{"_index":2954,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["sparc",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":3613,"title":{},"body":{"dependencies.html":{}}}],["spatial",{"_index":544,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["spatialscenenode",{"_index":1046,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialsearchconfigbehaviorcomponent",{"_index":543,"title":{"components/SpatialSearchConfigBehaviorComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchconfigbehaviormodule",{"_index":2782,"title":{"modules/SpatialSearchConfigBehaviorModule.html":{}},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"modules.html":{},"overview.html":{}}}],["spatialsearchconfigcomponent",{"_index":548,"title":{"components/SpatialSearchConfigComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchconfigmodule",{"_index":2787,"title":{"modules/SpatialSearchConfigModule.html":{}},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["spatialsearches",{"_index":1074,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["spatialsearchfilters",{"_index":1776,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spatialsearchlistitem",{"_index":1806,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spatialsearchlistmodule",{"_index":1843,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["spatialsearchremoved",{"_index":1780,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spec",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":3736,"title":{},"body":{"index.html":{}}}],["specific",{"_index":998,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":3735,"title":{},"body":{"index.html":{}}}],["specified",{"_index":2278,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["specifying",{"_index":2260,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":231,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["spinneractive",{"_index":233,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["spinneroverlaycomponent",{"_index":550,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":16,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1312,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1313,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["sprint",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["stage",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3196,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":3734,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":3718,"title":{},"body":{"index.html":{}}}],["start",{"_index":849,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":963,"title":{},"body":{"components/ContentComponent.html":{}}}],["start?.opened",{"_index":962,"title":{},"body":{"components/ContentComponent.html":{}}}],["startdrawers",{"_index":872,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":876,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":880,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":3137,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":961,"title":{},"body":{"components/ContentComponent.html":{}}}],["starts",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":1249,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":836,"title":{},"body":{"components/ContainerComponent.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":2606,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":2604,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":2605,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":236,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":2069,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":2074,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":2078,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":939,"title":{},"body":{"components/ContentComponent.html":{}}}],["state('full",{"_index":2079,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":2075,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('open",{"_index":2068,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":941,"title":{},"body":{"components/ContentComponent.html":{}}}],["state.nodes[state.root",{"_index":2458,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["statechange",{"_index":2100,"title":{},"body":{"classes/InitializationState.html":{}}}],["statements",{"_index":3542,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":679,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["states",{"_index":923,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["states.every(state",{"_index":1086,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["static",{"_index":190,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"injectables/ThemingService.html":{}}}],["stats",{"_index":2539,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":1036,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["status.message",{"_index":1214,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["status.status",{"_index":1207,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["statusmessage",{"_index":1037,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["stay",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1710,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["still",{"_index":1858,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["stomach",{"_index":1314,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1315,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":353,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1021,"title":{},"body":{"modules/CoreModule.html":{}}}],["storemodule",{"_index":1003,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":2851,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":3692,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":3690,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":127,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":638,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":361,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["style",{"_index":934,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["style.margin",{"_index":902,"title":{},"body":{"components/ContentComponent.html":{}}}],["styled",{"_index":1942,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":565,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":2123,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":185,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":181,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":688,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["subject.next(dataquerystate.completed",{"_index":1091,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":3773,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1208,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["subscription",{"_index":826,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["subscriptions",{"_index":775,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["substantial",{"_index":3784,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1985,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":1629,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["suffix",{"_index":2442,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["super",{"_index":1181,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["super(configstore",{"_index":497,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super(globalconfig",{"_index":3122,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["super._createcontainer",{"_index":441,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["super.ngxsoninit",{"_index":2224,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["support",{"_index":3156,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1258,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swiper",{"_index":2957,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"dependencies.html":{}}}],["swiper.use([navigation",{"_index":3007,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/angular",{"_index":3003,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/core",{"_index":3004,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/types",{"_index":2980,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["swipermodule",{"_index":3002,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiperoptions",{"_index":2948,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["switch",{"_index":946,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["switched",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":1058,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":1106,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":2389,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sync",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["syncexpanded(other",{"_index":2165,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":2162,"title":{},"body":{"classes/InitializationState.html":{}}}],["synonym",{"_index":2441,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonyms",{"_index":2369,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["t",{"_index":1103,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tab",{"_index":390,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["table",{"_index":3600,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3599,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1059,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["take(1",{"_index":1204,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["takewhile",{"_index":1060,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["takewhile((status",{"_index":1206,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap",{"_index":1061,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tap((status",{"_index":1201,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap(next",{"_index":1107,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap(organs",{"_index":2695,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tap(results",{"_index":2246,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tap(scene",{"_index":2724,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["target",{"_index":1631,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["technologies",{"_index":1071,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["technology",{"_index":1153,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["technologyfilter",{"_index":1168,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilterdata",{"_index":1154,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilterquerystatus",{"_index":1124,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilters",{"_index":1777,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["telemetry",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":618,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":451,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["templateurl",{"_index":183,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["term",{"_index":1142,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":2499,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["terms",{"_index":1129,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySelectionComponent.html":{}}}],["test",{"_index":1084,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["testing",{"_index":1082,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["text",{"_index":1442,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["theme",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":244,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["themes",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":257,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["theming.initialize(el",{"_index":264,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["theming.service",{"_index":2871,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1004,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":159,"title":{"injectables/ThemingService.html":{}},"body":{"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":2872,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themselves",{"_index":2962,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["thick",{"_index":1322,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1323,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1324,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1325,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":2228,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":1184,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":1227,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":1162,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":1186,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":1233,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.pipe(distinct",{"_index":1166,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._containerelement",{"_index":442,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this._expanded",{"_index":2092,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredmargin",{"_index":2121,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":2111,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":1185,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":1230,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.pipe(distinct",{"_index":1164,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._opened",{"_index":2088,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":2084,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._providerfilterquerystatus$.next(dataquerystate.completed",{"_index":1189,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._providerfilterquerystatus$.next(dataquerystate.running",{"_index":1240,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._providerfilterquerystatus$.pipe(distinct",{"_index":1171,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.next(dataquerystate.completed",{"_index":1187,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.next(dataquerystate.running",{"_index":1236,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.pipe(distinct",{"_index":1167,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.next(dataquerystate.completed",{"_index":1188,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.next(dataquerystate.running",{"_index":1238,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.pipe(distinct",{"_index":1169,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.next(dataquerystate.completed",{"_index":1183,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.next(dataquerystate.running",{"_index":1223,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.pipe(distinct",{"_index":1161,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.aggregatedata",{"_index":1140,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":1174,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.animationsenabled",{"_index":952,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.appendtoroot",{"_index":433,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":1817,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":2912,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":2915,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":2911,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.atscrollbottom",{"_index":2603,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.attached",{"_index":424,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.bodyui.bounds",{"_index":339,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.rotation",{"_index":337,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.rotationx",{"_index":338,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.target",{"_index":335,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.cdr.markforcheck",{"_index":865,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.celltypeselectionlabel",{"_index":367,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.celltypetermoccurencesdata",{"_index":1148,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.celltypetermoccurencesdataquerystatus",{"_index":1176,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.celltypeterms",{"_index":283,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.celltypetreemodel",{"_index":285,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.channel",{"_index":856,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":2287,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":2289,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":2292,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":2268,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":862,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checked.emit(this.selected",{"_index":1401,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.closeiframeviewer",{"_index":393,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.colorassignments",{"_index":2232,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.assigncolor(node['@id",{"_index":2681,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.assigncolor(result.tissueblock.spatialentityid",{"_index":2222,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.colorassignments.colorassignments",{"_index":2235,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.unassigncolor(result.tissueblock.spatialentityid",{"_index":2223,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.consentservice.consent",{"_index":292,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.content",{"_index":867,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":866,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":853,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":855,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":854,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.contentsvisible",{"_index":1722,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":366,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ctx.patchstate",{"_index":744,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.data.querystatus$.pipe",{"_index":234,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.data.state$.pipe(pluck('statusmessage",{"_index":239,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.data.updatefilter",{"_index":362,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.databaseready$.pipe(switchmap",{"_index":1224,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.databaseready$.pipe(take(1",{"_index":1209,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.dataservice.getreferenceorgans",{"_index":2701,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.dataservice.getreferenceorgans().pipe",{"_index":2687,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datasource.getcelltypetreemodel().pipe(sharereplay(1",{"_index":286,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.datasource.getontologytreemodel().pipe(sharereplay(1",{"_index":282,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.datastate",{"_index":2230,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datastate.scenedata",{"_index":2699,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datastate.tissueblockdata",{"_index":2234,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.datastate.updatefilter",{"_index":2680,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.defaulttheme",{"_index":2909,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":2062,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.dialog.open(spatialsearchconfigbehaviorcomponent",{"_index":1810,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.dialogref.close",{"_index":2772,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.drawer",{"_index":3067,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":3065,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":949,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":860,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":871,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.element",{"_index":2914,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":2112,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expanded",{"_index":1402,"title":{},"body":{"components/DonorCardComponent.html":{},"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":2154,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":2135,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":2105,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.faded",{"_index":967,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":1135,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.filteredorgans",{"_index":2776,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.filteredorgans.includes(this.selectedorgan",{"_index":2780,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.filteredresults",{"_index":2386,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filterorgans",{"_index":2765,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.filters",{"_index":1811,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":1873,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":1815,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":1872,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.forcedunassignment.asobservable",{"_index":720,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.forcedunassignment.next",{"_index":735,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.formatlabel(node.label",{"_index":2478,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":2404,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":2385,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ga.event('expanded_toggled",{"_index":1403,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('filter_added",{"_index":626,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.ga.event('filter_removed",{"_index":629,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.ga.event('filter_update",{"_index":1812,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('filters_applied",{"_index":1816,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('filters_reset",{"_index":1819,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('link_clicked",{"_index":1404,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('list_result_selected",{"_index":2593,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.ga.event('search",{"_index":2400,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ga.event('selected_toggled",{"_index":1398,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('selection_change",{"_index":1530,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.ga.event('slider_range_change",{"_index":1724,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.getarguments(definition",{"_index":2001,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getindexofmatch(label",{"_index":2483,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":2477,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":2277,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":1998,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getstate().filter",{"_index":1220,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.getworkerurl(true",{"_index":3123,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["this.globalconfig.getoption('header",{"_index":246,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":247,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('logindisabled",{"_index":250,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":248,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('theme",{"_index":243,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.snapshot.hubmaptoken",{"_index":402,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.handlemessage(msg",{"_index":859,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.highvalue",{"_index":1702,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.initialized",{"_index":2061,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":2128,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":2136,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":2158,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initializesliderpopover",{"_index":1723,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.injector",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(colorassignmentstate",{"_index":2233,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(datastate",{"_index":2231,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(listresultsstate",{"_index":2685,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.issliderinitialized",{"_index":1720,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":1721,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.itemselected.emit",{"_index":2771,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.label}:${lowvalue}:${highvalue",{"_index":1726,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.label}:${value",{"_index":1531,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.leftmargin",{"_index":959,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.linkclick.emit(url",{"_index":1405,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.linkclicked.emit(link",{"_index":2598,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.listresultdeselected.next(result",{"_index":2597,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.listresults",{"_index":2684,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.highlightednodeid",{"_index":2702,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.highlightnode(node['@id",{"_index":2682,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.unhighlightnode",{"_index":2683,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresultselected.next(result",{"_index":2596,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.loading",{"_index":3096,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.locator.prepareexternalurl('0",{"_index":3129,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["this.lookup(nodes",{"_index":2469,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":1700,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":2108,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":2107,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":2159,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":2286,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":2274,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nextbuttonid",{"_index":2969,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.nextmessageid",{"_index":2269,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodes$.pipe",{"_index":2467,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologysearchservice.settreemodel(this.treemodel",{"_index":2519,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.ontologyselectionlabel",{"_index":365,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ontologyservice.filter(value",{"_index":2390,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologytermoccurencesdata",{"_index":1145,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.ontologytermoccurencesdataquerystatus",{"_index":1175,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.ontologyterms",{"_index":274,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ontologytreemodel",{"_index":281,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.opened",{"_index":2133,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":2150,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":2134,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.options",{"_index":1704,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.ceil",{"_index":1714,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":1713,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionschanged",{"_index":1696,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":1529,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.organchange.emit(this.selectedorgan",{"_index":2770,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.organs",{"_index":2764,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.organs.filter(organ",{"_index":2777,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.original.children.length",{"_index":1917,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":1916,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":1692,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":1719,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":1715,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":1213,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.position",{"_index":2083,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.prevbuttonid",{"_index":2967,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.providerfilterdata",{"_index":1159,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.providerfilterquerystatus",{"_index":1179,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.registericonimpl(definition",{"_index":1988,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(safedef",{"_index":1983,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry",{"_index":1992,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.removebox",{"_index":1874,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.resetview",{"_index":333,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.resolve",{"_index":2034,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.resultlabel",{"_index":2595,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.rightmargin",{"_index":960,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.rootelement",{"_index":426,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.appendchild(this._containerelement",{"_index":443,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.removechild(this._containerelement",{"_index":425,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.display",{"_index":427,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.height",{"_index":431,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.position",{"_index":429,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.safeurl",{"_index":3095,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.scenedata",{"_index":1151,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.scenedataquerystatus",{"_index":1177,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.selected",{"_index":1397,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.selected.emit(node",{"_index":2403,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selectedorgan",{"_index":2769,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.selectedreferenceorgans",{"_index":2700,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.selection",{"_index":625,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":628,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":630,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":1532,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.selectionlabel",{"_index":368,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.sendtoggle",{"_index":2137,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.setlistresults(results",{"_index":2247,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.setreferenceorgans(organs",{"_index":2696,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.setscene(scene",{"_index":2725,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.setselectedreferenceorgans(organs.filter(organ",{"_index":2697,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.settheme(this.defaulttheme",{"_index":2913,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sex",{"_index":2767,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.sexchange.emit(this.sex",{"_index":2768,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":288,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.snapshot",{"_index":724,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.snapshot.colorpalette.concat",{"_index":729,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":2393,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":2394,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":2270,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.source.getaggregateresults(filter",{"_index":1228,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getcelltypetermoccurences(filter",{"_index":1234,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getdatabasestatus()).pipe",{"_index":1200,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getdatasettechnologynames",{"_index":1239,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":1231,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getprovidernames",{"_index":1241,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getscene(filter",{"_index":1237,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.gettissueblockresults(filter",{"_index":1225,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('colorassignments",{"_index":721,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.state$.pipe(pluck('colorassignmentslist",{"_index":722,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":1133,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('highlightedid",{"_index":2654,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('highlightednodeid",{"_index":2210,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.state$.pipe(pluck('listresults",{"_index":2212,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.state$.pipe(pluck('referenceorgans",{"_index":2656,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('scene",{"_index":2658,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('selectedreferenceorgans",{"_index":2660,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('status",{"_index":1111,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.statechange.emit",{"_index":2160,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":3064,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":945,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.subscriptions.add(sub",{"_index":2766,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":858,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":868,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.syncexpanded(other",{"_index":2161,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.technologyfilterdata",{"_index":1155,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.technologyfilterquerystatus",{"_index":1178,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":2910,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.thememode$.next('dark",{"_index":306,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next('light",{"_index":307,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next(e.matches",{"_index":312,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":349,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$]).subscribe",{"_index":277,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":227,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.theming.settheme(`${theme",{"_index":279,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.tissueblock.label",{"_index":1400,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.tissueblockdata",{"_index":1136,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.tissueblockdataquerystatus",{"_index":1173,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.tissuesections.filter(section",{"_index":3031,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":2090,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":2131,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":2130,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":2094,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":2143,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":2140,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":2520,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.treemodel",{"_index":2466,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel$.next(treemodel",{"_index":2465,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel$.pipe(map(state",{"_index":2455,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel?.nodes",{"_index":2487,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.uid",{"_index":2982,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.updatefaded",{"_index":951,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatemargin(position",{"_index":957,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updateorgan(undefined",{"_index":2781,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.updatestatus",{"_index":1210,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.updatestatus(status",{"_index":1202,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.updateurl",{"_index":3094,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.url",{"_index":387,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.validatedrawers",{"_index":861,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.valuerange",{"_index":1706,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":1707,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":1709,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.vieweropen",{"_index":388,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.warmupdatabase",{"_index":1198,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.width",{"_index":2106,"title":{},"body":{"classes/InitializationState.html":{}}}],["those",{"_index":2272,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["thread",{"_index":3828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["three",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["through",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":494,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":3589,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":879,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":877,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":848,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":847,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":843,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumbnail",{"_index":553,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["thumbnailcarouselcomponent",{"_index":552,"title":{"components/ThumbnailCarouselComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["thumbnailcarouselmodule",{"_index":1486,"title":{"modules/ThumbnailCarouselModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules.html":{},"overview.html":{}}}],["thumbnails",{"_index":2928,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["thymus",{"_index":1316,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1317,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tick",{"_index":3035,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tied",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":602,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["timeouts",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["timing",{"_index":974,"title":{},"body":{"components/ContentComponent.html":{}}}],["tissue",{"_index":556,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tissueblock",{"_index":1365,"title":{},"body":{"components/DonorCardComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tissueblock.description",{"_index":1412,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.donor.description",{"_index":1408,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.donor.label",{"_index":1407,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.label",{"_index":1411,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblockdata",{"_index":1134,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockdata(filter",{"_index":1222,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockdataquerystatus",{"_index":1114,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockresult",{"_index":1047,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/ListResult.html":{}}}],["tissueblocks",{"_index":2239,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tissues",{"_index":3018,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["tissuesection",{"_index":3029,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionexists",{"_index":3013,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionexists(sectionnumber",{"_index":3025,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionresult",{"_index":3016,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesections",{"_index":3014,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesections]=\"tissueblock.sections",{"_index":1414,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissuesectionviscomponent",{"_index":555,"title":{"components/TissueSectionVisComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesectionvismodule",{"_index":1487,"title":{"modules/TissueSectionVisModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/TissueSectionVisModule.html":{},"modules.html":{},"overview.html":{}}}],["title",{"_index":1443,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["tmc",{"_index":1070,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":560,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle(opened",{"_index":2132,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglebuttoncomponent",{"_index":559,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":953,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["toggleexpanded(expanded",{"_index":2146,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggleexpansion",{"_index":1363,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["togglefiltervisible",{"_index":1852,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":1511,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":346,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{}}}],["togglescheme",{"_index":348,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["togglesliderpopover",{"_index":1601,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["token",{"_index":400,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["token.length",{"_index":403,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["tool",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["toolbar",{"_index":3100,"title":{},"body":{"components/ViewerComponent.html":{}}}],["top",{"_index":1441,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["topblocks",{"_index":2237,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["topblocks.push",{"_index":2241,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tort",{"_index":3803,"title":{},"body":{"license.html":{}}}],["total",{"_index":3021,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["totaltissuesections",{"_index":3015,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["totaltissuesections]=\"tissueblock.sectioncount",{"_index":1413,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["touch",{"_index":888,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":195,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["tracking/telemetry",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["trackingpopupcomponent",{"_index":139,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["trackingpopupmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["tracks",{"_index":2376,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":1547,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["transition",{"_index":935,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["transition('closed",{"_index":2070,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":942,"title":{},"body":{"components/ContentComponent.html":{}}}],["translatey",{"_index":1567,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["transparency",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":1431,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["travisci",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":445,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":540,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":2518,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.component.ts",{"_index":3578,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tree.module",{"_index":2325,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":2532,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":2324,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["treemodel",{"_index":2429,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["trigger",{"_index":936,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["trigger('expandcollapse",{"_index":2073,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":938,"title":{},"body":{"components/ContentComponent.html":{}}}],["trigger('openclose",{"_index":2067,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggered",{"_index":2365,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["true",{"_index":210,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/ThemingModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2002,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["ts",{"_index":3697,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":3700,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1279,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":869,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turn",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":126,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3811,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":486,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/OntologySearchComponent.html":{}}}],["types",{"_index":986,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["types/lru",{"_index":3639,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":438,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2662,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"index.html":{}}}],["ui.component",{"_index":153,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ui.netlify.app",{"_index":3721,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":3731,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":3728,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":152,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ui/organ",{"_index":3730,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":3729,"title":{},"body":{"index.html":{}}}],["uid",{"_index":2933,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["uievent",{"_index":2584,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["unassigncolor",{"_index":751,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["unassigncolor(@payload('key",{"_index":745,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["unassigncolor(key",{"_index":756,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["unchecked",{"_index":619,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":359,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/OntologySelection.html":{}}}],["under",{"_index":1260,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["underline",{"_index":1545,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["unhighlightnode",{"_index":2191,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["unique",{"_index":2249,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["university",{"_index":3748,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":483,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unless",{"_index":1388,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["unlike",{"_index":1250,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unnecessary",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["unselect",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":3073,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":1674,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["unused",{"_index":2947,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["up",{"_index":801,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["update",{"_index":352,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["updated",{"_index":601,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["updatefaded",{"_index":898,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatefilter",{"_index":1774,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatefilter(@payload('filter",{"_index":1216,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":1800,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatemargin",{"_index":899,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatemargin(position",{"_index":924,"title":{},"body":{"components/ContentComponent.html":{}}}],["updateorgan",{"_index":2738,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["updateorgan(organ",{"_index":2748,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["updates",{"_index":922,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["updatesex",{"_index":2739,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["updatesex(sex",{"_index":2750,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["updatestatus(@payload('status",{"_index":1212,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["updateurl",{"_index":3081,"title":{},"body":{"components/ViewerComponent.html":{}}}],["upgraded",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":1618,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ureter",{"_index":1318,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":212,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["url('./data",{"_index":3125,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["url.createobjecturl(codeblob",{"_index":3135,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["url?.startswith(domain",{"_index":385,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["urls",{"_index":1978,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["use",{"_index":1391,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"license.html":{}}}],["used",{"_index":193,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["useexisting",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["useful",{"_index":845,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":300,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["user/os",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["useremoteapi",{"_index":461,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["users",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":351,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["usevalue",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":2963,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["uterus",{"_index":1319,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1320,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":3701,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":485,"title":{},"body":{"components/AppWebComponent.html":{}}}],["val.every(isstring",{"_index":489,"title":{},"body":{"components/AppWebComponent.html":{}}}],["validatedrawers",{"_index":779,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":807,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validation",{"_index":2377,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":420,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":2470,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechanges",{"_index":2384,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":2387,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueof",{"_index":2030,"title":{},"body":{"classes/InitializationState.html":{}}}],["valuerange",{"_index":1602,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":985,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":511,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":223,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3818,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1321,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":3224,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":1464,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["viewchild",{"_index":133,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["viewchild('bodyui",{"_index":189,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["viewchild('popover",{"_index":1671,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkportal",{"_index":1676,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":2516,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":835,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":820,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewer",{"_index":216,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["viewer.component",{"_index":3107,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":3079,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":3078,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewercomponent",{"_index":562,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"coverage.html":{},"overview.html":{}}}],["viewermodule",{"_index":17,"title":{"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["vieweropen",{"_index":224,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["viewport",{"_index":2587,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["views",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["virtual",{"_index":2541,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["vis",{"_index":3010,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis'},{'name",{"_index":558,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["vis.component",{"_index":3041,"title":{},"body":{"modules/TissueSectionVisModule.html":{}}}],["vis.component.html",{"_index":3012,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.scss",{"_index":3011,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts",{"_index":3009,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"coverage.html":{}}}],["vis.component.ts:12",{"_index":3024,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:15",{"_index":3020,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:18",{"_index":3017,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:21",{"_index":3026,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.module",{"_index":1494,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["vis.module.ts",{"_index":3040,"title":{},"body":{"modules/TissueSectionVisModule.html":{}}}],["vis/tissue",{"_index":1493,"title":{},"body":{"modules/DonorCardModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["visibility",{"_index":1661,"title":{},"body":{"components/DualSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visibility_off",{"_index":1330,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1328,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":1528,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visited",{"_index":2996,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["visual",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":1469,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["wait",{"_index":2032,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":2155,"title":{},"body":{"classes/InitializationState.html":{}}}],["warming",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["warmupdatabase",{"_index":1199,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["warning",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":3789,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3786,"title":{},"body":{"license.html":{}}}],["watchoverflow",{"_index":2955,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["way",{"_index":2589,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["wc",{"_index":450,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":514,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["web",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["webcomponent",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":3641,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":886,"title":{},"body":{"components/ContainerComponent.html":{}}}],["webpages",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":3717,"title":{},"body":{"index.html":{}}}],["week",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":648,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["well",{"_index":2540,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":229,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":205,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["white",{"_index":639,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["whole",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["whose",{"_index":2348,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["width",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":2163,"title":{},"body":{"classes/InitializationState.html":{}}}],["window",{"_index":220,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.matchmedia",{"_index":296,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.matchmedia('(prefers",{"_index":302,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.open(url",{"_index":391,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["within",{"_index":2504,"title":{},"body":{"components/OntologySelectionComponent.html":{},"changelog.html":{}}}],["without",{"_index":822,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["work",{"_index":2965,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["workaround",{"_index":2173,"title":{},"body":{"classes/InitializationState.html":{}}}],["worker",{"_index":1345,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["worker(url",{"_index":3124,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":3109,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["workerdatasourceservice",{"_index":1344,"title":{"injectables/WorkerDataSourceService.html":{}},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["wrapped",{"_index":819,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":1539,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["wrapper/container",{"_index":1743,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":823,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["x",{"_index":340,"title":{},"body":{"interfaces/AppOptions.html":{},"components/TissueSectionVisComponent.html":{}}}],["y",{"_index":342,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ResultsBrowserComponent.html":{}}}],["yes",{"_index":2354,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":344,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["zone.js",{"_index":3703,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nAppModule -->\n\nViewerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/app.module.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { createCustomElement } from '@angular/elements';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BodyUiModule, InfoButtonModule, OrganSelectorModule, TrackingPopupModule } from 'ccf-shared';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\nimport { ViewerModule } from './shared/components/viewer/viewer.module';\nimport { AppWebComponent } from './app-web-component.component';\n\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    BodyUiModule,\n    OrganSelectorModule,\n    InfoButtonModule,\n    MatTooltipModule,\n    ViewerModule,\n    TrackingPopupModule,\n    MatSnackBarModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    { provide: DEFAULT_THEME, useValue: 'hubmap-theme-light' },\n    { provide: OverlayContainer, useExisting: AppRootOverlayContainer }\n  ],\n  entryComponents: [AppComponent]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-eui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CCFDatabaseOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loginEnabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CCFDatabaseOptions, OntologyTreeModel } from 'ccf-database';\nimport { DataSourceService, GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map, pluck, shareReplay } from 'rxjs/operators';\n\nimport { BodyUiComponent } from '../../../ccf-shared/src/lib/components/body-ui/body-ui.component';\nimport { environment } from '../environments/environment';\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { ListResultsState } from './core/store/list-results/list-results.state';\nimport { SceneState } from './core/store/scene/scene.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n\ninterface AppOptions extends CCFDatabaseOptions {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  loginEnabled?: boolean;\n}\n\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('bodyUI', { static: false }) bodyUI: BodyUiComponent;\n\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  cellTypeSelectionLabel = 'cell';\n\n  selectionLabel = 'body | cell';\n\n  /**\n   * Whether or not organ carousel is open\n   */\n  organListVisible = true;\n\n  /**\n   * Emitted url object from the results browser item\n   */\n  url = '';\n\n  /**\n   * Acceptable viewer domains (others will open in new window)\n   */\n  acceptableViewerDomains: string[] = environment.acceptableViewerDomains || [];\n\n  /**\n   * Variable to keep track of whether the viewer is open\n   * or not\n   */\n  viewerOpen = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly loadingMessage$ = this.data.state$.pipe(pluck('statusMessage'));\n\n  readonly ontologyTerms$: Observable;\n  readonly ontologyTreeModel$: Observable;\n\n  readonly cellTypeTerms$: Observable;\n  readonly cellTypeTreeModel$: Observable;\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n  readonly loginDisabled$ = this.globalConfig.getOption('loginDisabled');\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(\n    el: ElementRef, injector: Injector,\n    readonly data: DataState, readonly theming: ThemingService,\n    readonly scene: SceneState, readonly listResultsState: ListResultsState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, overlay: AppRootOverlayContainer,\n    readonly dataSource: DataSourceService, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    overlay.setRootElement(el);\n    data.tissueBlockData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.ontologyTermOccurencesData$.subscribe();\n    data.cellTypeTermOccurencesData$.subscribe();\n    data.sceneData$.subscribe();\n    data.filter$.subscribe();\n    data.technologyFilterData$.subscribe();\n    data.providerFilterData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n\n    this.ontologyTreeModel$ = this.dataSource.getOntologyTreeModel().pipe(shareReplay(1));\n    this.cellTypeTerms$ = data.filter$.pipe(pluck('cellTypeTerms'));\n    this.cellTypeTreeModel$ = this.dataSource.getCellTypeTreeModel().pipe(shareReplay(1));\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    if (window.matchMedia) {\n      // Sets initial theme according to user theme preference\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        this.themeMode$.next('dark');\n      } else {\n        this.themeMode$.next('light');\n      }\n\n      // Listens for changes in user theme preference\n      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n        this.themeMode$.next(e.matches ? 'dark' : 'light');\n      });\n    } else {\n      this.themeMode$.next('light');\n    }\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   *\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent\n  ): void {\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n    this.resetView();\n  }\n\n  resetView(): void {\n    this.bodyUI.target = [0, 0, 0];\n    this.bodyUI.rotation = 0;\n    this.bodyUI.rotationX = 0;\n    this.bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   *\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[] | undefined, type: 'anatomical-structures' | 'cell-type'): void {\n    if (ontologySelection) {\n      if (type === 'anatomical-structures') {\n        this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id) });\n        this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      } else {\n        this.data.updateFilter({ cellTypeTerms: ontologySelection.map(selection => selection.id) });\n        this.cellTypeSelectionLabel = this.createSelectionLabel(ontologySelection);\n      }\n      if (this.ontologySelectionLabel && this.cellTypeSelectionLabel) {\n        this.selectionLabel = `${this.ontologySelectionLabel} | ${this.cellTypeSelectionLabel}`;\n      } else if (this.ontologySelectionLabel) {\n        this.selectionLabel = `${this.ontologySelectionLabel}`;\n      } else if (this.cellTypeSelectionLabel) {\n        this.selectionLabel = `${this.cellTypeSelectionLabel}`;\n      } else {\n        this.selectionLabel = '';\n      }\n      if (ontologySelection[0] && ontologySelection[0].label === 'body') {\n        this.resetView();\n      }\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [], cellTypeTerms: [] });\n    this.ontologySelectionLabel = '';\n    this.cellTypeSelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string {\n    if (ontolgySelection.length === 0) {\n      return '';\n    }\n\n    if (ontolgySelection.length === 1) {\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  url?.startsWith(domain));\n    if (isWhitelisted) {\n      this.url = url;\n      this.viewerOpen = !!url;\n    } else {\n      // Open link in new tab\n      window.open(url, '_blank');\n      this.closeiFrameViewer();\n    }\n  }\n\n  /**\n   * Function to easily close the iFrame viewer.\n   */\n  closeiFrameViewer(): void {\n    this.viewerOpen = false;\n  }\n\n  /**\n   * Gets login token\n   */\n  get loggedIn(): boolean {\n    const token = this.globalConfig.snapshot.hubmapToken ?? '';\n    return token.length > 0;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppRootOverlayContainer.html":{"url":"injectables/AppRootOverlayContainer.html","title":"injectable - AppRootOverlayContainer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppRootOverlayContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    OverlayContainer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attached\n                            \n                            \n                                    Private\n                                rootElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createContainer\n                            \n                            \n                                    Private\n                                appendToRoot\n                            \n                            \n                                setRootElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _createContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    _createContainer()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        appendToRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    appendToRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRootElement\n                        \n                    \n                \n            \n            \n                \nsetRootElement(el: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        attached\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rootElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { Injectable, ElementRef } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppRootOverlayContainer extends OverlayContainer {\n  private rootElement: ElementRef;\n  private attached = false;\n\n  setRootElement(el: ElementRef): void {\n    if (this.attached) {\n      this.rootElement.nativeElement.removeChild(this._containerElement);\n      this.attached = false;\n    }\n\n    this.rootElement = el;\n    this.rootElement.nativeElement.style.display = 'block';\n    this.rootElement.nativeElement.style.position = 'contents';\n    this.rootElement.nativeElement.style.height = '100%';\n    this.appendToRoot();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  protected _createContainer(): void {\n    super._createContainer();\n    this.appendToRoot();\n  }\n\n  private appendToRoot(): void {\n    if (!this._containerElement || !this.rootElement) {\n      return;\n    }\n\n    this.rootElement.nativeElement.appendChild(this._containerElement);\n    this.attached = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSources\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                hubmapAssetUrl\n                            \n                            \n                                hubmapDataService\n                            \n                            \n                                hubmapDataUrl\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                hubmapToken\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                remoteApiEndpoint\n                            \n                            \n                                theme\n                            \n                            \n                                useRemoteApi\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/app-web-component.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSources\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapAssetUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapDataService\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapDataUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapToken\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        remoteApiEndpoint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useRemoteApi\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/app-web-component.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS, GenericGlobalConfig } from 'ccf-shared/web-components';\n\nimport { environment } from '../environments/environment';\n\n\nfunction parseDataSources(value: unknown): string[] {\n  const isString = (val: unknown): val is string => typeof val === 'string';\n  const isStringArray = (val: unknown): val is string[] => Array.isArray(val) && val.every(isString);\n\n  if (typeof value === 'string') {\n    const json = BUILTIN_PARSERS.json(value);\n    if (isStringArray(json)) {\n      return json;\n    }\n  } else if (isStringArray(value)) {\n    return value;\n  }\n\n  throw new Error('Invalid data sources');\n}\n\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() dataSources: string | string[];\n\n  @Input() hubmapDataService: string;\n  @Input() hubmapDataUrl: string;\n  @Input() hubmapAssetUrl: string;\n  @Input() hubmapToken: string;\n  @Input() hubmapPortalUrl: string;\n\n  @Input() useRemoteApi: string | boolean;\n  @Input() remoteApiEndpoint: string;\n  @Input() theme: string;\n  @Input() header: string | boolean;\n  @Input() homeUrl: string;\n  @Input() logoTooltip: string;\n  @Input() loginDisabled: boolean;\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions'],\n        ...environment.customization\n      },\n      parse: {\n        dataSources: parseDataSources,\n        useRemoteApi: BUILTIN_PARSERS.boolean,\n        header: BUILTIN_PARSERS.boolean,\n        loginDisabled: BUILTIN_PARSERS.boolean\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of checkbox component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:33\n                            \n                        \n                \n                    \n                        Number of columns\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:18\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:23\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:28\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterOnChange\n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:53\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Number of columns\n   */\n  @Input() columns = 3;\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Creates an instance of checkbox component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   *\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n      this.ga.event('filter_added', 'filter_checkbox', option);\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n      this.ga.event('filter_removed', 'filter_checkbox', option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5rem;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  &.three {\n    .option {\n      width: 33%;\n    }\n  }\n\n  &.four {\n    .option {\n      width: 25%;\n    }\n  }\n}\n\n.option {\n  color: #fafafa;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            rank\n                                        \n                                \n                                \n                                        \n                                            rgba\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rgba\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rgba:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ColorAssignmentState.html":{"url":"injectables/ColorAssignmentState.html","title":"injectable - ColorAssignmentState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ColorAssignmentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Color Assignment State\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorAssignments$\n                            \n                            \n                                    Readonly\n                                colorAssignmentsList$\n                            \n                            \n                                    Private\n                                    Readonly\n                                forcedUnassignment\n                            \n                            \n                                    Readonly\n                                forcedUnassignment$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignColor\n                            \n                            \n                                getColor\n                            \n                            \n                                unassignColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        assignColor\n                        \n                    \n                \n            \n            \n                \nassignColor(key: string, doReset)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    doReset\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Immutable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Immutable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unassignColor\n                        \n                    \n                \n            \n            \n                \nunassignColor(key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorAssignments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorAssignmentsList$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        forcedUnassignment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        forcedUnassignment$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.forcedUnassignment.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:59\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorAssignmentStateModel.html":{"url":"interfaces/ColorAssignmentStateModel.html","title":"interface - ColorAssignmentStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorAssignmentStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorAssignments\n                                        \n                                \n                                \n                                        \n                                            colorAssignmentsList\n                                        \n                                \n                                \n                                        \n                                            colorPalette\n                                        \n                                \n                                \n                                        \n                                            colorsAvailable\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorAssignments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorAssignments:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorAssignmentsList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorAssignmentsList:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorPalette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorPalette:         Color[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Color[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorsAvailable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorsAvailable:         Color[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Color[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:115\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:83\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:105\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateDrawers\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:124\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageChannel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                        \n                    \n\n            \n                \n                    The connected message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ContentComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:45\n                        \n                    \n\n            \n                \n                    Content component if provided already wrapped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(ContentComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:48\n                        \n                    \n\n            \n                \n                    Content component if provided without wrapping.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(DrawerComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:41\n                        \n                    \n\n            \n                \n                    Drawer components in this container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:62\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component.\n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationsEnabled\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                faded\n                            \n                            \n                                leftMargin\n                            \n                            \n                                rightMargin\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:70\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:60\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateFaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:116\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateMargin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:103\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DrawerComponent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:39\n                        \n                    \n\n            \n                \n                    References to the side drawers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 5.5rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DataSourceService, MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\nimport { CcfApiConfiguration, CcfApiModule } from 'ccf-openapi/angular-client';\n\nimport { environment } from '../../environments/environment';\nimport { HeaderModule } from './header/header.module';\nimport { DelegateDataSourceService } from './services/data-source/data-source.service';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'eui'\n    }),\n    MousePositionTrackerModule,\n\n    CcfApiModule.forRoot(() => new CcfApiConfiguration({\n      basePath: environment.dbOptions.remoteApiEndpoint\n    })),\n\n    HeaderModule,\n    StoreModule,\n    ThemingModule\n  ],\n  providers: [\n    { provide: DataSourceService, useExisting: DelegateDataSourceService }\n  ],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Store data state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            statusMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Loading\" | \"Ready\" | \"Error\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Loading\" | \"Ready\" | \"Error\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, DatabaseStatus, Filter, SpatialSceneNode, TissueBlockResult } from 'ccf-database';\nimport { DataSourceService } from 'ccf-shared';\nimport { combineLatest, defer, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { delay, distinct, filter as rxjsFilter, map, pluck, publishReplay, refCount, repeat, switchMap, take, takeWhile, tap } from 'rxjs/operators';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000'],\n  spatialSearches: []\n};\n\n/** Current state of data queries. */\n// eslint-disable-next-line no-shadow\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n  status: 'Loading' | 'Ready' | 'Error';\n  statusMessage: string;\n}\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER,\n    status: 'Loading',\n    statusMessage: 'Loading database'\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository implements NgxsOnInit {\n  /** Emits when the database is ready. */\n  readonly databaseReady$ = this.state$.pipe(pluck('status'), distinct(), rxjsFilter((status) => status === 'Ready'));\n\n  /** Implementation subject for tissueBlockDataQueryStatus$. */\n  private readonly _tissueBlockDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for ontologyTermOccurencesDataQueryStatus$. */\n  private readonly _ontologyTermOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for cellTypeTermOccurencesDataQueryStatus$. */\n  private readonly _cellTypeTermOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for sceneDataQueryStatus$. */\n  private readonly _sceneDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for technologyFilterQueryStatus$. */\n  private readonly _technologyFilterQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for providerFilterQueryStatus$. */\n  private readonly _providerFilterQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$ = new ReplaySubject>(1);\n  /** Keeping track of all cell type terms there is data for. */\n  readonly cellTypeTermsFullData$ = new ReplaySubject>(1);\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest tissue block query data. */\n  readonly tissueBlockData$ = this.filter$.pipe(queryData(\n    this.tissueBlockData, sendCompletedTo(this._tissueBlockDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest ontology term occurences query data. */\n  readonly ontologyTermOccurencesData$ = this.filter$.pipe(queryData(\n    this.ontologyTermOccurencesData, sendCompletedTo(this._ontologyTermOccurencesDataQueryStatus$)\n  ));\n  /** Latest cell type term occurences query data. */\n  readonly cellTypeTermOccurencesData$ = this.filter$.pipe(queryData(\n    this.cellTypeTermOccurencesData, sendCompletedTo(this._cellTypeTermOccurencesDataQueryStatus$)\n  ));\n  /** Latest scene query data. */\n  readonly sceneData$ = this.filter$.pipe(queryData(\n    this.sceneData, sendCompletedTo(this._sceneDataQueryStatus$)\n  ));\n  /** Latest technology filter label query data. */\n  readonly technologyFilterData$ = this.filter$.pipe(queryData(\n    this.technologyFilterData, sendCompletedTo(this._technologyFilterQueryStatus$)\n  ));\n  /** Latest provider filter label query data. */\n  readonly providerFilterData$ = this.filter$.pipe(queryData(\n    this.providerFilterData, sendCompletedTo(this._providerFilterQueryStatus$)\n  ));\n\n  /** Current status of queries in the tissueBlockData$ observable. */\n  readonly tissueBlockDataQueryStatus$ = this._tissueBlockDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the ontologyTermOccurrences$ observable. */\n  readonly ontologyTermOccurencesDataQueryStatus$ = this._ontologyTermOccurencesDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the cellTypeTermOccurrences$ observable. */\n  readonly cellTypeTermOccurencesDataQueryStatus$ = this._cellTypeTermOccurencesDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the sceneData$ observable. */\n  readonly sceneDataQueryStatus$ = this._sceneDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the technologyFilter$ observable. */\n  readonly technologyFilterQueryStatus$ = this._technologyFilterQueryStatus$.pipe(distinct());\n  /** Current status of queries in the providerFilter$ observable. */\n  readonly providerFilterQueryStatus$ = this._providerFilterQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.tissueBlockDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.ontologyTermOccurencesDataQueryStatus$,\n    this.cellTypeTermOccurencesDataQueryStatus$,\n    this.sceneDataQueryStatus$,\n    this.technologyFilterQueryStatus$,\n    this.providerFilterQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._sceneDataQueryStatus$.next(DataQueryState.Completed);\n    this._technologyFilterQueryStatus$.next(DataQueryState.Completed);\n    this._providerFilterQueryStatus$.next(DataQueryState.Completed);\n  }\n\n  ngxsOnInit(): void {\n    const { ontologyTermsFullData$, ontologyTermOccurencesData$, cellTypeTermsFullData$, cellTypeTermOccurencesData$, source, snapshot: { filter } } = this;\n    if (filter === DEFAULT_FILTER) {\n      // Common case - Reuse the result of the regular query\n      ontologyTermOccurencesData$.pipe(take(1)).subscribe(ontologyTermsFullData$);\n      cellTypeTermOccurencesData$.pipe(take(1)).subscribe(cellTypeTermsFullData$);\n    } else {\n      source.getOntologyTermOccurences().pipe(take(1)).subscribe(ontologyTermsFullData$);\n      source.getCellTypeTermOccurences().pipe(take(1)).subscribe(cellTypeTermsFullData$);\n    }\n    this.warmUpDatabase();\n  }\n\n  private warmUpDatabase(): void {\n    defer(() => this.source.getDatabaseStatus()).pipe(\n      tap((status) => this.updateStatus(status)),\n      delay(2000),\n      take(1)\n    ).pipe(\n      repeat(1000),\n      takeWhile((status) => status.status === 'Loading')\n    ).subscribe();\n\n    this.databaseReady$.pipe(take(1), tap(() => {\n      this.updateStatus({\n        status: 'Ready',\n        message: 'Loading CCF Exploration User Interface (EUI)'\n      });\n    })).subscribe();\n  }\n\n  @DataAction()\n  updateStatus(@Payload('status') status: DatabaseStatus): void {\n    this.patchState({\n      status: status.status,\n      statusMessage: status.message\n    });\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(@Payload('filter') filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: { ...this.getState().filter, ...filter }\n    });\n  }\n\n  /**\n   * Queries for tissue block data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private tissueBlockData(filter: Filter): ObservableInput {\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getTissueBlockResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private ontologyTermOccurencesData(filter: Filter): ObservableInput> {\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for cell type term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private cellTypeTermOccurencesData(filter: Filter): ObservableInput> {\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getCellTypeTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for scene data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private sceneData(filter: Filter): ObservableInput {\n    this._sceneDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getScene(filter)));\n  }\n\n  /**\n   * Queries for technology filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private technologyFilterData(): ObservableInput {\n    this._technologyFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getDatasetTechnologyNames()));\n  }\n\n  /**\n   * Queries for provider filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private providerFilterData(): ObservableInput {\n    this._providerFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getProviderNames()));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DelegateDataSourceOptions.html":{"url":"interfaces/DelegateDataSourceOptions.html","title":"interface - DelegateDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DelegateDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useRemoteApi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRemoteApi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRemoteApi:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService, CCFDatabaseDataSourceService, DataSourceLike, InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\n\nexport interface DelegateDataSourceOptions {\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken {\n    const { useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      return ApiEndpointDataSourceService;\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DelegateDataSourceService.html":{"url":"injectables/DelegateDataSourceService.html","title":"injectable - DelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        InjectorDelegateDataSourceService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                selectToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: DelegateDataSourceOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DelegateDataSourceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService, CCFDatabaseDataSourceService, DataSourceLike, InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\n\nexport interface DelegateDataSourceOptions {\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken {\n    const { useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      return ApiEndpointDataSourceService;\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DonorCardComponent.html":{"url":"components/DonorCardComponent.html","title":"component - DonorCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DonorCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Donor card component which displays data from a patient\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-donor-card\n            \n\n            \n                styleUrls\n                ./donor-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./donor-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                hoverState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCheckbox\n                            \n                            \n                                linkHandler\n                            \n                            \n                                toggleExpansion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                expanded\n                            \n                            \n                                highlighted\n                            \n                            \n                                selected\n                            \n                            \n                                tissueBlock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                linkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of donor card component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:26\n                            \n                        \n                \n                    \n                        Allows color of the checkbox background to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:29\n                            \n                        \n                \n                    \n                        Allows the expanded state of the card to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlighted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:23\n                            \n                        \n                \n                    \n                        Allows the selected state to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueBlock\n                    \n                \n                \n                    \n                        Type :     TissueBlockResult\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:20\n                            \n                        \n                \n                    \n                        Tissue Block to generate the donor card from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:34\n                            \n                        \n                \n                    \n                        Emits the new checked state whenever it changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        linkClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:37\n                            \n                        \n                \n                    \n                        Emit the url of any link when clicked.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-donor-card\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-donor-card'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleCheckbox\n                        \n                    \n                \n            \n            \n                \nhandleCheckbox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:52\n                \n            \n\n\n            \n                \n                    Handles the logic that needs to run when the checkbox is clicked on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkHandler\n                        \n                    \n                \n            \n            \n                \nlinkHandler(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:76\n                \n            \n\n\n            \n                \n                    Handles what happens when an info card is clicked.\nPasses up the link click event unless the card isn't selected\nIn which case it selects it for ease of use.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the URL to emit up.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpansion\n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:62\n                \n            \n\n\n            \n                \n                    Ensures that the expanded variable is only changed if selected first.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-donor-card'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoverState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:40\n                        \n                    \n\n            \n                \n                    To keep track of which element, if any, are hovered over.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { TissueBlockResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Donor card component which displays data from a patient\n */\n@Component({\n  selector: 'ccf-donor-card',\n  templateUrl: './donor-card.component.html',\n  styleUrls: ['./donor-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DonorCardComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-donor-card';\n\n  /** Tissue Block to generate the donor card from */\n  @Input() tissueBlock!: TissueBlockResult;\n\n  /** Allows the selected state to be set from outside the component */\n  @Input() selected = false;\n\n  /** Allows color of the checkbox background to be set from outside the component */\n  @Input() color!: string;\n\n  /** Allows the expanded state of the card to be set from outside the component */\n  @Input() expanded = false;\n\n  @Input() highlighted = false;\n\n  /** Emits the new checked state whenever it changes */\n  @Output() readonly checked = new EventEmitter();\n\n  /** Emit the url of any link when clicked. */\n  @Output() readonly linkClick = new EventEmitter();\n\n  /** To keep track of which element, if any, are hovered over. */\n  hoverState = '';\n\n  /**\n   * Creates an instance of donor card component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Handles the logic that needs to run when the checkbox is clicked on.\n   */\n  handleCheckbox(): void {\n    this.selected = !this.selected;\n    this.ga.event('selected_toggled', 'donor_card', this.tissueBlock.label, +this.selected);\n    this.checked.emit(this.selected);\n    this.expanded = false;\n  }\n\n  /**\n   * Ensures that the expanded variable is only changed if selected first.\n   */\n  toggleExpansion(): void {\n    if (this.selected) {\n      this.expanded = !this.expanded;\n      this.ga.event('expanded_toggled', 'donor_card', this.tissueBlock.label, +this.expanded);\n    }\n  }\n\n  /**\n   * Handles what happens when an info card is clicked.\n   * Passes up the link click event unless the card isn't selected\n   * In which case it selects it for ease of use.\n   *\n   * @param url the URL to emit up.\n   */\n  linkHandler(url: string): void {\n    this.ga.event('link_clicked', 'donor_card', this.tissueBlock.label);\n    if (this.selected) {\n      this.linkClick.emit(url);\n    } else {\n      this.selected = true;\n      this.checked.emit(this.selected);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      person\n\n      \n        {{ tissueBlock.donor.label }}\n        {{ tissueBlock.donor.description }}\n      \n    \n    \n      DONOR\n      open_in_new\n    \n\n    {{ expanded ? \"expand_less\" : \"expand_more\" }}\n  \n\n\n\n  \n    \n      bubble_chart\n      \n        {{ tissueBlock.label }}\n        {{ tissueBlock.description }}\n      \n\n      \n        TISSUE BLOCK\n        open_in_new\n      \n    \n\n     1\"\n      [totalTissueSections]=\"tissueBlock.sectionCount\"\n      [tissueSections]=\"tissueBlock.sections\"\n    >\n\n     0\">\n      \n      \n    \n  \n\n  \n    \n      bubble_chart\n      \n        {{ section.label }}\n        {{ section.description }}\n      \n\n      \n        TISSUE SECTION\n        open_in_new\n      \n    \n\n     0\">\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./donor-card.component.scss\n                \n                :host {\n  width: 100%;\n\n  .main-container {\n    display: flex;\n    min-height: 3rem;\n    width: 100%;\n    align-items: center;\n    padding-left: 0.5rem;\n  }\n\n  .checkbox-background {\n    height: 2rem;\n    width: 2rem;\n    border-radius: 50%;\n    margin-right: 0.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n\n    ::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background,\n    .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {\n      background-color: transparent;\n    }\n\n    &.highlighted {\n      ::ng-deep .mat-ripple-element {\n        opacity: .04;\n      }\n    }\n\n    .checkselected {\n      ::ng-deep .mat-checkbox-frame {\n        border-color: white !important;\n      }\n    }\n\n    .checkbox {\n      margin-left: 1.12rem;\n      margin-bottom: 0.12rem; \n    }\n  }\n\n  .align-end {\n    margin-left: auto;\n  }\n\n  .info-block {\n    display: flex;\n    font-size: 0.75rem;\n    line-height: 1rem;\n    width: 100%;\n    align-items: center;\n\n    &:not(:first-child) {\n      margin-top: 0.5rem;\n    }\n\n    .text-content {\n      .title {\n        font-weight: 600;\n      }\n    }\n  }\n\n  .donor {\n    display: flex;\n    font-size: 0.75rem;\n    line-height: 1rem;\n    align-items: center;\n    flex-grow: 1;\n    height: 2.5rem;\n\n    &:hover, &.highlighted {\n      box-shadow: 0px 6px 2px -2px rgba(0, 0, 0, 0.2), 0px 4px 4px 0px rgba(0, 0, 0, 0.14), 0px 2px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n\n    .hover-state {\n      width: 19.5rem !important;\n    }\n\n    .donor-info {\n      .title {\n        font-weight: 600;\n      }\n    }\n  }\n\n  .hoverable {\n    position: relative;\n  }\n\n  .hover-enabled {\n    position: relative;\n\n    &:hover {\n      .hover-state {\n        opacity: 1;\n      }\n    }\n  }\n\n  .hover-state {\n    transition: opacity 0.15s ease-in-out;\n    opacity: 0;\n    cursor: pointer;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    margin-left: -0.5rem;\n    align-items: center;\n    display: flex;\n    justify-content: flex-end;\n    padding-right: 1rem;\n    font-size: 0.75rem;\n\n    .hover-title {\n      font-weight: lighter;\n    }\n\n    .hover-icon {\n      margin-left: 1rem;\n    }\n  }\n\n  .default-padding {\n    padding: 0.5rem;\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .expanded-view {\n    margin-top: 0.25rem;\n    width: 85%;\n    margin-bottom: 0.25rem;\n  }\n\n  .d-flex {\n    display: flex;\n  }\n\n  .icon-size {\n    height: 1.5rem;\n    width: 1.5rem;\n    font-size: 1.5rem;\n  }\n\n  .selectable {\n    cursor: pointer;\n  }\n\n  .w-80 {\n    width: 80% !important;\n\n    .info-block {\n      .text-content {\n        .description {\n          width: 16rem !important;\n        }\n      }\n    }\n  }\n\n  .ml-5 {\n    margin-left: 0.5rem;\n  }\n\n  .mr-5 {\n    margin-right: 0.5rem;\n  }\n\n  .mt-05 {\n    margin-top: 0.5rem;\n  }\n\n  .description {\n    width: 17rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person              {{ tissueBlock.donor.label }}        {{ tissueBlock.donor.description }}                    DONOR      open_in_new        {{ expanded ? \"expand_less\" : \"expand_more\" }}              bubble_chart              {{ tissueBlock.label }}        {{ tissueBlock.description }}                    TISSUE BLOCK        open_in_new               1\"      [totalTissueSections]=\"tissueBlock.sectionCount\"      [tissueSections]=\"tissueBlock.sections\"    >     0\">                              bubble_chart              {{ section.label }}        {{ section.description }}                    TISSUE SECTION        open_in_new               0\">                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DonorCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DonorCardModule.html":{"url":"modules/DonorCardModule.html","title":"module - DonorCardModule","body":"\n                   \n\n\n\n\n    Modules\n    DonorCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DonorCardModule\n\n\n\ncluster_DonorCardModule_declarations\n\n\n\ncluster_DonorCardModule_imports\n\n\n\ncluster_DonorCardModule_exports\n\n\n\n\nDonorCardComponent\n\nDonorCardComponent\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nDonorCardModule -->\n\nDonorCardComponent->DonorCardModule\n\n\n\n\n\nDonorCardComponent \n\nDonorCardComponent \n\nDonorCardComponent  -->\n\nDonorCardModule->DonorCardComponent \n\n\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nDonorCardModule -->\n\nThumbnailCarouselModule->DonorCardModule\n\n\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nDonorCardModule -->\n\nTissueSectionVisModule->DonorCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DonorCardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThumbnailCarouselModule\n                        \n                        \n                            TissueSectionVisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DonorCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ThumbnailCarouselModule } from '../../../shared/components/thumbnail-carousel/thumbnail-carousel.module';\nimport { DonorCardComponent } from './donor-card.component';\nimport { TissueSectionVisModule } from './../tissue-section-vis/tissue-section-vis.module';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatCheckboxModule,\n    MatIconModule,\n\n    ThumbnailCarouselModule,\n    TissueSectionVisModule\n  ],\n  declarations: [DonorCardComponent],\n  exports: [DonorCardComponent]\n})\nexport class DonorCardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DrawerModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:33\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        selectionChanged\n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:59\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleOptions\n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:50\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        optionsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'invisible'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:38\n                        \n                    \n\n            \n                \n                    Determines if menu contents are visible (used for fade-in effect).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Creates an instance of dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   *\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.ga.event('selection_change', 'dropdown', `${this.label}:${value}`);\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ label }}\n      \n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 0.875rem;\n        border: none;\n\n        mat-select {\n          font-size: 1rem;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      transform: none;\n      height: 0.125rem;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #0000003e;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 9.5rem;\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  \n  .label {\n    padding-bottom: 0.063rem;\n  }\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ label }}                                          {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSliderPopover\n                            \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:touchstart\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:95\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:34\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:44\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:39\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:49\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:touchstart\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:touchstart(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSliderPopover\n                        \n                    \n                \n            \n            \n                \ncloseSliderPopover(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])@HostListener('document:touchstart', ['$event.target'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initializeSliderPopover\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:212\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:122\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:152\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyHigh\n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyLow\n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:226\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionsChanged\n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:136\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliderValueChanged\n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:201\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSliderPopover\n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:184\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contentsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'invisible'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:74\n                        \n                    \n\n            \n                \n                    Determines if slider contents are visible (used for fade-in effect).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:69\n                        \n                    \n\n            \n                \n                    Value bound to the slider's high pointer value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSliderInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:95\n                        \n                    \n\n            \n                \n                    Determines whether slider popover has been created and initialized.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSliderOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:54\n                        \n                    \n\n            \n                \n                    Determines whether slider popover is shown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lowValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:64\n                        \n                    \n\n            \n                \n                    Value bound to the slider's low pointer value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:59\n                        \n                    \n\n            \n                \n                    Slider options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OverlayRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:90\n                        \n                    \n\n            \n                \n                    Reference to the slider popover overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popoverElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('popover', {read: ElementRef, static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:29\n                        \n                    \n\n            \n                \n                    Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popoverPortal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkPortal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(CdkPortal, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:23\n                        \n                    \n\n            \n                \n                    Reference to the template for the slider popover.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:79\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   *\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   * @param ga Analytics service\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n    private readonly ga: GoogleAnalyticsService\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   *\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // eslint-disable-line\n  // eslint-disable-line\n  @HostListener('document:touchstart', ['$event.target']) // eslint-disable-line\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement?.nativeElement?.contains?.(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.ga.event('slider_range_change', 'dual_slider', `${this.label}:${lowValue}:${highValue}`);\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   *\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                @use 'sass:math';\n\n.slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n        font-size: 0.875rem;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      transform: none;\n      height: 0.125rem;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    padding-bottom: 0.25rem;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #0000003e;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 4.375rem;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 0.9375rem;\n    margin-bottom: 0.9375rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - math.div($pointer-size, 2);\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 2rem;\n\n    &.min {\n      margin-right: 1rem;\n    }\n\n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 0.875rem;\n    }\n\n    input {\n      border: none;\n      width: 1.75rem;\n      font-size: 1rem;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                openSpatialSearch\n                            \n                            \n                                refreshFilters\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                            \n                                providerFilters\n                            \n                            \n                                spatialSearchFilters\n                            \n                            \n                                technologyFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                            \n                                spatialSearchRemoved\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of filters content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:30\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:25\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        providerFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:40\n                            \n                        \n                \n                    \n                        List of providers in the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchFilters\n                    \n                \n                \n                    \n                        Type :     S[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:45\n                            \n                        \n                \n                    \n                        List of spatial searches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        technologyFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:35\n                            \n                        \n                \n                    \n                        List of technologies in the data\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:60\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:50\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:55\n                            \n                        \n                \n                    \n                        Emits when a spatial search is removed/deleted\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyButtonClick\n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:88\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSpatialSearch\n                        \n                    \n                \n            \n            \n                \nopenSpatialSearch()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshFilters\n                        \n                    \n                \n            \n            \n                \nrefreshFilters()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:96\n                \n            \n\n\n            \n                \n                    Refreshes all filter settings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(value, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:79\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SpatialSearchListItem } from 'ccf-shared';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { DEFAULT_FILTER } from '../../../core/store/data/data.state';\nimport {\n  SpatialSearchConfigBehaviorComponent,\n} from '../../../shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters: string[];\n\n  /**\n   * List of spatial searches\n   */\n  @Input() spatialSearchFilters: S[] = [];\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() readonly filtersChange = new EventEmitter>();\n\n  /**\n   * Emits when a spatial search is removed/deleted\n   */\n  @Output() readonly spatialSearchRemoved = new EventEmitter();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() readonly applyFilters = new EventEmitter>();\n\n  /**\n   * Creates an instance of filters content component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService, public dialog: MatDialog) { }\n\n  openSpatialSearch(): void {\n    this.dialog.open(SpatialSearchConfigBehaviorComponent);\n  }\n\n  /**\n   * Updates the filter object with a new key/value\n   *\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.ga.event('filter_update', 'filter_content', `${key}:${value}`);\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.ga.event('filters_applied', 'filter_content');\n    this.applyFilters.emit(this.filters);\n  }\n\n  /**\n   * Refreshes all filter settings\n   */\n  refreshFilters(): void {\n    this.filters = JSON.parse(JSON.stringify(DEFAULT_FILTER));\n    this.ga.event('filters_reset', 'filter_content');\n    this.filtersChange.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n 0\" class=\"filter spatial-locations\" [class.hidden]=\"hidden\">\n  \n  \n\n\n\n  Spatial Search\n  \n    APPLY FILTERS\n    \n      refresh\n    \n  \n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  &.assays {\n    .option {\n      margin-right: 0 rem;\n      width: 25%\n    }\n  }\n\n  margin-top: 2rem;\n}\n\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n\n  button {\n    border-width: 1px;\n    border-style: solid;\n  }\n\n}\n\n.button-container-end {\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n}\n\n.outline-button {\n  box-shadow: 0.1rem 0.1rem 0.2rem 0rem #0000001d;\n}\n\n.refresh-icon {\n  padding: 0.25rem;\n  border-radius: 0.25rem;\n  margin-right: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.6s;\n\n  .refresh {\n    cursor: pointer;\n    transition: .6s;\n    transition-property: background;\n  }\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n  padding-top: 1rem;\n\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5rem;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           0\" class=\"filter spatial-locations\" [class.hidden]=\"hidden\">      Spatial Search      APPLY FILTERS          refresh      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SpatialSearchListModule } from 'ccf-shared';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n\n    CheckboxModule,\n    DropdownModule,\n    DualSliderModule,\n    SpatialSearchListModule\n  ],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                            \n                                providerFilters\n                            \n                            \n                                spatialSearchFilters\n                            \n                            \n                                technologyFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                            \n                                spatialSearchRemoved\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:23\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:17\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        providerFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:33\n                            \n                        \n                \n                    \n                        List of providers in the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchFilters\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:38\n                            \n                        \n                \n                    \n                        List of spatial searches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        technologyFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:28\n                            \n                        \n                \n                    \n                        List of technologies in the data\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:43\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:48\n                            \n                        \n                \n                    \n                        Emits when a spatial search is removed/deleted\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:74\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeBox\n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:65\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFilterVisible\n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:58\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filtersVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:53\n                        \n                    \n\n            \n                \n                    Keeps track of whether or not the filters popover box is visible or not\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SpatialSearchListItem } from 'ccf-shared';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters: string[];\n\n  /**\n   * List of spatial searches\n   */\n  @Input() spatialSearchFilters: [] = [];\n\n  /**\n   * Emits the current filters\n   */\n  @Output() readonly filtersChange = new EventEmitter>();\n\n  /**\n   * Emits when a spatial search is removed/deleted\n   */\n  @Output() readonly spatialSearchRemoved = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   *\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  z-index: 5;\n  top: 1.2rem;\n  left: 1.48rem;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #00000058;\n\n  .popup-body {\n    padding: 1.5rem;\n    position: relative;\n  }\n\n  &.visible {\n    width: 35rem;\n    transition: width 0.2s ease-in-out;\n    border-width: 1px;\n\n    .popup-body {\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.2s;\n    }\n  }\n\n  &.hidden {\n    width: 0;\n    height: 0;\n    transition: all 0.2s ease-out;\n    transition-delay: 0.3s;\n    pointer-events: none;\n\n    .popup-body {\n      opacity: 0;\n      transition: opacity 0.2s ease-in-out;\n    }\n  }\n}\n\n.show-hide {\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n  padding: 0.5rem;\n  border-radius: 0.25rem;\n  transition: 0.6s;\n\n  .funnel {\n    // margin-top: 0.25rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/flat-node.ts\n        \n\n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                numResults\n                            \n                            \n                                    Optional\n                                opacity\n                            \n                            \n                                    Optional\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyTreeNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                    OntologyTreeNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        numResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        opacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyTreeNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:36\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:18\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:25\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyTreeNode } from 'ccf-database';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  visible?: boolean = true;\n\n  opacity?: number = 20;\n\n  numResults?: number;\n\n  /**\n   * Gets this node's label.\n   */\n  get label(): string {\n    return this.original.label;\n  }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyTreeNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyTreeNode, readonly level: number) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/core/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                homeUrl\n                            \n                            \n                                loggedIn\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:32\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:27\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loginDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:42\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:37\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Portal site\n   */\n  @Input() homeUrl: string;\n\n  @Input() loginDisabled: boolean;\n\n  @Input() logoTooltip: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() readonly refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() readonly downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n  \n  \n  LOGIN\n  LOGOUT\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .home {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n    padding: 0.25rem 0;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 0.125rem;\n    font-weight: 500;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 1rem/1.25rem Inter, sans-serif;\n  }\n\n  .disabled {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  LOGIN  LOGOUT'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer\n  ) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getArguments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:134\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMethodName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:114\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:74\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerIconImpl\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:84\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer\n  ) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deferred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Promise(resolve => {\n    this.resolve = resolve;\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                        \n                    \n\n            \n                \n                    Promise used to await on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether this state is true or false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:41\n                        \n                    \n\n            \n                \n                    Resolve function for the promise.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:46\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueOf\n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:65\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:56\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state('open, open-instant', style({\n        transform: 'none'\n      })),\n      state('closed', style({})),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-opened') // eslint-disable-line\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-expanded') // eslint-disable-line\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // eslint-disable-line\n  get expandedStateObj(): unknown {\n    return {\n      value: this.expandedState2, params: {\n        width: this.width, margin: this.measuredMargin,\n        margin2: this.margin2\n      }\n    };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(\n    messageService: MessageService,\n    cdr: ChangeDetectorRef,\n    private readonly element: ElementRef\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // eslint-disable-line\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // eslint-disable-line\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled': {\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/list-result.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rank\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                                \n                                        \n                                            tissueBlock\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueBlock\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissueBlock:     TissueBlockResult\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TissueBlockResult\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TissueBlockResult } from 'ccf-database';\n\nexport interface ListResult {\n  selected: boolean;\n  color?: string;\n  tissueBlock: TissueBlockResult;\n  rank?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListResultsState.html":{"url":"injectables/ListResultsState.html","title":"injectable - ListResultsState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListResultsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorAssignments\n                            \n                            \n                                    Private\n                                dataState\n                            \n                            \n                                    Readonly\n                                highlightedNodeId$\n                            \n                            \n                                    Readonly\n                                listResults$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deselectListResult\n                            \n                            \n                                highlightNode\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                selectListResult\n                            \n                            \n                                setListResults\n                            \n                            \n                                unHighlightNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataSourceService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deselectListResult\n                        \n                    \n                \n            \n            \n                \ndeselectListResult(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightNode\n                        \n                    \n                \n            \n            \n                \nhighlightNode(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:81\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectListResult\n                        \n                    \n                \n            \n            \n                \nselectListResult(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setListResults\n                        \n                    \n                \n            \n            \n                \nsetListResults(listResults: ListResult[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:58\n                \n            \n\n\n            \n                \n                    Sets the list results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    listResults\n                                    \n                                                ListResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The list of results to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unHighlightNode\n                        \n                    \n                \n            \n            \n                \nunHighlightNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorAssignments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorAssignmentState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:38\n                        \n                    \n\n            \n                \n                    Color assignments state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:35\n                        \n                    \n\n            \n                \n                    The data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedNodeId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        listResults$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('listResults'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:30\n                        \n                    \n\n            \n                \n                    Scene to display in the 3d Scene\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, tap } from 'rxjs/operators';\n\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State({\n  name: 'listResults',\n  defaults: {\n    listResults: []\n  }\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(pluck('listResults'), distinctUntilChanged());\n  readonly highlightedNodeId$ = this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged());\n\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([\n      this.dataState.tissueBlockData$,\n      this.colorAssignments.colorAssignments$\n    ]).pipe(\n      map(([tissueBlocks, colors]) => {\n        const topBlocks: ListResult[] = [];\n        const otherBlocks: ListResult[] = [];\n\n        for (const tissueBlock of tissueBlocks) {\n          const color = colors[tissueBlock.spatialEntityId];\n          if (color) {\n            topBlocks.push({\n              selected: true, color: color.color, tissueBlock, rank: color.rank\n            });\n          } else {\n            otherBlocks.push({\n              selected: false, tissueBlock\n            });\n          }\n        }\n\n        return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n      }),\n      tap(results => this.setListResults(results))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResultsStateModel.html":{"url":"interfaces/ListResultsStateModel.html","title":"interface - ListResultsStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListResultsStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            highlightedNodeId\n                                        \n                                \n                                \n                                        \n                                            listResults\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedNodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightedNodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listResults\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listResults:         ListResult[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListResult[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, tap } from 'rxjs/operators';\n\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State({\n  name: 'listResults',\n  defaults: {\n    listResults: []\n  }\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(pluck('listResults'), distinctUntilChanged());\n  readonly highlightedNodeId$ = this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged());\n\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([\n      this.dataState.tissueBlockData$,\n      this.colorAssignments.colorAssignments$\n    ]).pipe(\n      map(([tissueBlocks, colors]) => {\n        const topBlocks: ListResult[] = [];\n        const otherBlocks: ListResult[] = [];\n\n        for (const tissueBlock of tissueBlocks) {\n          const color = colors[tissueBlock.spatialEntityId];\n          if (color) {\n            topBlocks.push({\n              selected: true, color: color.color, tissueBlock, rank: color.rank\n            });\n          } else {\n            otherBlocks.push({\n              selected: false, tissueBlock\n            });\n          }\n        }\n\n        return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n      }),\n      tap(results => this.setListResults(results))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:50\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:50\n                        \n                    \n\n            \n                \n                    Counter used to give each message a unique id.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:83\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:93\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:103\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        nextMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:112\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:70\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:163\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:153\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                        \n                    \n\n            \n                \n                    The message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:130\n                        \n                    \n\n            \n                \n                    The message listener.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholderText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:29\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyTreeNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFormatter\n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:78\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:60\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:107\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBySynonymResult\n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:88\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortLexically\n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoCompleteOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:40\n                        \n                    \n\n            \n                \n                    Determines if autocomplete is open or close.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:45\n                        \n                    \n\n            \n                \n                    Observable which provides the filtered search results\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:34\n                        \n                    \n\n            \n                \n                    Instance of FormControl - tracks the value and validation status of an individual form control\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ontologyService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologySearchService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:53\n                        \n                    \n\n            \n                \n                    instance of searchService which provides all the search functionality\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { OntologyTreeNode } from 'ccf-database';\nimport { get, sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologySearchComponent implements OnInit {\n  @Input() placeholderText: string;\n\n  /**\n   * Output event-emitter which emits the id of the OntologyTreeNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() readonly selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   *\n   * @param ontologyService instance of searchService which provides all the search functionality\n   * @param ga Analytics service\n   */\n  constructor(public ontologyService: OntologySearchService, private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   *\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   *\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   *\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   *\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyTreeNode;\n    if (node) {\n      this.ga.event('search', 'ontology_search', node.id);\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    search\n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 100%;\n\n  .field {\n    width: 100%;\n    \n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 0.25rem 0.25rem 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n      \n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n          \n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-prefix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 0.25rem 0 0 0.25rem;\n      min-width: 2.5rem;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 0.125rem solid;\n  border-top: none;\n  border-radius: 0 0 0.25rem 0.25rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 23.75rem;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 23.75rem;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 0.25rem 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 0.25rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      search                                {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                            \n                                    Private\n                                treeModel\n                            \n                            \n                                    Private\n                                    Readonly\n                                treeModel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                    Private\n                                lookup\n                            \n                            \n                                setTreeModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:50\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:111\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyTreeNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyTreeNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildren\n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyTreeNode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:128\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OntologyTreeNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIndexOfMatch\n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:100\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        lookup\n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:63\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTreeModel\n                        \n                    \n                \n            \n            \n                \nsetTreeModel(treeModel: OntologyTreeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treeModel\n                                    \n                                            OntologyTreeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        nodes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.treeModel$.pipe(map(state => Object.values(state.nodes)))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:34\n                        \n                    \n\n            \n                \n                    All nodes in the ontology tree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        rootNode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.treeModel$.pipe(map(state => state.nodes[state.root]))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:37\n                        \n                    \n\n            \n                \n                    Root node of the ontology tree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        treeModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OntologyTreeModel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        treeModel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject(1);\n  private treeModel: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map(state => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyTreeNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-selection.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     OntologyTreeNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OntologyTreeNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyTreeNode } from 'ccf-database';\n\nexport interface OntologySelection {\n  location: OntologyTreeNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                OntologySearchService\n                \n            \n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                header\n                            \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                placeholderText\n                            \n                            \n                                termData\n                            \n                            \n                                treeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        treeModel\n                    \n                \n                \n                    \n                        Type :     OntologyTreeModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:38\n                            \n                        \n                \n                    \n                        The ontology tree model to display\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyTreeNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:75\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ontologySearchService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologySearchService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                        \n                    \n\n            \n                \n                    Service for searching the ontology.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologyTreeComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(OntologyTreeComponent, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                        \n                    \n\n            \n                \n                    View child of search component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\n\nimport { OntologySelection } from '../../../core/models/ontology-selection';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss'],\n  providers: [OntologySearchService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologySelectionComponent implements OnChanges {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * The ontology tree model to display\n   */\n  @Input() treeModel: OntologyTreeModel;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  @Input() header: boolean;\n  @Input() placeholderText: string;\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() readonly ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   *\n   * @param ontologySearchService Service for searching the ontology.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('treeModel' in changes && this.treeModel) {\n      this.ontologySearchService.setTreeModel(this.treeModel);\n    }\n  }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   *\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyTreeNode): void {\n    const nodes = this.treeModel?.nodes ?? {};\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologySelectionModule_OntologySelectionComponent_providers\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchService\n\nOntologySearchService\n\nOntologySelectionComponent -->\n\nOntologySearchService->OntologySelectionComponent\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\nimport { OpacitySliderModule } from 'ccf-shared';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OpacitySliderModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleHover\n                            \n                            \n                                handleLinkClick\n                            \n                            \n                                handleSelection\n                            \n                            \n                                handleUnhover\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                header\n                            \n                            \n                                highlighted\n                            \n                            \n                                listResults\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemHovered\n                            \n                            \n                                itemUnhovered\n                            \n                            \n                                linkClicked\n                            \n                            \n                                listResultDeselected\n                            \n                            \n                                listResultSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:64\n                            \n                        \n\n                \n                    \n                            Creates an instance of results browser component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :     Immutable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:29\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlighted\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResults\n                    \n                \n                \n                    \n                        Type :         Immutable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:24\n                            \n                        \n                \n                    \n                        Input array of List Results to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:34\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemUnhovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        linkClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:44\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResultDeselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:54\n                            \n                        \n                \n                    \n                        Output emitting the link result deselected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResultSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:49\n                            \n                        \n                \n                    \n                        Output emitting the link result selected\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleHover\n                        \n                    \n                \n            \n            \n                \nhandleHover(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleLinkClick\n                        \n                    \n                \n            \n            \n                \nhandleLinkClick(link: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:93\n                \n            \n\n\n            \n                \n                    Notifies on link click\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the link clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSelection\n                        \n                    \n                \n            \n            \n                \nhandleSelection(result: Immutable, selected: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:79\n                \n            \n\n\n            \n                \n                    Notifies listeners when a selection/deselection is made\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the list result\n\n                                    \n                                \n                                \n                                    selected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether to select or deselect the result\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUnhover\n                        \n                    \n                \n            \n            \n                \nhandleUnhover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onScroll\n                        \n                    \n                \n            \n            \n                \nonScroll(event: UIEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:102\n                \n            \n\n\n            \n                \n                    Handles the scroll event to detect when scroll is at the bottom.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            UIEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scroll event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        atScrollBottom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:64\n                        \n                    \n\n            \n                \n                    Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AggregateResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ListResult } from '../../../core/models/list-result';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResultsBrowserComponent {\n  /**\n   * Input array of List Results to display\n   */\n  @Input() listResults: Immutable;\n\n  /**\n   * Input used to add a list of stats at the top the results browser\n   */\n  @Input() aggregateData: Immutable;\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component\n   */\n  @Input() resultLabel: string;\n\n  @Input() highlighted: string;\n\n  @Input() header: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() readonly linkClicked = new EventEmitter();\n\n  /**\n   * Output emitting the link result selected\n   */\n  @Output() readonly listResultSelected = new EventEmitter>();\n\n  /**\n   * Output emitting the link result deselected\n   */\n  @Output() readonly listResultDeselected = new EventEmitter>();\n\n  @Output() readonly itemHovered = new EventEmitter();\n\n  @Output() readonly itemUnhovered = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Creates an instance of results browser component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Notifies listeners when a selection/deselection is made\n   *\n   * @param result the list result\n   * @param selected whether to select or deselect the result\n   */\n  handleSelection(result: Immutable, selected: boolean): void {\n    this.ga.event('list_result_selected', 'results_browser', this.resultLabel, +selected);\n    if (selected) {\n      this.listResultSelected.next(result);\n    } else {\n      this.listResultDeselected.next(result);\n    }\n  }\n\n  /**\n   * Notifies on link click\n   *\n   * @param link the link clicked\n   */\n  handleLinkClick(link: string): void {\n    this.linkClicked.emit(link);\n  }\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: UIEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 3rem);\n  padding: 0 1.5rem 1.5rem 1.5rem;\n\n  .stat-box {\n    margin-bottom: 1.5rem;\n    line-height: 1.25;\n    min-height: 7.75rem;\n\n    #title {\n      font-size: 1.25rem;\n      margin-bottom: 0.75rem;\n    }\n\n    .stat-row {\n      display: flex;\n      flex-direction: row;\n\n      .stat-value {\n        margin-right: 1rem;\n        width: 5.5rem;\n        text-align: right;\n        font-weight: 600;\n      }\n      .stat-label {\n        font-weight: 300;\n      }\n    }\n  }\n\n  .results-browser-list {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    scrollbar-width: thin;\n    padding-right: .5rem;\n    height: calc(100vh - 20rem);\n\n    &.header-hidden {\n      height: calc(100vh - 16rem);\n    }\n\n    .browser-item-container {\n      width: 100%;\n    }\n  }\n\n  .scroll-gradient {\n    position: absolute;\n    height: 3rem;\n    width: 95%;\n    bottom: 0;\n    pointer-events: none;\n\n\n    &.hidden {\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nResultsBrowserModule -->\n\nDonorCardModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DonorCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserComponent } from './results-browser.component';\nimport { DonorCardModule } from '../donor-card/donor-card.module';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    DonorCardModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorAssignments\n                            \n                            \n                                    Private\n                                dataState\n                            \n                            \n                                    Readonly\n                                highlightedId$\n                            \n                            \n                                    Private\n                                listResults\n                            \n                            \n                                    Readonly\n                                referenceOrgans$\n                            \n                            \n                                    Readonly\n                                scene$\n                            \n                            \n                                    Readonly\n                                selectedReferenceOrgans$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngxsOnInit\n                            \n                            \n                                sceneNodeClicked\n                            \n                            \n                                sceneNodeHovered\n                            \n                            \n                                sceneNodeUnhover\n                            \n                            \n                                setReferenceOrgans\n                            \n                            \n                                setScene\n                            \n                            \n                                setSelectedReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataSourceService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:65\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:136\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeClicked\n                        \n                    \n                \n            \n            \n                \nsceneNodeClicked(undefined: NodeClickEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:114\n                \n            \n\n\n            \n                \n                    Handle scene node clicks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            NodeClickEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeHovered\n                        \n                    \n                \n            \n            \n                \nsceneNodeHovered(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeUnhover\n                        \n                    \n                \n            \n            \n                \nsceneNodeUnhover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReferenceOrgans\n                        \n                    \n                \n            \n            \n                \nsetReferenceOrgans(referenceOrgans: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:95\n                \n            \n\n\n            \n                \n                    Sets the reference organs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    referenceOrgans\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reference organs available\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScene\n                        \n                    \n                \n            \n            \n                \nsetScene(scene: SpatialSceneNode[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:105\n                \n            \n\n\n            \n                \n                    Sets the scene\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active scene to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedReferenceOrgans\n                        \n                    \n                \n            \n            \n                \nsetSelectedReferenceOrgans(selectedReferenceOrgans: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:85\n                \n            \n\n\n            \n                \n                    Sets the selected reference organs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedReferenceOrgans\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorAssignments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorAssignmentState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:63\n                        \n                    \n\n            \n                \n                    Color assignments state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:60\n                        \n                    \n\n            \n                \n                    The data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('highlightedId'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListResultsState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        referenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:51\n                        \n                    \n\n            \n                \n                    Available Reference Organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('scene'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:55\n                        \n                    \n\n            \n                \n                    Scene to display in the 3d Scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedReferenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:53\n                        \n                    \n\n            \n                \n                    Selected Reference Organs\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set(['Skin', 'Heart', 'Kidney', 'Spleen']);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {}\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged());\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged());\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(pluck('scene'), distinctUntilChanged());\n\n  readonly highlightedId$ = this.state$.pipe(pluck('highlightedId'), distinctUntilChanged());\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  private listResults: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n      && node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n\n    // Initialize reference organ info\n    this.dataService.getReferenceOrgans().pipe(\n      map(refOrgans => {\n        const organIds = new Set(refOrgans.map(o => o.representation_of));\n        return ALL_POSSIBLE_ORGANS\n          .filter(organ => organIds.has(organ.id))\n          .map(organ => ({ ...organ, disabled: false, numResults: 0 }));\n      }),\n      take(1),\n      tap(organs => {\n        this.setReferenceOrgans(organs);\n        this.setSelectedReferenceOrgans(organs.filter(organ => DEFAULT_SELECTED_ORGANS.has(organ.organ)));\n      })\n    ).subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$\n    ]).pipe(\n      map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n        const activeOrgans = new Set(selectedOrgans.map(o => o.id));\n        const refOrgans = new Set(refOrganData.filter(o => activeOrgans.has(o.representation_of)).map(o => o['@id']));\n        return scene.filter(node =>\n          (node.ccf_annotations?.some?.(tag => activeOrgans.has(tag))) ||\n          (node.reference_organ && refOrgans.has(node.reference_organ))\n        ).map((node): SpatialSceneNode =>\n          node.entityId && (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id']) ?\n            ({\n              ...node,\n              color: highlightedNodeId === node['@id'] ?\n                [30, 136, 229, 255] :\n                colors[node['@id']].rgba as [number, number, number, number]\n            }) : node\n        );\n      }),\n      tap(scene => this.setScene(scene))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructureSettings\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            highlightedId\n                                        \n                                \n                                \n                                        \n                                            referenceOrgans\n                                        \n                                \n                                \n                                        \n                                            scene\n                                        \n                                \n                                \n                                        \n                                            selectedAnatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            selectedReferenceOrgans\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructureSettings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructureSettings:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referenceOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referenceOrgans:     OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scene\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scene:     SpatialSceneNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialSceneNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedAnatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedAnatomicalStructures:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedReferenceOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedReferenceOrgans:     OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set(['Skin', 'Heart', 'Kidney', 'Spleen']);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {}\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged());\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged());\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(pluck('scene'), distinctUntilChanged());\n\n  readonly highlightedId$ = this.state$.pipe(pluck('highlightedId'), distinctUntilChanged());\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  private listResults: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n      && node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n\n    // Initialize reference organ info\n    this.dataService.getReferenceOrgans().pipe(\n      map(refOrgans => {\n        const organIds = new Set(refOrgans.map(o => o.representation_of));\n        return ALL_POSSIBLE_ORGANS\n          .filter(organ => organIds.has(organ.id))\n          .map(organ => ({ ...organ, disabled: false, numResults: 0 }));\n      }),\n      take(1),\n      tap(organs => {\n        this.setReferenceOrgans(organs);\n        this.setSelectedReferenceOrgans(organs.filter(organ => DEFAULT_SELECTED_ORGANS.has(organ.organ)));\n      })\n    ).subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$\n    ]).pipe(\n      map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n        const activeOrgans = new Set(selectedOrgans.map(o => o.id));\n        const refOrgans = new Set(refOrganData.filter(o => activeOrgans.has(o.representation_of)).map(o => o['@id']));\n        return scene.filter(node =>\n          (node.ccf_annotations?.some?.(tag => activeOrgans.has(tag))) ||\n          (node.reference_organ && refOrgans.has(node.reference_organ))\n        ).map((node): SpatialSceneNode =>\n          node.entityId && (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id']) ?\n            ({\n              ...node,\n              color: highlightedNodeId === node['@id'] ?\n                [30, 136, 229, 255] :\n                colors[node['@id']].rgba as [number, number, number, number]\n            }) : node\n        );\n      }),\n      tap(scene => this.setScene(scene))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayLabel\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     OntologyTreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OntologyTreeNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyTreeNode, provides data associated with a search result\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject(1);\n  private treeModel: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map(state => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyTreeNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchConfigBehaviorComponent.html":{"url":"components/SpatialSearchConfigBehaviorComponent.html","title":"component - SpatialSearchConfigBehaviorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchConfigBehaviorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-config-behavior\n            \n\n            \n                styleUrls\n                ./spatial-search-config-behavior.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-config-behavior.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredOrgans\n                            \n                            \n                                    Readonly\n                                itemSelected\n                            \n                            \n                                    Readonly\n                                organChange\n                            \n                            \n                                organs\n                            \n                            \n                                    Optional\n                                selectedOrgan\n                            \n                            \n                                sex\n                            \n                            \n                                    Readonly\n                                sexChange\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                            \n                                close\n                            \n                            \n                                filterOrgans\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                updateOrgan\n                            \n                            \n                                updateSex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, scene: SceneState, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                        SceneState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClicked\n                        \n                    \n                \n            \n            \n                \nbuttonClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterOrgans\n                        \n                    \n                \n            \n            \n                \nfilterOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrgan\n                        \n                    \n                \n            \n            \n                \nupdateOrgan(organ?: OrganInfo)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                            OrganInfo\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSex\n                        \n                    \n                \n            \n            \n                \nupdateSex(sex: Sex)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sex\n                                    \n                                                Sex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrganInfo[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemSelected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrganInfo[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedOrgan\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrganInfo\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                \n                    \n                        Default value : 'male'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, OnDestroy } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OrganInfo } from 'ccf-shared';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nimport { SceneState } from '../../../core/store/scene/scene.state';\nimport { Sex, SpatialSearchConfigComponent } from '../spatial-search-config/spatial-search-config.component';\n\n\n@Component({\n  selector: 'ccf-spatial-search-config-behavior',\n  templateUrl: './spatial-search-config-behavior.component.html',\n  styleUrls: ['./spatial-search-config-behavior.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchConfigBehaviorComponent implements OnDestroy {\n\n  organs: OrganInfo[];\n\n  selectedOrgan?: OrganInfo;\n\n  sex: Sex = 'male';\n\n  readonly sexChange = new EventEmitter();\n\n  readonly organChange = new EventEmitter();\n\n  readonly itemSelected = new EventEmitter();\n\n  filteredOrgans: OrganInfo[];\n\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    scene: SceneState,\n    private readonly dialogRef: MatDialogRef\n  ) {\n    const sub = scene.referenceOrgans$.subscribe((organs: OrganInfo[]) => {\n      this.organs = organs;\n      this.filterOrgans();\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  updateSex(sex: Sex): void {\n    this.sex = sex;\n    this.filterOrgans();\n    this.sexChange.emit(this.sex);\n  }\n\n  updateOrgan(organ?: OrganInfo): void {\n    this.selectedOrgan = organ;\n    this.organChange.emit(this.selectedOrgan);\n  }\n\n  buttonClicked(): void {\n    if (this.selectedOrgan) {\n      this.itemSelected.emit({ sex: this.sex, organ: this.selectedOrgan });\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  filterOrgans(): void {\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    this.filteredOrgans = this.organs.filter(organ => organ.hasSex || organ.sex === this.sex);\n    if (this.selectedOrgan && !this.filteredOrgans.includes(this.selectedOrgan)) {\n      this.updateOrgan(undefined);\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./spatial-search-config-behavior.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchConfigBehaviorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchConfigBehaviorModule.html":{"url":"modules/SpatialSearchConfigBehaviorModule.html","title":"module - SpatialSearchConfigBehaviorModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchConfigBehaviorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchConfigBehaviorModule\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_exports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_imports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_declarations\n\n\n\n\nSpatialSearchConfigBehaviorComponent\n\nSpatialSearchConfigBehaviorComponent\n\n\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigBehaviorComponent->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent  -->\n\nSpatialSearchConfigBehaviorModule->SpatialSearchConfigBehaviorComponent \n\n\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigModule->SpatialSearchConfigBehaviorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchConfigBehaviorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SpatialSearchConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchConfigBehaviorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { SpatialSearchConfigModule } from '../spatial-search-config/spatial-search-config.module';\nimport { SpatialSearchConfigBehaviorComponent } from './spatial-search-config-behavior.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SpatialSearchConfigModule,\n    MatDialogModule\n  ],\n  declarations: [SpatialSearchConfigBehaviorComponent],\n  exports: [SpatialSearchConfigBehaviorComponent]\n})\nexport class SpatialSearchConfigBehaviorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchConfigComponent.html":{"url":"components/SpatialSearchConfigComponent.html","title":"component - SpatialSearchConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-config\n            \n\n            \n                styleUrls\n                ./spatial-search-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-config.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                organs\n                            \n                            \n                                selectedOrgan\n                            \n                            \n                                sex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                            \n                                closeDialog\n                            \n                            \n                                updateOrgan\n                            \n                            \n                                updateSex\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        organs\n                    \n                \n                \n                    \n                        Type :     OrganInfo[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedOrgan\n                    \n                \n                \n                    \n                        Type :     OrganInfo\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sex\n                    \n                \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeDialog\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateOrgan\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateSex\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:22\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spatial-search-config\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-config'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-config'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { OrganInfo } from 'ccf-shared';\n\n\nexport type Sex = 'male' | 'female';\n\n@Component({\n  selector: 'ccf-spatial-search-config',\n  templateUrl: './spatial-search-config.component.html',\n  styleUrls: ['./spatial-search-config.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchConfigComponent {\n  @HostBinding('class') readonly className = 'ccf-spatial-search-config';\n\n  @Input() organs: OrganInfo[];\n\n  @Input() selectedOrgan?: OrganInfo;\n\n  @Input() sex: Sex;\n\n  @Output() readonly updateSex = new EventEmitter();\n\n  @Output() readonly updateOrgan = new EventEmitter();\n\n  @Output() readonly buttonClicked = new EventEmitter();\n\n  @Output() readonly closeDialog = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    Configure Spatial Search\n    \n      info\n    \n  \n  \n    close\n  \n\n\n\n  Donor Sex: \n  \n    Male\n    Female\n  \n\n\n\n  Select an organ\n  \n    Organs\n    \n      \n        {{organ.name}}\n      \n    \n  \n\n\nContinue\n\n    \n\n    \n                \n                    ./spatial-search-config.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 2rem;\n  gap: 2rem;\n  width: 30.5rem;\n  height: 21.5rem;\n  box-shadow: 0px 25rem 25rem rgba(0, 0, 0, 0.16);\n  border-radius: .25rem;\n  font-size: 1rem;\n\n  .button {\n    cursor: pointer;\n  }\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    font-size: 1.25rem;\n  \n    .header-left {\n      display: flex;\n      align-items: center;\n\n      .title {\n        margin-right: 1rem;\n      }\n    }\n\n    button {\n      padding: 0;\n      background: none;\n      border: none;\n      cursor: pointer;\n      outline: none;\n      border-radius: 0.25rem;\n      transition: 0.6s;\n    }\n  }\n\n  .sex-toggle {\n    display: flex;\n\n    .label, .radio {\n      margin-right: 2rem;\n    }\n  }\n\n  .organ-selector {\n    ::ng-deep .mat-form-field-wrapper {\n      padding-bottom: 0;\n\n      .mat-form-field-underline {\n        bottom: 0rem;\n        height: 0.125rem;\n      }\n    }\n  }\n\n  .continue-button {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: .25rem 1rem;\n    width: 14rem;\n    height: 2rem;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: .125rem;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.16);\n\n    &.disabled {\n      pointer-events: none;\n      opacity: .5;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Configure Spatial Search          info            close    Donor Sex:       Male    Female    Select an organ      Organs                  {{organ.name}}            Continue'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchConfigModule.html":{"url":"modules/SpatialSearchConfigModule.html","title":"module - SpatialSearchConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchConfigModule\n\n\n\ncluster_SpatialSearchConfigModule_declarations\n\n\n\ncluster_SpatialSearchConfigModule_exports\n\n\n\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigComponent\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule -->\n\nSpatialSearchConfigComponent->SpatialSearchConfigModule\n\n\n\n\n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent  -->\n\nSpatialSearchConfigModule->SpatialSearchConfigComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchConfigComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchConfigComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { SpatialSearchConfigComponent } from './spatial-search-config.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule,\n    MatIconModule,\n    MatRadioModule,\n    MatButtonModule\n  ],\n  declarations: [SpatialSearchConfigComponent],\n  exports: [SpatialSearchConfigComponent]\n})\nexport class SpatialSearchConfigModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spinner-overlay\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spinner-overlay'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spinner-overlay'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 99;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../../../environments/environment';\nimport { ColorAssignmentState } from './color-assignment/color-assignment.state';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ListResultsState } from './list-results/list-results.state';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { SceneState } from './scene/scene.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                element\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyThemeClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:83\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:39\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:21\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:71\n                \n            \n\n\n            \n                \n                    Binds theming service to a component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            ElementRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:60\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:48\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:16\n                        \n                    \n\n            \n                \n                    Default theme class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:18\n                        \n                    \n\n            \n                \n                    Currently active theme class.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, ElementRef, Inject, Injector, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element: ElementRef;\n  private injector: Injector;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailCarouselComponent.html":{"url":"components/ThumbnailCarouselComponent.html","title":"component - ThumbnailCarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThumbnailCarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n\n\n\n    \n        Description\n    \n    \n        Carousel containing sample thumbnails in expanded donor cards\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-thumbnail-carousel\n            \n\n            \n                styleUrls\n                ./thumbnail-carousel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail-carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Readonly\n                                config\n                            \n                            \n                                    Readonly\n                                navigation\n                            \n                            \n                                    Readonly\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                linkClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    prevButtonId\n                                \n                                \n                                    nextButtonId\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     DatasetResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:34\n                            \n                        \n                \n                    \n                        Items to show in the carousel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        linkClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:39\n                            \n                        \n                \n                    \n                        Outputs the result whose link was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-thumbnail-carousel\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-thumbnail-carousel'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:29\n                        \n                    \n\n            \n                \n                    Primary css class selector\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n            \n                \nitemId(_index: number, item: DatasetResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:89\n                \n            \n\n\n            \n                \n                    Extract a unique identifier for an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                            DatasetResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        An unique identifier\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-thumbnail-carousel'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:29\n                        \n                    \n\n            \n                \n                    Primary css class selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SwiperOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:63\n                        \n                    \n\n            \n                \n                    Swiper configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        navigation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NavigationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:75\n                        \n                    \n\n            \n                \n                    Navigation configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : nextUid()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:44\n                        \n                    \n\n            \n                \n                    Per instance unique identifier\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        prevButtonId\n                    \n                \n\n                \n                    \n                        getprevButtonId()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:49\n                                \n                            \n                    \n                        \n                                HTML id for previous slide button\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextButtonId\n                    \n                \n\n                \n                    \n                        getnextButtonId()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:56\n                                \n                            \n                    \n                        \n                                HTML id for next slide button\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { DatasetResult } from 'ccf-database';\nimport { SwiperOptions } from 'swiper';\nimport { NavigationOptions } from 'swiper/types';\n\n// Returns a unique identifier\nconst nextUid = (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})();\n\n\n/**\n * Carousel containing sample thumbnails in expanded donor cards\n */\n@Component({\n  selector: 'ccf-thumbnail-carousel',\n  templateUrl: './thumbnail-carousel.component.html',\n  styleUrls: ['./thumbnail-carousel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThumbnailCarouselComponent {\n  /**\n   * Primary css class selector\n   */\n  @HostBinding('class') readonly className = 'ccf-thumbnail-carousel';\n\n  /**\n   * Items to show in the carousel\n   */\n  @Input() data: DatasetResult[];\n\n  /**\n   * Outputs the result whose link was clicked\n   */\n  @Output() readonly linkClicked = new EventEmitter();\n\n  /**\n   * Per instance unique identifier\n   */\n  readonly uid = nextUid();\n\n  /**\n   * HTML id for previous slide button\n   */\n  get prevButtonId(): string {\n    return `ccf-thumbnail-carousel-prev-button-${this.uid}`;\n  }\n\n  /**\n   * HTML id for next slide button\n   */\n  get nextButtonId(): string {\n    return `ccf-thumbnail-carousel-next-button-${this.uid}`;\n  }\n\n  /**\n   * Swiper configuration\n   */\n  readonly config: SwiperOptions = {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true\n  };\n\n  /**\n   * Navigation configuration\n   */\n  readonly navigation: NavigationOptions = {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId\n  };\n\n  /**\n   * Extract a unique identifier for an item\n   *\n   * @param _index Unused\n   * @param item The item\n   * @returns An unique identifier\n   */\n  itemId(_index: number, item: DatasetResult): string {\n    return item.thumbnail;\n  }\n}\n\n    \n\n    \n        \n  \n    navigate_before\n  \n\n\n\n  \n    \n      \n        \n          {{ item.technology }}\n        \n        \n          DATA\n          open_in_new\n        \n      \n    \n  \n\n\n\n  \n    \n    \n\n    navigate_next\n  \n\n\n    \n\n    \n                \n                    ./thumbnail-carousel.component.scss\n                \n                :host {\n  display: flex;\n\n  .swiper {\n    flex-grow: 1;\n    padding-bottom: 0.3125rem;\n\n    ::ng-deep .swiper-slide {\n      width: 3.75rem;\n      height: 2.8125rem;\n    }\n  }\n\n  .prev, .next {\n    display: flex;\n    align-items: center;\n\n    height: 2.8125rem;\n\n    button {\n      width: 1.5rem;\n      height: 1.5rem;\n      line-height: 1.5rem;\n    }\n\n    .fade {\n      position: absolute;\n      top: -0.625rem;\n      left: -2rem;\n      z-index: 10;\n\n      width: 2rem;\n      height: 2.8125rem + 0.3125rem;\n\n      opacity: 1;\n      transition: opacity ease-in-out 0.3s;\n\n      pointer-events: none;\n    }\n\n    .swiper-button-disabled, .swiper-button-lock {\n      cursor: default;\n      pointer-events: none;\n\n      .fade {\n        opacity: 0;\n      }\n    }\n  }\n\n  .slide {\n    position: relative;\n    width: 100%;\n    height: 100%;\n\n    .thumbnail {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-size: cover;\n\n      position: relative;\n      width: calc(100% - 2 * 0.125rem);\n      height: calc(100% - 2 * 0.125rem);\n\n      border-style: solid;\n      border-width: 0.125rem;\n      border-radius: 0.25rem;\n\n      background-origin: padding-box;\n      background-clip: padding-box;\n\n      font-size: 0.875rem;\n      font-weight: bold;\n\n      &:after {\n        content: \"\";\n\n        position: absolute;\n        bottom: -0.125rem;\n        left: -0.125rem;\n        width: 0.125rem;\n        height: 0.125rem;\n      }\n    }\n\n    .link {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n\n      opacity: 0;\n      transition: opacity ease-in-out 0.3s;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);\n\n      font-size: 0.75rem;\n      line-height: 0.75rem;\n\n      &,\n      &:link,\n      &:visited,\n      &:hover,\n      &:focus,\n      &:active {\n        cursor: pointer;\n        text-decoration: none;\n      }\n    }\n\n    &:hover .link {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      navigate_before                                {{ item.technology }}                          DATA          open_in_new                                  navigate_next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailCarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThumbnailCarouselModule.html":{"url":"modules/ThumbnailCarouselModule.html","title":"module - ThumbnailCarouselModule","body":"\n                   \n\n\n\n\n    Modules\n    ThumbnailCarouselModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThumbnailCarouselModule\n\n\n\ncluster_ThumbnailCarouselModule_declarations\n\n\n\ncluster_ThumbnailCarouselModule_exports\n\n\n\n\nThumbnailCarouselComponent\n\nThumbnailCarouselComponent\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule -->\n\nThumbnailCarouselComponent->ThumbnailCarouselModule\n\n\n\n\n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent  -->\n\nThumbnailCarouselModule->ThumbnailCarouselComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ThumbnailCarouselComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ThumbnailCarouselComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SwiperModule } from 'swiper/angular';\nimport { Navigation, Swiper } from 'swiper/core';\n\nimport { ThumbnailCarouselComponent } from './thumbnail-carousel.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n\n    SwiperModule\n  ],\n  declarations: [ThumbnailCarouselComponent],\n  exports: [ThumbnailCarouselComponent]\n})\nexport class ThumbnailCarouselModule {\n  constructor() {\n    // Install swiper modules\n    Swiper.use([Navigation]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissueSectionVisComponent.html":{"url":"components/TissueSectionVisComponent.html","title":"component - TissueSectionVisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TissueSectionVisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissue-section-vis\n            \n\n            \n                styleUrls\n                ./tissue-section-vis.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissue-section-vis.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tissueSectionExists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tissueSections\n                            \n                            \n                                totalTissueSections\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tissueSections\n                    \n                \n                \n                    \n                        Type :     TissueSectionResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:18\n                            \n                        \n                \n                    \n                        Tissue section data, used to determine which tissues to color on the graph\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalTissueSections\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:15\n                            \n                        \n                \n                    \n                        The total numebr of tissue sections, used for end label\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tissue-section-vis\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tissue-section-vis'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        tissueSectionExists\n                        \n                    \n                \n            \n            \n                \ntissueSectionExists(sectionNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:21\n                \n            \n\n\n            \n                \n                    Returns whether or not the given section number exists in the tissueSection array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectionNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tissue-section-vis'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { TissueSectionResult } from 'ccf-database';\n\n@Component({\n  selector: 'ccf-tissue-section-vis',\n  templateUrl: './tissue-section-vis.component.html',\n  styleUrls: ['./tissue-section-vis.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TissueSectionVisComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-tissue-section-vis';\n\n  /** The total numebr of tissue sections, used for end label */\n  @Input() totalTissueSections!: number;\n\n  /** Tissue section data, used to determine which tissues to color on the graph */\n  @Input() tissueSections!: TissueSectionResult[];\n\n  /** Returns whether or not the given section number exists in the tissueSection array */\n  tissueSectionExists(sectionNumber: number): boolean {\n    if (this.tissueSections.filter(section => section.sectionNumber === sectionNumber).length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n    \n\n    \n        0\n\n  \n  \n\n{{ totalTissueSections }}\n    \n\n    \n                \n                    ./tissue-section-vis.component.scss\n                \n                :host {\n  width: 100%;\n  height: 2.5rem;\n  padding: .5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  display: flex;\n\n  .container {\n    margin-right: .5rem;\n    margin-left: .5rem;\n    flex-grow: 1;\n    display: flex;\n    position: relative;\n    justify-content: space-evenly;\n\n    .line-tick {\n      height: 100%;\n      width: 1px;\n      z-index: 2;\n    }\n\n    .x-axis {\n      width: 100%;\n      height: 2px;\n      position: absolute;\n      top: calc(50% - 1px);\n      right: 0;\n      z-index: 1;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '0    {{ totalTissueSections }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissueSectionVisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissueSectionVisModule.html":{"url":"modules/TissueSectionVisModule.html","title":"module - TissueSectionVisModule","body":"\n                   \n\n\n\n\n    Modules\n    TissueSectionVisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TissueSectionVisModule\n\n\n\ncluster_TissueSectionVisModule_declarations\n\n\n\ncluster_TissueSectionVisModule_exports\n\n\n\n\nTissueSectionVisComponent\n\nTissueSectionVisComponent\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nTissueSectionVisModule -->\n\nTissueSectionVisComponent->TissueSectionVisModule\n\n\n\n\n\nTissueSectionVisComponent \n\nTissueSectionVisComponent \n\nTissueSectionVisComponent  -->\n\nTissueSectionVisModule->TissueSectionVisComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissueSectionVisComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TissueSectionVisComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TissueSectionVisComponent } from './tissue-section-vis.component';\n\n\n\n@NgModule({\n  declarations: [TissueSectionVisComponent],\n  imports: [CommonModule],\n  exports: [TissueSectionVisComponent]\n})\nexport class TissueSectionVisModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:85\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:65\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:75\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:97\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:40\n                        \n                    \n\n            \n                \n                    Whether the owning drawer is opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                        \n                    \n\n            \n                \n                    Position of the owning side drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:27\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      ([expand, collapse] = [collapse, expand]);\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: 0.6s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n    transition: all 0.5s;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Viewer for tissue samples\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                loading\n                            \n                            \n                                safeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:21\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-viewer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-viewer'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeResourceUrl | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:29\n                        \n                    \n\n            \n                \n                    Sanitized url\nNOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output, SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n\n/**\n * Viewer for tissue samples\n */\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements OnChanges {\n  @HostBinding('class') className = 'ccf-viewer';\n\n  @Input() url = '';\n\n  @Output() readonly closed = new EventEmitter();\n\n  loading = true;\n\n  /**\n   * Sanitized url\n   * NOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n   */\n  safeUrl: SafeResourceUrl | null = null;\n\n  constructor(private readonly sanitizer: DomSanitizer) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('url' in changes) {\n      this.updateUrl();\n    }\n  }\n\n  private updateUrl(): void {\n    const { sanitizer, url } = this;\n    this.safeUrl = null;\n    if (url) {\n      this.safeUrl = sanitizer.bypassSecurityTrustResourceUrl(url);\n      this.loading = true;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    launch\n    Open in Portal\n  \n  \n    clear\n  \n\n\n\n  \n  Loading External Site\n\n\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  display: block;\n\n  .toolbar {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    width: 100%;\n    height: 1.5rem;\n\n    .launch {\n      margin-right: 3.5rem;\n\n      &.mat-button-disabled {\n        cursor: not-allowed;\n      }\n\n      .icon {\n        margin-right: 0.25rem;\n      }\n    }\n\n    .close {\n      min-width: 0;\n      padding: 0;\n      line-height: 1.5rem;\n      border-radius: 0;\n    }\n  }\n\n  .overlay {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    top: 1.5rem;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    .spinner {\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  .frame {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      launch    Open in Portal        clear      Loading External Site'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/viewer/viewer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerDataSourceService.html":{"url":"injectables/WorkerDataSourceService.html","title":"injectable - WorkerDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    WorkerCCFDatabaseDataSourceService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createWorker\n                            \n                            \n                                    Private\n                                getWorkerUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, locator: LocationStrategy)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locator\n                                                  \n                                                        \n                                                                        LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(_config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getWorkerUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWorkerUrl(directImport: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directImport\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | URL\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LocationStrategy } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { CCFDatabaseOptions } from 'ccf-database';\nimport { GlobalConfigState, WorkerCCFDatabaseDataSourceService } from 'ccf-shared';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkerDataSourceService extends WorkerCCFDatabaseDataSourceService {\n  constructor(\n    globalConfig: GlobalConfigState,\n    private readonly locator: LocationStrategy\n  ) {\n    super(globalConfig);\n  }\n\n  protected createWorker(_config: CCFDatabaseOptions): Worker {\n    const url = this.getWorkerUrl(true);\n    return new Worker(url, { type: 'module' });\n  }\n\n  private getWorkerUrl(directImport: boolean): string | URL {\n    if (directImport) {\n      return new URL('./data-source.worker', import.meta.url);\n    }\n\n    const externalUrl = this.locator.prepareExternalUrl('0-es2015.worker.js');\n    const codeBlob = new Blob(\n      [`importScripts('${externalUrl}')`],\n      { type: 'application/javascript' }\n    );\n\n    return URL.createObjectURL(codeBlob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-eui/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app-web-component.component.ts\n            \n            function\n            parseDataSources\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                46 %\n                (14/30)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app.component.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/flat-node.ts\n            \n            class\n            FlatNode\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/list-result.ts\n            \n            interface\n            ListResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/ontology-selection.ts\n            \n            interface\n            OntologySelection\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts\n            \n            injectable\n            AppRootOverlayContainer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n            \n            injectable\n            DelegateDataSourceService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n            \n            interface\n            DelegateDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.worker.ts\n            \n            variable\n            database\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts\n            \n            injectable\n            WorkerDataSourceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n            \n            injectable\n            OntologySearchService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n            \n            interface\n            SearchResult\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n            \n            injectable\n            ThemingService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            injectable\n            ColorAssignmentState\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            interface\n            Color\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            interface\n            ColorAssignmentStateModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            variable\n            DEFAULT_COLOR_PALETTE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            injectable\n            DataState\n            \n                92 %\n                (36/39)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            interface\n            DataStateModel\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            allCompleted\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            queryData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            sendCompletedTo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            variable\n            DEFAULT_FILTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n            \n            interface\n            DefaultIconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n            \n            variable\n            DEFAULT_ICONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            injectable\n            IconRegistryState\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n            \n            injectable\n            ListResultsState\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n            \n            interface\n            ListResultsStateModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            injectable\n            SceneState\n            \n                75 %\n                (12/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            SceneStateModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            variable\n            DEFAULT_SELECTED_ORGANS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n            \n            component\n            FiltersContentComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n            \n            component\n            FiltersPopoverComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n            \n            component\n            OntologySearchComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n            \n            component\n            OntologySelectionComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            component\n            OntologyTreeComponent\n            \n                86 %\n                (32/37)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            getLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            isExpandable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts\n            \n            component\n            DonorCardComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n            \n            component\n            ResultsBrowserComponent\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts\n            \n            component\n            TissueSectionVisComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n            \n            function\n            throwDuplicateDrawersError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            class\n            InitializationState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            variable\n            EXPAND_COLLAPSE_PARAMS_DEFAULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            ContentContainerChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerContainersChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerInitialized\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerToggled\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            variable\n            MessageService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n            \n            component\n            ToggleButtonComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n            \n            component\n            DualSliderComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts\n            \n            component\n            SpatialSearchConfigBehaviorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n            \n            component\n            SpatialSearchConfigComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n            \n            component\n            SpinnerOverlayComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n            \n            component\n            ThumbnailCarouselComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n            \n            variable\n            nextUid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts\n            \n            component\n            ViewerComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            class\n            MessageChannel\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            MessageServiceConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (projects/.../data.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries.\n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            allCompleted   (projects/.../data.state.ts)\n                        \n                        \n                            parseDataSources   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            queryData   (projects/.../data.state.ts)\n                        \n                        \n                            sendCompletedTo   (projects/.../data.state.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (projects/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allCompleted\n                        \n                    \n                \n            \n            \n                \nallCompleted(states)\n                \n            \n\n\n\n\n            \n                \n                    Helper for testing that all states in an array are DataQueryState.Completed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    states\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of states to test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if all values in the array is Completed.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryData\n                        \n                    \n                \n            \n            \n                \nqueryData(query, next?)\n                \n            \n\n\n\n\n            \n                \n                    Helper operator that combines querying with sharing and replay functionality.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data query function.\n\n                                    \n                                \n                                \n                                    next\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional listener on the values emitted by the latest query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction>\n\n                    \n                    \n                        The combined pipe operator function.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendCompletedTo\n                        \n                    \n                \n            \n            \n                \nsendCompletedTo(subject)\n                \n            \n\n\n\n\n            \n                \n                    Helper creating a function that sends a DataQueryState.Completed to\na subject whenever it is called.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subject\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The subject to send completed messagess to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        The function.\n\n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseDataSources\n                        \n                    \n                \n            \n            \n                \nparseDataSources(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                    Helper function for creating drawer errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The position of the drawer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DonorCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchConfigBehaviorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThumbnailCarouselModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissueSectionVisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DonorCardModule\n\n\n\ncluster_DonorCardModule_declarations\n\n\n\ncluster_DonorCardModule_imports\n\n\n\ncluster_DonorCardModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_OntologySelectionComponent_providers\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_declarations\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_imports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_exports\n\n\n\ncluster_SpatialSearchConfigModule\n\n\n\ncluster_SpatialSearchConfigModule_declarations\n\n\n\ncluster_SpatialSearchConfigModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ThumbnailCarouselModule\n\n\n\ncluster_ThumbnailCarouselModule_declarations\n\n\n\ncluster_ThumbnailCarouselModule_exports\n\n\n\ncluster_TissueSectionVisModule\n\n\n\ncluster_TissueSectionVisModule_declarations\n\n\n\ncluster_TissueSectionVisModule_exports\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nAppModule -->\n\nViewerModule->AppModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDonorCardComponent\n\nDonorCardComponent\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nDonorCardModule -->\n\nDonorCardComponent->DonorCardModule\n\n\n\nResultsBrowserModule -->\n\nDonorCardModule->ResultsBrowserModule\n\n\n\n\n\nDonorCardComponent \n\nDonorCardComponent \n\nDonorCardComponent  -->\n\nDonorCardModule->DonorCardComponent \n\n\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nDonorCardModule -->\n\nThumbnailCarouselModule->DonorCardModule\n\n\n\n\n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent  -->\n\nThumbnailCarouselModule->ThumbnailCarouselComponent \n\n\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nDonorCardModule -->\n\nTissueSectionVisModule->DonorCardModule\n\n\n\n\n\nTissueSectionVisComponent \n\nTissueSectionVisComponent \n\nTissueSectionVisComponent  -->\n\nTissueSectionVisModule->TissueSectionVisComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySearchService\n\nOntologySearchService\n\nOntologySelectionComponent -->\n\nOntologySearchService->OntologySelectionComponent\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent\n\nSpatialSearchConfigBehaviorComponent\n\n\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigBehaviorComponent->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent  -->\n\nSpatialSearchConfigBehaviorModule->SpatialSearchConfigBehaviorComponent \n\n\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigModule->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent  -->\n\nSpatialSearchConfigModule->SpatialSearchConfigComponent \n\n\n\n\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigModule -->\n\nSpatialSearchConfigComponent->SpatialSearchConfigModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nThumbnailCarouselComponent\n\nThumbnailCarouselComponent\n\nThumbnailCarouselModule -->\n\nThumbnailCarouselComponent->ThumbnailCarouselModule\n\n\n\n\n\nTissueSectionVisComponent\n\nTissueSectionVisComponent\n\nTissueSectionVisModule -->\n\nTissueSectionVisComponent->TissueSectionVisModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        23 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Sex   (projects/.../spatial-search-config.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n    \n    \n        \n            \n                \n                    \n                    Sex\n                \n            \n            \n                \n                        \"male\" | \"female\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            database   (projects/.../data-source.worker.ts)\n                        \n                        \n                            DEFAULT_COLOR_PALETTE   (projects/.../color-assignment.state.ts)\n                        \n                        \n                            DEFAULT_FILTER   (projects/.../data.state.ts)\n                        \n                        \n                            DEFAULT_ICONS   (projects/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_SELECTED_ORGANS   (projects/.../scene.state.ts)\n                        \n                        \n                            DEFAULT_THEME   (projects/.../theming.service.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (projects/.../drawer.component.ts)\n                        \n                        \n                            getLevel   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            isExpandable   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            nextUid   (projects/.../thumbnail-carousel.component.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/services/data-source/data-source.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CCFDatabase()\n                    \n                \n\n            \n                \n                    Worker thread database.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_COLOR_PALETTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_FILTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Filter\n\n                    \n                \n                \n                    \n                        Default value : {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000'],\n  spatialSearches: []\n}\n                    \n                \n\n            \n                \n                    Default values for filters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SELECTED_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set(['Skin', 'Heart', 'Kidney', 'Spleen'])\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : property('level')\n                    \n                \n\n            \n                \n                    Getter function for 'level' on a flat node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpandable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : property('expandable')\n                    \n                \n\n            \n                \n                    Getter function for 'expandable' on a flat node.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n)\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nextUid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})()\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
