var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.232,1,2.96]],["body/modules/AppModule.html",[1,6.144,2,1.367,3,1.805,4,3.95,5,3.95,6,3.95,7,2.545,8,0.013,9,2.458,10,5.136,11,5.136,12,4.819,13,5.136,14,5.136,15,5.136,16,5.136,17,5.136,18,2.001,19,1.463,20,1.196,21,0.139,22,0.171,23,0.139,24,0.123,25,4.528,26,2.308,27,5.98,28,2.072,29,1.119,30,6.696,31,1.013,32,4.528,33,0.947,34,1.251,35,0.348,36,4.038,37,3.95,38,1.251,39,3.285,40,3.95,41,4.714,42,3.058,43,4.528,44,3.95,45,5.98,46,4.257,47,2.001,48,0.289,49,3.072,50,2.129,51,5.98,52,3.95,53,3.569,54,4.714,55,3.569,56,5.217,57,3.789,58,2.326,59,5.217,60,3.95,61,5.98,62,5.98,63,5.98,64,5.98,65,0.827,66,1.814,67,4.338,68,4.528,69,4.528,70,4.528,71,3.95,72,3.058,73,4.528,74,4.528,75,2.326,76,4.528,77,4.528,78,4.338,79,4.528,80,4.528,81,3.95,82,3.058,83,3.95,84,4.528,85,3.285,86,4.528,87,4.528,88,2.869,89,3.058,90,4.528,91,2.439,92,4.338,93,3.569,94,3.058,95,2.869,96,3.95,97,3.95,98,0.171,99,0.139,100,1.625,101,2.439,102,0.856,103,0.771,104,5.98,105,4.528,106,3.95,107,4.528,108,3.058,109,0.007,110,0.009,111,0.007]],["title/interfaces/AppOptions.html",[112,0.557,113,3.216]],["body/interfaces/AppOptions.html",[7,0.919,8,0.013,19,0.919,21,0.088,22,0.107,23,0.088,24,0.059,29,1.063,34,1.365,35,0.324,36,2.903,37,2.481,38,1.084,39,2.063,40,2.481,46,3.453,48,0.182,52,2.481,53,2.242,58,2.968,65,1.132,66,1.14,71,2.481,72,1.921,88,1.802,95,4.611,96,4.522,98,0.107,99,0.088,100,1.021,102,1.506,103,0.732,109,0.004,110,0.007,111,0.009,112,0.388,113,3.389,114,0.952,115,2.481,116,1.723,117,4.522,118,0.529,119,0.657,120,1.195,121,4.406,122,4.89,123,5.777,124,4.89,125,1.509,126,0.745,127,1.304,128,1.021,129,2.724,130,0.952,131,2.903,132,3.75,133,2.242,134,4.299,135,3.119,136,1.098,137,2.57,138,2.903,139,2.844,140,5.183,141,2.481,142,1.802,143,3.342,144,2.063,145,0.952,146,1.532,147,1.532,148,2.844,149,1.098,150,4.299,151,2.844,152,2.844,153,2.844,154,1.802,155,1.802,156,4.406,157,2.481,158,2.903,159,2.724,160,2.844,161,2.242,162,2.316,163,2.481,164,2.792,165,2.844,166,1.7,167,2.063,168,2.57,169,2.844,170,1.343,171,2.481,172,1.619,173,2.844,174,2.242,175,1.461,176,1.526,177,2.844,178,2.242,179,1.463,180,2.844,181,1.802,182,0.952,183,1.058,184,2.844,185,1.021,186,2.844,187,1.021,188,1.021,189,2.844,190,1.461,191,1.619,192,2.844,193,0.751,194,3.75,195,2.903,196,1.136,197,2.437,198,4.554,199,2.481,200,2.844,201,3.284,202,2.844,203,4.086,204,2.844,205,1.39,206,2.903,207,2.242,208,3.112,209,2.844,210,1.298,211,2.063,212,3.112,213,2.208,214,2.57,215,2.844,216,1.796,217,2.844,218,2.844,219,0.821,220,2.844,221,2.844,222,2.844,223,2.242,224,2.844,225,2.844,226,1.342,227,2.844,228,1.532,229,1.802,230,2.724,231,0.952,232,2.844,233,2.844,234,2.844,235,2.844,236,2.183,237,2.481,238,2.844,239,2.844,240,3.5,241,4.086,242,2.844,243,2.844,244,2.844,245,2.063,246,2.844,247,2.844,248,2.844,249,2.242,250,2.844,251,1.214,252,0.751,253,1.533,254,1.638,255,0.727,256,2.481,257,2.242,258,1.7,259,4.299,260,2.844,261,0.777,262,2.242,263,1.802,264,2.844,265,2.844,266,2.844,267,2.844,268,2.844,269,2.844,270,2.844,271,2.844,272,2.844,273,2.844,274,2.844,275,2.844,276,2.844,277,2.844,278,3.76,279,2.844,280,1.921,281,2.844,282,2.844,283,2.844,284,2.844,285,2.844,286,2.844,287,2.481,288,2.844,289,2.844,290,2.844,291,2.063,292,2.844,293,1.396,294,2.844,295,2.844,296,2.844,297,1.611,298,2.481,299,2.844,300,2.57,301,4.299,302,4.299,303,1.6,304,5.183,305,2.844,306,2.844,307,4.299,308,2.481,309,1.723,310,2.844,311,2.844,312,2.844,313,5.183,314,2.063,315,1.532,316,1.723,317,0.658,318,2.077,319,2.836,320,3.389,321,5.692,322,4.086,323,1.929,324,4.299,325,2.844,326,2.242,327,2.844,328,2.844,329,2.844,330,2.844,331,2.844,332,2.844,333,4.299,334,2.844,335,2.844,336,1.789,337,2.844,338,2.844,339,2.844,340,2.481,341,2.844,342,2.481,343,1.7,344,1.7,345,2.844,346,2.063,347,2.242,348,2.844,349,2.844,350,2.242,351,2.481,352,1.921,353,2.242,354,1.337,355,1.921,356,1.938,357,2.436,358,2.844,359,1.184,360,3.75,361,3.75,362,5.183,363,4.299,364,4.299,365,6.525,366,4.299,367,6.525,368,5.777,369,2.844,370,2.844,371,0.952,372,1.802,373,1.862,374,2.844,375,4.299,376,1.058,377,2.844,378,4.299,379,2.844,380,2.844,381,2.844,382,2.063,383,2.844,384,2.242,385,2.844,386,2.844,387,2.844,388,4.299,389,1.802,390,2.844,391,2.844,392,2.844,393,2.844,394,1.337,395,2.844,396,1.921,397,2.481,398,2.844,399,2.481,400,2.57,401,2.481,402,2.844,403,2.844]],["title/injectables/AppRootOverlayContainer.html",[36,2.755,404,0.944]],["body/injectables/AppRootOverlayContainer.html",[8,0.013,21,0.16,22,0.197,23,0.16,24,0.163,29,1.617,31,1.73,33,1.497,34,1.652,35,0.27,36,4.419,38,1.749,39,5.727,41,5.64,42,3.516,48,0.333,98,0.197,99,0.16,109,0.008,110,0.01,111,0.008,116,2.622,118,0.532,119,1,120,0.855,126,0.698,131,5.331,191,2.235,210,1.572,226,1.127,256,5.708,261,2.232,317,1.204,404,1.513,405,2.556,406,6.886,407,4.542,408,7.156,409,7.156,410,5.191,411,7.507,412,7.507,413,6.543,414,5.207,415,5.207,416,6.543,417,5.207,418,1.245,419,0.951,420,1.165,421,5.207,422,5.207,423,2.805,424,7.156,425,5.207,426,6.543,427,5.207,428,3.113,429,5.207,430,4.104,431,5.207,432,2.448,433,6.543,434,2.805,435,2.805,436,2.675,437,2.255,438,3.113,439,3.299,440,3.299,441,5.207,442,5.207,443,5.207]],["title/components/AppWebComponent.html",[9,1.319,130,0.557]],["body/components/AppWebComponent.html",[7,1.218,8,0.013,9,2.132,21,0.116,22,0.142,23,0.116,24,0.168,31,1.808,35,0.273,38,1.274,48,0.241,65,1.525,66,1.51,89,5.486,95,3.858,98,0.142,99,0.116,103,1.036,109,0.006,110,0.008,111,0.008,116,2.114,118,0.385,119,0.806,120,0.619,121,4.455,122,4.8,124,4.8,125,1.632,126,0.863,127,1.488,128,1.352,129,4.18,130,0.831,138,4.455,154,2.387,155,2.387,170,1.177,172,1.177,176,1.608,179,1.719,182,2.783,187,1.894,188,1.894,196,1.608,216,1.305,219,0.597,226,1.142,231,1.26,249,5.201,254,0.995,255,1.348,263,4.18,394,1.771,418,0.901,419,1.112,420,1.18,444,1.402,445,1.218,446,6.404,447,2.97,448,6.09,449,1.352,450,5.276,451,1.705,452,3.28,453,2.197,454,6.598,455,6.09,456,6.09,457,6.09,458,6.09,459,6.09,460,4.8,461,5.201,462,3.767,463,5.276,464,5.276,465,3.767,466,3.767,467,3.767,468,3.767,469,3.767,470,3.767,471,3.767,472,3.767,473,3.767,474,3.767,475,3.767,476,3.767,477,3.767,478,3.22,479,3.767,480,3.767,481,3.767,482,3.286,483,2.535,484,3.767,485,6.946,486,3.828,487,3.767,488,3.767,489,3.767,490,4.603,491,3.767,492,3.767,493,3.767,494,2.97,495,3.767,496,2.387,497,3.767,498,3.767,499,2.733,500,3.767,501,3.767,502,3.767,503,3.767,504,3.767,505,2.97,506,6.09,507,1.402,508,1.705,509,1.705,510,1.402,511,2.455,512,1.402,513,1.402,514,1.402,515,1.218,516,1.402,517,1.218,518,1.402,519,1.218,520,1.963,521,1.218,522,1.26,523,1.402,524,1.402,525,1.218,526,1.402,527,1.218,528,1.352,529,1.402,530,1.218,531,1.705,532,1.402,533,1.218,534,1.402,535,1.218,536,1.402,537,1.218,538,1.402,539,1.26,540,1.402,541,1.218,542,1.402,543,1.218,544,1.402,545,1.218,546,1.352,547,1.402,548,1.218,549,1.218,550,1.218,551,1.402,552,1.218,553,1.1,554,1.402,555,1.218,556,1.402,557,1.402]],["title/components/CheckboxComponent.html",[130,0.557,515,1.319]],["body/components/CheckboxComponent.html",[7,1.116,8,0.013,9,1.116,21,0.106,22,0.13,23,0.106,24,0.152,29,1.226,31,1.613,33,0.723,34,1.038,35,0.24,38,0.723,48,0.221,65,1.506,98,0.13,99,0.106,101,1.861,102,0.937,103,0.588,109,0.005,110,0.008,111,0.008,118,0.353,120,0.815,125,1.073,126,0.769,127,1.324,128,1.24,130,0.984,158,4.98,170,1.079,172,1.079,176,1.31,179,1.639,182,2.759,183,1.846,185,1.781,187,1.781,188,1.781,193,1.31,196,1.533,197,3.467,205,1.603,213,2.549,216,1.197,219,0.547,228,2.673,229,3.143,231,1.156,251,1.792,252,1.31,253,1.435,255,0.883,300,2.966,303,1.285,309,2.804,316,2.326,317,1.148,323,1.285,350,3.911,354,2.983,371,1.156,372,3.143,382,3.599,418,1.186,419,1.158,420,1.42,444,1.285,445,1.116,449,1.24,451,1.116,453,2.066,478,2.693,507,1.285,508,1.603,509,1.603,510,1.285,511,2.361,512,1.285,513,1.285,514,1.285,515,2.051,516,1.285,517,1.116,518,1.285,519,1.116,520,1.846,521,1.116,522,1.156,523,1.285,524,1.285,525,1.116,526,1.285,527,1.116,528,1.24,529,1.285,530,1.116,531,1.603,532,1.285,533,1.116,534,1.285,535,1.116,536,1.285,537,1.116,538,1.285,539,1.156,540,1.285,541,1.116,542,1.285,543,1.116,544,1.285,545,1.116,546,1.24,547,1.285,548,1.116,549,1.116,550,1.116,551,1.285,552,1.116,553,1.008,554,1.285,555,1.116,556,1.285,557,1.285,558,1.24,559,3.013,560,1.135,561,4.961,562,4.961,563,6.997,564,2.549,565,4.961,566,7.001,567,5.806,568,4.961,569,4.961,570,6.721,571,3.595,572,2.332,573,4.576,574,2.332,575,3.793,576,4.961,577,3.471,578,3.128,579,1.226,580,1.585,581,3.911,582,3.454,583,3.454,584,4.961,585,3.911,586,4.961,587,4.961,588,3.454,589,3.911,590,5.002,591,3.911,592,3.454,593,6.649,594,3.911,595,6.346,596,2.618,597,4.328,598,2.966,599,3.599,600,4.961,601,6.346,602,5.388,603,3.454,604,3.599,605,3.35,606,4.961,607,4.328,608,4.285,609,2.861,610,3.599,611,4.961,612,4.961,613,2.237,614,2.723,615,1.957,616,1.861,617,3.454,618,4.576,619,3.454,620,4.961,621,3.454,622,3.454,623,3.013,624,2.188,625,2.065,626,3.128,627,3.454,628,3.013,629,3.454,630,2.506,631,3.454,632,3.013,633,2.332,634,3.454,635,2.148,636,1.846,637,1.696,638,1.774,639,2.506,640,2.065,641,2.065,642,2.506,643,2.618,644,2.065,645,2.723,646,4.961,647,3.454,648,1.603,649,3.013,650,3.454,651,3.013,652,3.454]],["title/modules/CheckboxModule.html",[0,1.232,653,2.755]],["body/modules/CheckboxModule.html",[2,1.828,3,2.166,8,0.013,18,2.4,19,1.957,20,1.599,21,0.186,22,0.229,23,0.186,24,0.125,26,2.77,28,2.098,35,0.327,47,2.4,48,0.387,98,0.229,99,0.186,109,0.009,110,0.011,111,0.009,515,2.741,614,4.773,653,5.582,654,5.282,655,5.282,656,5.282,657,6.055,658,2.67,659,2.875,660,2.253,661,6.259,662,6.055]],["title/interfaces/Color.html",[112,0.557,303,1.518]],["body/interfaces/Color.html",[8,0.013,21,0.131,22,0.16,23,0.131,24,0.088,34,0.889,35,0.321,48,0.271,98,0.262,99,0.131,102,1.312,103,1.181,109,0.006,110,0.009,111,0.006,112,0.782,114,1.421,116,1.702,118,0.434,119,0.875,126,0.692,127,1.346,145,1.421,147,2.288,149,1.639,175,2.181,191,1.326,214,3.425,219,0.673,226,1.568,236,2.169,261,1.16,303,3.116,336,1.122,359,1.768,373,1.839,376,1.58,404,1.325,419,0.775,580,2.243,663,2.868,664,2.181,665,2.868,666,4.752,667,5.417,668,4.108,669,3.081,670,3.331,671,1.639,672,2.943,673,2.693,674,2.181,675,3.425,676,2.181,677,1.996,678,3.347,679,3.081,680,3.081,681,2.943,682,3.876,683,2.868,684,3.081,685,3.081,686,3.081,687,3.081,688,3.081,689,3.081,690,3.081,691,3.081,692,3.081,693,3.081,694,3.081,695,3.081,696,2.868,697,3.081,698,2.69,699,3.081,700,2.868,701,4.516,702,6.2,703,4.794,704,2.539,705,6.322,706,4.687,707,3.347,708,2.539,709,2.406,710,4.516,711,2.085,712,4.516,713,3.347,714,3.347,715,3.347,716,3.347,717,5.111,718,5.111,719,3.347,720,3.347,721,4.516,722,3.347,723,3.347,724,3.347,725,3.347,726,3.347,727,3.347,728,3.347,729,3.347,730,3.347,731,3.869,732,3.347,733,4.516,734,4.516,735,4.516,736,4.516,737,3.425,738,3.347,739,3.347,740,3.347,741,3.347]],["title/injectables/ColorAssignmentState.html",[404,0.944,711,2.003]],["body/injectables/ColorAssignmentState.html",[8,0.013,21,0.118,22,0.145,23,0.118,24,0.156,29,1.32,31,1.661,33,1.286,34,1.117,35,0.313,48,0.245,98,0.251,99,0.118,102,1.501,103,1.131,109,0.006,110,0.008,111,0.006,112,0.729,116,2.14,118,0.391,119,0.816,120,1.009,126,0.656,127,1.388,145,1.282,147,2.064,149,1.479,175,1.968,191,1.668,214,3.192,219,0.846,226,1.512,236,2.224,261,1.678,303,3.055,317,1.617,336,1.012,359,2.223,373,1.659,376,1.426,404,1.235,405,1.881,418,1.469,419,1.213,420,1.564,560,0.749,580,1.908,663,5.115,664,3.891,665,2.588,666,4.439,667,4.458,668,4.428,669,2.78,670,3.59,671,1.479,672,2.743,673,2.51,674,1.968,675,3.674,676,1.968,677,1.801,678,3.021,679,2.78,680,2.78,681,3.157,682,4.178,683,2.588,684,2.78,685,2.78,686,2.78,687,2.78,688,2.78,689,2.78,690,2.78,691,2.78,692,2.78,693,2.78,694,2.78,695,2.78,696,2.588,697,2.78,698,2.428,699,2.78,700,2.588,701,4.209,702,6.065,703,4.785,704,2.291,705,6.309,706,5.015,707,4.209,708,2.291,709,2.171,710,4.209,711,2.621,712,5.705,713,4.209,714,4.209,715,4.209,716,4.209,717,4.844,718,4.844,719,3.021,720,3.021,721,5.24,722,3.021,723,3.021,724,3.021,725,3.021,726,3.021,727,3.021,728,3.021,729,3.021,730,3.021,731,3.606,732,3.021,733,4.209,734,4.209,735,4.209,736,4.209,737,3.192,738,3.021,739,3.021,740,3.021,741,3.021,742,5.34,743,5.34,744,5.34,745,3.832,746,2.223,747,3.832,748,3.832,749,3.832,750,3.832,751,3.832,752,3.832,753,3.832,754,3.832]],["title/interfaces/ColorAssignmentStateModel.html",[112,0.557,700,2.755]],["body/interfaces/ColorAssignmentStateModel.html",[8,0.013,21,0.13,22,0.16,23,0.13,24,0.087,34,0.886,35,0.321,48,0.271,98,0.262,99,0.13,102,1.31,103,1.18,109,0.006,110,0.009,111,0.006,112,0.78,114,1.417,116,1.697,118,0.432,119,0.873,126,0.796,127,1.276,145,1.417,147,2.281,149,1.634,175,2.175,191,1.322,214,3.418,219,0.671,226,1.567,236,2.166,261,1.156,303,3.116,336,1.118,359,1.763,373,1.833,376,1.576,404,1.323,419,0.773,580,1.977,663,2.859,664,2.175,665,2.859,666,4.559,667,4.697,668,4.102,669,3.072,670,3.326,671,1.634,672,2.937,673,2.688,674,2.175,675,3.418,676,2.175,677,1.99,678,3.337,679,3.072,680,3.072,681,2.937,682,3.87,683,2.859,684,3.072,685,3.072,686,3.072,687,3.072,688,3.072,689,3.072,690,3.072,691,3.072,692,3.072,693,3.072,694,3.072,695,3.072,696,2.859,697,3.072,698,2.682,699,3.072,700,3.861,701,5.707,702,6.366,703,4.885,704,3.87,705,6.442,706,4.681,707,3.337,708,2.531,709,2.399,710,4.507,711,2.079,712,4.507,713,3.337,714,3.337,715,3.337,716,3.337,717,5.103,718,5.103,719,3.337,720,3.337,721,4.507,722,3.337,723,3.337,724,3.337,725,3.337,726,3.337,727,3.337,728,3.337,729,3.337,730,3.337,731,3.861,732,3.337,733,4.507,734,4.507,735,4.507,736,4.507,737,3.418,738,3.337,739,3.337,740,3.337,741,3.337,755,4.507]],["title/components/ContainerComponent.html",[130,0.557,517,1.319]],["body/components/ContainerComponent.html",[7,0.95,8,0.013,9,0.95,21,0.09,22,0.111,23,0.09,24,0.16,29,1.089,31,1.724,33,1.433,34,1.229,35,0.273,38,0.615,48,0.188,65,1.496,91,2.374,98,0.111,99,0.203,100,1.582,102,0.999,103,1,109,0.004,110,0.007,111,0.007,118,0.45,119,0.673,120,0.724,125,1.271,126,0.783,127,0.518,128,1.055,129,3.721,130,1.017,145,0.983,149,1.134,170,0.918,172,1.834,174,3.474,176,1.745,179,2.21,182,2.71,183,1.64,185,1.582,187,1.582,188,1.582,193,1.164,196,1.396,205,1.424,210,2.068,216,1.018,219,0.838,226,1.271,231,0.983,251,1.244,252,1.164,253,1.452,255,0.751,261,2.212,263,3.721,280,1.985,297,2.496,315,3.953,317,1.223,336,0.776,344,1.757,359,1.835,371,0.983,376,1.967,394,2.072,418,1.054,419,1.072,420,1.183,428,1.757,444,1.094,445,0.95,449,1.055,451,0.95,494,2.317,507,1.094,508,2.034,509,1.424,510,1.094,511,2.186,512,1.094,513,1.094,514,1.094,515,0.95,516,1.094,517,1.898,518,1.094,519,1.898,520,1.64,521,0.95,522,0.983,523,1.094,524,1.094,525,0.95,526,1.094,527,0.95,528,1.055,529,1.094,530,0.95,531,1.424,532,1.094,533,0.95,534,1.094,535,0.95,536,1.094,537,0.95,538,1.094,539,0.983,540,1.094,541,0.95,542,1.094,543,0.95,544,1.094,545,0.95,546,1.055,547,1.094,548,0.95,549,0.95,550,0.95,551,1.094,552,0.95,553,0.858,554,1.094,555,0.95,556,1.094,557,1.094,558,1.055,560,1.034,579,1.089,580,1.203,609,2.978,635,3.364,746,2.445,756,2.317,757,4.167,758,2.848,759,3.844,760,4.407,761,2.823,762,5.287,763,4.407,764,2.958,765,3.16,766,5.287,767,5.287,768,4.969,769,3.474,770,4.63,771,3.164,772,5.873,773,2.496,774,2.976,775,3.503,776,5.287,777,3.844,778,4.407,779,1.987,780,2.837,781,3.017,782,3.197,783,1.766,784,4.407,785,4.407,786,2.644,787,2.939,788,3.844,789,4.407,790,3.197,791,2.976,792,2.976,793,2.939,794,2.543,795,3.844,796,4.407,797,2.939,798,2.976,799,2.939,800,4.407,801,4.407,802,2.384,803,2.939,804,2.792,805,2.374,806,6.85,807,4.407,808,5.873,809,2.939,810,3.966,811,3.844,812,5.873,813,4.407,814,2.939,815,2.976,816,3.844,817,4.407,818,2.939,819,3.835,820,3.197,821,2.939,822,2.939,823,3.844,824,2.939,825,2.939,826,2.939,827,1.583,828,2.939,829,2.564,830,2.564,831,2.132,832,2.317,833,1.757,834,2.564,835,2.62,836,2.564,837,3.474,838,2.939,839,2.564,840,2.939,841,2.564,842,3.16,843,2.848,844,2.317,845,2.939,846,2.939,847,2.939,848,2.939,849,1.862,850,2.317,851,2.564,852,2.132,853,2.939,854,2.939,855,3.844,856,1.757,857,2.264,858,3.844,859,2.939,860,2.939,861,2.132,862,2.939,863,1.665,864,2.939,865,2.939,866,4.407,867,4.407,868,2.939,869,2.939,870,2.939,871,2.939,872,2.939,873,2.939,874,2.939,875,1.665,876,1.665,877,2.976,878,1.665,879,2.939,880,2.564,881,2.564]],["title/components/ContentComponent.html",[130,0.557,519,1.319]],["body/components/ContentComponent.html",[7,0.876,8,0.013,9,0.876,20,0.716,21,0.083,22,0.102,23,0.083,24,0.162,29,1.024,31,1.739,33,1.27,34,1.34,35,0.251,38,0.567,48,0.173,65,1.483,98,0.102,99,0.197,100,1.487,102,0.951,103,1.134,109,0.004,110,0.006,111,0.006,118,0.423,119,0.633,120,0.826,125,1.442,126,0.791,127,0.478,128,0.973,129,3.57,130,0.961,145,0.907,170,0.846,172,1.896,176,1.094,179,2.264,182,2.683,185,1.487,187,1.487,188,1.487,191,2.081,193,1.094,196,1.329,205,2.221,210,2.012,216,0.939,219,0.657,226,1.219,231,0.907,236,1.683,251,1.17,252,1.094,253,1.647,255,0.692,261,2.09,263,3.57,280,1.83,291,1.966,315,3.271,317,1.736,318,2.566,323,2.383,336,1.76,343,1.62,344,1.62,371,0.907,372,2.625,376,1.008,394,1.274,418,1.203,419,1.108,420,1.659,428,1.62,444,1.008,445,0.876,449,0.973,451,1.339,452,1.46,507,1.008,508,1.962,509,1.339,510,1.008,511,2.097,512,1.008,513,1.008,514,1.008,515,0.876,516,1.008,517,0.876,518,1.008,519,1.821,520,1.542,521,0.876,522,0.907,523,1.008,524,1.008,525,0.876,526,1.008,527,0.876,528,0.973,529,1.008,530,0.876,531,1.339,532,1.008,533,0.876,534,1.008,535,0.876,536,1.008,537,0.876,538,1.008,539,0.907,540,1.008,541,0.876,542,1.008,543,0.876,544,1.008,545,0.876,546,0.973,547,1.008,548,0.876,549,0.876,550,0.876,551,1.008,552,0.876,553,0.791,554,1.008,555,0.876,556,1.008,557,1.008,558,0.973,560,1.102,579,1.024,580,1.962,608,1.83,609,2.887,636,2.972,648,2.276,746,2.528,758,2.71,761,2.566,765,3.008,768,4.833,769,3.266,771,3.035,773,2.347,775,3.528,777,3.615,779,1.868,780,2.541,781,2.895,782,3.006,783,1.66,786,2.472,790,3.006,791,2.798,792,2.798,794,1.794,798,2.798,805,2.232,816,3.615,819,3.65,820,3.006,827,1.46,831,1.966,835,2.346,842,3.983,843,3.449,852,1.966,856,1.62,857,1.392,861,1.966,875,1.535,877,1.83,882,2.364,883,4.144,884,6.376,885,2.129,886,4.389,887,5.031,888,6.072,889,5.031,890,5.031,891,5.635,892,4.144,893,4.144,894,4.144,895,5.635,896,5.635,897,5.635,898,4.144,899,2.625,900,4.144,901,3.966,902,4.144,903,4.144,904,3.65,905,4.144,906,4.107,907,4.144,908,3.266,909,2.71,910,3.266,911,3.266,912,2.71,913,2.71,914,4.144,915,3.368,916,2.232,917,4.144,918,4.369,919,2.71,920,4.144,921,2.71,922,2.798,923,3.006,924,4.144,925,5.635,926,2.364,927,3.398,928,2.034,929,2.364,930,2.136,931,2.71,932,2.71,933,1.794,934,2.71,935,2.71,936,2.71,937,2.71,938,2.71,939,2.364,940,2.136,941,2.85,942,4.144,943,2.71,944,4.144,945,2.71,946,1.62,947,1.717,948,2.71,949,2.71,950,2.71,951,5.031,952,2.71,953,2.71,954,4.144,955,2.71,956,2.71,957,4.144,958,2.71,959,2.71,960,2.71,961,1.222,962,1.966,963,2.364,964,1.717,965,2.71,966,2.71,967,2.71,968,1.717]],["title/interfaces/ContentContainerChanged.html",[112,0.557,969,2.439]],["body/interfaces/ContentContainerChanged.html",[8,0.013,21,0.146,22,0.18,23,0.146,24,0.098,35,0.197,98,0.309,99,0.146,103,0.81,109,0.007,110,0.009,111,0.007,112,0.991,114,1.591,118,0.486,119,0.943,125,1.336,126,0.905,130,1.027,176,1.631,179,2.332,181,3.014,193,1.256,205,1.996,208,2.562,219,0.979,236,1.591,309,2.909,315,3.327,359,1.98,434,2.562,435,2.562,436,2.443,437,2.06,438,2.844,439,3.014,440,3.014,452,2.562,483,2.855,553,1.389,560,0.93,579,1.527,580,1.686,635,2.674,636,2.298,648,1.996,671,2.802,761,2.748,764,2.236,775,3.626,779,2.145,780,2.785,783,2.748,786,3.189,802,2.785,856,2.844,857,3.173,918,3.692,922,3.212,946,2.844,969,4.1,970,2.844,971,4.153,972,4.171,973,4.171,974,4.345,975,3.212,976,3.692,977,3.212,978,2.695,979,3.692,980,4.171,981,3.451,982,3.451,983,3.692,984,3.692,985,3.032,986,3.451,987,2.335,988,3.212,989,4.171,990,2.844,991,3.523]],["title/modules/CoreModule.html",[0,1.232,10,2.755]],["body/modules/CoreModule.html",[0,2.002,2,1.606,3,2.002,8,0.013,10,5.637,18,2.218,19,1.719,20,1.405,21,0.164,22,0.201,23,0.164,24,0.11,28,2.297,35,0.341,38,1.113,47,2.218,48,0.34,65,1.319,66,2.131,91,2.865,92,3.858,97,4.639,98,0.201,99,0.164,108,3.591,109,0.008,110,0.01,111,0.008,120,0.874,137,3.963,141,4.639,154,3.369,155,3.369,219,1.051,494,4.192,658,2.467,992,4.639,993,4.639,994,4.639,995,5.637,996,5.359,997,5.359,998,5.318,999,6.63,1000,5.318,1001,4.477,1002,6.63,1003,5.318,1004,6.63,1005,5.318,1006,5.318,1007,5.318,1008,5.318,1009,4.477,1010,5.318,1011,3.591,1012,4.192,1013,5.318,1014,5.318,1015,5.318,1016,5.318,1017,5.318,1018,5.318,1019,5.318,1020,5.318,1021,5.318,1022,4.639,1023,7.225,1024,5.318,1025,4.192,1026,5.318]],["title/interfaces/DataStateModel.html",[112,0.557,1027,3.216]],["body/interfaces/DataStateModel.html",[8,0.013,21,0.078,22,0.222,23,0.078,24,0.052,33,1.474,34,1.301,35,0.285,48,0.161,65,0.878,66,1.01,98,0.205,99,0.078,100,0.905,101,1.358,102,1.523,103,0.667,108,1.702,109,0.011,110,0.006,111,0.004,112,0.535,114,0.843,116,1.01,118,0.4,119,0.599,120,0.414,125,0.545,126,0.664,127,0.848,136,1.856,137,2.343,142,2.483,143,3.497,144,1.829,145,0.843,146,1.358,147,1.358,149,0.973,161,3.09,162,1.358,193,1.552,195,2.647,196,1.27,197,1.843,203,3.79,210,0.761,211,1.829,219,1.117,226,1.525,228,1.358,229,1.597,236,2.306,237,2.199,240,1.702,241,1.987,245,4.709,251,0.712,252,0.666,253,1.774,254,2.106,258,2.343,261,2.061,300,1.507,309,1.01,316,3.334,317,0.583,353,3.09,373,2.082,376,0.938,394,3.052,404,0.907,419,0.46,420,0.877,428,2.343,434,1.358,435,1.358,436,2.47,437,1.092,531,0.815,549,1.267,560,0.493,564,3.878,579,0.969,580,0.688,625,1.507,670,2.47,671,0.973,672,2.013,673,1.843,674,1.295,676,1.295,677,1.185,681,3.744,709,1.428,779,1.137,786,0.973,832,3.79,833,1.507,837,3.79,842,1.507,915,1.507,916,2.59,941,1.428,978,2.724,990,1.507,1027,3.09,1028,1.702,1029,6.697,1030,6.22,1031,5.663,1032,6.22,1033,3.09,1034,3.247,1035,5.001,1036,1.829,1037,2.199,1038,3.92,1039,1.987,1040,1.987,1041,3.92,1042,6.712,1043,3.92,1044,3.419,1045,1.829,1046,4.809,1047,2.521,1048,2.521,1049,3.92,1050,2.199,1051,2.199,1052,1.829,1053,1.702,1054,2.647,1055,3.488,1056,1.987,1057,1.987,1058,2.199,1059,2.199,1060,2.199,1061,1.987,1062,1.987,1063,1.987,1064,1.702,1065,2.199,1066,2.199,1067,6.095,1068,1.507,1069,2.521,1070,1.987,1071,1.987,1072,4.195,1073,4.512,1074,1.987,1075,4.732,1076,1.987,1077,3.419,1078,2.521,1079,1.428,1080,1.507,1081,2.199,1082,2.199,1083,2.521,1084,3.419,1085,2.199,1086,2.199,1087,2.199,1088,2.199,1089,1.987,1090,6.31,1091,1.507,1092,4.869,1093,3.046,1094,1.987,1095,1.702,1096,2.521,1097,2.521,1098,2.521,1099,2.521,1100,2.521,1101,2.199,1102,2.521,1103,2.521,1104,2.521,1105,4.709,1106,3.92,1107,2.521,1108,3.92,1109,2.521,1110,3.92,1111,2.521,1112,3.92,1113,2.521,1114,3.92,1115,2.521,1116,3.92,1117,2.521,1118,3.92,1119,2.521,1120,3.92,1121,3.419,1122,3.92,1123,3.92,1124,3.92,1125,2.521,1126,3.92,1127,6.492,1128,2.521,1129,2.521,1130,3.92,1131,3.419,1132,2.521,1133,2.521,1134,3.935,1135,5.424,1136,3.92,1137,2.521,1138,2.521,1139,3.92,1140,2.521,1141,2.521,1142,3.92,1143,2.521,1144,2.521,1145,3.419,1146,3.92,1147,2.521,1148,2.521,1149,3.92,1150,3.92,1151,2.521,1152,2.521,1153,2.521,1154,2.521,1155,2.521,1156,2.521,1157,2.521,1158,2.521,1159,2.521,1160,2.521,1161,2.521,1162,2.521,1163,2.521,1164,2.521,1165,2.521,1166,2.521,1167,2.521,1168,2.521,1169,2.521,1170,2.521,1171,2.521,1172,2.521,1173,1.507,1174,2.521,1175,2.521,1176,2.521,1177,2.521,1178,2.521,1179,2.521,1180,2.521,1181,2.521,1182,2.521,1183,1.987,1184,2.521,1185,2.521,1186,2.521,1187,2.521,1188,2.521,1189,2.521,1190,2.521,1191,2.521,1192,2.521,1193,2.521,1194,2.521,1195,2.521,1196,1.987,1197,2.521,1198,2.521,1199,3.92,1200,2.647,1201,2.521,1202,2.521,1203,2.199,1204,2.521,1205,3.92,1206,2.521,1207,1.702,1208,2.521,1209,2.521,1210,1.702,1211,2.521,1212,2.521,1213,4.262,1214,2.521,1215,2.521,1216,6.492,1217,2.521,1218,2.521,1219,2.521,1220,2.521,1221,2.521,1222,2.521,1223,2.521,1224,2.521,1225,2.521,1226,2.521,1227,2.521,1228,2.521,1229,2.521,1230,2.521,1231,2.521,1232,2.521,1233,2.521]],["title/interfaces/DefaultIconDefinition.html",[112,0.557,1234,2.96]],["body/interfaces/DefaultIconDefinition.html",[8,0.013,21,0.107,22,0.131,23,0.107,24,0.072,88,5.371,98,0.188,103,0.592,109,0.005,110,0.008,111,0.005,112,0.474,114,1.163,118,0.355,119,0.761,120,1.213,126,0.679,127,1.376,212,4.595,213,2.561,293,3.443,316,1.393,318,2.7,323,2.507,357,1.969,419,1.556,508,2.334,560,0.68,783,1.393,863,2.824,933,1.505,1210,2.348,1234,4.227,1235,2.348,1236,2.74,1237,2.74,1238,2.74,1239,4.303,1240,3.033,1241,3.929,1242,3.477,1243,3.477,1244,2.348,1245,3.477,1246,3.033,1247,2.74,1248,3.033,1249,6.18,1250,3.616,1251,4.617,1252,5.017,1253,3.616,1254,2.348,1255,2.74,1256,2.348,1257,5.702,1258,3.033,1259,7.357,1260,3.033,1261,3.033,1262,3.033,1263,4.348,1264,3.033,1265,3.033,1266,3.033,1267,3.033,1268,3.033,1269,3.033,1270,5.552,1271,5.552,1272,5.878,1273,5.878,1274,2.522,1275,3.033,1276,4.55,1277,3.033,1278,3.033,1279,3.033,1280,4.348,1281,4.348,1282,4.348,1283,3.033,1284,3.033,1285,5.878,1286,3.033,1287,4.348,1288,3.033,1289,3.033,1290,3.033,1291,3.033,1292,3.033,1293,5.552,1294,3.033,1295,3.033,1296,4.348,1297,3.033,1298,3.033,1299,3.033,1300,3.033,1301,3.033,1302,3.033,1303,4.348,1304,2.522,1305,3.033,1306,3.033,1307,3.033,1308,3.033,1309,3.033,1310,5.552,1311,3.033,1312,3.033,1313,5.552,1314,3.033,1315,3.033,1316,2.522,1317,3.033,1318,3.033,1319,5.878,1320,3.033,1321,4.348,1322,3.033,1323,2.74,1324,3.033,1325,2.74,1326,3.033,1327,3.033]],["title/interfaces/DelegateDataSourceOptions.html",[112,0.557,1328,2.96]],["body/interfaces/DelegateDataSourceOptions.html",[8,0.013,21,0.176,22,0.215,23,0.176,24,0.118,35,0.32,38,1.194,48,0.365,65,1.041,66,2.286,98,0.261,99,0.176,103,0.971,109,0.009,110,0.011,111,0.009,112,0.778,114,1.909,116,2.286,118,0.582,119,1.058,120,1.273,125,1.613,126,0.739,127,1.314,154,3.614,155,3.614,226,1.613,254,1.507,359,2.375,404,1.601,410,4.138,423,3.073,460,6.363,461,6.363,486,4.138,1009,3.852,1011,3.852,1012,4.497,1328,5.407,1329,3.852,1330,4.138,1331,6.039,1332,6.039,1333,6.039,1334,4.976,1335,6.039,1336,4.675,1337,5.022,1338,4.976,1339,3.232,1340,4.976]],["title/injectables/DelegateDataSourceService.html",[404,0.944,1009,2.755]],["body/injectables/DelegateDataSourceService.html",[8,0.013,21,0.174,22,0.214,23,0.174,24,0.142,29,1.704,31,1.268,33,1.186,35,0.32,38,1.186,48,0.362,65,1.034,66,2.271,98,0.26,99,0.174,103,0.964,109,0.009,110,0.011,111,0.009,112,0.773,116,2.763,118,0.579,120,0.931,125,1.226,126,0.605,127,0.999,154,3.59,155,3.59,226,1.608,254,1.497,359,2.359,404,1.595,405,2.782,410,5.391,418,1.355,419,1.034,423,3.053,460,5.858,461,5.858,486,4.111,1009,4.656,1011,4.656,1012,4.467,1328,5.61,1329,4.656,1330,4.111,1331,6.483,1332,6.015,1333,6.015,1334,4.943,1335,6.483,1336,4.656,1337,5.002,1338,6.015,1339,3.906,1340,4.943,1341,6.895,1342,5.667]],["title/components/DonorCardComponent.html",[130,0.557,521,1.319]],["body/components/DonorCardComponent.html",[7,0.748,8,0.013,9,0.748,20,0.612,21,0.185,22,0.087,23,0.071,24,0.153,29,0.906,31,1.641,33,0.952,34,1.256,35,0.188,38,0.485,48,0.148,65,1.461,98,0.087,99,0.185,101,1.247,102,1.134,109,0.004,110,0.006,111,0.006,118,0.236,119,0.56,120,0.602,125,0.985,126,0.762,127,1.108,128,0.831,130,0.988,136,0.894,170,0.723,172,0.723,174,1.825,176,0.968,179,1.285,182,2.625,183,1.365,185,1.316,187,1.316,188,1.316,191,1.964,194,3.199,195,2.476,196,1.202,210,0.699,212,3.233,216,0.802,219,0.82,223,2.89,228,1.975,229,2.323,231,0.775,236,2.246,251,1.035,252,0.968,253,0.906,254,0.968,255,0.592,293,2.946,303,2.339,309,1.469,317,1.454,318,2.405,323,1.694,336,1.885,356,3.027,371,2.008,376,1.927,389,3.28,418,0.877,419,1.148,420,1.343,428,3.587,432,2.652,437,1.588,444,0.862,445,0.748,449,0.831,451,0.748,453,1.527,478,2.405,507,0.862,508,1.823,509,1.823,510,0.862,511,1.927,512,0.862,513,0.862,514,0.862,515,0.748,516,0.862,517,0.748,518,0.862,519,0.748,520,1.365,521,1.673,522,2.612,523,0.862,524,0.862,525,0.748,526,0.862,527,0.748,528,0.831,529,0.862,530,0.748,531,1.185,532,0.862,533,0.748,534,0.862,535,0.748,536,0.862,537,0.748,538,0.862,539,0.775,540,0.862,541,0.748,542,0.862,543,0.748,544,0.862,545,0.748,546,0.831,547,0.862,548,0.748,549,2.032,550,1.471,551,0.862,552,0.748,553,0.676,554,0.862,555,0.748,556,0.862,557,0.862,558,0.831,560,1.103,566,6.12,572,1.724,574,1.564,575,3.095,577,2.721,578,2.452,579,0.906,589,2.89,593,4.922,596,2.544,597,4.516,609,1.653,613,2.052,615,1.312,616,1.247,624,2.884,625,2.721,626,3.233,628,3.199,632,3.199,633,3.496,635,1.003,636,2.656,637,2.542,638,2.338,639,4.73,640,3.758,641,2.721,643,3.027,648,2.268,746,0.964,773,2.077,775,2.334,791,2.476,792,2.476,794,2.242,805,1.975,827,1.247,835,1.895,843,1.975,857,1.884,875,1.312,876,2.077,877,2.476,878,1.312,885,3.083,904,1.68,906,3.373,928,1.137,933,2.242,941,2.077,961,2.835,964,1.467,968,2.884,985,3.376,1040,3.588,1068,1.384,1239,1.975,1323,2.89,1325,2.89,1343,4.434,1344,5.847,1345,5.381,1346,2.02,1347,6.645,1348,3.199,1349,3.199,1350,4.552,1351,3.667,1352,3.971,1353,4.552,1354,5.177,1355,3.667,1356,5.177,1357,4.922,1358,3.302,1359,4.552,1360,3.667,1361,2.316,1362,4.353,1363,3.587,1364,3.802,1365,2.316,1366,2.316,1367,2.316,1368,2.316,1369,2.316,1370,2.316,1371,3.802,1372,3.667,1373,2.316,1374,4.081,1375,2.66,1376,3.667,1377,2.316,1378,3.199,1379,3.199,1380,2.323,1381,3.667,1382,3.667,1383,2.476,1384,2.192,1385,2.316,1386,2.89,1387,2.66,1388,3.667,1389,3.199,1390,6.001,1391,2.316,1392,4.552,1393,4.552,1394,3.667,1395,4.516,1396,2.316,1397,2.316,1398,2.316,1399,3.199,1400,3.667,1401,3.667,1402,5.235,1403,5.177,1404,3.667,1405,3.667,1406,3.667,1407,3.667,1408,3.667,1409,3.667,1410,1.467,1411,1.467,1412,3.233,1413,3.196,1414,3.083,1415,2.66,1416,1.884,1417,1.312,1418,1.825,1419,2.192,1420,2.721,1421,2.452,1422,2.316,1423,2.316,1424,2.316,1425,2.316,1426,2.02,1427,2.316,1428,1.825,1429,2.316,1430,2.316,1431,3.588,1432,2.316,1433,1.564,1434,2.652,1435,2.452,1436,3.971,1437,3.199,1438,1.68,1439,1.825,1440,5.687,1441,1.312,1442,5.642,1443,2.316,1444,3.588,1445,3.971,1446,2.316,1447,3.199,1448,2.316,1449,2.316,1450,2.316,1451,2.316,1452,2.316,1453,2.316,1454,1.19,1455,2.316,1456,2.789,1457,1.467,1458,2.02,1459,2.316,1460,2.721,1461,2.316,1462,2.316,1463,3.667,1464,2.02,1465,2.316,1466,3.199,1467,2.316,1468,2.316,1469,2.02,1470,2.316,1471,2.316,1472,2.02,1473,2.316]],["title/modules/DonorCardModule.html",[0,1.232,1474,2.755]],["body/modules/DonorCardModule.html",[2,1.715,3,2.085,8,0.013,18,2.31,19,1.836,20,1.501,21,0.175,22,0.215,23,0.175,24,0.117,26,2.666,28,2.393,35,0.337,47,2.31,48,0.363,49,3.547,50,2.671,98,0.215,99,0.175,109,0.009,110,0.011,111,0.009,521,2.721,522,1.901,549,1.836,550,2.232,614,4.479,658,2.57,659,2.767,660,2.114,661,6.024,1343,3.396,1344,4.479,1345,4.122,1474,5.662,1475,4.956,1476,4.956,1477,4.956,1478,4.956,1479,5.446,1480,5.446,1481,5.682,1482,5.682,1483,3.837,1484,5.682,1485,5.682,1486,4.122,1487,5.682]],["title/interfaces/DrawerContainersChanged.html",[112,0.557,976,2.439]],["body/interfaces/DrawerContainersChanged.html",[8,0.013,21,0.145,22,0.178,23,0.145,24,0.097,35,0.195,98,0.308,99,0.145,103,0.802,109,0.007,110,0.009,111,0.007,112,0.987,114,1.577,118,0.481,119,0.938,125,1.329,126,0.905,130,0.987,176,1.804,179,2.349,181,2.987,193,1.245,205,1.985,208,2.54,219,0.747,236,1.577,309,2.899,315,4.041,359,2.557,434,2.54,435,2.54,436,2.422,437,2.041,438,2.818,439,2.987,440,2.987,452,2.54,483,2.843,553,1.376,560,0.922,579,1.518,580,1.677,635,2.659,636,2.285,648,1.985,671,2.793,761,2.736,764,2.216,775,3.262,779,2.126,780,2.769,783,2.461,786,3.185,802,2.769,856,2.818,857,3.154,918,3.671,922,4.147,946,2.818,969,3.671,970,2.818,971,4.143,972,4.147,973,4.147,974,4.326,975,3.184,976,4.082,977,4.147,978,3.478,979,3.671,980,4.147,981,3.42,982,3.42,983,3.671,984,3.671,985,3.015,986,3.42,987,2.315,988,3.184,989,4.147,990,2.818,991,3.508]],["title/interfaces/DrawerInitialized.html",[112,0.557,983,2.439]],["body/interfaces/DrawerInitialized.html",[8,0.013,21,0.148,22,0.181,23,0.148,24,0.099,35,0.198,98,0.309,99,0.148,103,0.816,109,0.007,110,0.009,111,0.007,112,0.994,114,1.604,118,0.49,119,0.948,125,1.343,126,0.905,130,0.939,176,1.64,179,2.345,181,3.038,193,1.266,205,2.006,208,2.583,219,0.76,236,1.604,309,2.759,315,3.344,359,1.996,434,2.583,435,2.583,436,2.463,437,2.076,438,2.866,439,3.038,440,3.038,452,2.583,483,2.866,553,1.4,560,0.937,579,1.534,580,1.695,635,2.688,636,2.31,648,2.006,671,2.811,761,2.759,764,2.254,775,3.283,779,2.162,780,2.799,783,2.488,786,3.193,802,2.799,856,2.866,857,3.189,918,3.711,922,3.238,946,2.866,969,3.711,970,2.866,971,4.162,972,4.192,973,4.192,974,4.361,975,3.238,976,3.711,977,3.238,978,2.716,979,3.711,980,4.192,981,4.503,982,4.503,983,4.115,984,3.711,985,3.048,986,3.478,987,2.354,988,3.238,989,4.192,990,2.866,991,3.536]],["title/modules/DrawerModule.html",[0,1.232,11,2.755]],["body/modules/DrawerModule.html",[2,1.628,3,2.019,8,0.013,11,5.718,18,2.238,19,1.743,20,1.424,21,0.166,22,0.204,23,0.166,24,0.111,26,2.582,28,1.868,35,0.34,47,2.238,48,0.345,49,3.435,50,2.535,56,5.834,57,4.237,58,2.77,59,5.834,60,4.704,91,2.905,92,3.912,93,4.251,98,0.204,99,0.166,109,0.008,110,0.01,111,0.008,172,2.612,517,2.703,519,2.703,552,2.703,553,1.574,658,2.489,830,4.704,831,3.912,975,3.641,1488,4.704,1489,4.704,1490,4.704,1491,5.393,1492,3.998,1493,3.998,1494,5.393,1495,4.251,1496,5.393]],["title/interfaces/DrawerToggled.html",[112,0.557,984,2.439]],["body/interfaces/DrawerToggled.html",[8,0.013,21,0.141,22,0.172,23,0.141,24,0.094,35,0.189,98,0.307,99,0.141,103,0.777,109,0.007,110,0.009,111,0.007,112,0.975,114,1.528,118,0.466,119,0.919,125,1.65,126,0.907,130,0.918,176,1.588,179,2.363,181,2.893,193,1.588,205,2.31,208,3.24,219,0.724,236,2.012,309,2.863,315,3.24,359,1.901,434,2.46,435,2.46,436,2.346,437,1.978,438,2.73,439,2.893,440,2.893,452,2.46,483,2.8,553,1.756,560,0.893,579,1.486,580,2.082,635,2.604,636,2.837,648,2.464,671,2.758,761,2.694,764,2.147,775,3.222,779,2.712,780,2.712,783,2.41,786,3.172,802,2.712,856,2.73,857,3.089,918,4.558,922,3.084,946,2.73,969,3.595,970,2.73,971,4,972,4.061,973,4.061,974,4.26,975,3.084,976,3.595,977,3.084,978,2.587,979,3.595,980,4.061,981,3.313,982,3.313,983,3.595,984,4.019,985,3.743,986,4.363,987,2.953,988,4.061,989,4.061,990,2.73,991,3.454]],["title/components/DropdownComponent.html",[130,0.557,525,1.319]],["body/components/DropdownComponent.html",[7,1.053,8,0.013,9,1.053,21,0.1,22,0.123,23,0.1,24,0.153,29,1.175,31,1.624,33,0.995,34,1.292,35,0.197,38,0.682,48,0.208,65,1.5,98,0.123,99,0.1,101,1.755,102,0.899,109,0.005,110,0.007,111,0.007,118,0.333,119,0.726,120,0.781,126,0.756,127,1.326,128,1.169,130,1.01,158,4.435,170,1.017,172,1.017,176,1.256,179,1.585,182,2.742,183,1.77,185,1.707,187,1.707,188,1.707,193,1.256,196,1.483,197,3.224,216,1.129,219,0.89,228,2.562,230,2.064,231,1.09,251,1.342,252,1.256,253,1.175,255,0.832,278,2.363,317,0.753,318,2.474,323,1.77,336,1.631,356,3.273,376,1.212,384,2.568,418,1.137,419,1.127,420,1.624,430,3.748,432,2.64,444,1.212,445,1.053,449,1.169,451,1.053,453,1.98,478,2.474,507,1.212,508,1.537,509,1.537,510,1.212,511,2.298,512,1.212,513,1.212,514,1.212,515,1.053,516,1.212,517,1.053,518,1.212,519,1.053,520,1.77,521,1.053,522,1.09,523,1.212,524,1.212,525,1.996,526,1.212,527,1.053,528,1.169,529,1.212,530,1.053,531,1.537,532,1.212,533,1.053,534,1.212,535,1.053,536,1.212,537,1.053,538,1.212,539,1.09,540,1.212,541,1.053,542,1.212,543,1.053,544,1.212,545,1.053,546,1.169,547,1.212,548,1.053,549,1.053,550,1.053,551,1.212,552,1.053,553,0.951,554,1.212,555,1.053,556,1.212,557,1.212,558,1.169,560,1.098,564,2.443,571,3.181,572,2.235,573,4.427,574,2.2,575,3.691,577,3.357,578,3.025,579,1.175,596,2.532,602,4.901,613,2.144,615,1.845,616,1.755,618,2.568,624,4.16,625,3.926,626,3.91,633,3.211,637,2.335,638,3.373,640,3.357,641,1.947,642,2.363,643,1.469,648,2.289,835,1.356,857,2.443,901,4.867,906,2.843,915,2.843,927,2.2,928,1.599,933,2.432,961,2.784,1045,3.45,1068,1.947,1410,2.064,1411,3.558,1414,3.522,1416,3.172,1433,2.2,1434,1.531,1441,1.845,1454,1.673,1456,2.562,1497,2.842,1498,6.846,1499,6.332,1500,5.616,1501,4.755,1502,5.616,1503,4.755,1504,6.175,1505,4.755,1506,3.258,1507,3.748,1508,3.258,1509,4.755,1510,2.843,1511,3.258,1512,3.258,1513,4.755,1514,3.258,1515,3.258,1516,4.755,1517,4.867,1518,4.867,1519,4.148,1520,3.45,1521,3.72,1522,4.755,1523,3.258,1524,3.258,1525,3.258,1526,4.148,1527,4.755,1528,3.258,1529,4.148,1530,4.486,1531,4.233,1532,4.427,1533,5.616,1534,2.568,1535,2.568,1536,3.025,1537,3.45,1538,2.568,1539,4.17,1540,3.748,1541,2.2,1542,4.479,1543,2.2,1544,4.148,1545,2.842,1546,3.258,1547,2.842,1548,2.842,1549,3.45,1550,2.842,1551,3.258,1552,2.568,1553,3.258,1554,2.064,1555,2.363,1556,3.258,1557,2.568,1558,3.258,1559,2.842,1560,2.842,1561,3.258]],["title/modules/DropdownModule.html",[0,1.232,1562,2.755]],["body/modules/DropdownModule.html",[2,1.81,3,2.153,8,0.013,18,2.386,19,1.938,20,1.583,21,0.184,22,0.226,23,0.184,24,0.124,26,2.753,28,2.077,35,0.333,47,2.386,48,0.383,98,0.226,99,0.184,109,0.009,110,0.011,111,0.009,525,2.738,658,2.654,659,2.858,660,2.231,1531,3.584,1562,5.572,1563,5.23,1564,5.23,1565,5.23,1566,5.995,1567,5.622,1568,4.726,1569,6.222,1570,5.23,1571,5.995]],["title/components/DualSliderComponent.html",[130,0.557,527,1.319]],["body/components/DualSliderComponent.html",[7,0.583,8,0.013,9,0.583,21,0.056,22,0.068,23,0.056,24,0.159,29,0.74,31,1.714,33,1.327,34,1.5,35,0.205,38,0.377,42,1.218,48,0.115,53,1.422,65,1.391,82,5.198,98,0.068,99,0.056,100,1.075,102,0.566,103,1.009,109,0.003,110,0.005,111,0.005,118,0.184,119,0.683,120,0.93,126,0.756,127,0.874,130,0.865,131,4.003,133,1.422,158,4.394,170,0.563,172,0.563,176,0.791,179,1.084,182,2.52,183,1.114,185,1.075,190,2.295,191,1.921,193,1.412,196,1.014,197,2.787,198,3.026,205,1.444,210,1.497,216,0.625,219,0.608,226,1.073,228,2.407,230,4.295,231,0.604,251,1.262,252,0.791,253,1.321,255,0.765,261,1.777,278,1.309,308,3.898,309,2.142,317,0.888,318,1.538,323,1.428,326,6.12,336,1.625,343,1.79,346,2.172,352,1.218,356,1.35,359,1.247,371,1.789,373,1.297,376,1.428,418,1.354,419,1.158,420,1.603,430,2.36,432,1.408,434,2.068,435,2.068,437,1.662,444,0.671,445,0.583,449,0.648,451,1.241,452,2.407,453,1.247,478,2.142,507,0.671,508,0.968,509,2.26,510,0.671,511,1.663,512,0.671,513,0.671,514,0.671,515,0.583,516,0.671,517,0.583,518,0.671,519,0.583,520,1.114,521,0.583,522,0.604,523,0.671,524,0.671,525,0.583,526,0.671,527,1.444,528,2.277,529,0.671,530,0.583,531,0.968,532,0.671,533,0.583,534,0.671,535,0.583,536,0.671,537,0.583,538,0.671,539,0.604,540,0.671,541,0.583,542,0.671,543,0.583,544,0.671,545,0.583,546,0.648,547,0.671,548,0.583,549,0.583,550,0.583,551,0.671,552,0.583,553,0.527,554,0.671,555,0.583,556,0.671,557,0.671,558,1.075,560,1.159,564,2.295,571,3.768,572,1.408,573,3.026,575,2.671,577,2.671,578,2.068,579,1.105,580,1.619,591,1.422,594,2.36,596,1.731,609,3.324,613,1.35,615,1.022,616,0.972,618,1.422,623,1.574,624,2.831,625,2.671,626,2.67,633,1.218,636,1.845,637,2.433,638,2.295,640,2.963,641,1.79,642,2.172,643,2.554,644,1.79,648,1.831,706,2.592,746,1.598,758,2.67,771,2.407,774,2.022,775,0.813,781,1.538,783,2.375,794,1.297,798,2.022,835,1.247,842,1.79,843,0.972,857,0.927,863,1.696,878,1.022,881,3.898,885,1.538,901,3.907,906,3.386,915,3.677,928,0.886,933,2.146,961,2.41,978,2.531,987,2.91,1045,2.172,1068,1.078,1207,3.018,1213,2.172,1364,2.831,1371,1.897,1380,2.831,1384,1.79,1410,1.143,1411,1.897,1412,2.068,1413,1.696,1414,2.746,1415,1.309,1416,1.538,1419,1.078,1421,3.506,1434,2.101,1435,0.972,1441,1.022,1454,0.927,1456,2.068,1507,2.36,1517,2.36,1518,2.36,1520,3.878,1521,2.808,1526,2.612,1529,2.612,1530,3.14,1531,2.963,1532,2.36,1534,1.422,1535,2.36,1536,2.407,1537,1.309,1538,1.422,1539,3.018,1540,2.36,1541,1.218,1542,3.242,1543,2.022,1544,2.612,1547,1.574,1548,1.574,1549,2.172,1550,1.574,1552,1.422,1554,1.143,1557,2.36,1559,1.574,1560,1.574,1572,6.067,1573,1.574,1574,2.172,1575,5.958,1576,3.026,1577,3.839,1578,2.994,1579,3.839,1580,5.928,1581,5.346,1582,5.928,1583,6.151,1584,5.664,1585,4.469,1586,4.469,1587,2.994,1588,4.469,1589,2.36,1590,2.994,1591,2.994,1592,5.346,1593,4.469,1594,4.469,1595,3.839,1596,2.994,1597,2.994,1598,2.994,1599,4.957,1600,1.804,1601,2.994,1602,2.612,1603,2.994,1604,2.172,1605,1.804,1606,2.994,1607,1.804,1608,6.151,1609,1.804,1610,2.172,1611,2.994,1612,1.804,1613,2.36,1614,4.324,1615,1.804,1616,4.324,1617,3.839,1618,3.898,1619,4.469,1620,4.469,1621,3.898,1622,4.469,1623,4.469,1624,4.469,1625,4.469,1626,1.804,1627,2.994,1628,2.994,1629,1.804,1630,1.804,1631,1.79,1632,2.36,1633,3.522,1634,1.804,1635,2.994,1636,1.804,1637,2.994,1638,2.612,1639,1.804,1640,4.957,1641,1.804,1642,5.664,1643,3.839,1644,4.469,1645,3.839,1646,2.994,1647,1.804,1648,4.469,1649,1.804,1650,2.612,1651,1.804,1652,2.994,1653,1.804,1654,3.349,1655,1.804,1656,1.804,1657,4.469,1658,2.36,1659,1.804,1660,2.612,1661,1.804,1662,1.804,1663,1.804,1664,2.994,1665,2.994,1666,1.804,1667,2.36,1668,3.839,1669,2.994,1670,1.804,1671,1.804,1672,1.804,1673,2.994,1674,2.612,1675,2.994,1676,1.574,1677,1.574,1678,3.522,1679,1.804,1680,1.804,1681,1.804,1682,1.804,1683,2.994,1684,1.804,1685,1.804,1686,1.804,1687,1.804,1688,1.804,1689,1.804,1690,1.804,1691,1.574,1692,1.804,1693,2.994,1694,1.804,1695,2.994,1696,1.804,1697,1.804,1698,2.994,1699,2.994,1700,1.804,1701,3.839,1702,1.804,1703,1.804,1704,1.804,1705,1.804,1706,1.804,1707,1.804,1708,1.804,1709,1.804,1710,1.804,1711,1.804,1712,2.994,1713,3.839,1714,2.994,1715,3.839,1716,1.804,1717,1.804,1718,1.804,1719,1.804,1720,1.804,1721,1.804,1722,4.469,1723,1.804,1724,1.804,1725,1.804,1726,2.994,1727,2.994,1728,2.994,1729,1.804,1730,2.022,1731,1.804,1732,1.804,1733,2.022,1734,1.804,1735,1.804,1736,1.804,1737,2.994,1738,1.804,1739,1.804,1740,1.804,1741,1.804,1742,1.422,1743,2.994,1744,1.574,1745,1.804,1746,1.804,1747,1.804]],["title/modules/DualSliderModule.html",[0,1.232,12,2.585]],["body/modules/DualSliderModule.html",[2,1.751,3,2.111,8,0.013,12,5.192,18,2.339,19,1.874,20,1.531,21,0.178,22,0.219,23,0.178,24,0.12,26,2.699,28,2.009,35,0.342,42,3.916,47,2.339,48,0.371,82,3.916,98,0.219,99,0.178,109,0.009,110,0.011,111,0.009,527,2.727,528,2.081,658,2.602,659,2.802,660,2.158,1531,3.466,1567,5.511,1568,4.571,1569,6.099,1570,5.058,1572,4.571,1575,4.206,1676,5.058,1678,4.571,1748,5.058,1749,5.058,1750,5.058,1751,5.798,1752,6.991,1753,6.991,1754,6.991,1755,5.798]],["title/components/FiltersContentComponent.html",[130,0.557,530,1.319]],["body/components/FiltersContentComponent.html",[7,1.046,8,0.013,9,1.046,21,0.1,22,0.122,23,0.1,24,0.157,29,1.17,31,1.681,33,1.171,34,1.432,35,0.231,38,0.677,48,0.207,65,1.504,91,2.55,98,0.122,99,0.1,101,1.744,102,1.057,109,0.005,110,0.007,111,0.007,118,0.331,120,0.778,125,1.024,126,0.773,127,1.246,128,1.162,130,0.964,163,2.824,170,1.011,172,1.011,176,1.626,179,1.58,182,2.74,183,1.762,185,1.699,187,1.699,188,1.699,196,1.478,213,2.432,216,1.122,219,0.976,228,3.686,231,1.083,251,1.336,252,1.25,253,1.383,254,1.626,255,0.827,291,4.06,293,2.324,309,1.897,316,3.115,318,1.297,323,1.762,336,1.626,354,2.894,371,1.872,418,1.132,419,1.124,420,1.466,444,1.205,445,1.046,449,1.162,451,1.046,453,1.971,478,2.625,483,1.348,507,1.205,508,1.53,509,1.53,510,1.205,511,2.291,512,1.205,513,1.205,514,1.205,515,1.046,516,1.205,517,1.046,518,1.205,519,1.046,520,1.762,521,1.046,522,1.083,523,1.205,524,1.205,525,1.046,526,1.205,527,1.046,528,1.699,529,1.205,530,1.99,531,2.675,532,1.205,533,1.046,534,1.205,535,1.046,536,1.205,537,1.046,538,1.205,539,1.083,540,1.205,541,1.046,542,1.205,543,1.046,544,1.205,545,1.046,546,1.162,547,1.205,548,1.046,549,1.046,550,1.046,551,1.205,552,1.046,553,0.945,554,1.205,555,1.046,556,1.205,557,1.205,558,1.162,560,1.094,564,2.432,572,2.225,574,2.186,575,3.68,577,3.345,578,3.015,579,1.17,596,2.954,602,2.186,608,2.186,610,3.434,613,2.523,615,1.834,616,1.744,635,1.402,636,2.438,637,2.324,643,2.776,644,1.935,645,2.552,648,1.99,649,4.13,651,2.824,704,2.83,706,4.772,775,2.954,781,2.432,878,3.876,885,2.875,886,4.882,915,2.83,928,3.359,933,2.423,987,3.023,1055,2.349,1064,3.197,1068,1.935,1239,1.744,1349,2.824,1362,3.434,1363,1.935,1364,2.999,1371,2.999,1374,3.732,1412,2.55,1413,2.682,1414,2.432,1415,3.434,1416,1.663,1417,1.834,1419,1.935,1420,1.935,1421,1.744,1434,2.631,1441,1.834,1456,2.55,1498,2.824,1520,3.434,1521,2.682,1539,2.186,1549,2.349,1575,2.349,1756,5.141,1757,5.523,1758,2.824,1759,3.732,1760,4.853,1761,4.734,1762,6.157,1763,6.157,1764,4.734,1765,4.882,1766,4.882,1767,4.882,1768,4.882,1769,4.734,1770,3.238,1771,3.238,1772,3.238,1773,3.238,1774,4.13,1775,3.238,1776,4.13,1777,3.238,1778,6.157,1779,3.238,1780,4.734,1781,4.734,1782,3.238,1783,4.734,1784,6.157,1785,4.882,1786,3.238,1787,5.596,1788,3.238,1789,4.734,1790,3.238,1791,3.238,1792,3.238,1793,3.238,1794,4.853,1795,4.882,1796,3.238,1797,3.238,1798,3.238,1799,2.552,1800,4.734,1801,3.238,1802,2.349,1803,3.238,1804,2.824,1805,2.349]],["title/modules/FiltersContentModule.html",[0,1.232,1806,2.755]],["body/modules/FiltersContentModule.html",[2,1.702,3,2.075,8,0.013,12,5.099,18,2.299,19,1.822,20,1.489,21,0.173,22,0.213,23,0.173,24,0.116,26,2.653,28,2.381,35,0.34,47,2.299,48,0.36,49,3.53,50,2.65,81,4.917,82,3.806,83,4.917,98,0.213,99,0.173,109,0.009,110,0.011,111,0.009,530,2.718,531,1.822,653,5.435,658,2.557,659,2.754,660,2.097,1562,5.435,1756,3.806,1757,4.089,1806,5.698,1807,4.917,1808,4.917,1809,5.636,1810,4.917,1811,5.636,1812,5.636,1813,5.636,1814,5.636,1815,4.641,1816,3.806]],["title/components/FiltersPopoverComponent.html",[130,0.557,170,1.274]],["body/components/FiltersPopoverComponent.html",[7,1.082,8,0.013,9,1.082,20,1.507,21,0.103,22,0.126,23,0.103,24,0.156,29,1.199,31,1.667,33,1.194,34,1.448,35,0.138,38,0.7,48,0.214,65,1.501,72,5.111,91,2.613,98,0.126,99,0.103,102,0.633,109,0.005,110,0.007,111,0.007,118,0.582,119,0.741,120,0.55,125,1.05,126,0.739,127,1.103,128,1.202,130,0.906,170,1.954,172,1.046,176,1.281,179,1.874,182,2.75,183,1.805,185,1.741,187,1.741,188,1.741,191,1.782,195,4.224,196,1.507,201,3.963,205,2.022,213,2.492,216,1.16,219,0.53,228,3.369,231,1.12,253,0.827,254,1.652,291,2.428,293,3.071,316,2.506,317,0.774,318,1.944,323,1.246,326,6.043,336,1.507,344,2.9,346,3.519,354,2.94,355,3.276,376,1.246,394,2.28,396,3.276,418,0.8,419,1.041,420,0.749,444,1.246,445,1.082,449,1.202,451,1.082,453,2.019,478,2.66,499,2.428,507,1.246,508,1.568,509,1.568,510,1.246,511,2.327,512,1.246,513,1.246,514,1.246,515,1.082,516,1.246,517,1.082,518,1.246,519,1.082,520,1.805,521,1.082,522,1.12,523,1.246,524,1.246,525,1.082,526,1.246,527,1.082,528,1.202,529,1.246,530,1.082,531,2.689,532,1.246,533,1.082,534,1.246,535,1.082,536,1.246,537,1.082,538,1.246,539,1.12,540,1.246,541,1.082,542,1.246,543,1.082,544,1.246,545,1.082,546,1.202,547,1.246,548,1.082,549,1.082,550,1.082,551,1.246,552,1.082,553,0.977,554,1.246,555,1.082,556,1.246,557,1.246,558,2.048,560,0.948,564,3.213,572,2.28,596,2.572,605,2.261,613,2.187,633,2.261,635,2.1,636,1.246,637,1.643,639,2.428,648,2.022,704,3.969,781,2.492,835,2.764,863,3.543,876,3.231,878,1.896,928,3.506,933,2.47,961,2.572,968,3.614,985,2.8,1045,3.519,1064,3.276,1068,2.001,1210,3.276,1362,3.519,1363,2.001,1364,3.073,1414,2.93,1416,2.93,1417,1.896,1420,2.001,1421,2.613,1434,2.28,1441,4.222,1454,1.72,1456,2.613,1460,2.001,1466,2.92,1521,3.761,1536,3.369,1539,2.261,1543,3.276,1549,3.519,1554,2.121,1574,2.428,1756,5.111,1759,5.457,1760,3.823,1765,4.976,1766,4.976,1767,4.231,1768,4.976,1785,2.92,1795,5.456,1799,2.639,1802,2.428,1817,2.92,1818,5.704,1819,4.851,1820,5.704,1821,6.255,1822,6.255,1823,5.704,1824,3.348,1825,5.456,1826,4.851,1827,3.348,1828,4.231,1829,4.231,1830,4.231,1831,3.348,1832,3.348,1833,3.348,1834,4.851,1835,3.348,1836,6.255,1837,3.348,1838,3.348,1839,3.348,1840,5.704,1841,3.348,1842,3.348,1843,4.851,1844,3.348,1845,3.348,1846,3.348,1847,3.348,1848,4.851,1849,3.348,1850,3.348,1851,3.348]],["title/modules/FiltersPopoverModule.html",[0,1.232,13,2.755]],["body/modules/FiltersPopoverModule.html",[2,1.777,3,2.13,8,0.013,13,5.634,18,2.361,19,1.903,20,1.555,21,0.181,22,0.222,23,0.181,24,0.122,26,2.723,28,2.444,35,0.331,47,2.361,48,0.376,49,3.624,50,2.767,72,3.975,98,0.222,99,0.181,109,0.009,110,0.011,111,0.009,170,2.64,171,5.135,531,2.28,658,2.626,659,2.827,660,2.191,1756,3.975,1757,4.271,1806,5.491,1852,5.135,1853,5.135,1854,5.887,1855,5.135,1856,5.887,1857,5.887]],["title/classes/FlatNode.html",[99,0.126,1858,3.216]],["body/classes/FlatNode.html",[8,0.013,21,0.14,22,0.172,23,0.14,24,0.163,29,1.481,31,1.737,33,1.492,35,0.188,65,0.829,98,0.172,99,0.14,102,0.858,109,0.007,110,0.009,111,0.007,118,0.464,119,0.915,120,1.294,125,1.543,126,0.828,127,1.057,130,0.818,136,1.754,190,3.445,193,1.583,196,2.081,197,3.485,205,1.937,210,1.809,213,3.911,219,1.174,226,1.451,251,2.013,252,1.583,253,1.763,255,1.161,317,1.386,319,2.942,336,1.2,418,1.433,419,1.094,420,1.341,445,2.547,560,1.311,580,2.197,774,4.047,933,2.904,1521,3.799,1602,5.228,1658,4.724,1858,5.621,1859,3.295,1860,6.873,1861,3.963,1862,4.319,1863,5.286,1864,5.85,1865,4.543,1866,4.918,1867,6.01,1868,4.543,1869,7.021,1870,7.972,1871,4.543,1872,5.228,1873,4.543,1874,4.543,1875,5.993,1876,4.543,1877,5.993,1878,4.543,1879,4.543,1880,5.993,1881,4.543,1882,4.543,1883,5.993,1884,4.724,1885,4.543,1886,4.543,1887,4.543,1888,4.543]],["title/components/HeaderComponent.html",[130,0.557,533,1.319]],["body/components/HeaderComponent.html",[7,1.248,8,0.013,9,1.248,21,0.19,22,0.146,23,0.119,24,0.157,31,1.665,35,0.16,38,0.808,48,0.247,65,1.526,94,2.607,98,0.146,99,0.119,102,1.014,109,0.006,110,0.008,111,0.008,118,0.394,121,4.732,122,4.863,124,4.863,125,1.443,126,0.794,127,1.176,128,1.386,130,0.842,170,1.206,172,1.206,176,1.417,179,1.742,182,2.79,183,1.997,185,1.926,187,1.926,188,1.926,196,1.629,211,4.837,212,2.891,216,1.337,219,0.85,231,1.291,249,4.863,254,1.417,300,3.208,303,1.436,314,3.893,316,2.808,323,1.436,336,1.417,371,2.345,376,1.436,389,3.4,399,4.681,401,5.382,419,0.98,432,2.9,444,1.436,445,1.248,449,1.386,451,1.248,453,2.234,478,2.907,507,1.436,508,1.734,509,1.734,510,1.436,511,2.481,512,1.436,513,1.436,514,1.436,515,1.248,516,1.436,517,1.248,518,1.436,519,1.248,520,1.997,521,1.248,522,1.291,523,1.436,524,1.436,525,1.248,526,1.436,527,1.248,528,1.386,529,1.436,530,1.248,531,2.265,532,1.436,533,2.155,534,1.436,535,1.248,536,1.436,537,1.248,538,1.436,539,1.291,540,1.436,541,1.248,542,1.436,543,1.248,544,1.436,545,1.248,546,1.386,547,1.436,548,1.248,549,1.248,550,1.248,551,1.436,552,1.248,553,1.127,554,1.436,555,1.248,556,1.436,557,1.436,558,1.386,560,0.755,564,3.425,572,2.523,591,3.043,596,3.16,610,3.893,613,2.782,636,1.997,638,2.757,640,3.208,641,2.307,643,3.16,648,2.155,704,3.208,839,4.681,885,3.169,906,2.307,927,2.607,928,1.895,961,3.16,977,2.607,987,3.274,1050,4.681,1363,3.208,1371,4.596,1412,3.323,1413,3.495,1414,1.983,1416,3.169,1417,2.187,1418,3.043,1420,2.307,1421,2.079,1433,2.607,1435,2.079,1438,2.8,1460,3.688,1510,3.208,1536,2.891,1541,2.607,1554,2.445,1555,2.8,1760,4.23,1794,4.863,1889,3.367,1890,5.817,1891,6.328,1892,6.668,1893,3.624,1894,6.169,1895,5.367,1896,6.169,1897,6.169,1898,3.86,1899,3.86,1900,4.475,1901,3.86,1902,5.367,1903,3.86,1904,3.86,1905,3.86,1906,3.86,1907,5.367,1908,3.367,1909,3.86,1910,3.86,1911,3.86,1912,2.8,1913,3.86,1914,3.86,1915,3.86,1916,3.86,1917,3.043,1918,3.86,1919,3.86,1920,3.86,1921,3.86,1922,3.86,1923,3.86,1924,3.86,1925,2.445]],["title/modules/HeaderModule.html",[0,1.232,995,2.755]],["body/modules/HeaderModule.html",[2,1.782,3,2.134,8,0.013,18,2.364,19,1.908,20,1.559,21,0.182,22,0.223,23,0.182,24,0.122,26,2.728,28,2.045,35,0.34,47,2.364,48,0.377,49,3.63,50,2.775,54,5.571,55,4.653,98,0.223,99,0.182,109,0.009,110,0.011,111,0.009,533,2.733,658,2.63,659,2.832,660,2.197,995,5.555,1815,4.772,1816,3.986,1926,5.15,1927,5.15,1928,5.15,1929,5.903,1930,7.067,1931,5.903,1932,5.903]],["title/interfaces/IconDefinition.html",[112,0.557,1933,2.96]],["body/interfaces/IconDefinition.html",[8,0.013,21,0.119,22,0.146,23,0.119,24,0.08,33,1.396,34,0.809,35,0.308,48,0.247,50,1.818,57,2.45,58,1.986,98,0.203,99,0.119,102,0.731,103,1.292,109,0.006,110,0.008,111,0.006,112,0.528,114,1.294,116,1.55,118,0.395,119,0.821,120,1.282,125,1.163,126,0.712,127,1.338,191,2.267,193,1.631,210,1.864,212,4.318,213,2.76,219,0.851,226,1.643,236,2.233,251,1.092,252,1.021,253,1.794,255,0.988,261,1.822,293,3.564,317,1.243,320,3.048,373,1.674,404,1.243,419,1.473,420,0.865,483,2.778,508,2.572,560,0.756,579,0.956,604,5.087,626,2.895,670,2.76,672,2.76,673,2.526,674,1.986,676,1.986,677,1.818,863,3.044,1025,3.048,1033,4.236,1105,2.805,1173,2.312,1235,2.611,1238,5.984,1239,4.502,1244,4.506,1249,5.772,1250,5.087,1251,5.401,1252,5.26,1253,3.898,1254,4.506,1256,3.629,1383,3.629,1384,3.212,1604,2.805,1613,3.048,1933,5.401,1934,2.805,1935,3.048,1936,4.687,1937,5.821,1938,5.26,1939,5.387,1940,4.236,1941,3.373,1942,2.45,1943,6.332,1944,3.373,1945,4.236,1946,3.373,1947,3.373,1948,2.191,1949,3.373,1950,3.048,1951,3.373,1952,3.373,1953,3.373,1954,4.687,1955,4.236,1956,3.373,1957,3.373,1958,3.373,1959,3.373,1960,3.373,1961,4.687,1962,3.373,1963,3.373,1964,3.373,1965,3.373,1966,3.048,1967,3.373,1968,3.373,1969,5.387,1970,3.373,1971,3.048,1972,3.373,1973,3.373,1974,3.373,1975,3.373,1976,3.373,1977,3.373,1978,3.373,1979,3.373,1980,3.373,1981,3.373,1982,3.373,1983,3.373,1984,3.373]],["title/injectables/IconRegistryState.html",[404,0.944,1942,2.585]],["body/injectables/IconRegistryState.html",[8,0.013,21,0.108,22,0.133,23,0.108,24,0.145,29,1.242,31,1.514,33,1.55,34,0.735,35,0.299,48,0.225,50,1.652,57,2.226,58,1.805,98,0.19,99,0.108,102,0.664,103,1.261,109,0.005,110,0.008,111,0.005,112,0.48,116,2.013,118,0.359,120,1.19,125,1.384,126,0.722,127,1.193,191,2.314,193,1.859,210,2.043,212,4.063,213,1.805,219,0.557,226,1.603,236,2.355,251,1.418,252,1.327,253,1.739,255,1.283,261,2.089,293,2.878,317,1.356,320,3.959,373,2.175,404,1.162,405,1.725,418,1.618,419,1.469,420,0.786,483,2.663,508,2.437,560,1.251,579,1.242,604,5.375,626,3.446,670,3.011,672,2.58,673,2.361,674,1.805,676,1.805,677,1.652,746,1.463,863,1.991,1025,3.959,1033,4.621,1105,3.644,1173,2.101,1235,4.752,1238,5.945,1239,4.473,1244,5.003,1249,5.375,1250,4.64,1251,5.375,1252,3.959,1253,2.549,1254,4.319,1256,3.392,1383,4.319,1384,3.823,1604,3.644,1613,3.959,1933,5.766,1934,5.105,1935,2.77,1936,3.066,1937,4.382,1938,3.959,1939,6.139,1940,5.042,1941,3.066,1942,3.182,1943,6.674,1944,4.382,1945,5.042,1946,4.382,1947,4.382,1948,3.321,1949,3.066,1950,2.77,1951,3.066,1952,3.066,1953,4.382,1954,5.58,1955,5.042,1956,4.382,1957,3.066,1958,4.382,1959,5.58,1960,4.382,1961,4.382,1962,3.066,1963,3.066,1964,3.066,1965,3.066,1966,2.77,1967,3.066,1968,3.066,1969,5.114,1970,3.066,1971,2.77,1972,3.066,1973,3.066,1974,3.066,1975,5.114,1976,3.066,1977,3.066,1978,3.066,1979,3.066,1980,3.066,1981,3.066,1982,4.382,1983,5.114,1984,3.066,1985,5.023,1986,3.514,1987,3.514,1988,3.514,1989,3.514,1990,3.514,1991,3.514,1992,3.514,1993,3.514]],["title/classes/InitializationState.html",[99,0.126,1994,3.216]],["body/classes/InitializationState.html",[8,0.013,20,0.927,21,0.067,22,0.083,23,0.067,24,0.127,29,0.867,31,1.31,33,1.226,34,1.515,35,0.227,48,0.14,65,0.641,98,0.083,99,0.135,100,0.787,102,1.037,103,1.151,109,0.003,110,0.005,111,0.003,118,0.224,119,0.536,125,1.522,126,0.625,128,0.787,129,2.223,130,0.799,131,2.37,145,0.733,172,1.371,176,0.579,179,2.277,182,0.733,183,0.815,185,0.787,187,0.787,188,0.787,190,2.254,191,1.996,193,0.927,205,1.988,208,3.901,210,2.086,213,1.802,219,0.975,226,1.631,229,1.388,236,2.559,251,0.619,252,0.579,253,1.52,255,0.56,261,2.154,263,2.223,280,1.48,293,3.391,297,1.988,309,0.878,317,1.161,318,1.406,319,2.876,323,1.306,336,1.887,343,1.31,346,2.546,347,2.766,394,2.063,396,2.37,418,0.839,420,1.228,434,3.789,435,3.789,436,2.254,437,3.046,438,2.623,439,2.78,440,2.78,452,2.957,478,2.011,483,0.912,508,1.134,509,1.988,553,0.64,558,0.787,560,0.428,564,2.254,579,0.542,580,0.958,596,0.988,608,3.388,609,2.262,610,1.59,613,2.773,636,2.727,648,2.369,757,2.766,758,1.89,759,1.911,761,2.011,764,2.063,765,1.31,768,3.184,770,1.727,771,1.18,780,1.582,781,1.802,782,1.59,783,1.406,786,1.694,788,1.911,790,1.59,792,1.48,794,0.949,798,1.48,802,1.582,804,1.388,805,1.18,819,2.546,820,1.59,823,3.061,827,1.18,835,2.089,842,3.821,843,3.443,849,1.388,850,1.727,851,1.911,852,1.59,855,3.061,861,1.59,876,1.988,884,1.911,908,1.727,911,1.727,918,4.129,923,1.59,926,1.911,927,4.154,928,1.723,929,1.911,930,1.727,939,1.911,940,1.727,941,1.241,946,2.098,947,1.388,962,2.546,968,2.223,979,1.31,985,3.508,1073,1.59,1079,1.241,1080,2.098,1091,2.098,1247,1.727,1375,1.59,1395,5.109,1519,1.911,1536,1.18,1540,1.727,1542,3.983,1621,1.911,1631,1.31,1667,1.727,1677,1.911,1859,1.59,1994,3.459,1995,1.59,1996,3.509,1997,4.389,1998,6.151,1999,5.018,2000,5.018,2001,5.018,2002,3.509,2003,4.389,2004,2.191,2005,6.908,2006,4.389,2007,2.191,2008,2.191,2009,2.191,2010,2.191,2011,2.191,2012,4.389,2013,2.191,2014,2.191,2015,1.911,2016,3.828,2017,5.366,2018,5.197,2019,3.828,2020,3.828,2021,5.109,2022,3.828,2023,4.789,2024,3.061,2025,3.828,2026,3.459,2027,3.955,2028,3.061,2029,4.377,2030,3.509,2031,2.191,2032,2.191,2033,2.191,2034,2.191,2035,2.191,2036,2.191,2037,2.191,2038,2.191,2039,3.509,2040,2.191,2041,3.509,2042,2.191,2043,2.191,2044,2.191,2045,1.727,2046,5.49,2047,2.191,2048,2.191,2049,2.191,2050,3.828,2051,1.911,2052,3.061,2053,3.509,2054,2.191,2055,5.018,2056,2.191,2057,3.509,2058,2.191,2059,2.191,2060,2.191,2061,4.389,2062,2.191,2063,2.191,2064,2.191,2065,2.78,2066,2.191,2067,4.389,2068,2.191,2069,2.191,2070,3.061,2071,2.191,2072,2.191,2073,2.191,2074,5.857,2075,3.509,2076,5.018,2077,3.509,2078,3.509,2079,2.191,2080,4.389,2081,3.509,2082,2.191,2083,2.191,2084,2.191,2085,2.191,2086,3.509,2087,3.509,2088,2.191,2089,2.191,2090,4.389,2091,2.191,2092,2.191,2093,2.191,2094,2.191,2095,3.509,2096,2.191,2097,2.191,2098,1.911,2099,2.191,2100,2.191,2101,2.191,2102,4.377,2103,4.389,2104,5.018,2105,3.509,2106,3.509,2107,2.191,2108,2.191,2109,2.191,2110,2.191,2111,2.191,2112,2.191,2113,1.911,2114,1.911,2115,2.191,2116,3.509,2117,2.191,2118,2.191,2119,2.191,2120,2.191,2121,2.191,2122,2.191,2123,2.191,2124,2.191,2125,1.48,2126,2.191,2127,2.191,2128,3.509,2129,2.191,2130,2.191,2131,2.191,2132,2.191,2133,2.191,2134,2.191,2135,3.509,2136,4.389,2137,2.191,2138,2.191,2139,3.509,2140,2.191,2141,2.191,2142,2.191,2143,2.191,2144,2.191,2145,1.727,2146,2.191,2147,2.191,2148,2.191]],["title/interfaces/ListResult.html",[112,0.557,2149,2.585]],["body/interfaces/ListResult.html",[8,0.013,21,0.188,22,0.231,23,0.188,24,0.126,35,0.252,65,1.115,98,0.231,109,0.009,110,0.011,111,0.009,112,0.833,114,2.043,118,0.624,119,1.102,120,1.302,125,1.66,126,0.846,127,1.353,136,2.358,303,2.95,356,3.575,580,2.095,666,4.739,1040,6.249,1358,5.751,2149,4.569,2150,5.328,2151,5.328]],["title/injectables/ListResultsState.html",[164,2.198,404,0.944]],["body/injectables/ListResultsState.html",[8,0.013,21,0.114,22,0.14,23,0.114,24,0.163,29,1.288,31,1.75,33,1.498,34,1.652,35,0.323,46,4.625,48,0.237,65,0.676,66,1.483,98,0.197,99,0.114,100,1.329,102,1.419,103,1.114,109,0.01,110,0.008,111,0.011,112,0.505,116,2.088,118,0.378,119,0.796,120,1.133,126,0.785,127,1.154,137,3.914,142,3.302,145,1.238,146,1.994,147,1.994,149,1.429,162,3.856,164,2.807,166,4.72,191,1.156,193,1.376,210,1.118,226,0.801,236,2.642,251,1.471,252,1.376,253,1.288,254,1.729,255,1.541,258,4.279,261,2.05,297,2.952,303,2.664,317,1.205,354,3.078,356,2.35,359,1.541,371,2.19,404,1.205,405,1.817,418,1.65,419,1.307,420,1.166,560,1.019,579,1.618,664,1.901,666,2.213,670,3.098,671,1.429,672,2.677,673,2.45,674,1.901,675,3.606,676,1.901,677,1.74,682,4.125,703,3.606,708,2.213,709,2.097,711,2.961,731,2.5,737,3.606,746,1.541,916,1.994,1034,4.834,1054,2.5,1093,2.345,1173,2.213,1200,2.5,1358,4.376,1631,3.115,1893,2.5,2149,5.042,2152,6.224,2153,2.918,2154,5.193,2155,5.224,2156,5.212,2157,5.212,2158,5.212,2159,5.212,2160,5.711,2161,3.229,2162,5.212,2163,3.781,2164,4.376,2165,4.073,2166,4.546,2167,3.701,2168,4.546,2169,3.701,2170,2.559,2171,3.701,2172,4.546,2173,3.701,2174,3.701,2175,3.701,2176,3.701,2177,3.781,2178,3.701,2179,4.546,2180,3.701,2181,4.546,2182,3.701,2183,3.519,2184,2.918,2185,2.345,2186,3.229,2187,2.5,2188,2.5,2189,2.685,2190,3.229,2191,3.229,2192,3.229,2193,2.685,2194,2.685,2195,2.345,2196,2.685,2197,2.685,2198,2.5,2199,2.685,2200,2.685,2201,2.685,2202,2.685,2203,3.229,2204,2.685,2205,3.229,2206,3.229,2207,3.229,2208,3.229,2209,3.229,2210,3.229,2211,3.229,2212,3.229,2213,3.229,2214,3.229,2215,3.229,2216,3.229]],["title/interfaces/ListResultsStateModel.html",[112,0.557,2189,2.96]],["body/interfaces/ListResultsStateModel.html",[8,0.013,21,0.137,22,0.168,23,0.137,24,0.092,34,1.583,35,0.334,46,4.399,48,0.284,65,0.811,66,1.78,98,0.223,99,0.137,100,1.595,102,1.336,103,1.203,109,0.009,110,0.009,111,0.01,112,0.606,114,1.486,116,1.78,118,0.454,119,0.902,120,0.97,126,0.63,127,1.246,137,3.53,142,3.741,145,1.486,146,2.393,147,2.393,149,1.715,162,3.573,164,2.393,166,2.656,191,1.388,193,1.173,210,1.341,226,0.961,236,2.583,251,1.254,252,1.173,253,1.46,254,1.56,255,1.509,258,3.965,261,1.93,297,2.517,303,2.738,354,2.776,356,2.662,359,1.85,371,1.976,404,1.366,419,0.811,579,1.46,664,2.282,666,2.656,670,3.033,671,1.715,672,3.033,673,2.776,674,2.282,675,3.53,676,2.282,677,2.089,682,3.965,703,2.656,708,2.656,709,2.517,711,2.899,731,3,737,3.965,916,2.393,1034,4.479,1054,3,1093,2.815,1173,2.656,1200,3,1358,4.812,1631,2.656,1893,3,2149,5.028,2152,3.502,2153,3.502,2154,5.601,2155,5.413,2160,3.876,2163,3.223,2164,4.284,2165,3.988,2166,3.876,2168,3.876,2170,2.181,2172,3.876,2177,3.223,2179,3.876,2181,3.876,2183,3,2184,3.502,2185,2.815,2186,3.876,2187,3,2188,3,2189,4.284,2190,3.876,2191,3.876,2192,3.876,2193,3.223,2194,3.223,2195,2.815,2196,3.223,2197,3.223,2198,3,2199,3.223,2200,3.223,2201,3.223,2202,3.223,2203,3.876,2204,3.223,2205,3.876,2206,3.876,2207,3.876,2208,3.876,2209,3.876,2210,3.876,2211,3.876,2212,3.876,2213,3.876,2214,3.876,2215,3.876,2216,3.876]],["title/interfaces/Message.html",[112,0.557,786,1.575]],["body/interfaces/Message.html",[8,0.013,21,0.116,22,0.307,23,0.116,24,0.078,33,1.455,34,1.107,35,0.252,38,1.107,48,0.242,98,0.272,99,0.163,100,1.357,102,1.153,103,0.9,109,0.006,110,0.008,111,0.006,112,0.722,114,1.265,118,0.386,119,0.808,120,0.869,125,0.818,126,0.742,143,4.302,145,1.265,149,1.459,190,1.942,193,0.999,205,1.222,210,1.141,219,1.102,226,1.505,251,1.722,252,0.999,253,1.896,254,1.397,255,0.966,261,1.968,316,1.515,317,0.874,319,2.995,336,0.999,400,2.26,404,1.223,423,2.849,451,1.972,483,2.896,496,3.865,560,0.739,571,2.142,579,1.866,580,1.899,598,4.157,671,3.032,681,3.394,758,2.849,761,2.12,764,3.653,771,2.037,779,1.705,780,3.541,786,3.263,794,1.637,802,2.385,804,2.395,833,2.26,849,3.351,899,2.395,947,3.351,971,3.882,991,1.942,1001,3.572,1053,2.553,1079,2.142,1091,2.26,1095,4.996,1339,2.996,1492,2.26,1493,3.162,1948,2.142,2065,3.865,2125,2.553,2170,3.538,2217,2.395,2218,4.462,2219,4.187,2220,2.996,2221,3.837,2222,2.553,2223,3.351,2224,2.743,2225,4.157,2226,3.647,2227,2.743,2228,3.572,2229,2.395,2230,2.553,2231,2.743,2232,3.351,2233,2.743,2234,2.743,2235,2.743,2236,2.743,2237,2.743,2238,2.743,2239,3.837,2240,2.743,2241,2.743,2242,2.743,2243,2.743,2244,3.572,2245,2.743,2246,3.837,2247,2.743,2248,2.743,2249,2.743,2250,2.743,2251,2.743,2252,2.743,2253,2.743,2254,2.743,2255,4.426,2256,2.743,2257,2.743,2258,2.743,2259,2.743,2260,2.743,2261,2.743,2262,2.743,2263,2.743,2264,2.743]],["title/classes/MessageChannel.html",[99,0.126,802,1.839]],["body/classes/MessageChannel.html",[8,0.013,21,0.103,22,0.306,23,0.103,24,0.151,29,1.196,31,1.596,33,1.583,34,1.191,35,0.235,38,1.013,48,0.213,98,0.261,99,0.149,100,1.198,102,1.076,103,0.824,109,0.005,110,0.007,111,0.005,112,0.66,118,0.341,119,0.739,120,1.136,125,0.722,126,0.761,143,4.45,145,1.116,149,1.288,190,2.925,193,1.278,205,1.079,210,1.008,219,1.096,226,1.435,251,1.872,252,0.881,253,1.841,254,0.881,255,1.237,261,2.065,316,1.337,317,1.119,319,3.395,336,1.278,400,1.995,404,1.119,418,1.493,419,1.14,420,0.747,423,2.607,451,1.84,483,2.761,496,4.381,560,1.297,571,1.89,579,1.806,580,1.888,598,3.964,671,2.958,681,3.664,758,2.607,761,1.939,764,3.675,771,1.798,779,2.182,780,3.654,786,3.254,794,1.445,802,2.567,804,2.114,833,1.995,849,3.066,899,3.066,947,3.066,971,3.936,991,2.486,1001,3.268,1053,2.253,1079,2.742,1091,1.995,1095,4.817,1339,2.742,1492,1.995,1493,2.893,1859,2.421,1948,1.89,2065,4.381,2125,3.268,2170,3.066,2217,2.114,2218,4.478,2219,4.201,2220,1.89,2221,2.421,2222,2.253,2223,3.066,2224,2.421,2225,3.964,2226,3.404,2227,2.421,2228,3.268,2229,2.114,2230,2.253,2231,3.511,2232,4.201,2233,3.511,2234,3.511,2235,3.511,2236,3.511,2237,2.421,2238,2.421,2239,3.511,2240,3.511,2241,3.511,2242,4.531,2243,2.421,2244,4.217,2245,3.511,2246,3.511,2247,3.511,2248,3.511,2249,2.421,2250,4.531,2251,2.421,2252,2.421,2253,2.421,2254,2.421,2255,4.131,2256,2.421,2257,2.421,2258,2.421,2259,2.421,2260,2.421,2261,2.421,2262,2.421,2263,2.421,2264,2.421,2265,4.839,2266,4.839,2267,4.839,2268,3.337,2269,4.839,2270,3.337,2271,3.337,2272,3.337,2273,3.337,2274,3.337]],["title/injectables/MessageService.html",[404,0.944,761,1.635]],["body/injectables/MessageService.html",[8,0.013,21,0.109,22,0.303,23,0.109,24,0.146,29,1.252,31,1.521,33,1.521,34,1.235,35,0.244,38,1.06,48,0.227,98,0.267,99,0.156,100,1.276,102,1.115,103,0.862,109,0.005,110,0.008,111,0.005,112,0.691,118,0.363,119,0.774,120,1.056,125,0.769,126,0.725,143,4.29,145,1.19,149,1.372,190,1.826,193,0.939,205,1.149,210,1.073,219,1.152,226,1.471,251,1.815,252,1.338,253,1.869,254,0.939,255,1.294,261,2.094,316,1.425,317,1.172,319,2.897,336,0.939,400,2.125,404,1.172,405,1.746,418,1.211,419,0.925,420,0.795,423,2.729,451,1.907,483,2.83,496,3.738,560,1.154,571,2.014,579,1.937,580,1.611,598,4.442,671,2.869,681,3.491,758,2.729,761,2.723,764,3.744,771,3.464,779,1.603,780,3.59,786,3.257,794,2.193,802,2.66,804,3.209,833,3.028,849,3.209,899,2.252,947,3.209,971,3.806,991,1.826,1001,3.42,1053,2.401,1079,2.014,1091,3.028,1095,4.59,1339,3.342,1492,2.125,1493,3.028,1948,3.342,2065,3.738,2125,2.401,2170,2.897,2217,2.252,2218,3.984,2219,3.738,2220,2.014,2221,2.579,2222,2.401,2223,3.209,2224,2.579,2225,4.223,2226,4.063,2227,2.579,2228,3.42,2229,2.252,2230,2.401,2231,2.579,2232,3.209,2233,2.579,2234,2.579,2235,2.579,2236,2.579,2237,2.579,2238,2.579,2239,3.674,2240,2.579,2241,2.579,2242,2.579,2243,2.579,2244,3.42,2245,2.579,2246,3.674,2247,2.579,2248,2.579,2249,2.579,2250,2.579,2251,2.579,2252,3.674,2253,2.579,2254,2.579,2255,4.28,2256,2.579,2257,2.579,2258,2.579,2259,2.579,2260,3.674,2261,2.579,2262,3.674,2263,3.674,2264,2.579,2275,4.418,2276,3.555,2277,5.065,2278,3.555,2279,3.555,2280,3.555]],["title/interfaces/MessageServiceConfig.html",[112,0.557,2226,2.439]],["body/interfaces/MessageServiceConfig.html",[8,0.013,21,0.118,22,0.302,23,0.118,24,0.079,33,1.461,34,1.116,35,0.254,38,1.116,48,0.244,98,0.273,99,0.164,100,1.373,102,1.16,103,0.908,109,0.006,110,0.008,111,0.006,112,0.728,114,1.28,118,0.391,119,0.815,120,0.876,125,1.328,126,0.709,143,4.31,145,1.28,149,1.477,190,1.965,193,1.01,205,1.724,210,1.155,219,1.107,226,1.511,251,1.733,252,1.01,253,1.901,254,1.01,255,0.977,261,1.975,316,1.533,317,0.885,319,3.014,336,1.01,400,2.286,404,1.233,423,2.873,451,1.984,483,2.908,496,3.89,560,0.748,571,3.021,579,1.901,580,1.676,598,4.324,671,2.923,681,3.412,758,2.873,761,2.137,764,3.615,771,2.061,779,1.725,780,3.581,786,3.247,794,1.656,802,2.404,804,2.423,833,2.286,849,3.379,899,2.423,947,3.379,971,3.763,991,1.965,1001,3.601,1053,2.583,1079,2.167,1091,2.286,1095,4.717,1339,3.021,1492,2.286,1493,3.188,1948,2.167,2065,3.89,2125,2.583,2170,3.014,2217,2.423,2218,4.146,2219,3.89,2220,2.167,2221,2.775,2222,2.583,2223,3.379,2224,2.775,2225,4.324,2226,3.97,2227,3.869,2228,4.717,2229,2.423,2230,2.583,2231,2.775,2232,3.379,2233,2.775,2234,2.775,2235,2.775,2236,2.775,2237,2.775,2238,2.775,2239,3.869,2240,2.775,2241,2.775,2242,2.775,2243,2.775,2244,3.601,2245,2.775,2246,3.869,2247,2.775,2248,2.775,2249,2.775,2250,2.775,2251,2.775,2252,2.775,2253,2.775,2254,2.775,2255,4.454,2256,2.775,2257,2.775,2258,2.775,2259,2.775,2260,2.775,2261,2.775,2262,2.775,2263,2.775,2264,2.775]],["title/modules/OntologyExplorationModule.html",[0,1.232,14,2.755]],["body/modules/OntologyExplorationModule.html",[2,1.718,3,2.087,8,0.013,14,5.704,18,2.312,19,1.839,20,1.503,21,0.175,22,0.215,23,0.175,24,0.117,28,2.395,35,0.328,47,2.312,48,0.364,75,2.923,98,0.215,99,0.175,109,0.009,110,0.011,111,0.009,196,1.966,658,2.572,659,2.77,660,2.117,2281,4.963,2282,4.963,2283,4.963,2284,5.334,2285,5.685,2286,5.334,2287,3.065,2288,5.689,2289,3.223,2290,4.963,2291,4.127,2292,5.689,2293,3.401,2294,4.963]],["title/components/OntologySearchComponent.html",[130,0.557,535,1.319]],["body/components/OntologySearchComponent.html",[7,0.822,8,0.013,9,0.822,21,0.078,22,0.096,23,0.078,24,0.153,29,0.975,31,1.634,33,1.408,34,1.478,35,0.286,38,0.532,48,0.162,65,1.468,75,3.802,98,0.096,99,0.078,100,1.416,102,0.745,103,0.671,109,0.011,110,0.006,111,0.011,118,0.403,119,0.603,120,0.969,126,0.738,127,1.148,128,0.913,130,0.889,132,4.217,136,0.981,143,3.362,145,0.851,146,1.369,149,0.981,170,0.794,172,0.794,176,1.042,179,1.365,182,2.66,183,1.468,185,1.416,187,1.416,188,1.416,191,1.232,196,2.015,197,2.561,208,2.604,216,0.881,219,0.766,226,1.046,228,2.125,231,0.851,251,1.114,252,1.825,253,1.543,255,0.65,261,0.694,287,4.753,300,3.257,316,1.937,317,0.912,318,1.019,319,2.675,322,3.11,336,1.977,356,2.936,357,2.235,371,1.823,376,2.322,394,2.934,396,2.664,418,1.41,419,1.189,420,1.707,432,1.855,444,0.946,445,0.822,449,0.913,451,0.822,453,1.642,478,1.937,486,1.844,507,0.946,508,1.275,509,1.275,510,0.946,511,2.027,512,0.946,513,0.946,514,0.946,515,0.822,516,0.946,517,0.822,518,0.946,519,0.822,520,1.468,521,0.822,522,0.851,523,0.946,524,0.946,525,0.822,526,0.946,527,0.822,528,0.913,529,0.946,530,0.822,531,1.275,532,0.946,533,0.822,534,0.946,535,1.761,536,0.946,537,0.822,538,0.946,539,0.851,540,0.946,541,0.822,542,0.946,543,0.822,544,0.946,545,0.822,546,0.913,547,0.946,548,0.822,549,0.822,550,0.822,551,0.946,552,0.822,553,0.742,554,0.946,555,0.822,556,0.946,557,0.946,558,0.913,560,1.22,572,1.855,575,3.257,577,3.257,578,2.604,579,1.347,580,1.077,590,3.11,596,2.18,602,3.679,609,2.457,613,2.457,615,1.44,616,1.369,624,3.063,625,2.89,626,3.875,635,1.101,636,2.027,637,1.248,638,2.483,643,1.146,648,2.017,829,3.441,842,2.358,843,2.125,877,1.717,941,2.235,961,2.457,964,1.611,1029,3.441,1051,2.218,1079,2.235,1089,3.811,1134,1.844,1316,1.844,1383,2.664,1410,1.611,1411,1.611,1416,3.695,1417,3.341,1434,1.855,1435,1.369,1439,2.004,1456,3.626,1457,2.499,1460,1.52,1510,2.358,1520,2.862,1530,4.627,1531,4.299,1532,2.004,1534,2.004,1536,3.177,1538,2.004,1541,1.717,1552,3.11,1555,1.844,1610,2.862,1638,3.441,1744,2.218,1799,4.92,1805,1.844,1862,3.03,1866,3.452,1908,2.218,1917,2.004,2145,3.11,2170,1.937,2184,2.004,2185,1.611,2244,2.664,2287,3.987,2289,4.241,2295,2.218,2296,3.945,2297,3.441,2298,5.447,2299,4.834,2300,3.945,2301,4.834,2302,4.834,2303,6.731,2304,2.664,2305,6.512,2306,3.945,2307,3.945,2308,3.945,2309,3.945,2310,4.217,2311,2.542,2312,3.341,2313,3.945,2314,4.834,2315,4.649,2316,2.542,2317,2.542,2318,3.945,2319,3.441,2320,3.945,2321,4.77,2322,2.542,2323,3.945,2324,3.945,2325,2.218,2326,7.629,2327,3.945,2328,2.542,2329,3.945,2330,3.945,2331,3.11,2332,3.945,2333,6.241,2334,2.542,2335,3.441,2336,3.945,2337,3.945,2338,2.542,2339,5.448,2340,3.945,2341,3.945,2342,2.542,2343,3.945,2344,2.542,2345,4.834,2346,2.542,2347,3.945,2348,3.945,2349,2.542,2350,2.004,2351,2.218,2352,2.218,2353,2.218,2354,2.542,2355,2.542,2356,2.542,2357,2.542,2358,2.542,2359,2.004,2360,2.542,2361,2.542,2362,2.542,2363,2.542,2364,2.542,2365,2.542,2366,2.542,2367,2.542,2368,2.542,2369,2.542,2370,2.542,2371,2.542,2372,2.542,2373,2.542,2374,2.542,2375,2.542,2376,3.945,2377,3.945,2378,3.945,2379,3.945,2380,2.004,2381,2.542,2382,2.542,2383,3.945,2384,2.218]],["title/modules/OntologySearchModule.html",[0,1.232,2284,2.585]],["body/modules/OntologySearchModule.html",[2,1.748,3,2.109,8,0.013,18,2.337,19,1.871,20,1.529,21,0.178,22,0.219,23,0.178,24,0.12,26,2.697,28,2.006,35,0.342,47,2.337,48,0.37,49,3.588,50,2.722,75,2.974,98,0.219,99,0.178,109,0.009,110,0.011,111,0.009,196,1.529,535,2.727,658,2.6,659,2.799,660,2.155,1531,3.461,1567,5.506,1568,4.564,2284,5.191,2287,3.119,2289,3.28,2350,4.564,2351,5.051,2385,5.051,2386,5.051,2387,5.051,2388,5.79,2389,6.986,2390,6.986,2391,6.986,2392,6.986,2393,5.79,2394,5.79]],["title/injectables/OntologySearchService.html",[404,0.944,2312,2.311]],["body/injectables/OntologySearchService.html",[8,0.013,21,0.097,22,0.119,23,0.097,24,0.156,29,1.146,31,1.669,33,1.583,34,0.97,35,0.29,38,0.97,48,0.201,65,0.574,98,0.175,99,0.097,102,1.386,103,1.102,109,0.01,110,0.007,111,0.011,112,0.633,118,0.772,119,0.708,120,1.113,126,0.767,127,1.43,135,4.914,136,1.214,143,2.965,144,2.282,145,1.053,146,2.497,149,1.214,175,1.616,196,2.09,197,3.78,219,0.872,226,1.401,245,3.363,252,0.831,253,1.777,254,0.831,261,2.003,316,1.858,317,1.273,319,2.276,357,4.381,372,2.937,373,2.933,404,1.405,405,1.545,418,1.62,419,1.236,420,1.449,445,1.963,560,1.324,580,1.503,668,3.848,746,1.31,783,1.858,794,2.007,810,3.13,815,3.13,941,3.44,1035,4.406,1036,2.282,1080,2.771,1134,5.554,1386,2.48,1387,3.363,1435,3.272,1457,1.993,1510,1.881,1530,2.937,1610,4.406,1733,3.13,1862,4.038,1866,4.899,1884,5.665,1912,5.214,2185,1.993,2220,1.782,2289,4.286,2298,5.56,2304,4.574,2312,3.44,2315,2.48,2321,3.717,2331,3.654,2359,3.654,2380,3.654,2395,5.964,2396,2.48,2397,4.044,2398,4.044,2399,4.801,2400,5.665,2401,4.636,2402,4.636,2403,4.636,2404,4.636,2405,4.636,2406,3.146,2407,4.044,2408,4.044,2409,6.945,2410,3.146,2411,4.044,2412,4.044,2413,5.298,2414,4.044,2415,4.044,2416,3.146,2417,4.044,2418,4.044,2419,4.044,2420,3.146,2421,4.044,2422,3.146,2423,4.044,2424,4.044,2425,4.044,2426,3.146,2427,5.298,2428,4.044,2429,3.146,2430,4.044,2431,3.146,2432,3.146,2433,3.146,2434,2.745,2435,2.745,2436,4.801,2437,2.745,2438,2.48,2439,2.745,2440,2.745,2441,2.745,2442,2.745,2443,2.745,2444,2.745,2445,4.044,2446,2.745,2447,4.044,2448,4.044,2449,4.044,2450,4.044,2451,2.745,2452,2.745,2453,2.745,2454,2.745,2455,2.745,2456,2.745,2457,4.044,2458,4.044,2459,2.48,2460,2.745,2461,2.745]],["title/interfaces/OntologySelection.html",[112,0.557,156,2.755]],["body/interfaces/OntologySelection.html",[8,0.013,21,0.19,22,0.233,23,0.19,24,0.127,35,0.255,65,1.126,98,0.233,109,0.009,110,0.011,111,0.009,112,0.842,114,2.064,118,0.63,119,1.108,126,0.822,127,1.449,136,2.382,156,4.899,197,3.739,359,3.209,1866,5.039,2170,3.905,2462,5.382,2463,5.382,2464,6.27]],["title/components/OntologySelectionComponent.html",[130,0.557,537,1.319]],["body/components/OntologySelectionComponent.html",[7,1.073,8,0.013,9,1.073,21,0.102,22,0.125,23,0.102,24,0.161,29,1.191,31,1.731,33,1.009,34,1.303,35,0.273,38,0.694,48,0.212,65,1.503,75,4.012,88,3.054,91,2.597,98,0.125,99,0.102,100,1.73,102,0.627,103,0.565,109,0.005,110,0.007,111,0.01,118,0.339,119,0.736,120,0.932,121,3.833,125,1.043,126,0.826,127,1.098,128,1.191,130,1.044,133,2.616,135,4.118,136,1.281,156,4.207,157,2.895,158,5.168,170,1.037,172,1.037,176,1.645,179,1.602,182,2.748,183,1.794,185,1.73,187,1.73,188,1.73,190,2.476,191,1.506,193,1.273,196,2.223,198,5.44,199,4.205,216,1.15,219,0.526,231,1.11,251,1.361,252,1.273,253,1.191,254,1.273,255,1.232,309,1.932,316,1.932,350,3.8,354,2.266,355,3.255,356,3.289,357,1.88,371,2.084,418,1.357,419,1.208,444,1.235,445,2.579,449,1.191,451,1.073,453,2.007,478,2.98,507,1.235,508,1.558,509,1.558,510,1.235,511,2.318,512,1.235,513,1.235,514,1.235,515,1.073,516,1.235,517,1.073,518,1.235,519,1.073,520,1.794,521,1.073,522,1.11,523,1.235,524,1.235,525,1.073,526,1.235,527,1.073,528,1.191,529,1.235,530,1.073,531,1.558,532,1.235,533,1.073,534,1.235,535,1.073,536,1.235,537,2.013,538,1.235,539,2.084,540,1.235,541,1.073,542,1.235,543,1.073,544,1.235,545,1.073,546,1.191,547,1.235,548,1.073,549,1.073,550,1.073,551,1.235,552,1.073,553,0.969,554,1.235,555,1.073,556,1.235,557,1.235,558,1.191,560,1.11,564,2.476,572,2.266,579,1.403,596,2.559,609,2.173,613,2.173,704,4.361,746,1.382,781,3.2,1121,6.021,1207,3.255,1364,3.054,1379,4.205,1433,3.255,1457,3.054,1576,4.474,1589,3.8,1632,3.8,1633,4.91,1862,3.399,1866,3.946,2195,3.054,2287,4.207,2289,1.88,2291,5.666,2293,1.984,2297,4.952,2298,4.661,2304,3.833,2310,4.952,2312,4.383,2352,2.895,2353,2.895,2400,4.91,2438,2.616,2459,2.616,2465,2.895,2466,4.82,2467,5.676,2468,4.82,2469,5.676,2470,5.676,2471,5.676,2472,3.319,2473,4.82,2474,3.319,2475,3.319,2476,4.205,2477,3.319,2478,3.319,2479,3.319,2480,3.319,2481,4.82,2482,4.82,2483,3.319,2484,4.82,2485,3.319,2486,4.82,2487,3.319,2488,4.82,2489,3.319,2490,2.895,2491,3.319,2492,3.319,2493,3.319]],["title/modules/OntologySelectionModule.html",[0,1.232,2285,2.755]],["body/modules/OntologySelectionModule.html",[2,1.734,3,2.099,8,0.013,18,2.326,19,1.856,20,1.517,21,0.177,22,0.217,23,0.177,24,0.119,26,2.683,28,2.408,35,0.329,47,2.326,48,0.367,75,2.95,98,0.217,99,0.177,109,0.009,110,0.011,111,0.009,196,1.974,537,2.741,658,2.587,659,2.786,660,2.137,2284,5.122,2285,5.67,2286,5.122,2287,3.094,2289,3.254,2290,5.01,2291,4.166,2293,3.433,2294,5.01,2312,4.235,2494,5.01,2495,5.01,2496,5.743,2497,5.01,2498,5.743,2499,5.743]],["title/modules/OntologyTreeModule.html",[0,1.232,2286,2.585]],["body/modules/OntologyTreeModule.html",[2,1.751,3,2.111,8,0.013,18,2.339,19,1.874,20,1.531,21,0.178,22,0.219,23,0.178,24,0.12,26,2.699,28,2.009,35,0.342,47,2.339,48,0.371,49,3.591,50,2.726,54,5.511,55,4.571,65,1.058,66,2.324,75,2.978,98,0.219,99,0.178,109,0.009,110,0.011,111,0.009,196,1.531,539,2.823,658,2.602,659,2.802,660,2.158,1815,4.721,1816,3.916,2286,5.192,2287,3.124,2293,3.466,2490,5.058,2500,5.058,2501,5.058,2502,5.058,2503,5.798,2504,6.991,2505,5.798,2506,6.991]],["title/components/ResultsBrowserComponent.html",[130,0.557,541,1.319]],["body/components/ResultsBrowserComponent.html",[7,0.861,8,0.013,9,0.861,21,0.082,22,0.101,23,0.082,24,0.161,29,1.011,31,1.734,33,1.261,34,1.43,35,0.249,38,0.557,48,0.17,58,3.738,65,1.466,78,6.002,98,0.101,99,0.082,101,1.435,102,1.202,103,0.696,109,0.012,110,0.006,111,0.012,118,0.272,119,0.625,120,0.99,121,3.771,125,1.304,126,0.814,127,1.236,128,0.956,130,0.956,136,1.028,170,0.832,172,0.832,175,1.368,176,1.08,178,3.224,179,1.405,182,2.677,183,1.522,185,1.468,187,1.468,188,1.468,191,1.277,193,1.68,195,2.762,196,1.315,197,2.34,205,2.055,214,1.592,216,1.725,219,0.955,226,0.576,231,0.891,251,1.155,252,1.08,253,1.489,255,0.681,293,2.008,317,0.616,323,1.853,336,1.08,342,2.324,354,3.113,356,3.081,371,2.128,373,1.771,382,2.967,389,4.532,418,1.441,419,1.209,420,0.915,432,1.252,437,1.153,444,0.991,445,0.861,449,0.956,451,0.861,453,1.703,478,2.959,507,0.991,508,1.322,509,1.609,510,0.991,511,2.078,512,0.991,513,0.991,514,0.991,515,0.861,516,0.991,517,0.861,518,0.991,519,0.861,520,1.522,521,0.861,522,0.891,523,0.991,524,0.991,525,0.861,526,0.991,527,0.861,528,0.956,529,0.991,530,0.861,531,1.322,532,0.991,533,0.861,534,0.991,535,0.861,536,0.991,537,0.861,538,0.991,539,0.891,540,0.991,541,1.805,542,0.991,543,0.861,544,0.991,545,0.861,546,0.956,547,0.991,548,0.861,549,0.861,550,0.861,551,0.991,552,0.861,553,0.778,554,0.991,555,0.861,556,0.991,557,0.991,558,0.956,560,1.178,572,1.923,574,1.799,575,3.338,577,2.976,578,2.682,579,1.011,596,3.281,599,2.967,605,1.799,609,2.867,613,3.329,615,1.509,616,1.435,635,2.418,636,1.853,637,1.308,638,3.6,640,2.976,641,2.445,643,2.867,644,2.976,645,3.224,648,1.805,668,4.33,669,1.932,795,3.568,835,1.109,877,1.799,878,2.317,880,3.568,906,1.592,961,2.867,962,1.932,963,2.324,964,1.688,1037,2.324,1131,4.343,1207,2.762,1316,1.932,1343,4.665,1357,4.343,1364,2.591,1371,3.538,1374,3.224,1380,3.538,1410,1.688,1411,2.591,1412,1.435,1414,2.101,1421,1.435,1431,2.1,1434,1.923,1435,1.435,1436,4.343,1437,2.324,1441,1.509,1454,1.368,1460,3.338,1464,2.324,1536,2.203,1537,2.967,1604,2.967,1614,3.568,1691,3.568,1730,2.762,1805,1.932,1825,3.568,1829,3.568,2065,4.029,2149,1.688,2155,3.362,2170,1.308,2384,2.324,2507,2.324,2508,4.09,2509,5.585,2510,5.585,2511,4.09,2512,5.585,2513,4.09,2514,4.09,2515,4.978,2516,4.09,2517,4.978,2518,4.09,2519,4.09,2520,4.09,2521,4.978,2522,4.09,2523,6.025,2524,4.978,2525,4.978,2526,4.343,2527,4.978,2528,4.978,2529,4.09,2530,2.664,2531,2.664,2532,2.664,2533,2.664,2534,2.664,2535,4.09,2536,2.664,2537,2.664,2538,2.664,2539,4.09,2540,4.09,2541,2.664,2542,4.09,2543,2.664,2544,2.664,2545,2.664,2546,4.09,2547,2.664,2548,5.585,2549,4.09,2550,2.664,2551,4.09,2552,4.09,2553,2.664,2554,4.09,2555,4.978,2556,2.664,2557,7.008,2558,4.09,2559,4.09,2560,4.09,2561,3.568,2562,4.978,2563,2.664,2564,2.664,2565,2.664,2566,2.664,2567,2.664,2568,2.664,2569,2.664,2570,4.09,2571,4.09,2572,4.09,2573,4.09,2574,2.664,2575,4.09,2576,4.09,2577,5.585,2578,2.664,2579,2.664,2580,2.664,2581,2.664,2582,4.09,2583,2.664,2584,2.1]],["title/modules/ResultsBrowserModule.html",[0,1.232,15,2.755]],["body/modules/ResultsBrowserModule.html",[2,1.77,3,2.125,8,0.013,15,5.631,18,2.355,19,1.895,20,1.548,21,0.18,22,0.221,23,0.18,24,0.121,26,2.717,28,2.438,35,0.331,47,2.355,48,0.375,78,5.106,98,0.221,99,0.18,109,0.009,110,0.011,111,0.011,522,1.961,541,2.731,658,2.619,659,2.82,660,2.182,1343,3.504,1345,4.253,1474,5.486,2585,5.114,2586,5.114,2587,5.863,2588,5.114,2589,5.863,2590,7.038,2591,5.863,2592,5.863,2593,5.863]],["title/injectables/SceneState.html",[168,2.439,404,0.944]],["body/injectables/SceneState.html",[8,0.013,21,0.137,22,0.112,23,0.092,24,0.162,29,1.099,31,1.742,33,1.439,34,1.616,35,0.309,46,4.4,48,0.19,65,0.812,66,1.192,98,0.201,99,0.092,100,1.068,102,1.459,103,1.006,109,0.005,110,0.007,111,0.005,112,0.406,116,1.782,118,0.304,119,0.679,120,1.09,125,1.152,126,0.771,127,0.784,137,3.532,142,2.817,145,0.995,146,1.602,147,1.602,149,1.148,162,3.574,164,2.868,166,1.778,167,2.157,168,2.658,191,0.929,193,1.174,201,1.884,206,3.002,219,0.936,226,0.962,236,2.605,240,2.008,251,1.255,252,1.174,253,1.563,254,1.56,255,1.36,258,4.893,261,2.04,297,3.759,303,2.198,309,1.192,317,1.367,336,0.786,352,3.002,354,1.398,356,2.992,371,1.977,404,1.028,405,1.46,418,1.587,419,1.255,420,1.322,483,1.238,560,1.155,579,1.46,580,1.613,585,2.344,609,1.341,630,2.157,664,1.528,670,3.533,671,1.148,672,2.284,673,2.09,674,1.528,675,3.183,676,1.528,677,1.398,682,4.321,698,1.884,703,3.183,708,1.778,709,1.685,711,2.614,737,3.183,746,2.217,783,3.032,904,2.157,916,1.602,933,1.288,1034,4.481,1039,5.698,1052,2.157,1054,2.008,1093,1.884,1173,1.778,1196,2.344,1200,3.002,1210,2.008,1257,5.045,1274,2.157,1276,2.008,1304,2.157,1375,2.157,1380,1.884,1521,1.685,1631,2.658,1862,3.533,1863,2.344,1893,2.008,1925,1.884,2154,3.862,2155,3.595,2161,2.594,2163,3.225,2164,3.862,2165,3.595,2177,3.225,2183,3.99,2187,2.008,2188,2.008,2193,2.157,2194,2.157,2195,1.884,2196,2.157,2197,2.157,2198,3.002,2199,2.157,2200,2.157,2201,2.157,2202,2.157,2204,2.157,2594,2.157,2595,5.154,2596,6.421,2597,6.168,2598,4.645,2599,4.446,2600,5.154,2601,4.446,2602,4.446,2603,4.446,2604,4.446,2605,2.974,2606,2.974,2607,5.154,2608,2.974,2609,3.878,2610,3.878,2611,3.878,2612,2.974,2613,2.974,2614,2.974,2615,6.306,2616,2.974,2617,4.286,2618,2.974,2619,2.974,2620,3.002,2621,2.974,2622,2.974,2623,2.974,2624,2.974,2625,3.878,2626,2.974,2627,3.878,2628,2.974,2629,3.878,2630,2.974,2631,3.878,2632,2.974,2633,2.157,2634,3.878,2635,2.157,2636,2.344,2637,2.157,2638,3.878,2639,3.878,2640,2.594,2641,2.594,2642,2.594,2643,2.594,2644,2.594,2645,3.878,2646,3.878,2647,5.154,2648,2.594,2649,4.645,2650,2.594,2651,2.594,2652,2.594,2653,2.594,2654,2.594,2655,2.594,2656,2.594,2657,2.344,2658,2.594,2659,2.594,2660,2.594,2661,2.594,2662,2.594,2663,2.594,2664,2.594,2665,2.594,2666,2.594,2667,2.594,2668,2.594,2669,2.594,2670,2.594,2671,2.594,2672,2.594,2673,2.594,2674,2.594,2675,2.594,2676,2.594,2677,2.594,2678,2.594,2679,2.594,2680,2.594,2681,2.594,2682,2.594,2683,2.594,2684,2.594,2685,2.594,2686,2.594,2687,2.594,2688,2.594,2689,2.594,2690,2.594,2691,2.344,2692,2.594,2693,2.594,2694,2.594,2695,2.594,2696,2.594]],["title/interfaces/SceneStateModel.html",[112,0.557,2637,2.96]],["body/interfaces/SceneStateModel.html",[8,0.013,21,0.155,22,0.133,23,0.108,24,0.073,34,1.516,35,0.32,46,4.045,48,0.225,65,0.917,66,1.408,98,0.221,99,0.108,100,1.261,102,1.33,103,1.089,109,0.005,110,0.008,111,0.005,112,0.48,114,1.176,116,1.408,118,0.359,119,0.767,120,0.825,125,1.268,126,0.791,127,1.128,137,3.003,142,3.182,145,1.176,146,1.893,147,1.893,149,1.357,162,3.158,164,2.706,166,2.101,167,2.549,168,2.101,191,1.098,193,0.928,201,2.226,206,3.392,219,1.013,226,1.087,236,2.523,240,2.373,251,0.992,252,0.928,253,1.672,254,1.327,255,1.283,258,4.876,261,1.848,297,3.321,303,2.181,309,1.408,336,0.928,352,3.392,354,1.652,356,2.884,371,1.681,404,1.162,419,0.642,483,1.463,579,1.242,580,1.746,585,2.77,609,1.584,630,2.549,664,1.805,670,3.286,671,1.357,672,2.58,673,2.361,674,1.805,675,3.003,676,1.805,677,1.652,682,4.045,698,2.226,703,2.101,708,2.101,709,1.991,711,2.466,737,3.504,755,3.959,783,2.903,904,2.549,916,1.893,933,1.522,1034,3.959,1039,5.711,1052,2.549,1054,2.373,1093,2.226,1173,2.101,1196,2.77,1200,3.392,1210,2.373,1257,4.752,1274,2.549,1276,2.373,1304,2.549,1375,2.549,1380,2.226,1521,1.991,1631,2.101,1862,3.476,1863,2.77,1893,2.373,1925,2.226,2154,4.253,2155,2.373,2163,2.549,2164,3.644,2165,3.392,2177,2.549,2183,3.392,2187,2.373,2188,2.373,2193,2.549,2194,2.549,2195,2.226,2196,2.549,2197,2.549,2198,3.392,2199,2.549,2200,2.549,2201,2.549,2202,2.549,2204,2.549,2594,2.549,2595,5.902,2596,6.674,2597,6.463,2598,3.066,2600,3.066,2607,4.382,2609,3.066,2610,3.066,2611,3.066,2615,6.579,2617,3.644,2620,2.373,2625,3.066,2627,3.066,2629,3.066,2631,3.066,2633,2.549,2634,4.382,2635,2.549,2636,2.77,2637,3.644,2638,5.902,2639,5.902,2640,3.066,2641,3.066,2642,3.066,2643,3.066,2644,3.066,2645,4.382,2646,4.382,2647,5.58,2648,3.066,2649,5.114,2650,3.066,2651,3.066,2652,3.066,2653,3.066,2654,3.066,2655,3.066,2656,3.066,2657,2.77,2658,3.066,2659,3.066,2660,3.066,2661,3.066,2662,3.066,2663,3.066,2664,3.066,2665,3.066,2666,3.066,2667,3.066,2668,3.066,2669,3.066,2670,3.066,2671,3.066,2672,3.066,2673,3.066,2674,3.066,2675,3.066,2676,3.066,2677,3.066,2678,3.066,2679,3.066,2680,3.066,2681,3.066,2682,3.066,2683,3.066,2684,3.066,2685,3.066,2686,3.066,2687,3.066,2688,3.066,2689,3.066,2690,3.066,2691,2.77,2692,3.066,2693,3.066,2694,3.066,2695,3.066,2696,3.066]],["title/interfaces/SearchResult.html",[112,0.557,2321,2.755]],["body/interfaces/SearchResult.html",[8,0.013,21,0.119,22,0.146,23,0.119,24,0.08,33,1.467,34,0.809,35,0.308,38,0.809,48,0.247,65,0.706,98,0.203,99,0.119,102,1.167,103,1.194,109,0.011,110,0.008,111,0.012,112,0.843,114,1.294,118,0.812,119,0.821,126,0.748,127,1.376,135,4.48,136,1.493,143,2.895,144,2.805,145,1.294,146,2.895,149,1.493,175,1.986,196,2.005,197,3.708,219,0.851,226,1.517,245,2.805,252,1.419,253,1.876,254,1.419,261,1.686,319,1.898,357,4.218,372,2.45,373,2.674,404,1.428,420,0.865,445,1.737,560,0.756,580,1.822,668,3.404,783,1.55,794,1.674,810,2.611,815,2.611,941,3.044,1035,4.48,1036,2.805,1080,2.312,1134,5.266,1386,4.236,1387,2.805,1435,2.895,1457,3.404,1510,3.212,1530,2.45,1610,3.898,1733,2.611,1862,4.087,1866,4.997,1884,5.26,1912,5.266,2185,2.45,2220,3.044,2289,2.191,2298,5.57,2304,3.629,2312,3.044,2315,4.236,2321,4.17,2331,3.048,2359,3.048,2380,3.048,2395,3.048,2396,3.048,2397,3.373,2398,3.373,2399,3.373,2400,4.868,2407,3.373,2408,3.373,2409,6.881,2411,3.373,2412,3.373,2413,4.687,2414,3.373,2415,3.373,2417,3.373,2418,3.373,2419,3.373,2421,3.373,2423,3.373,2424,3.373,2425,3.373,2427,4.687,2428,3.373,2430,3.373,2434,3.373,2435,4.687,2436,6.332,2437,3.373,2438,3.048,2439,3.373,2440,3.373,2441,3.373,2442,3.373,2443,3.373,2444,3.373,2445,4.687,2446,3.373,2447,4.687,2448,4.687,2449,4.687,2450,4.687,2451,3.373,2452,3.373,2453,3.373,2454,3.373,2455,3.373,2456,3.373,2457,4.687,2458,4.687,2459,3.048,2460,3.373,2461,3.373]],["title/components/SpinnerOverlayComponent.html",[130,0.557,543,1.319]],["body/components/SpinnerOverlayComponent.html",[7,1.342,8,0.013,9,1.342,20,1.49,21,0.128,22,0.157,23,0.128,24,0.148,31,1.538,35,0.172,38,0.869,48,0.265,65,1.543,85,5.217,98,0.157,99,0.228,102,1.211,109,0.006,110,0.009,111,0.009,118,0.576,119,0.862,120,1.129,125,0.898,126,0.734,127,1.13,128,1.49,130,0.981,170,1.297,172,1.297,176,1.49,179,1.809,182,2.808,183,2.099,185,2.025,187,2.025,188,2.025,191,1.762,196,1.693,205,1.823,216,1.438,230,5.015,231,2.772,317,1.482,336,1.49,344,2.481,371,1.389,376,2.099,419,1.03,420,1.434,432,2.652,444,1.545,445,1.342,449,1.49,451,1.342,453,2.349,478,2.568,507,1.545,508,2.324,509,1.823,510,1.545,511,2.559,512,1.545,513,1.545,514,1.545,515,1.342,516,1.545,517,1.342,518,1.545,519,1.342,520,2.099,521,1.342,522,1.389,523,1.545,524,1.545,525,1.342,526,1.545,527,1.342,528,1.49,529,1.545,530,1.342,531,1.823,532,1.545,533,1.342,534,1.545,535,1.342,536,1.545,537,1.342,538,1.545,539,1.389,540,1.545,541,1.342,542,1.545,543,2.222,544,1.545,545,1.342,546,1.49,547,1.545,548,1.342,549,1.342,550,1.342,551,1.545,552,1.342,553,1.212,554,1.545,555,1.342,556,1.545,557,1.545,558,1.49,560,1.406,605,3.81,626,3.039,636,1.545,637,2.038,638,2.132,643,2.544,644,2.481,648,1.342,746,1.728,765,3.831,773,3.196,775,1.872,805,3.039,827,2.236,835,1.728,875,2.352,878,2.352,885,2.898,928,2.77,933,3.212,961,1.872,964,2.63,968,3.574,1348,4.921,1412,2.236,1413,2.352,1419,2.481,1421,3.039,1435,4.217,1454,2.132,1510,3.372,1521,2.352,1536,2.236,1543,3.81,1654,5.591,1730,2.803,1802,3.011,2620,4.643,2697,5.668,2698,3.621,2699,5.642,2700,6.409,2701,5.642,2702,4.151,2703,5.642,2704,4.151,2705,5.642,2706,5.642,2707,4.151,2708,4.151,2709,4.151]],["title/modules/SpinnerOverlayModule.html",[0,1.232,16,2.755]],["body/modules/SpinnerOverlayModule.html",[2,1.818,3,2.159,8,0.013,16,5.576,18,2.392,19,1.946,20,1.59,21,0.185,22,0.227,23,0.185,24,0.124,26,2.76,28,2.086,35,0.326,47,2.392,48,0.385,85,4.368,98,0.227,99,0.185,109,0.009,110,0.011,111,0.009,231,2.392,543,2.74,658,2.661,659,2.865,660,2.24,2697,4.746,2710,5.252,2711,5.252,2712,5.252,2713,6.021,2714,6.238,2715,5.252,2716,6.021]],["title/modules/StoreModule.html",[0,1.232,996,2.755]],["body/modules/StoreModule.html",[0,1.677,2,1.677,8,0.013,21,0.171,22,0.21,23,0.171,24,0.115,28,1.925,35,0.346,47,2.279,48,0.355,65,1.014,66,2.73,88,3.519,98,0.257,99,0.171,103,0.946,109,0.008,110,0.01,111,0.008,138,4.6,154,3.519,155,3.519,162,3.669,164,3.669,166,3.321,167,4.03,168,4.072,254,1.467,303,2.067,353,4.379,354,2.611,384,4.379,664,2.854,673,2.611,677,2.611,711,3.344,916,2.992,996,4.6,1239,2.992,1925,3.519,1934,4.03,1942,4.315,2187,3.751,2188,3.751,2717,4.379,2718,5.555,2719,4.846,2720,5.555,2721,4.846,2722,6.427,2723,5.555,2724,5.555,2725,5.555,2726,4.846,2727,4.379,2728,5.555,2729,5.555,2730,5.555,2731,4.846,2732,5.555,2733,5.555,2734,5.555,2735,5.555,2736,6.812,2737,5.555,2738,5.555,2739,5.555,2740,5.555,2741,5.555,2742,5.555,2743,5.555]],["title/modules/ThemingModule.html",[0,1.232,997,2.755]],["body/modules/ThemingModule.html",[2,1.863,3,2.19,8,0.013,18,2.427,19,1.994,20,1.63,21,0.19,22,0.233,23,0.19,24,0.127,35,0.3,47,2.427,48,0.394,91,3.908,92,4.476,93,4.863,98,0.233,99,0.19,109,0.009,110,0.011,111,0.009,159,5.207,210,1.863,997,5.55,2744,5.382,2745,5.382,2746,6.17,2747,7.255,2748,6.17,2749,6.17,2750,6.17]],["title/injectables/ThemingService.html",[159,2.585,404,0.944]],["body/injectables/ThemingService.html",[8,0.013,21,0.112,22,0.138,23,0.112,24,0.163,29,1.276,31,1.746,33,1.491,34,1.614,35,0.213,38,0.764,41,2.88,42,2.467,46,4.859,48,0.233,67,2.65,95,5.334,98,0.195,99,0.244,103,1.274,106,3.187,109,0.006,110,0.008,111,0.006,118,0.373,119,0.789,120,1.229,126,0.812,127,1.419,130,0.973,131,4.814,159,3.271,176,1.364,190,3.076,205,1.669,219,0.949,226,1.408,230,3.271,251,1.458,253,1.697,255,0.933,257,5.776,261,2.197,293,2.535,297,2.925,314,3.746,317,1.731,355,5.054,382,5.429,400,2.184,404,1.194,405,1.794,418,1.642,419,1.254,420,0.817,452,1.968,509,2.368,560,1.273,579,1.762,604,4.982,607,6.218,794,2.236,811,3.187,836,3.187,837,2.88,1022,3.187,1080,3.087,1213,3.746,1434,1.718,1616,3.187,1650,4.505,1867,2.65,1948,3.687,1966,2.88,2222,2.467,2223,2.315,2229,2.315,2464,2.88,2620,5.054,2657,5.131,2751,2.88,2752,5.164,2753,7.327,2754,5.164,2755,6.509,2756,6.509,2757,5.164,2758,3.654,2759,3.654,2760,5.164,2761,3.654,2762,4.505,2763,4.505,2764,6.867,2765,3.654,2766,5.164,2767,6.509,2768,3.654,2769,5.164,2770,5.164,2771,5.164,2772,3.654,2773,5.164,2774,3.654,2775,5.164,2776,3.654,2777,3.654,2778,3.654,2779,3.654,2780,3.654,2781,3.654,2782,3.187,2783,3.654,2784,3.654,2785,3.654,2786,3.654,2787,6.509,2788,3.654,2789,3.654,2790,3.654,2791,3.654,2792,3.654,2793,5.164,2794,3.654,2795,3.654,2796,3.654,2797,3.654,2798,3.654,2799,3.654,2800,3.654,2801,3.654]],["title/components/ThumbnailCarouselComponent.html",[130,0.557,545,1.319]],["body/components/ThumbnailCarouselComponent.html",[7,0.897,8,0.013,9,0.897,20,1.115,21,0.085,22,0.105,23,0.085,24,0.152,29,1.043,31,1.618,33,1.284,35,0.236,38,0.581,48,0.177,65,1.498,98,0.105,99,0.199,102,1.425,103,0.472,109,0.008,110,0.006,111,0.006,118,0.431,119,0.645,120,0.456,126,0.717,127,1.184,128,0.996,130,0.697,136,1.071,170,0.867,172,0.867,175,2.168,176,1.115,179,1.442,182,2.718,183,1.57,185,1.515,187,1.515,188,1.515,191,1.318,196,1.349,207,5.875,210,1.274,214,4.139,216,0.962,219,0.44,226,1.328,231,0.929,252,1.115,253,1.043,254,1.621,317,1.495,318,2.046,323,1.033,336,1.873,343,2.523,344,1.659,371,1.909,376,2.284,389,3.888,418,0.664,419,0.932,420,1.373,432,1.984,436,2.931,437,1.827,444,1.033,445,0.897,449,0.996,451,0.897,453,1.757,478,1.691,499,2.013,507,1.033,508,2.089,509,1.364,510,1.033,511,2.123,512,1.033,513,1.033,514,1.033,515,0.897,516,1.033,517,0.897,518,1.033,519,0.897,520,1.57,521,0.897,522,1.708,523,1.033,524,1.033,525,0.897,526,1.033,527,0.897,528,0.996,529,1.033,530,0.897,531,1.364,532,1.033,533,0.897,534,1.033,535,0.897,536,1.033,537,0.897,538,1.033,539,0.929,540,1.033,541,0.897,542,1.033,543,0.897,544,1.033,545,1.844,546,2.76,547,1.033,548,0.897,549,0.897,550,0.897,551,1.033,552,0.897,553,0.81,554,1.033,555,0.897,556,1.033,557,1.033,558,0.996,560,0.825,572,2.682,580,1.394,596,2.302,605,2.85,613,1.903,624,1.758,625,1.659,638,2.623,640,3.052,641,1.659,642,2.013,643,2.914,644,1.659,648,2.171,746,1.155,765,3.052,773,2.391,774,2.85,775,2.302,805,2.273,827,1.495,835,2.555,863,2.391,875,1.572,876,2.391,885,3.152,906,3.052,927,1.874,928,2.072,933,2.799,941,2.391,961,3.197,962,3.061,964,2.674,968,2.674,985,2.072,987,3.481,1068,1.659,1339,2.893,1363,3.052,1371,2.674,1402,3.681,1412,2.751,1413,3.477,1414,2.623,1415,3.061,1416,2.623,1417,1.572,1419,2.523,1420,2.523,1421,2.751,1431,3.326,1434,1.984,1435,1.495,1438,2.013,1440,3.681,1441,2.893,1444,2.188,1445,2.421,1447,2.421,1454,2.623,1456,1.495,1460,3.052,1483,4.964,1517,3.326,1535,2.188,1536,2.751,1541,4.537,1543,2.85,1555,2.013,1574,3.061,1730,1.874,1742,3.326,1830,3.681,1917,2.188,1925,1.758,2170,2.801,2218,4.537,2219,4.256,2225,3.41,2232,3.235,2319,3.681,2526,4.454,2620,1.874,2802,5.333,2803,2.188,2804,3.681,2805,3.681,2806,4.22,2807,5.106,2808,4.22,2809,4.837,2810,5.106,2811,4.22,2812,5.106,2813,5.106,2814,6.463,2815,2.775,2816,2.775,2817,4.22,2818,5.106,2819,4.454,2820,4.22,2821,2.775,2822,4.22,2823,4.22,2824,4.22,2825,5.106,2826,4.22,2827,4.22,2828,5.638,2829,4.22,2830,4.22,2831,4.22,2832,4.22,2833,2.775,2834,5.59,2835,5.106,2836,4.22,2837,4.22,2838,4.22,2839,4.22,2840,3.681,2841,4.22,2842,4.22,2843,4.22,2844,4.22,2845,4.22,2846,4.22,2847,2.775,2848,4.025,2849,2.775,2850,4.22,2851,2.775,2852,2.775,2853,3.681,2854,6.463,2855,2.775,2856,2.775,2857,2.775,2858,4.22,2859,4.22,2860,2.775,2861,4.22,2862,4.22,2863,4.22,2864,4.22,2865,2.775,2866,5.106,2867,2.775,2868,2.775,2869,2.775,2870,2.775,2871,2.775,2872,2.775,2873,2.775,2874,2.775]],["title/modules/ThumbnailCarouselModule.html",[0,1.232,1479,2.755]],["body/modules/ThumbnailCarouselModule.html",[2,2.111,3,2.111,8,0.013,18,2.339,19,1.874,20,1.531,21,0.178,22,0.219,23,0.178,24,0.12,26,2.699,28,2.009,35,0.339,47,2.339,48,0.371,49,3.591,50,2.726,98,0.219,99,0.178,109,0.009,110,0.011,111,0.009,255,1.482,545,2.727,546,2.081,658,2.602,659,2.802,660,2.158,1479,5.535,1483,3.916,1815,4.721,1816,3.916,2802,4.206,2809,4.571,2834,5.511,2875,5.058,2876,5.058,2877,5.058,2878,5.798,2879,6.991,2880,5.798,2881,5.798,2882,5.798,2883,5.798,2884,5.798]],["title/components/TissueSectionVisComponent.html",[130,0.557,548,1.319]],["body/components/TissueSectionVisComponent.html",[7,1.244,8,0.013,9,1.244,21,0.118,22,0.145,23,0.118,24,0.15,29,1.324,31,1.566,33,1.289,35,0.221,38,0.805,48,0.246,65,1.536,98,0.145,99,0.223,102,1.164,109,0.006,110,0.008,111,0.008,118,0.629,119,0.818,120,0.632,125,1.159,126,0.747,127,0.679,128,1.382,130,0.841,136,1.486,170,1.202,172,1.202,176,1.415,179,1.739,182,2.789,183,1.993,185,1.923,187,1.923,188,1.923,191,1.202,193,1.759,196,1.627,197,2.518,205,1.731,210,1.162,216,1.334,226,1.159,231,1.288,254,1.415,303,1.993,317,1.239,318,2.146,323,2.292,336,1.759,340,3.358,343,2.301,344,3.202,371,1.792,373,2.319,376,1.993,418,0.92,419,1.323,420,1.198,432,2.896,437,1.667,444,1.432,445,1.244,449,1.382,451,1.244,453,2.23,478,2.469,507,1.432,508,2.263,509,1.731,510,1.432,511,2.478,512,1.432,513,1.432,514,1.432,515,1.244,516,1.432,517,1.244,518,1.432,519,1.244,520,1.993,521,1.244,522,1.288,523,1.432,524,1.432,525,1.244,526,1.432,527,1.244,528,1.382,529,1.432,530,1.244,531,1.731,532,1.432,533,1.244,534,1.432,535,1.244,536,1.432,537,1.244,538,1.432,539,1.288,540,1.432,541,1.244,542,1.432,543,1.244,544,1.432,545,1.244,546,1.382,547,1.432,548,2.153,549,2.633,550,2.72,551,1.432,552,1.244,553,1.124,554,1.432,555,1.244,556,1.432,557,1.432,558,1.382,580,2.03,635,1.667,636,1.993,637,2.63,643,2.778,648,1.991,746,1.603,773,3.034,775,1.736,805,2.885,827,2.074,835,2.23,843,2.885,875,2.181,876,2.181,961,2.778,1343,4.333,1352,5.374,1414,3.164,1419,2.301,1434,1.81,1438,2.792,1439,3.034,1444,3.034,1454,1.977,1472,3.358,1486,5.258,1554,3.393,1805,4.469,2045,3.034,2561,4.673,2885,5.713,2886,3.358,2887,7.248,2888,6.16,2889,5.356,2890,5.356,2891,6.16,2892,7.001,2893,6.16,2894,3.849,2895,4.673,2896,4.673,2897,3.849,2898,5.356,2899,5.356,2900,5.356,2901,5.356,2902,5.356,2903,3.849,2904,5.356,2905,5.356,2906,5.356,2907,3.849,2908,3.849,2909,3.849,2910,3.849,2911,3.849,2912,3.849,2913,3.849]],["title/modules/TissueSectionVisModule.html",[0,1.232,1480,2.755]],["body/modules/TissueSectionVisModule.html",[2,1.826,3,2.164,8,0.013,18,2.398,19,1.954,20,1.597,21,0.186,22,0.228,23,0.186,24,0.125,26,2.767,28,2.095,35,0.316,47,2.398,48,0.386,98,0.228,99,0.186,109,0.009,110,0.011,111,0.009,548,2.741,549,1.954,550,2.47,658,2.668,659,2.873,660,2.25,1343,3.614,1480,5.581,1486,4.386,2885,4.766,2914,5.275,2915,5.275,2916,5.275,2917,6.047,2918,6.047]],["title/components/ToggleButtonComponent.html",[130,0.557,552,1.319]],["body/components/ToggleButtonComponent.html",[7,0.938,8,0.013,9,0.938,21,0.089,22,0.11,23,0.089,24,0.159,29,1.079,31,1.703,33,1.427,34,1.375,35,0.241,38,0.607,48,0.185,65,1.502,98,0.11,99,0.202,100,2.094,101,1.563,102,0.991,103,0.893,109,0.004,110,0.007,111,0.007,118,0.296,119,0.667,120,0.717,125,1.354,126,0.702,127,0.925,128,1.041,129,3.697,130,0.98,145,0.97,170,0.906,172,1.954,176,1.153,179,2.332,182,2.706,183,1.624,185,1.566,187,1.566,188,1.566,191,1.638,193,1.153,196,1.385,205,2.022,210,1.584,216,1.005,219,0.691,226,1.262,231,0.97,236,1.46,251,1.232,252,1.153,253,1.442,255,0.741,261,1.997,263,3.697,280,1.959,315,2.351,317,1.447,318,1.749,319,2.142,323,2.171,371,1.755,418,1.043,419,1.2,420,1.4,434,1.563,435,1.563,437,1.256,444,1.079,445,0.938,449,1.041,451,0.938,507,1.079,508,2.022,509,1.41,510,1.079,511,2.171,512,1.079,513,1.079,514,1.079,515,0.938,516,1.079,517,0.938,518,1.079,519,0.938,520,1.624,521,0.938,522,0.97,523,1.079,524,1.079,525,0.938,526,1.079,527,0.938,528,1.041,529,1.079,530,0.938,531,1.41,532,1.079,533,0.938,534,1.079,535,0.938,536,1.079,537,0.938,538,1.079,539,0.97,540,1.079,541,0.938,542,1.079,543,0.938,544,1.079,545,0.938,546,1.041,547,1.079,548,0.938,549,0.938,550,0.938,551,1.079,552,1.886,553,2.361,554,1.079,555,0.938,556,1.079,557,1.079,558,1.041,560,1.026,579,1.079,609,2.964,637,1.424,643,1.308,648,0.938,746,1.208,757,4.135,758,2.826,761,2.812,764,1.364,765,3.135,768,4.948,769,3.44,770,4.599,771,3.143,773,2.472,774,2.947,779,1.967,780,2.365,781,2.997,782,3.165,783,1.749,786,2.537,790,3.165,791,2.947,792,2.947,794,1.889,798,2.947,805,2.351,819,3.805,820,3.165,827,1.563,831,2.104,835,3.045,842,3.488,843,4.054,850,2.286,852,2.104,858,2.53,861,2.104,875,1.643,876,1.643,885,1.49,899,2.764,908,3.44,910,3.44,911,3.44,915,2.608,918,4.077,923,4.769,928,2.142,940,2.286,946,1.734,961,1.308,985,2.142,987,3.883,1239,3.868,1411,1.838,1412,1.563,1413,1.643,1416,2.241,1417,2.472,1420,1.734,1421,1.563,1434,1.364,1454,1.49,1456,3.541,1495,6.058,1539,3.94,1554,1.838,1631,2.608,1802,2.104,2045,2.286,2050,2.53,2051,4.576,2052,4.576,2070,3.806,2098,2.53,2102,3.806,2113,5.734,2114,5.734,2919,6.705,2920,2.53,2921,5.245,2922,4.364,2923,4.364,2924,2.901,2925,4.364,2926,6.574,2927,4.364,2928,4.364,2929,5.245,2930,2.901,2931,2.901,2932,2.901,2933,2.901,2934,2.901,2935,2.901,2936,2.901,2937,2.901,2938,2.901,2939,2.901,2940,2.901,2941,2.901,2942,2.901,2943,2.901,2944,2.901,2945,2.901,2946,2.901,2947,2.901,2948,2.901,2949,4.364,2950,4.364,2951,2.901,2952,2.901]],["title/components/ViewerComponent.html",[130,0.557,555,1.319]],["body/components/ViewerComponent.html",[7,1.195,8,0.013,9,1.195,21,0.114,22,0.14,23,0.114,24,0.16,29,1.287,31,1.708,33,1.09,34,1.369,35,0.215,38,0.774,48,0.236,57,2.343,58,1.9,65,1.526,98,0.14,99,0.186,100,1.87,101,1.992,102,0.984,103,0.629,109,0.006,110,0.008,111,0.008,118,0.378,119,0.796,120,0.855,126,0.785,127,1.063,128,1.328,130,0.823,170,1.155,172,1.155,176,1.376,179,1.702,182,2.778,183,1.938,185,1.87,187,1.87,188,1.87,196,1.592,208,2.806,210,1.82,212,4.044,216,2.601,219,0.586,230,2.343,231,1.742,255,0.945,261,1.646,309,2.087,317,1.596,318,1.482,323,2.243,336,1.89,371,2.017,396,2.497,397,4.543,418,1.245,419,1.195,420,1.543,428,2.211,432,2.834,437,1.601,444,1.376,445,1.195,449,1.328,451,1.195,453,2.168,478,2.087,507,1.376,508,1.683,509,1.683,510,1.376,511,2.435,512,1.376,513,1.376,514,1.376,515,1.195,516,1.376,517,1.195,518,1.376,519,1.195,520,1.938,521,1.195,522,1.237,523,1.376,524,1.376,525,1.195,526,1.376,527,1.195,528,1.328,529,1.376,530,1.195,531,1.683,532,1.376,533,1.195,534,1.376,535,1.195,536,1.376,537,1.195,538,1.376,539,1.237,540,1.376,541,1.195,542,1.376,543,1.195,544,1.376,545,1.195,546,1.328,547,1.376,548,1.195,549,1.949,550,1.195,551,1.376,552,1.195,553,1.08,554,1.376,555,2.115,556,1.376,557,1.376,558,1.328,560,0.723,572,2.448,596,2.718,608,3.517,613,2.348,626,1.992,636,2.243,638,2.675,639,2.683,643,2.951,644,2.211,648,1.949,746,1.54,765,3.604,773,2.95,775,2.348,805,2.806,827,1.992,835,1.54,843,1.992,844,4.105,875,2.095,885,3.097,961,2.718,987,1.816,1031,6.018,1239,1.992,1246,4.543,1384,3.113,1410,2.343,1412,2.806,1413,2.95,1414,1.9,1416,1.9,1417,2.095,1419,3.113,1420,2.211,1428,2.915,1434,1.739,1454,1.9,1456,1.992,1460,3.604,1576,4.752,1589,4.105,1632,4.105,1633,5.159,1730,2.497,1733,3.517,1890,4.543,1900,3.778,1925,2.343,1938,4.752,1940,5.159,1945,4.752,1948,3.908,1950,2.915,2018,4.752,2953,3.226,2954,4.543,2955,6.029,2956,5.208,2957,6.029,2958,6.544,2959,3.698,2960,5.208,2961,3.698,2962,3.698,2963,5.208,2964,3.698,2965,3.698,2966,3.698,2967,4.543,2968,5.208,2969,5.208,2970,5.208,2971,3.698,2972,5.208,2973,3.698,2974,6.029,2975,5.208,2976,4.543,2977,3.698,2978,3.698,2979,3.698]],["title/modules/ViewerModule.html",[0,1.232,17,2.755]],["body/modules/ViewerModule.html",[2,1.79,3,2.139,8,0.013,17,5.559,18,2.37,19,1.916,20,1.566,21,0.182,22,0.224,23,0.182,24,0.122,26,2.735,28,2.054,35,0.337,47,2.37,48,0.379,49,3.639,50,2.787,98,0.224,99,0.182,109,0.009,110,0.011,111,0.009,231,1.983,555,2.735,658,2.636,659,2.839,660,2.206,1815,4.784,1816,4.003,2714,6.181,2715,5.171,2980,5.171,2981,5.171,2982,5.171,2983,5.928,2984,5.928]],["title/injectables/WorkerDataSourceService.html",[404,0.944,1336,2.755]],["body/injectables/WorkerDataSourceService.html",[0,1.582,8,0.013,21,0.161,22,0.198,23,0.161,24,0.155,29,1.624,31,1.605,33,1.374,35,0.311,38,1.096,48,0.335,65,1.199,66,2.099,98,0.198,99,0.161,102,0.99,103,1.221,109,0.008,110,0.01,111,0.008,116,2.632,117,6.563,118,0.535,120,1.179,125,1.553,126,0.827,127,1.158,136,2.022,138,5.08,212,3.866,219,1.137,226,1.553,254,1.987,255,1.678,261,2.054,262,5.178,404,1.519,405,2.572,410,5.206,418,1.716,419,1.31,423,2.822,660,1.95,1329,5.08,1330,3.801,1336,4.436,1337,4.765,2985,6.563,2986,7.176,2987,6.569,2988,6.569,2989,5.239,2990,7.176,2991,7.523,2992,5.239,2993,6.569,2994,5.239,2995,5.239,2996,6.569,2997,5.239,2998,6.569,2999,5.239,3000,5.239,3001,5.239,3002,5.239,3003,5.239,3004,5.239,3005,5.239,3006,5.239,3007,5.239,3008,5.239,3009,5.239,3010,5.239,3011,5.239,3012,5.239]],["title/changelog.html",[3013,2.469,3014,2.469,3015,2.683]],["body/changelog.html",[3,1.419,8,0.01,21,0.181,31,0.438,38,0.41,58,1.646,65,1.423,66,0.785,89,3.757,91,1.055,94,4.282,95,2.03,108,5.285,109,0.003,110,0.005,111,0.009,112,0.801,114,0.655,119,0.299,120,0.322,126,0.209,130,0.641,136,1.814,175,2.662,176,0.847,182,1.072,193,0.847,196,1.618,201,4.018,203,3.704,206,5.216,207,2.526,214,1.171,216,2.197,219,1.005,254,2.006,257,1.544,258,3.663,262,1.544,278,2.325,293,2.307,298,4.853,300,3.663,303,1.749,309,1.63,314,1.421,316,1.883,317,0.453,318,0.785,321,1.709,322,1.544,323,0.729,343,2.809,347,1.544,351,1.709,352,1.323,354,1.507,355,2.746,356,0.883,360,3.548,361,4.099,371,1.734,372,1.241,376,1.193,389,2.03,428,2.431,436,3.017,438,1.916,445,0.633,449,1.687,490,1.709,496,1.241,499,4.036,509,0.633,522,1.072,549,2.277,550,1.036,553,0.936,558,0.703,571,1.816,578,1.055,580,0.535,581,2.526,589,2.526,590,1.544,594,5.811,598,1.171,599,1.421,602,2.164,616,1.055,635,0.848,648,0.633,696,1.323,781,1.006,783,2.78,791,2.164,794,2.244,810,1.323,815,1.323,835,0.816,856,1.171,857,1.646,878,1.11,910,1.544,915,3.098,923,1.421,933,0.848,979,1.171,985,1.573,987,1.573,988,1.323,991,1.006,1052,1.421,1056,2.526,1057,2.526,1061,2.526,1063,1.544,1064,1.323,1070,1.544,1071,3.704,1074,4.085,1076,1.544,1080,1.916,1090,1.544,1092,3.409,1105,1.421,1145,2.796,1183,2.526,1207,2.164,1213,2.325,1239,1.055,1240,1.709,1241,1.544,1244,2.746,1247,3.206,1248,1.709,1254,1.323,1255,1.544,1257,4.757,1276,2.746,1339,1.11,1347,1.709,1362,1.421,1363,1.171,1378,2.796,1380,1.241,1383,1.323,1384,1.171,1387,1.421,1389,1.709,1426,4.099,1428,1.544,1441,1.816,1457,3.525,1458,1.709,1469,4.099,1499,1.709,1507,2.526,1510,1.916,1518,1.544,1530,1.241,1531,1.171,1537,1.421,1545,1.709,1557,1.544,1574,2.325,1658,2.526,1660,3.548,1667,2.526,1674,2.796,1733,2.164,1742,1.544,1759,1.544,1774,1.709,1776,1.709,1794,3.704,1804,1.709,1828,4.099,1867,2.325,1891,2.796,1900,3.759,1912,2.325,1971,2.526,2026,2.526,2145,1.544,2165,2.746,2170,0.962,2183,4.822,2198,1.323,2220,1.11,2225,2.809,2275,1.709,2298,4.512,2304,1.323,2335,1.709,2464,2.526,2476,1.709,2584,1.544,2617,2.95,2633,4.847,2691,2.526,2731,1.709,2762,1.709,2763,1.709,2804,1.709,2805,2.796,2809,1.544,2828,1.709,2840,4.099,2853,2.796,2895,4.521,2954,4.099,2976,2.796,3014,2.95,3015,2.526,3016,1.709,3017,1.709,3018,3.205,3019,4.067,3020,5.123,3021,8.411,3022,7.032,3023,5.123,3024,1.959,3025,5.872,3026,5.872,3027,1.959,3028,1.959,3029,3.205,3030,4.699,3031,1.959,3032,3.205,3033,4.067,3034,1.959,3035,4.067,3036,1.959,3037,1.959,3038,1.959,3039,1.959,3040,1.959,3041,1.959,3042,7.045,3043,1.959,3044,1.959,3045,1.959,3046,1.959,3047,1.959,3048,1.959,3049,3.205,3050,1.709,3051,1.959,3052,3.205,3053,4.699,3054,4.699,3055,4.067,3056,1.959,3057,1.959,3058,1.959,3059,1.959,3060,5.564,3061,4.386,3062,4.521,3063,3.548,3064,1.959,3065,6.524,3066,6.524,3067,5.182,3068,5.182,3069,4.521,3070,1.959,3071,3.205,3072,1.959,3073,4.067,3074,5.345,3075,6.938,3076,3.205,3077,1.959,3078,1.959,3079,3.205,3080,6.681,3081,3.548,3082,1.959,3083,5.564,3084,5.182,3085,1.959,3086,1.959,3087,1.959,3088,1.959,3089,1.959,3090,1.959,3091,2.796,3092,3.205,3093,5.872,3094,5.345,3095,1.959,3096,1.959,3097,1.959,3098,1.959,3099,4.521,3100,1.959,3101,3.205,3102,1.959,3103,3.205,3104,3.205,3105,3.205,3106,3.205,3107,1.959,3108,4.067,3109,1.959,3110,1.959,3111,1.959,3112,3.205,3113,3.205,3114,1.959,3115,1.959,3116,3.205,3117,3.205,3118,4.699,3119,1.959,3120,1.959,3121,1.959,3122,1.959,3123,3.205,3124,1.959,3125,1.959,3126,5.564,3127,3.205,3128,1.959,3129,1.959,3130,1.959,3131,4.067,3132,3.205,3133,5.564,3134,2.796,3135,4.699,3136,2.796,3137,1.959,3138,1.959,3139,3.205,3140,3.205,3141,1.959,3142,1.959,3143,3.205,3144,1.959,3145,1.959,3146,1.959,3147,1.959,3148,3.205,3149,1.959,3150,1.959,3151,1.959,3152,1.959,3153,1.959,3154,1.959,3155,1.959,3156,1.959,3157,1.959,3158,3.205,3159,1.959,3160,1.959,3161,4.067,3162,4.067,3163,3.205,3164,1.959,3165,1.959,3166,1.959,3167,3.205,3168,1.959,3169,1.959,3170,1.959,3171,3.205,3172,3.205,3173,4.067,3174,1.959,3175,1.959,3176,1.959,3177,1.959,3178,1.959,3179,3.205,3180,1.709,3181,1.959,3182,1.959,3183,4.067,3184,3.205,3185,1.959,3186,1.959,3187,4.067,3188,3.205,3189,4.699,3190,1.959,3191,1.959,3192,1.959,3193,3.205,3194,1.959,3195,1.959,3196,1.959,3197,1.959,3198,1.959,3199,1.959,3200,4.067,3201,1.959,3202,4.067,3203,5.182,3204,3.205,3205,3.205,3206,3.205,3207,4.067,3208,4.699,3209,5.182,3210,3.205,3211,4.067,3212,1.959,3213,1.959,3214,5.872,3215,4.067,3216,4.699,3217,1.959,3218,1.959,3219,1.959,3220,1.959,3221,3.205,3222,1.959,3223,1.959,3224,1.959,3225,3.205,3226,1.959,3227,1.959,3228,3.548,3229,3.205,3230,3.548,3231,1.959,3232,1.959,3233,1.959,3234,1.959,3235,1.959,3236,1.959,3237,1.959,3238,1.959,3239,1.959,3240,1.959,3241,1.959,3242,4.699,3243,5.564,3244,4.067,3245,1.959,3246,1.959,3247,4.067,3248,1.959,3249,1.959,3250,1.959,3251,3.205,3252,3.205,3253,4.067,3254,1.959,3255,1.959,3256,1.959,3257,1.959,3258,1.959,3259,1.959,3260,1.709,3261,1.959,3262,1.959,3263,1.959,3264,1.959,3265,1.959,3266,1.959,3267,1.959,3268,1.959,3269,1.959,3270,1.959,3271,1.959,3272,1.959,3273,1.959,3274,1.959,3275,1.959,3276,6.127,3277,1.959,3278,3.548,3279,6.127,3280,4.067,3281,4.699,3282,3.205,3283,4.067,3284,1.959,3285,1.959,3286,1.959,3287,1.959,3288,3.205,3289,1.959,3290,1.959,3291,1.959,3292,3.205,3293,1.959,3294,1.959,3295,1.959,3296,1.959,3297,1.959,3298,1.959,3299,1.959,3300,1.959,3301,1.959,3302,1.959,3303,1.959,3304,1.959,3305,1.959,3306,1.959,3307,1.959,3308,1.959,3309,1.959,3310,1.959,3311,1.959,3312,1.959,3313,1.959,3314,1.959,3315,1.959,3316,1.959,3317,3.205,3318,1.959,3319,3.205,3320,1.959,3321,3.205,3322,3.205,3323,4.699,3324,4.699,3325,3.205,3326,3.205,3327,1.959,3328,1.959,3329,1.959,3330,1.959,3331,1.709,3332,1.959,3333,1.959,3334,1.959,3335,1.959,3336,1.959,3337,1.959,3338,3.205,3339,6.524,3340,4.067,3341,3.205,3342,1.959,3343,3.205,3344,1.959,3345,1.959,3346,1.959,3347,1.959,3348,1.959,3349,1.959,3350,3.205,3351,5.123,3352,3.205,3353,1.959,3354,1.959,3355,1.959,3356,1.959,3357,3.704,3358,1.959,3359,3.205,3360,1.959,3361,1.959,3362,1.959,3363,3.205,3364,1.959,3365,1.959,3366,1.959,3367,3.205,3368,4.067,3369,3.205,3370,1.959,3371,2.796,3372,1.959,3373,1.959,3374,1.959,3375,1.959,3376,1.959,3377,1.959,3378,1.959,3379,1.959,3380,1.959,3381,1.709,3382,1.959,3383,1.959,3384,1.959,3385,1.959,3386,1.959,3387,1.959,3388,1.709,3389,1.959,3390,1.959,3391,3.205,3392,1.959,3393,1.959,3394,1.959,3395,1.959,3396,1.959,3397,1.959,3398,1.959,3399,1.959,3400,1.959,3401,1.959,3402,3.205,3403,1.959,3404,1.959,3405,3.205,3406,1.959,3407,1.959,3408,1.959,3409,1.959,3410,1.959,3411,1.959,3412,1.959,3413,1.959,3414,1.959]],["title/coverage.html",[3357,4.395]],["body/coverage.html",[7,1.115,8,0.013,9,1.115,23,0.106,24,0.178,36,2.329,38,1.037,39,2.502,67,2.502,72,2.329,75,3.45,78,3.595,82,2.329,85,2.502,89,3.346,99,0.179,109,0.005,110,0.008,111,0.005,112,1.106,113,2.718,115,4.323,126,0.368,130,1.118,136,1.331,156,2.329,159,2.185,162,1.858,164,1.858,166,2.962,168,2.061,170,1.077,172,1.077,219,0.546,223,6.246,254,0.911,303,1.283,336,2.119,394,3.158,404,1.784,406,3.008,407,3.008,432,3.976,446,3.906,447,3.906,505,2.718,515,1.115,517,1.115,519,1.115,521,1.115,525,1.115,527,1.115,530,1.115,533,1.115,535,1.115,537,1.115,539,1.154,541,1.115,543,1.115,545,1.115,548,1.115,550,1.602,552,1.115,555,1.115,559,3.008,663,4.282,664,3.257,665,4.282,683,2.329,700,2.329,711,1.693,756,3.906,761,1.986,786,1.331,802,1.555,882,3.008,969,2.061,970,4.015,976,2.061,983,2.061,984,2.061,1009,2.329,1011,3.917,1027,2.718,1028,4.722,1055,2.502,1062,3.906,1094,2.718,1234,2.502,1235,4.282,1236,3.906,1237,3.906,1256,2.329,1328,2.502,1329,4.282,1330,4.208,1336,2.329,1343,3.467,1344,2.718,1345,2.502,1346,3.008,1418,4.572,1483,3.346,1486,2.502,1492,2.061,1493,2.061,1495,2.718,1497,3.008,1572,2.718,1573,3.008,1756,3.346,1757,2.502,1758,3.008,1817,3.008,1858,2.718,1860,3.008,1861,3.008,1872,3.008,1889,3.008,1933,2.502,1934,3.595,1935,3.906,1942,2.185,1994,2.718,1995,4.208,2027,2.718,2149,2.185,2150,3.008,2151,3.008,2152,3.906,2153,3.906,2189,2.502,2217,4.43,2219,2.185,2226,2.061,2287,3.618,2289,3.286,2291,2.502,2293,3.467,2295,3.008,2312,1.953,2321,2.329,2395,3.906,2396,3.906,2462,3.008,2463,3.008,2465,3.008,2507,3.008,2584,2.718,2594,4.208,2635,2.502,2637,2.502,2697,2.718,2698,3.008,2717,2.718,2727,2.718,2751,3.906,2802,3.595,2803,3.906,2848,2.718,2885,2.718,2886,3.008,2919,3.008,2920,3.008,2953,3.008,2985,3.008,3020,3.008,3061,2.718,3357,2.718,3415,3.448,3416,3.448,3417,6.341,3418,3.448,3419,3.448,3420,4.956,3421,4.956,3422,3.448,3423,3.448,3424,4.956,3425,5.801,3426,3.448,3427,4.956,3428,3.008,3429,7.977,3430,3.448,3431,3.448,3432,4.956,3433,3.448,3434,3.448,3435,4.956,3436,3.448,3437,3.448,3438,3.008,3439,3.008,3440,5.801,3441,5.801,3442,3.448,3443,3.448,3444,3.448,3445,3.448,3446,3.448,3447,3.448,3448,3.448,3449,3.448,3450,4.572,3451,3.448,3452,3.448,3453,3.008,3454,3.008,3455,3.448,3456,3.448,3457,3.448,3458,3.448,3459,3.448,3460,4.956,3461,3.448,3462,3.008,3463,3.448,3464,3.448,3465,3.448,3466,4.956,3467,4.956,3468,3.448,3469,4.956,3470,3.448,3471,3.448,3472,3.448,3473,3.448]],["title/dependencies.html",[3,1.482,3050,2.969]],["body/dependencies.html",[3,1.479,8,0.013,23,0.151,44,4.274,48,0.313,57,3.988,58,3.234,109,0.007,110,0.01,111,0.007,145,1.639,175,2.517,201,3.104,509,2.035,578,2.64,615,3.566,616,2.64,630,3.555,660,1.823,673,2.303,677,2.303,679,3.555,680,3.555,755,3.862,930,3.862,1035,3.555,1036,3.555,1067,3.862,1251,3.555,1253,3.555,1575,3.555,1618,4.274,1678,3.862,1862,2.517,2185,3.104,2195,3.104,2350,3.862,2719,4.274,2721,4.274,2722,5.492,2819,4.274,2834,3.862,3069,4.274,3091,4.274,3134,4.274,3228,4.274,3278,5.492,3474,4.9,3475,4.9,3476,8.208,3477,4.9,3478,4.9,3479,4.9,3480,4.9,3481,4.9,3482,4.9,3483,4.9,3484,4.9,3485,4.9,3486,7.593,3487,4.9,3488,6.296,3489,4.9,3490,4.9,3491,4.9,3492,6.956,3493,4.9,3494,4.9,3495,4.9,3496,4.9,3497,4.9,3498,4.9,3499,6.956,3500,4.9,3501,4.9,3502,4.9,3503,6.296,3504,4.9,3505,4.9,3506,4.9,3507,6.296,3508,4.9,3509,4.9,3510,4.9,3511,4.9,3512,4.9,3513,4.9,3514,4.9,3515,4.9,3516,4.9,3517,4.9,3518,4.9,3519,4.9,3520,4.9,3521,6.296,3522,4.274,3523,4.9,3524,4.9,3525,4.9,3526,4.9,3527,4.9,3528,6.296,3529,4.9,3530,4.9,3531,4.9,3532,4.9,3533,4.9,3534,4.9,3535,4.9,3536,4.9,3537,4.9,3538,4.9,3539,4.9,3540,4.9,3541,4.9,3542,4.9,3543,4.9,3544,4.9,3545,4.9,3546,4.9,3547,4.9,3548,4.9,3549,4.9,3550,4.9,3551,4.9,3552,4.9,3553,4.9,3554,4.9,3555,4.9,3556,6.296,3557,4.9,3558,4.9,3559,4.9,3560,4.9,3561,4.9,3562,4.9,3563,4.9,3564,4.9,3565,4.9,3566,4.9,3567,4.9,3568,4.9]],["title/miscellaneous/enumerations.html",[3569,1.928,3570,4.282]],["body/miscellaneous/enumerations.html",[8,0.012,24,0.134,109,0.01,110,0.011,111,0.01,118,0.664,161,5.895,236,2.175,254,1.717,420,1.673,564,3.34,1028,4.39,1067,5.125,1072,6.524,1073,5.425,3569,3.683,3570,5.671,3571,5.125]],["title/miscellaneous/functions.html",[3569,1.928,3572,4.282]],["body/miscellaneous/functions.html",[8,0.013,24,0.152,33,1.648,34,1.161,89,4.596,109,0.008,110,0.01,111,0.008,118,0.566,120,1.317,125,1.2,127,0.978,179,1.921,210,1.675,211,4.025,229,3.515,254,1.465,373,3.188,394,3.704,418,1.884,419,1.438,420,1.241,436,3.496,446,4.373,447,5.365,482,4.84,505,5.365,560,1.501,681,3.782,756,4.373,779,2.501,832,6.051,833,4.069,834,4.84,835,2.834,841,4.84,844,4.373,916,3.966,978,3.856,990,3.316,1028,3.746,1044,4.84,1073,4.937,1074,4.373,1075,5.937,1076,4.373,1077,4.84,1079,3.143,1080,3.316,1081,4.84,1082,4.84,1084,5.937,1085,4.84,1086,4.84,1087,4.84,1088,4.84,1089,4.373,1090,5.804,1091,3.316,1092,4.025,1093,3.515,1094,5.365,2325,4.84,3438,5.937,3439,5.937,3462,5.937,3569,3.143,3571,5.804,3572,4.84,3573,5.548,3574,5.548,3575,5.548]],["title/index.html",[118,0.347,3013,2.469,3014,2.469]],["body/index.html",[8,0.01,21,0.243,65,1.558,94,5.203,108,4.995,109,0.009,110,0.01,111,0.009,112,0.935,114,1.876,130,0.765,206,4.995,300,4.422,599,4.969,781,2.88,863,3.176,885,2.88,1070,4.419,1071,5.4,1092,4.067,1101,5.976,1183,5.4,1203,4.891,1244,3.786,1363,3.351,1900,4.067,2633,4.067,3015,4.419,3016,5.976,3017,5.976,3022,5.976,3062,6.721,3063,6.453,3074,5.976,3081,4.891,3094,4.891,3136,5.976,3371,4.891,3381,4.891,3576,5.607,3577,5.607,3578,5.607,3579,5.976,3580,5.607,3581,5.607,3582,6.85,3583,6.85,3584,6.85,3585,7.397,3586,5.607,3587,5.607,3588,7.705,3589,7.397,3590,5.607,3591,5.607,3592,6.85,3593,5.607,3594,5.607,3595,5.607,3596,5.607,3597,5.607,3598,5.607,3599,5.607,3600,5.607,3601,5.607,3602,5.607,3603,5.607,3604,5.607,3605,5.607,3606,5.607,3607,5.607]],["title/license.html",[3013,2.469,3014,2.469,3608,2.969]],["body/license.html",[8,0.011,20,1.544,94,3.948,109,0.009,110,0.011,111,0.009,178,4.608,205,1.89,609,2.636,681,3.003,810,3.948,815,5.087,1384,4.2,1399,5.1,1955,4.608,2220,3.312,3061,4.608,3099,6.129,3260,6.129,3331,5.1,3351,5.1,3388,5.1,3522,5.1,3579,7.27,3608,5.1,3609,5.846,3610,7.533,3611,5.846,3612,5.846,3613,7.026,3614,5.846,3615,5.846,3616,5.846,3617,5.846,3618,7.026,3619,5.846,3620,5.846,3621,5.846,3622,5.846,3623,5.846,3624,5.846,3625,5.846,3626,5.846,3627,5.846,3628,5.846,3629,5.846,3630,5.846,3631,7.026,3632,5.846,3633,5.846,3634,5.846,3635,5.846,3636,5.846,3637,7.026,3638,5.846,3639,5.846,3640,5.846,3641,5.846,3642,5.846,3643,5.846,3644,5.846,3645,5.846,3646,5.846,3647,5.846,3648,5.846,3649,5.846,3650,5.846,3651,5.846,3652,5.846,3653,5.846,3654,5.846,3655,5.846,3656,5.846,3657,5.846,3658,5.846,3659,5.846,3660,5.846,3661,5.846]],["title/modules.html",[2,1.683]],["body/modules.html",[1,4.172,2,1.736,8,0.011,10,3.884,11,3.884,12,3.644,13,3.884,14,3.884,15,3.884,16,3.884,17,3.884,58,4.405,109,0.009,110,0.011,111,0.009,653,3.884,995,3.884,996,3.884,997,3.884,1250,6.221,1474,3.884,1479,3.884,1480,3.884,1562,3.884,1806,3.884,2284,3.644,2285,3.884,2286,3.644,2617,4.172,2896,5.017,3023,7.48,3662,8.586]],["title/overview.html",[3663,4.864]],["body/overview.html",[1,6.023,2,1.142,3,1.598,4,3.301,5,3.301,6,3.301,7,1.973,8,0.013,9,1.973,10,5.248,11,5.461,12,4.689,13,5.099,14,5.353,15,5.099,16,4.868,17,4.868,18,1.771,19,1.223,20,0.999,109,0.006,110,0.008,111,0.006,114,1.266,159,3.867,170,2.311,172,2.311,176,0.999,405,1.858,515,2.392,517,2.392,519,2.392,521,2.392,525,2.392,527,2.392,530,2.392,533,2.392,535,2.392,537,2.48,539,2.476,541,2.392,543,2.392,545,2.392,548,2.392,552,2.392,555,2.392,581,2.983,653,4.868,654,3.301,655,3.301,656,3.301,992,3.301,993,3.301,994,3.301,995,5.248,996,4.122,997,4.698,1474,5.248,1475,3.301,1476,3.301,1477,3.301,1478,3.301,1479,4.868,1480,4.868,1488,3.301,1489,3.301,1490,3.301,1562,4.868,1563,3.301,1564,3.301,1565,3.301,1748,3.301,1749,3.301,1750,3.301,1806,5.353,1807,3.301,1808,3.301,1810,3.301,1852,3.301,1853,3.301,1855,3.301,1859,2.745,1926,3.301,1927,3.301,1928,3.301,2281,3.301,2282,3.301,2283,3.301,2284,4.977,2285,5.43,2286,4.977,2312,3.458,2385,3.301,2386,3.301,2387,3.301,2494,3.301,2495,3.301,2497,3.301,2500,3.301,2501,3.301,2502,3.301,2585,3.301,2586,3.301,2588,3.301,2710,3.301,2711,3.301,2712,3.301,2744,3.301,2745,3.301,2875,3.301,2876,3.301,2877,3.301,2914,3.301,2915,3.301,2916,3.301,2980,3.301,2981,3.301,2982,3.301,3180,4.617,3230,3.301,3663,3.301,3664,3.784,3665,3.784]],["title/miscellaneous/typealiases.html",[3569,1.928,3666,4.909]],["body/miscellaneous/typealiases.html",[8,0.013,24,0.153,75,2.903,109,0.009,110,0.011,111,0.009,118,0.577,126,0.86,176,1.493,179,2.096,181,3.58,208,4.162,236,2.483,315,3.044,357,3.201,394,3.236,579,1.397,598,3.378,635,2.447,671,3.057,761,2.758,764,2.657,780,3.104,786,2.865,802,3.104,876,3.201,969,3.378,970,3.378,971,3.708,972,3.816,973,3.816,974,3.58,976,3.378,979,4.115,980,5.013,983,3.378,984,3.378,985,2.775,989,5.013,990,3.378,991,3.813,1433,3.816,1862,2.903,1995,4.1,2015,4.93,2016,6.005,2017,6.005,2018,5.426,2019,4.93,2020,6.005,2021,4.93,2022,6.005,2023,4.93,2024,4.93,2025,4.93,2026,4.455,2287,3.044,2293,3.378,3013,4.1,3450,5.426,3569,3.201,3667,5.651,3668,7.026,3669,6.475,3670,6.884,3671,4.93]],["title/miscellaneous/variables.html",[3569,1.928,3672,4.282]],["body/miscellaneous/variables.html",[8,0.013,24,0.157,38,0.64,66,1.225,67,3.293,75,1.571,88,5.332,95,2.875,99,0.167,103,0.52,109,0.005,110,0.007,111,0.005,118,0.312,126,0.715,136,2.089,138,2.065,162,1.647,164,1.647,168,1.828,210,0.923,212,4.534,213,1.571,219,0.949,226,1.171,240,2.065,241,2.41,303,1.689,316,1.819,317,1.844,318,2.564,323,2.381,336,1.43,357,1.732,373,1.324,376,2.014,394,2.134,400,2.713,418,0.731,419,1.537,420,1.736,423,1.647,531,0.988,579,1.48,636,1.138,648,0.988,663,2.065,664,1.571,665,3.065,666,2.713,667,3.293,683,3.065,684,2.218,685,2.218,686,2.218,687,2.218,688,2.218,689,2.218,690,2.218,691,2.218,692,2.218,693,2.218,694,2.218,695,2.218,696,2.065,697,2.218,698,1.937,699,2.218,711,1.501,761,1.819,783,1.819,786,2.089,916,1.647,933,1.324,970,1.828,974,1.937,978,1.732,1011,2.065,1028,2.065,1055,3.293,1056,2.41,1057,2.41,1058,2.667,1059,2.667,1060,2.667,1061,2.41,1062,2.41,1063,2.41,1064,2.065,1065,2.667,1066,2.667,1234,2.218,1235,2.065,1236,2.41,1237,3.578,1241,2.41,1249,6.099,1254,2.065,1255,2.41,1256,3.065,1257,5.649,1258,2.667,1259,7.288,1260,2.667,1261,2.667,1262,2.667,1263,3.959,1264,2.667,1265,2.667,1266,2.667,1267,2.667,1268,2.667,1269,2.667,1270,5.225,1271,5.225,1272,5.582,1273,5.582,1274,3.293,1275,2.667,1276,4.527,1277,2.667,1278,2.667,1279,2.667,1280,3.959,1281,3.959,1282,3.959,1283,2.667,1284,2.667,1285,5.582,1286,2.667,1287,3.959,1288,2.667,1289,2.667,1290,2.667,1291,2.667,1292,2.667,1293,5.225,1294,2.667,1295,2.667,1296,3.959,1297,2.667,1298,2.667,1299,2.667,1300,2.667,1301,2.667,1302,2.667,1303,3.959,1304,3.293,1305,2.667,1306,2.667,1307,2.667,1308,2.667,1309,2.667,1310,5.225,1311,2.667,1312,2.667,1313,5.225,1314,2.667,1315,2.667,1316,2.218,1317,2.667,1318,2.667,1319,5.582,1320,2.667,1321,3.959,1322,2.667,1323,2.41,1324,2.667,1325,2.41,1326,2.667,1327,2.667,1329,2.065,1337,2.218,1483,2.065,1492,2.713,1493,3.236,1542,2.218,1862,2.331,1864,2.667,1867,2.218,1869,3.959,1942,1.937,1995,2.218,2027,3.578,2028,2.667,2029,2.667,2217,1.937,2223,1.937,2225,3.236,2226,1.828,2228,2.065,2229,2.875,2230,2.065,2232,3.429,2287,1.647,2293,1.828,2594,2.218,2635,3.293,2636,2.41,2717,2.41,2726,2.667,2727,3.578,2751,2.41,2782,2.667,2802,2.218,2803,3.578,2848,3.578,2967,3.959,3428,3.959,3450,4.267,3453,3.959,3454,3.959,3569,1.732,3571,2.41,3668,2.667,3669,2.667,3671,3.959,3672,2.667,3673,3.058,3674,3.058,3675,3.058,3676,3.058,3677,3.058,3678,4.539,3679,3.058,3680,3.058,3681,3.058,3682,3.058,3683,3.058,3684,3.058]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":336,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.063rem",{"_index":1558,"title":{},"body":{"components/DropdownComponent.html":{}}}],["0.095rem",{"_index":1745,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":3568,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1450,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.125rem",{"_index":1541,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.12rem",{"_index":1430,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.14",{"_index":1448,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.15s",{"_index":1453,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.18.0",{"_index":3511,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1800,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":1446,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.2.0",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":3529,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1456,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["0.2rem",{"_index":1549,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["0.2s",{"_index":1795,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["0.3125rem",{"_index":2864,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.3s",{"_index":1543,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.4",{"_index":345,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["0.4s",{"_index":2709,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5.0",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":639,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["0.5s",{"_index":2952,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.6",{"_index":2872,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.6.0",{"_index":3371,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.625rem",{"_index":2867,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.6s",{"_index":1802,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.75rem",{"_index":1431,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.875rem",{"_index":1535,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.9375rem",{"_index":1743,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0/1",{"_index":3417,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3416,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3426,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3427,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3425,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3424,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3420,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3444,"title":{},"body":{"coverage.html":{}}}],["0000001d",{"_index":1801,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0000003e",{"_index":1550,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["00000058",{"_index":1847,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["00e5ff",{"_index":693,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["01",{"_index":3070,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1426,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["05",{"_index":1469,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["06",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3030,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1442,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0rem",{"_index":1539,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1",{"_index":376,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":3506,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3515,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":3563,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":2949,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["1.12rem",{"_index":1429,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["1.16.0",{"_index":3544,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":3508,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":3278,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":3518,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":3545,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":2578,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["1.25rem",{"_index":2580,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["1.2rem",{"_index":1845,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["1.3.5",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":3228,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":3531,"title":{},"body":{"dependencies.html":{}}}],["1.48rem",{"_index":1846,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["1.5.0",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["1.55rem",{"_index":1551,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":1732,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["1.5rem",{"_index":1460,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["1.6.0",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":3519,"title":{},"body":{"dependencies.html":{}}}],["1.75rem",{"_index":1747,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["1/1",{"_index":3429,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3434,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":499,"title":{},"body":{"components/AppWebComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["10.0.0",{"_index":3521,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":3446,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":3433,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":3449,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":432,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1449,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["10x",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3230,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11.2.1",{"_index":3546,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":3445,"title":{},"body":{"coverage.html":{}}}],["110",{"_index":1059,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":3020,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["12.0.1",{"_index":3548,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":3476,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":3480,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":3468,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":3447,"title":{},"body":{"coverage.html":{}}}],["12/16",{"_index":3443,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":3458,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1061,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["13/13",{"_index":3461,"title":{},"body":{"coverage.html":{}}}],["136",{"_index":2692,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["14/15",{"_index":3456,"title":{},"body":{"coverage.html":{}}}],["14/30",{"_index":3419,"title":{},"body":{"coverage.html":{}}}],["15.126.1",{"_index":3475,"title":{},"body":{"dependencies.html":{}}}],["15rem",{"_index":1744,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["16",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["16rem",{"_index":1464,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["17",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["17rem",{"_index":1470,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["18",{"_index":3665,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":3463,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":2382,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["19.5rem",{"_index":1451,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["1].color",{"_index":726,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["1em",{"_index":1533,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1px",{"_index":1554,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":637,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem/1.25rem",{"_index":1921,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1s",{"_index":1916,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2",{"_index":343,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["2.0.0",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":3525,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":2948,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.1.0",{"_index":3134,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2",{"_index":341,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["2.2.0",{"_index":3127,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":3091,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5rem",{"_index":1439,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["2.6.7",{"_index":3549,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":3517,"title":{},"body":{"dependencies.html":{}}}],["2.8125rem",{"_index":2866,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["2/10",{"_index":3471,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":3467,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":3437,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1872,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["2019",{"_index":3351,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["20em",{"_index":1738,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["20rem",{"_index":2583,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["21",{"_index":3180,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["22",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":2693,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["23.75rem",{"_index":2383,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["24",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["24px.svg",{"_index":1319,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":651,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["255",{"_index":698,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["25rem",{"_index":1910,"title":{},"body":{"components/HeaderComponent.html":{}}}],["26",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["26/26",{"_index":3470,"title":{},"body":{"coverage.html":{}}}],["26th",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":1544,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["28.5rem",{"_index":1848,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["2979ff",{"_index":685,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["2px",{"_index":1444,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["2rem",{"_index":1415,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["3",{"_index":581,"title":{},"body":{"components/CheckboxComponent.html":{},"changelog.html":{},"overview.html":{}}}],["3.0",{"_index":3583,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":3069,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":3492,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":3497,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":2978,"title":{},"body":{"components/ViewerComponent.html":{}}}],["3.6.0",{"_index":3557,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":3499,"title":{},"body":{"dependencies.html":{}}}],["3.75rem",{"_index":2865,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["3/3",{"_index":3466,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":3423,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2691,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["300",{"_index":2581,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["3000",{"_index":295,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["31",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["32/37",{"_index":3452,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":649,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["35rem",{"_index":1849,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["36/39",{"_index":3436,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":2183,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["3rem",{"_index":1411,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["3s",{"_index":1546,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":2828,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["4.17.1",{"_index":3523,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":3540,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":3513,"title":{},"body":{"dependencies.html":{}}}],["4.375rem",{"_index":1740,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["4.6.0",{"_index":3533,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3432,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1920,"title":{},"body":{"components/HeaderComponent.html":{}}}],["42/44",{"_index":3464,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":3418,"title":{},"body":{"coverage.html":{}}}],["4em",{"_index":1844,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1447,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["4rem",{"_index":1908,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["5",{"_index":1466,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["5.0.0",{"_index":3534,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":3504,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":3539,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":963,"title":{},"body":{"components/ContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["5/5",{"_index":3440,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3459,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1418,"title":{},"body":{"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["500",{"_index":1915,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5em",{"_index":1561,"title":{},"body":{"components/DropdownComponent.html":{}}}],["5rem",{"_index":1805,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["5s",{"_index":966,"title":{},"body":{"components/ContentComponent.html":{}}}],["6.0.0",{"_index":3542,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":3537,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":3551,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3498,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":3560,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":3558,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":3442,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":3441,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3422,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1437,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["66",{"_index":3457,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1443,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["6s",{"_index":1803,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["7.75rem",{"_index":2579,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["7/7",{"_index":3465,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":3430,"title":{},"body":{"coverage.html":{}}}],["7323e2",{"_index":689,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["75",{"_index":3421,"title":{},"body":{"coverage.html":{}}}],["75rem",{"_index":1741,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["76",{"_index":3448,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["8.25rem",{"_index":1914,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.3.2",{"_index":3566,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":3486,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":3431,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":3460,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1463,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["82b1ff",{"_index":691,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["83",{"_index":1062,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["85",{"_index":1458,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["86",{"_index":3451,"title":{},"body":{"coverage.html":{}}}],["9.5rem",{"_index":1553,"title":{},"body":{"components/DropdownComponent.html":{}}}],["9.85rem",{"_index":1528,"title":{},"body":{"components/DropdownComponent.html":{}}}],["9/9",{"_index":3469,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1804,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["92",{"_index":3435,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":3455,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2584,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["99",{"_index":2708,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["9th",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["_aggregatedataquerystatus",{"_index":1109,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":392,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["_celltypetermoccurencesdataquerystatus",{"_index":1113,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_config",{"_index":2995,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["_createcontainer",{"_index":411,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["_error",{"_index":1974,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":2064,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":2823,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["_measuredmargin",{"_index":2094,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":2088,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":789,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_ontologytermoccurencesdataquerystatus",{"_index":1111,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_opened",{"_index":2060,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":2056,"title":{},"body":{"classes/InitializationState.html":{}}}],["_providerfilterquerystatus",{"_index":1119,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_scenedataquerystatus",{"_index":1115,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_technologyfilterquerystatus",{"_index":1117,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_tissueblockdataquerystatus",{"_index":1107,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["a.color.color",{"_index":741,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["ability",{"_index":3143,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":3388,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1454,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["acc",{"_index":736,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["acc[item.key",{"_index":734,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["accent",{"_index":628,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["acceptable",{"_index":215,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["acceptableviewerdomains",{"_index":221,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["accepting",{"_index":2144,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessors",{"_index":774,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["according",{"_index":299,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["accordingly",{"_index":1826,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["accurate",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["acf32b",{"_index":690,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":3656,"title":{},"body":{"license.html":{}}}],["actions",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":232,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["active",{"_index":2620,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["active/showing",{"_index":2703,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activeorgans",{"_index":2677,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["activeorgans.has(o.representation_of)).map(o",{"_index":2682,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["activeorgans.has(tag",{"_index":2686,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["actual_component",{"_index":557,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":382,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{}}}],["addclass",{"_index":2798,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":2762,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["addsvgicon",{"_index":1977,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["adjusting",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":757,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["again",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":2133,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":1674,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["agerange",{"_index":1058,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate",{"_index":1130,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregatedata",{"_index":1131,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":1218,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":1108,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1037,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["ala",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":3667,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1412,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["all_possible_organs",{"_index":2634,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["allcompleted",{"_index":3438,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["allcompleted(states",{"_index":1077,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["allowed",{"_index":2979,"title":{},"body":{"components/ViewerComponent.html":{}}}],["allowing",{"_index":2535,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":1362,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["allowtouchmove",{"_index":2826,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["along",{"_index":2481,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":2705,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":811,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["alt",{"_index":3587,"title":{},"body":{"index.html":{}}}],["always",{"_index":839,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analytics",{"_index":578,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1003,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1015,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":360,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["anatomicalstructuresettings",{"_index":2639,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["and/or",{"_index":3629,"title":{},"body":{"license.html":{}}}],["angular",{"_index":175,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["angular's",{"_index":1637,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":930,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3477,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":2014,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{}}}],["angular/cdk/portal",{"_index":1676,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":2591,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":660,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1000,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":3478,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2350,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3479,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2351,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":1816,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/checkbox",{"_index":614,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{}}}],["angular/material/form",{"_index":1568,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/icon",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":2393,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["angular/material/progress",{"_index":2715,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/select",{"_index":1570,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{}}}],["angular/material/snack",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["angular/material/toolbar",{"_index":1931,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":2505,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":3482,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":3483,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":926,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animate('.5s",{"_index":2041,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":936,"title":{},"body":{"components/ContentComponent.html":{}}}],["animate(0",{"_index":2040,"title":{},"body":{"classes/InitializationState.html":{}}}],["animation",{"_index":1542,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":884,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":887,"title":{},"body":{"components/ContentComponent.html":{}}}],["api",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["apiendpointdatasourceservice",{"_index":1332,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["app",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":184,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.component.scss",{"_index":186,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app/core/services/theming/theming.service",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app_bootstrap_listener",{"_index":2747,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":2379,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["appelement",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["appendtoroot",{"_index":412,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["application",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["application/javascript",{"_index":3011,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["applied",{"_index":1774,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["apply",{"_index":1778,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":1762,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilters",{"_index":1767,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":1834,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applythemeclass",{"_index":2754,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":2760,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1018,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":113,"title":{"interfaces/AppOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["approotoverlaycontainer",{"_index":36,"title":{"injectables/AppRootOverlayContainer.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["appropriate",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":9,"title":{"components/AppWebComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["arg",{"_index":1965,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":1969,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter(value",{"_index":1984,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":1982,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":1613,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arising",{"_index":3659,"title":{},"body":{"license.html":{}}}],["array",{"_index":373,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/TissueSectionVisComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array.from(searchresults.values",{"_index":2453,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["array.isarray(val",{"_index":488,"title":{},"body":{"components/AppWebComponent.html":{}}}],["arrow",{"_index":1559,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["arrow_left",{"_index":2940,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":2939,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["asct+b",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["asking",{"_index":587,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assays",{"_index":1796,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["assets/icons/expand_less",{"_index":1326,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/expand_more",{"_index":1324,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/filter.svg",{"_index":1327,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1318,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organs/ico",{"_index":1259,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1321,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assigncolor",{"_index":742,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assigncolor(@payload('key",{"_index":719,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["assigncolor(key",{"_index":745,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment",{"_index":707,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["assignment.state",{"_index":2187,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["assignment.state.ts",{"_index":665,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assignment.state.ts:102",{"_index":750,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:57",{"_index":753,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:59",{"_index":754,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:60",{"_index":751,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:61",{"_index":752,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:63",{"_index":748,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:69",{"_index":747,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment/color",{"_index":664,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assignment/selection",{"_index":3191,"title":{},"body":{"changelog.html":{}}}],["assignments",{"_index":2177,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["associated",{"_index":2220,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":2000,"title":{},"body":{"classes/InitializationState.html":{}}}],["at(nodes",{"_index":2460,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atscrollbottom",{"_index":2517,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":2929,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["attached",{"_index":408,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["attempts",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["authentication",{"_index":1913,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authors",{"_index":3650,"title":{},"body":{"license.html":{}}}],["auto",{"_index":964,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["autocomplete",{"_index":2345,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":2301,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["automatic",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":2617,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":2006,"title":{},"body":{"classes/InitializationState.html":{}}}],["awaited",{"_index":1996,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":3606,"title":{},"body":{"index.html":{}}}],["axis",{"_index":2913,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["b92dff",{"_index":687,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1363,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":1958,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{}}}],["base",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":372,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["basepath",{"_index":1020,"title":{},"body":{"modules/CoreModule.html":{}}}],["basewebcomponent",{"_index":448,"title":{},"body":{"components/AppWebComponent.html":{}}}],["basic",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":2082,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.left",{"_index":2085,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.right",{"_index":2084,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1247,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["being",{"_index":2731,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["beta",{"_index":3074,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":347,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["bind",{"_index":1035,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["binds",{"_index":2773,"title":{},"body":{"injectables/ThemingService.html":{}}}],["bladder",{"_index":1258,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1260,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":3009,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["block",{"_index":428,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1261,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1262,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["bmirange",{"_index":1060,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":201,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyui",{"_index":192,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["bodyuicomponent",{"_index":150,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["bodyuimodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["bold",{"_index":642,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["bone",{"_index":1263,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":125,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["booleaninput",{"_index":2012,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":2770,"title":{},"body":{"injectables/ThemingService.html":{}}}],["border",{"_index":1416,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["both",{"_index":1057,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bottom",{"_index":638,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["bound",{"_index":1657,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["box",{"_index":1441,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["brain",{"_index":1266,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1267,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":177,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["breaking",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["breaks",{"_index":2196,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bringing",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3662,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":542,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":2592,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":2516,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":2515,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":2507,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"coverage.html":{}}}],["browser.component.ts:102",{"_index":2556,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:111",{"_index":2545,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:115",{"_index":2553,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:24",{"_index":2533,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:29",{"_index":2530,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:34",{"_index":2534,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:36",{"_index":2532,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:38",{"_index":2531,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:44",{"_index":2538,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:49",{"_index":2543,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:54",{"_index":2541,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:56",{"_index":2536,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:58",{"_index":2537,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:64",{"_index":2529,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:79",{"_index":2550,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:93",{"_index":2547,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":2589,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/donor",{"_index":1344,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"coverage.html":{}}}],["browser/results",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"coverage.html":{}}}],["browser/tissue",{"_index":2885,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["browseranimationsmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browserify",{"_index":3559,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["bubble_chart",{"_index":1403,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["bug",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3580,"title":{},"body":{"index.html":{}}}],["builds",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["builtin_parsers",{"_index":479,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.boolean",{"_index":506,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.json(value",{"_index":491,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":987,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":554,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":1496,"title":{},"body":{"modules/DrawerModule.html":{}}}],["button.component.html",{"_index":2922,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":2921,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":2920,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:19",{"_index":2927,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:22",{"_index":2928,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:27",{"_index":2938,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:38",{"_index":2935,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:40",{"_index":2934,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:42",{"_index":2925,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:65",{"_index":2931,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:75",{"_index":2932,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:85",{"_index":2930,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:97",{"_index":2933,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button/toggle",{"_index":1495,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["c",{"_index":3611,"title":{},"body":{"license.html":{}}}],["c.color",{"_index":730,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["cache",{"_index":3503,"title":{},"body":{"dependencies.html":{}}}],["cacheable",{"_index":3562,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":2086,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":2951,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":962,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["calc(100vh",{"_index":2582,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["calc(50",{"_index":2045,"title":{},"body":{"classes/InitializationState.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":2078,"title":{},"body":{"classes/InitializationState.html":{}}}],["call",{"_index":320,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["callback",{"_index":2335,"title":{},"body":{"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["called",{"_index":1080,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["cancelregistration",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":3509,"title":{},"body":{"dependencies.html":{}}}],["captures",{"_index":350,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["card",{"_index":1347,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["card'},{'name",{"_index":523,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["card.component",{"_index":1485,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["card.component.html",{"_index":1351,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.scss",{"_index":1350,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts",{"_index":1346,"title":{},"body":{"components/DonorCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":1372,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:20",{"_index":1368,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:23",{"_index":1367,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:26",{"_index":1361,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:29",{"_index":1365,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:31",{"_index":1366,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:34",{"_index":1369,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:37",{"_index":1370,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:40",{"_index":1360,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:52",{"_index":1373,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:62",{"_index":1385,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:76",{"_index":1377,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.module",{"_index":2593,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["card.module.ts",{"_index":1481,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["card/donor",{"_index":1345,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/ResultsBrowserModule.html":{},"coverage.html":{}}}],["cards",{"_index":2806,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel",{"_index":207,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["carousel'},{'name",{"_index":547,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["carousel.component",{"_index":2882,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["carousel.component.html",{"_index":2808,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.scss",{"_index":2807,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts",{"_index":2803,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["carousel.component.ts:29",{"_index":2817,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:34",{"_index":2815,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:39",{"_index":2816,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:44",{"_index":2849,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:49",{"_index":2852,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:56",{"_index":2856,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:63",{"_index":2833,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:75",{"_index":2847,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:89",{"_index":2821,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.module",{"_index":1484,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["carousel.module.ts",{"_index":2878,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["carousel/thumbnail",{"_index":1483,"title":{},"body":{"modules/DonorCardModule.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":941,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["cases",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":1973,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["cause",{"_index":2968,"title":{},"body":{"components/ViewerComponent.html":{}}}],["ccf",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["ccfapiconfiguration",{"_index":1004,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfapimodule",{"_index":1005,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfapimodule.forroot",{"_index":1019,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfdatabase",{"_index":3681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccfdatabasedatasourceservice",{"_index":1333,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["ccfdatabaseoptions",{"_index":117,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/WorkerDataSourceService.html":{}}}],["ccfdrawer",{"_index":2033,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":760,"title":{},"body":{"components/ContainerComponent.html":{}}}],["cdk",{"_index":1556,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":1668,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdr",{"_index":263,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["cdr.markforcheck",{"_index":280,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ceil",{"_index":1701,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cell",{"_index":203,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["celltypeselectionlabel",{"_index":202,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["celltypetermoccurencesdata",{"_index":1139,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdata$.pipe(take(1)).subscribe(celltypetermsfulldata",{"_index":1187,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdata(filter",{"_index":1224,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdataquerystatus",{"_index":1112,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurrences",{"_index":1157,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypeterms",{"_index":241,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["celltypetermsfulldata",{"_index":1124,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetreemodel",{"_index":242,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["center",{"_index":885,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["cff",{"_index":965,"title":{},"body":{"components/ContentComponent.html":{}}}],["change",{"_index":781,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":857,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":187,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":128,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":188,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":129,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["changelog",{"_index":3015,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":309,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["changes.selection",{"_index":1690,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":1688,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["channel",{"_index":764,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["channels",{"_index":2252,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["charge",{"_index":178,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ResultsBrowserComponent.html":{},"license.html":{}}}],["checkbox",{"_index":566,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["checkbox'},{'name",{"_index":516,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":662,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":568,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":567,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":627,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":515,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkboxes",{"_index":563,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":653,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checked",{"_index":593,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["checked.mat",{"_index":1422,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["checkmark",{"_index":629,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":914,"title":{},"body":{"components/ContentComponent.html":{}}}],["checkselected",{"_index":1427,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["child",{"_index":1433,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":1884,"title":{},"body":{"classes/FlatNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["choices",{"_index":1509,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":3653,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":2923,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":894,"title":{},"body":{"components/ContentComponent.html":{}}}],["classend",{"_index":2051,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1859,"title":{},"body":{"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"overview.html":{}}}],["classname",{"_index":765,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["clean",{"_index":2260,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["cleans",{"_index":798,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["cleanup",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":2975,"title":{},"body":{"components/ViewerComponent.html":{}}}],["click",{"_index":1380,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["clicked",{"_index":1371,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["clicking",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":2610,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["client",{"_index":1007,"title":{},"body":{"modules/CoreModule.html":{}}}],["clientheight",{"_index":2570,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["clip",{"_index":2871,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["close",{"_index":396,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ViewerComponent.html":{}}}],["closed",{"_index":2018,"title":{},"body":{"classes/InitializationState.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["closeexpanded",{"_index":2111,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeiframeviewer",{"_index":398,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["closeopendone",{"_index":2118,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1621,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["closesliderpopover",{"_index":1587,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closesliderpopover(target",{"_index":1627,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cls",{"_index":2764,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":1352,"title":{},"body":{"components/DonorCardComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":654,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":655,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":656,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":992,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":994,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":993,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule",{"_index":1475,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_declarations",{"_index":1477,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_exports",{"_index":1478,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_imports",{"_index":1476,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":1488,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":1489,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":1490,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":1563,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":1564,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":1565,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":1748,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":1750,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":1749,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":1807,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":1810,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":1808,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":1809,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["cluster_filterspopovermodule",{"_index":1852,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":1855,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":1853,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":1854,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_headermodule",{"_index":1926,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1928,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1927,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":2281,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":2283,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":2282,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":2385,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":2386,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":2387,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":2494,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":3664,"title":{},"body":{"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":2497,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":2496,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologyselectionmodule_ontologyselectioncomponent_providers",{"_index":2495,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule",{"_index":2500,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":2501,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":2502,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":2585,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":2588,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":2586,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":2587,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_spinneroverlaymodule",{"_index":2710,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":2711,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":2712,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":2744,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":2745,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule",{"_index":2875,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule_declarations",{"_index":2876,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule_exports",{"_index":2877,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule",{"_index":2914,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule_declarations",{"_index":2915,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule_exports",{"_index":2916,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":2980,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":2982,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":2981,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["code",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["codeblob",{"_index":3008,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["codex",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":2013,"title":{},"body":{"classes/InitializationState.html":{}}}],["collaboration",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["collapse",{"_index":2114,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":2023,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":2110,"title":{},"body":{"classes/InitializationState.html":{}}}],["collisions",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":303,"title":{"interfaces/Color.html":{}},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.color",{"_index":731,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["color.rank",{"_index":2211,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["color].concat(colorsavailable",{"_index":739,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignments",{"_index":703,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colorassignments[key",{"_index":718,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist",{"_index":705,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.filter(a",{"_index":740,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.reduce>>((acc",{"_index":733,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.slice(0",{"_index":727,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist[colorassignmentslist.length",{"_index":725,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentstate",{"_index":711,"title":{"injectables/ColorAssignmentState.html":{}},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colorassignmentstatemodel",{"_index":700,"title":{"interfaces/ColorAssignmentStateModel.html":{}},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{}}}],["colorizing",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["colorpalette",{"_index":701,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colors",{"_index":708,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colors[node['@id']].rgba",{"_index":2694,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colors[tissueblock.spatialentityid",{"_index":2209,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["colorsavailable",{"_index":702,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable.filter(c",{"_index":729,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable.length",{"_index":723,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable[0",{"_index":724,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["column",{"_index":1730,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["columns",{"_index":570,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["combination",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["combined",{"_index":990,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":142,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":276,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["combines",{"_index":1085,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":3512,"title":{},"body":{"dependencies.html":{}}}],["comma",{"_index":383,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["common",{"_index":1183,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":659,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":1211,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":2739,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1073,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["completion",{"_index":2116,"title":{},"body":{"classes/InitializationState.html":{}}}],["complexity",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["componenet",{"_index":2296,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":130,"title":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":1603,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":447,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component.component.ts:31",{"_index":465,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":469,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:34",{"_index":470,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":468,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":472,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":471,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":477,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":475,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:41",{"_index":476,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":466,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:43",{"_index":467,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:44",{"_index":474,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:45",{"_index":473,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:47",{"_index":463,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":512,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":2767,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":176,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":2424,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computations",{"_index":2398,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":1673,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["concat",{"_index":3514,"title":{},"body":{"dependencies.html":{}}}],["concat(colorassignmentslist",{"_index":732,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["condition",{"_index":2445,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":3636,"title":{},"body":{"license.html":{}}}],["config",{"_index":1339,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["config.isolated",{"_index":2254,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["configstore",{"_index":464,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":2225,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2275,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["connect(source",{"_index":2263,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":804,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connectedposition",{"_index":1675,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connection",{"_index":3660,"title":{},"body":{"license.html":{}}}],["connects",{"_index":2262,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":140,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["consider",{"_index":2737,"title":{},"body":{"modules/StoreModule.html":{}}}],["consortium",{"_index":3612,"title":{},"body":{"license.html":{}}}],["const",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":2970,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor",{"_index":255,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"modules/ThumbnailCarouselModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["constructor(@inject(message_service_config",{"_index":2253,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1022,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":2276,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":462,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(dataservice",{"_index":2161,"title":{},"body":{"injectables/ListResultsState.html":{},"injectables/SceneState.html":{}}}],["constructor(defaulttheme",{"_index":2758,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(drawer",{"_index":2924,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(ga",{"_index":574,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["constructor(globalconfig",{"_index":2989,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["constructor(messageservice",{"_index":777,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["constructor(ontologysearchservice",{"_index":2472,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":2311,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(original",{"_index":1865,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":1600,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(private",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["constructor(public",{"_index":2354,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":1888,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(registry",{"_index":1986,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(sanitizer",{"_index":2959,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(source",{"_index":2268,"title":{},"body":{"classes/MessageChannel.html":{}}}],["contain",{"_index":977,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["container",{"_index":635,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":518,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":763,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":762,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1494,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":517,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerpayload",{"_index":980,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":856,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["containing",{"_index":863,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ThumbnailCarouselComponent.html":{},"index.html":{}}}],["contains",{"_index":610,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{}}}],["content",{"_index":775,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["content'},{'name",{"_index":520,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":1814,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["content.component.html",{"_index":1761,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.scss",{"_index":886,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{}}}],["content.component.ts",{"_index":1758,"title":{},"body":{"components/FiltersContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:19",{"_index":1771,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:24",{"_index":1770,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:29",{"_index":1773,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:34",{"_index":1772,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:39",{"_index":1775,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:44",{"_index":1769,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:59",{"_index":1782,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:68",{"_index":1777,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:76",{"_index":1779,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.module",{"_index":1857,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["content.module.ts",{"_index":1811,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["content/content.component",{"_index":830,"title":{},"body":{"components/ContainerComponent.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":1757,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["content1",{"_index":766,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":767,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":826,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":807,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":817,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":519,"title":{"components/ContentComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":969,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["contents",{"_index":430,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contentsvisible",{"_index":1579,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["contract",{"_index":3657,"title":{},"body":{"license.html":{}}}],["control",{"_index":322,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["controls",{"_index":1516,"title":{},"body":{"components/DropdownComponent.html":{}}}],["convention",{"_index":440,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["coordinate",{"_index":3016,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":3631,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3618,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3610,"title":{},"body":{"license.html":{}}}],["core",{"_index":1023,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/list",{"_index":2563,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["core/models/ontology",{"_index":157,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/app",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["core/services/ontology",{"_index":2352,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":160,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/data/data.state",{"_index":163,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersContentComponent.html":{}}}],["core/store/list",{"_index":165,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/scene/scene.state",{"_index":169,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["coremodule",{"_index":10,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["cors",{"_index":3516,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":2232,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":2869,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["coverage",{"_index":3357,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["create",{"_index":1602,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":1875,"title":{},"body":{"classes/FlatNode.html":{}}}],["createcustomelement",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":1658,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"changelog.html":{}}}],["creates",{"_index":251,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":374,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["createworker",{"_index":2987,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["createworker(_config",{"_index":2993,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["creating",{"_index":833,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["credits",{"_index":3597,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1606,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["css",{"_index":2819,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"dependencies.html":{}}}],["ctrlclick",{"_index":2645,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["cuboid",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":564,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":355,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["cursor",{"_index":1420,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["customelements.define('ccf",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["cyberinfrastructure",{"_index":3599,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1459,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["da326f",{"_index":688,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":3654,"title":{},"body":{"license.html":{}}}],["dark",{"_index":313,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark)').addeventlistener('change",{"_index":310,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark)').matches",{"_index":305,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark/light",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":254,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["data.aggregatedata$.subscribe",{"_index":267,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.celltypetermoccurencesdata$.subscribe",{"_index":269,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.pipe(pluck('celltypeterms",{"_index":284,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":275,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.subscribe",{"_index":271,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.ontologytermoccurencesdata$.subscribe",{"_index":268,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.providerfilterdata$.subscribe",{"_index":273,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.scenedata$.subscribe",{"_index":270,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.technologyfilterdata$.subscribe",{"_index":272,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.tissueblockdata$.subscribe",{"_index":266,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data/data.state",{"_index":2188,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["dataaction",{"_index":670,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["database",{"_index":136,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/FlatNode.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databaseready",{"_index":1102,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["databasestatus",{"_index":1038,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["dataquerystate",{"_index":161,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":1075,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["dataquerystate.running",{"_index":237,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{}}}],["dataservice",{"_index":2163,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datasetresult",{"_index":2814,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["datasets",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":260,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["datasourcelike",{"_index":1334,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["datasources",{"_index":454,"title":{},"body":{"components/AppWebComponent.html":{}}}],["datasourceservice",{"_index":137,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datastate",{"_index":162,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datastatemodel",{"_index":1027,"title":{"interfaces/DataStateModel.html":{}},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{}}}],["deal",{"_index":3620,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3661,"title":{},"body":{"license.html":{}}}],["december",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":606,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["deck.gl",{"_index":699,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["deck.gl/core",{"_index":3485,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":3487,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":3489,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":3490,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["decoration",{"_index":1917,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["decorator",{"_index":1036,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["decorators",{"_index":746,"title":{},"body":{"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["deep",{"_index":625,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["deeply",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":317,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_color_palette",{"_index":683,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_color_palette.concat",{"_index":710,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["default_filter",{"_index":1055,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/FiltersContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1256,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_selected_organs",{"_index":2635,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_selected_organs.has(organ.organ",{"_index":2669,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["default_theme",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1234,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":709,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["defaulttheme",{"_index":2753,"title":{},"body":{"injectables/ThemingService.html":{}}}],["defer",{"_index":1041,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["deferred",{"_index":1997,"title":{},"body":{"classes/InitializationState.html":{}}}],["defined",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{}}}],["definition",{"_index":1238,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":1963,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":1962,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["delay",{"_index":1045,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delay(2000",{"_index":1195,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["delegatedatasourceoptions",{"_index":1328,"title":{"interfaces/DelegateDataSourceOptions.html":{}},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasourceservice",{"_index":1009,"title":{"injectables/DelegateDataSourceService.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{}}}],["demo",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["descendants",{"_index":808,"title":{},"body":{"components/ContainerComponent.html":{}}}],["describes",{"_index":584,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["description",{"_index":560,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["deselect",{"_index":2552,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["deselected",{"_index":2542,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["deselectlistresult",{"_index":2156,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["deselectlistresult(result",{"_index":2166,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["details",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["detect",{"_index":1691,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["detected",{"_index":1635,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":790,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":782,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determine",{"_index":2561,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["determines",{"_index":1520,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{}}}],["developed",{"_index":3598,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":2735,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":3381,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["diff",{"_index":2573,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["different",{"_index":2145,"title":{},"body":{"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["digits",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["directimport",{"_index":2998,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["direction",{"_index":644,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["directive",{"_index":510,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":556,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":435,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["disabled",{"_index":1925,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["disables",{"_index":2650,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["display",{"_index":371,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":1510,"title":{},"body":{"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":2306,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":2320,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["displaylabel",{"_index":2436,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1348,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":1046,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["distinctuntilchanged",{"_index":682,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["distribute",{"_index":3627,"title":{},"body":{"license.html":{}}}],["dobootstrap",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1618,"title":{},"body":{"components/DualSliderComponent.html":{},"dependencies.html":{}}}],["document:click",{"_index":1597,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:click(target",{"_index":1615,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:touchstart",{"_index":1598,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:touchstart(target",{"_index":1626,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["documentation",{"_index":3061,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":444,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["domains",{"_index":217,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["domsanitizer",{"_index":1940,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["don't",{"_index":381,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["done",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":522,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["donor_card",{"_index":1392,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["donorcardcomponent",{"_index":521,"title":{"components/DonorCardComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["donorcardmodule",{"_index":1474,"title":{"modules/DonorCardModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["donors",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["doreset",{"_index":721,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["dotenv",{"_index":3520,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":199,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":1891,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":1896,"title":{},"body":{"components/HeaderComponent.html":{}}}],["drawer",{"_index":179,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":524,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":2946,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":2945,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":2034,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":2035,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":2947,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":867,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":831,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":172,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":948,"title":{},"body":{"components/ContentComponent.html":{}}}],["drawercontainerschanged",{"_index":976,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":1823,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":983,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":11,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":989,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":315,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":866,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":984,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":1498,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["dropdown'},{'name",{"_index":526,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":1571,"title":{},"body":{"modules/DropdownModule.html":{}}}],["dropdown.component.html",{"_index":1501,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1500,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":525,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":1562,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":528,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dual_slider",{"_index":1718,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["dualslidercomponent",{"_index":527,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":12,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["duration",{"_index":291,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["during",{"_index":1213,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["dynamic",{"_index":3481,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3034,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":311,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["e040fb",{"_index":692,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":2234,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ease",{"_index":968,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["easier",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["easily",{"_index":395,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["effect",{"_index":1518,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["efficiency",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":256,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{}}}],["element",{"_index":509,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["element.getboundingclientrect",{"_index":2083,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":2795,"title":{},"body":{"injectables/ThemingService.html":{}}}],["element.nativeelement.contains(target",{"_index":1710,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["elementref",{"_index":131,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["elements",{"_index":2838,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["ellipsis",{"_index":1471,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["embedded",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":597,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["emits",{"_index":228,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{}}}],["emitted",{"_index":211,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{}}}],["emitter",{"_index":2318,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["emitters",{"_index":2513,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":2065,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{}}}],["empty",{"_index":2418,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enable",{"_index":2324,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":904,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["encapsulates",{"_index":2466,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["end",{"_index":843,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["end?.expanded",{"_index":959,"title":{},"body":{"components/ContentComponent.html":{}}}],["end?.opened",{"_index":958,"title":{},"body":{"components/ContentComponent.html":{}}}],["enddrawers",{"_index":868,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":871,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":874,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":957,"title":{},"body":{"components/ContentComponent.html":{}}}],["ensures",{"_index":1386,"title":{},"body":{"components/DonorCardComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":1644,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["entire",{"_index":2726,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":2326,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":2368,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":2369,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entrycomponents",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":1069,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["enumerations",{"_index":3570,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":154,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"modules/StoreModule.html":{}}}],["environment.acceptableviewerdomains",{"_index":222,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["environment.customization",{"_index":503,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":501,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions.remoteapiendpoint",{"_index":1021,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.disabledbworker",{"_index":1340,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["environment.googleanalyticstoken",{"_index":1017,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":2736,"title":{},"body":{"modules/StoreModule.html":{}}}],["environments/environment",{"_index":155,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":837,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ThemingService.html":{}}}],["error('invalid",{"_index":495,"title":{},"body":{"components/AppWebComponent.html":{}}}],["error('the",{"_index":1024,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":845,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":834,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":3510,"title":{},"body":{"dependencies.html":{}}}],["es2015.worker.js",{"_index":3007,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["eslint",{"_index":434,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["eslint/naming",{"_index":439,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["etc",{"_index":988,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["eui",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["eui/src/app/app",{"_index":446,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eui/src/app/app.component.ts",{"_index":115,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["eui/src/app/app.module.ts",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/app.module.ts:55",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/core/core.module.ts",{"_index":998,"title":{},"body":{"modules/CoreModule.html":{}}}],["eui/src/app/core/header/header.component.ts",{"_index":1889,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["eui/src/app/core/header/header.component.ts:18",{"_index":1899,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:20",{"_index":1903,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:22",{"_index":1904,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:27",{"_index":1901,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:32",{"_index":1898,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:37",{"_index":1906,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:42",{"_index":1905,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.module.ts",{"_index":1929,"title":{},"body":{"modules/HeaderModule.html":{}}}],["eui/src/app/core/models/flat",{"_index":1860,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["eui/src/app/core/models/list",{"_index":2150,"title":{},"body":{"interfaces/ListResult.html":{},"coverage.html":{}}}],["eui/src/app/core/models/ontology",{"_index":2462,"title":{},"body":{"interfaces/OntologySelection.html":{},"coverage.html":{}}}],["eui/src/app/core/services/app",{"_index":406,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["eui/src/app/core/services/data",{"_index":1329,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/services/ontology",{"_index":2395,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["eui/src/app/core/services/theming/theming.module.ts",{"_index":2746,"title":{},"body":{"modules/ThemingModule.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts",{"_index":2751,"title":{},"body":{"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:13",{"_index":2778,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:14",{"_index":2779,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:16",{"_index":2777,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:18",{"_index":2780,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:21",{"_index":2768,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:25",{"_index":2759,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:39",{"_index":2765,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:48",{"_index":2776,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:60",{"_index":2774,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:71",{"_index":2772,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:83",{"_index":2761,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/store/color",{"_index":663,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/data/data.state.ts",{"_index":1028,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/icon",{"_index":1235,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/list",{"_index":2152,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts",{"_index":2594,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:105",{"_index":2619,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:114",{"_index":2608,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:125",{"_index":2612,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:129",{"_index":2613,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:136",{"_index":2605,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:51",{"_index":2628,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:53",{"_index":2632,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:55",{"_index":2630,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:57",{"_index":2626,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:60",{"_index":2624,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:63",{"_index":2623,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:65",{"_index":2604,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:85",{"_index":2622,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:95",{"_index":2616,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/store.module.ts",{"_index":2717,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/modules/filters/filters",{"_index":1756,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["eui/src/app/modules/ontology",{"_index":2287,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/modules/results",{"_index":1343,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts",{"_index":559,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:18",{"_index":583,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:23",{"_index":588,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:28",{"_index":592,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:33",{"_index":582,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":576,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:53",{"_index":603,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.module.ts",{"_index":657,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts",{"_index":756,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:105",{"_index":797,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:115",{"_index":787,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:124",{"_index":799,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":784,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":818,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":809,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":814,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":822,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":825,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":803,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:62",{"_index":778,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:83",{"_index":793,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts",{"_index":882,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:103",{"_index":919,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:116",{"_index":913,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":902,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":903,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":905,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":907,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":900,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":921,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":898,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:60",{"_index":912,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:70",{"_index":909,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/drawer.module.ts",{"_index":1491,"title":{},"body":{"modules/DrawerModule.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":1995,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":2007,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":2004,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:41",{"_index":2008,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:46",{"_index":2009,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:56",{"_index":2011,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:65",{"_index":2010,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/messages.ts",{"_index":970,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/drawer/toggle",{"_index":2919,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts",{"_index":1497,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:18",{"_index":1506,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:23",{"_index":1508,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:28",{"_index":1511,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:33",{"_index":1512,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:38",{"_index":1505,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:50",{"_index":1515,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:59",{"_index":1514,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.module.ts",{"_index":1566,"title":{},"body":{"modules/DropdownModule.html":{}}}],["eui/src/app/shared/components/dual",{"_index":1572,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/spinner",{"_index":2697,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/thumbnail",{"_index":2802,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts",{"_index":2953,"title":{},"body":{"components/ViewerComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:17",{"_index":2963,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:19",{"_index":2961,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:21",{"_index":2962,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:23",{"_index":2966,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:29",{"_index":2960,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:33",{"_index":2964,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:39",{"_index":2965,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.module.ts",{"_index":2983,"title":{},"body":{"modules/ViewerModule.html":{}}}],["eui/src/app/shared/services/message/message.service.ts",{"_index":2217,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:103",{"_index":2272,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:112",{"_index":2273,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:128",{"_index":2280,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:130",{"_index":2277,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:153",{"_index":2279,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:163",{"_index":2278,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:50",{"_index":2269,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:70",{"_index":2274,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:83",{"_index":2270,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:93",{"_index":2271,"title":{},"body":{"classes/MessageChannel.html":{}}}],["evenly",{"_index":2911,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["event",{"_index":609,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["event.checked",{"_index":617,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.key",{"_index":1725,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.target",{"_index":1614,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["event.target'])@hostlistener('document:touchstart",{"_index":1629,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["eventemitter",{"_index":596,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":2067,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":605,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["everything",{"_index":1174,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["except",{"_index":2240,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["executionstrategy",{"_index":2740,"title":{},"body":{"modules/StoreModule.html":{}}}],["exists",{"_index":2905,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["expand",{"_index":2113,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":2120,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":2027,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expand_less",{"_index":1325,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"miscellaneous/variables.html":{}}}],["expand_more",{"_index":1323,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"miscellaneous/variables.html":{}}}],["expandable",{"_index":1864,"title":{},"body":{"classes/FlatNode.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":2122,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":985,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":2062,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":2019,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":2068,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":2020,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":2022,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":2073,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":2107,"title":{},"body":{"classes/InitializationState.html":{}}}],["exploration",{"_index":1203,"title":{},"body":{"interfaces/DataStateModel.html":{},"index.html":{}}}],["exploration.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":2288,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["exportas",{"_index":759,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":658,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["express",{"_index":3522,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extended",{"_index":2025,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":116,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/WorkerDataSourceService.html":{}}}],["external",{"_index":2976,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["externalurl",{"_index":3005,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["extra",{"_index":3527,"title":{},"body":{"dependencies.html":{}}}],["extract",{"_index":2822,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["extraction",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1268,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1269,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1297,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f.svg",{"_index":1298,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":2230,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1517,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["faded",{"_index":888,"title":{},"body":{"components/ContentComponent.html":{}}}],["fadein",{"_index":1529,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":893,"title":{},"body":{"components/ContentComponent.html":{}}}],["fafafa",{"_index":652,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["fail",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["fallopian",{"_index":1270,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":191,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["favor",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":1253,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["fetches",{"_index":2417,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["ff8800",{"_index":684,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["ffd740",{"_index":686,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1531,"title":{},"body":{"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"changelog.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":3619,"title":{},"body":{"license.html":{}}}],["fill",{"_index":1547,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["filler",{"_index":1919,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":316,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["filter's",{"_index":325,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filter(organ",{"_index":2663,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(value",{"_index":2359,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter_checkbox",{"_index":620,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filter_content",{"_index":1787,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["filterbox",{"_index":324,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filterbox.removebox",{"_index":332,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filtered",{"_index":2244,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{}}}],["filteredresults",{"_index":2302,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filteronchange",{"_index":569,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":600,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filters",{"_index":531,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["filterschange",{"_index":1768,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":530,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":1806,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":170,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":13,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":1820,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["final",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["finished",{"_index":981,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["finishing",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["fired",{"_index":1625,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["first",{"_index":1387,"title":{},"body":{"components/DonorCardComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["fit",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":3646,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":1869,"title":{},"body":{"classes/FlatNode.html":{},"miscellaneous/variables.html":{}}}],["flatnode",{"_index":1858,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["flatnode(original",{"_index":1887,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":643,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["floor",{"_index":1698,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["fly",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":2874,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["following",{"_index":3635,"title":{},"body":{"license.html":{}}}],["font",{"_index":640,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["forcedunassignment",{"_index":712,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["form",{"_index":1530,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["format",{"_index":696,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["formatlabel",{"_index":2401,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":2408,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":2411,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":2323,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":2303,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":2389,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["forwards",{"_index":1548,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":2412,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["four",{"_index":650,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["frame",{"_index":1428,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["framework",{"_index":3017,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":3616,"title":{},"body":{"license.html":{}}}],["fs",{"_index":3526,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":2026,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":394,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":1089,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":3572,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":3604,"title":{},"body":{"index.html":{}}}],["funnel",{"_index":1851,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["furnished",{"_index":3634,"title":{},"body":{"license.html":{}}}],["further",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":577,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["gatoken",{"_index":1016,"title":{},"body":{"modules/CoreModule.html":{}}}],["generate",{"_index":589,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"changelog.html":{}}}],["generated",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["genericglobalconfig",{"_index":480,"title":{},"body":{"components/AppWebComponent.html":{}}}],["genericmessage",{"_index":972,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":973,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":974,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["get(event",{"_index":2370,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["getarguments",{"_index":1983,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":1988,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getchildren",{"_index":2402,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":2415,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3670,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getclassend",{"_index":2936,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcolor",{"_index":743,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["getcolor(key",{"_index":716,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["getcontent",{"_index":821,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getexpandable",{"_index":1881,"title":{},"body":{"classes/FlatNode.html":{}}}],["gethaswrappedcontent",{"_index":824,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":2937,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getindexofmatch",{"_index":2403,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":2419,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":1878,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlevel",{"_index":3453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmessages",{"_index":2242,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":2265,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":2245,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":2266,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":2248,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":1975,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":1990,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getnextbuttonid",{"_index":2855,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["getprevbuttonid",{"_index":2851,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["getrangelabel",{"_index":1671,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["gets",{"_index":319,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{}}}],["getter",{"_index":2967,"title":{},"body":{"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["getter/setter",{"_index":2055,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":2755,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3013,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["getworkerurl",{"_index":2988,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["getworkerurl(directimport",{"_index":2996,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["github",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2233,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":2904,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["gizmo",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":262,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{}}}],["globalconfigstate",{"_index":138,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":2091,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['dboptions",{"_index":502,"title":{},"body":{"components/AppWebComponent.html":{}}}],["good",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":616,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":575,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["gradient",{"_index":2562,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["granted",{"_index":3615,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2896,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"modules.html":{}}}],["graphology",{"_index":3528,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":562,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["grow",{"_index":1438,"title":{},"body":{"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["gtex",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["half",{"_index":2024,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1248,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["handle",{"_index":2609,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["handlecheckbox",{"_index":1354,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["handlehover",{"_index":2518,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlehover(id",{"_index":2544,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlelinkclick",{"_index":2519,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlelinkclick(link",{"_index":2546,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlemessage",{"_index":769,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":785,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":908,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handler",{"_index":1652,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":1374,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["handleselection",{"_index":2520,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handleselection(result",{"_index":2549,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handleunhover",{"_index":2521,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handling",{"_index":1604,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":1776,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happens",{"_index":1378,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["happy",{"_index":2730,"title":{},"body":{"modules/StoreModule.html":{}}}],["haswrappedcontent",{"_index":776,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":121,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["header'},{'name",{"_index":534,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":1932,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1895,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1894,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.module",{"_index":1008,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":533,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":995,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heart",{"_index":1274,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1275,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":961,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["helmet",{"_index":3532,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":832,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":2198,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["hereby",{"_index":3614,"title":{},"body":{"license.html":{}}}],["hex",{"_index":679,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"dependencies.html":{}}}],["hexrgb",{"_index":678,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["hexrgb(color",{"_index":695,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["hidden",{"_index":878,"title":{},"body":{"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1850,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["hidelimitlabels",{"_index":1704,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1705,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hides",{"_index":1836,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["high",{"_index":1643,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["highlight",{"_index":3100,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":1357,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highlightedid",{"_index":2595,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["highlightednodeid",{"_index":2154,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["highlightnode",{"_index":2157,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["highlightnode(id",{"_index":2168,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["highlights",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["highvalue",{"_index":1580,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["holders",{"_index":3651,"title":{},"body":{"license.html":{}}}],["home",{"_index":1909,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":122,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["hook",{"_index":1638,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":875,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding",{"_index":827,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":2072,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":924,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('@openclose",{"_index":2071,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":805,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding('class.active",{"_index":2707,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":2050,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":920,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('style.margin",{"_index":925,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbindings",{"_index":773,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostlistener",{"_index":1677,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":2121,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":2117,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":1628,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":1709,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1596,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hover",{"_index":1440,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["hoverable",{"_index":1452,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["hovered",{"_index":1388,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["hovering",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["hoverstate",{"_index":1353,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["html",{"_index":508,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["htmlelement",{"_index":1616,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["htmlinputelement).value",{"_index":1724,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http://purl.obolibrary.org/obo/cl_0000000",{"_index":1066,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":1065,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhfskin",{"_index":2648,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":999,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://beta",{"_index":3584,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":3589,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":3588,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":3591,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":3586,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":2741,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmapasseturl",{"_index":455,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapdataservice",{"_index":456,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapdataurl",{"_index":457,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapportalurl",{"_index":458,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmaptoken",{"_index":459,"title":{},"body":{"components/AppWebComponent.html":{}}}],["icon",{"_index":1239,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["icondefinition",{"_index":1933,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["iconregistry",{"_index":1941,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1942,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1254,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1237,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":2170,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"interfaces/OntologySelection.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["idb",{"_index":3535,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":2219,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"coverage.html":{}}}],["iec",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":397,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ViewerComponent.html":{}}}],["image",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":668,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":1105,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["implemented",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":3643,"title":{},"body":{"license.html":{}}}],["implies",{"_index":986,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["import.meta.url",{"_index":3004,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["important",{"_index":633,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["imported",{"_index":1025,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["importscripts('${externalurl",{"_index":3010,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["improve",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":3638,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3099,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["indeterminate.mat",{"_index":1423,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["index",{"_index":118,"title":{"index.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":3602,"title":{},"body":{"index.html":{}}}],["indicates",{"_index":1883,"title":{},"body":{"classes/FlatNode.html":{}}}],["individual",{"_index":590,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["infinity",{"_index":294,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["infix",{"_index":1534,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["infobuttonmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["information",{"_index":599,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":1843,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["init",{"_index":2329,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":298,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["initialconfig",{"_index":500,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialdelay",{"_index":498,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":2095,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":1994,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{},"coverage.html":{}}}],["initialize",{"_index":2657,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":2766,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":2771,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":452,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":2769,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":1631,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{}}}],["initializesliderpopover",{"_index":1588,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializing",{"_index":982,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["inject",{"_index":2222,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["inject(default_theme",{"_index":2785,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injectable",{"_index":404,"title":{"injectables/AppRootOverlayContainer.html":{},"injectables/ColorAssignmentState.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{}},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":405,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"injectables/ColorAssignmentState.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{},"overview.html":{}}}],["injecting",{"_index":2194,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":2223,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('default",{"_index":2782,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["injector.get(overlaycontainer",{"_index":2796,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":2794,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":2783,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1335,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["inner",{"_index":634,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["input",{"_index":478,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["inputs",{"_index":453,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["inside",{"_index":1735,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["install",{"_index":2883,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["instance",{"_index":252,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["instant",{"_index":2017,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":1742,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["instructions",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":1922,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interact",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":112,"title":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"interfaces/ListResult.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologySelection.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":114,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"interfaces/ListResult.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologySelection.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1281,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1282,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invisible",{"_index":901,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["iri",{"_index":2640,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["isexpandable",{"_index":3454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["islighttheme",{"_index":225,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["isn't",{"_index":1382,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["isolated",{"_index":2228,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["issliderinitialized",{"_index":1581,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":1582,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isstring",{"_index":484,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray",{"_index":487,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray(json",{"_index":492,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray(value",{"_index":493,"title":{},"body":{"components/AppWebComponent.html":{}}}],["issue",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":3084,"title":{},"body":{"changelog.html":{}}}],["iswhitelisted",{"_index":386,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["it's",{"_index":321,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["item",{"_index":214,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["item.color",{"_index":735,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["item.technology",{"_index":2862,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["item.thumbnail",{"_index":2860,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["itemhovered",{"_index":2524,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["itemid",{"_index":2811,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["itemid(_index",{"_index":2820,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["items",{"_index":1413,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["itemunhovered",{"_index":2525,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["iu",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["join",{"_index":2367,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["json",{"_index":490,"title":{},"body":{"components/AppWebComponent.html":{},"changelog.html":{}}}],["json.parse(json.stringify(default_filter",{"_index":1792,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["jsonld",{"_index":3538,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1419,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["keep",{"_index":194,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{}}}],["keeping",{"_index":1120,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":1825,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["key",{"_index":706,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["key/value",{"_index":1783,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["keyboardevent",{"_index":1640,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyframes",{"_index":1526,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keyval",{"_index":3536,"title":{},"body":{"dependencies.html":{}}}],["key}:${value",{"_index":1788,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["kidney",{"_index":1276,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kidney.svg",{"_index":1277,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":3642,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1278,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1279,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":197,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/TissueSectionVisComponent.html":{}}}],["label.slice(0",{"_index":2456,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.slice(index",{"_index":2457,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":2452,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":2454,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labeled",{"_index":561,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["labels",{"_index":591,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{}}}],["labs/data",{"_index":2719,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":674,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["labs/data/repositories",{"_index":676,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["landmarks",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1280,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":384,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"modules/StoreModule.html":{}}}],["latest",{"_index":1092,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["launch",{"_index":2974,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers",{"_index":3488,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":2164,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ld",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":318,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left.closeexpanded",{"_index":329,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["left.open",{"_index":328,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["left.px",{"_index":896,"title":{},"body":{"components/ContentComponent.html":{}}}],["left.svg",{"_index":1272,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["leftmargin",{"_index":889,"title":{},"body":{"components/ContentComponent.html":{}}}],["legend",{"_index":507,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["level",{"_index":1867,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":2343,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["liability",{"_index":3655,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3652,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":3608,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["lifecycle",{"_index":2330,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["lighter",{"_index":1455,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["limitation",{"_index":3622,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3331,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":437,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["link",{"_index":389,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["linkage",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["linkclick",{"_index":1359,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["linkclicked",{"_index":2526,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["linked",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["linkhandler",{"_index":1355,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["linkhandler(url",{"_index":1376,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["links",{"_index":3081,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":354,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["listen",{"_index":2227,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1091,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["listeners",{"_index":795,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["listens",{"_index":308,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{}}}],["listresult",{"_index":2149,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/ResultsBrowserComponent.html":{},"coverage.html":{}}}],["listresultdeselected",{"_index":2527,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listresults",{"_index":2155,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["listresultselected",{"_index":2528,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listresultsstate",{"_index":164,"title":{"injectables/ListResultsState.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listresultsstatemodel",{"_index":2189,"title":{"interfaces/ListResultsStateModel.html":{}},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["literal",{"_index":755,"title":{},"body":{"interfaces/ColorAssignmentStateModel.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["little",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1283,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1284,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":2165,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["loaded",{"_index":1240,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loaders.gl/core",{"_index":3491,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":3493,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":3494,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":1031,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ViewerComponent.html":{}}}],["loadingmessage",{"_index":238,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["located",{"_index":2049,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":2464,"title":{},"body":{"interfaces/OntologySelection.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["locationstrategy",{"_index":2991,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["locator",{"_index":2990,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["lock",{"_index":2868,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["lodash",{"_index":2185,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["log",{"_index":3596,"title":{},"body":{"index.html":{}}}],["logged",{"_index":1902,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":401,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{}}}],["logger",{"_index":2742,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":1375,"title":{},"body":{"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["login",{"_index":399,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{}}}],["logindisabled",{"_index":249,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["loginenabled",{"_index":123,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["logo",{"_index":1892,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":124,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["logout",{"_index":1907,"title":{},"body":{"components/HeaderComponent.html":{}}}],["longer",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["looks",{"_index":2423,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":2404,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":2421,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["low",{"_index":1648,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["low/high",{"_index":1692,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":1610,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowvalue",{"_index":1583,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lru",{"_index":3541,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":3495,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1285,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lung.svg",{"_index":1286,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1287,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":1207,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["main",{"_index":174,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{}}}],["major",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["managed",{"_index":820,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["managers",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["manages",{"_index":2752,"title":{},"body":{"injectables/ThemingService.html":{}}}],["many",{"_index":180,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["map",{"_index":146,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}}}],["map(([scene",{"_index":2674,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([tissueblocks",{"_index":2205,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["map((color",{"_index":694,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["map((node",{"_index":2689,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(nodes",{"_index":2440,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(organ",{"_index":2665,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(reforgans",{"_index":2659,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(searchresults",{"_index":2362,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":235,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["map(states",{"_index":1172,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["march",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":636,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":2029,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":3547,"title":{},"body":{"dependencies.html":{}}}],["marrow",{"_index":1264,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1265,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":626,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["matautocompletemodule",{"_index":2391,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":2333,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":1815,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["match",{"_index":1912,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["matcheckboxchange",{"_index":601,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":661,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{}}}],["matching",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1944,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matformfieldmodule",{"_index":1567,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{}}}],["math.div($pointer",{"_index":1746,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.gl/core",{"_index":3496,"title":{},"body":{"dependencies.html":{}}}],["math.max(...this.selection",{"_index":1696,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(...this.selection",{"_index":1694,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["maticonmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":1939,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":2392,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matprogressspinnermodule",{"_index":2714,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["matselectmodule",{"_index":1569,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{}}}],["matsnackbar",{"_index":134,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["matsnackbarmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":1930,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":2504,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":1552,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["mc",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["measured",{"_index":2087,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":2089,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":2079,"title":{},"body":{"classes/InitializationState.html":{}}}],["memory",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1499,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["merchantability",{"_index":3645,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3625,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":2224,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":786,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1492,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1493,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":802,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":2264,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":2251,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":780,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":761,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":850,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":937,"title":{},"body":{"components/ContentComponent.html":{}}}],["messageserviceconfig",{"_index":2226,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagess",{"_index":1081,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":449,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["method",{"_index":604,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":1972,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":1966,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["min",{"_index":1410,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["minor",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":3569,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3609,"title":{},"body":{"license.html":{}}}],["ml",{"_index":1465,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["mock",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":278,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["model",{"_index":2195,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["models/list",{"_index":2186,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["modify",{"_index":3624,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/filters/filters",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["modules/ontology",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["monorepo",{"_index":3576,"title":{},"body":{"index.html":{}}}],["more",{"_index":1071,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":1619,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1002,"title":{},"body":{"modules/CoreModule.html":{}}}],["moved",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":1620,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mr",{"_index":1467,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["msg",{"_index":911,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":949,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.drawers",{"_index":943,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.opened",{"_index":2943,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":940,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":947,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["mt",{"_index":1468,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["much",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":2750,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3577,"title":{},"body":{"index.html":{}}}],["n3",{"_index":3543,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":419,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["namespace",{"_index":1249,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["navigate_before",{"_index":2861,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["navigate_next",{"_index":2863,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["navigation",{"_index":2809,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"changelog.html":{}}}],["navigationoptions",{"_index":2835,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["necessary",{"_index":1650,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1210,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersPopoverComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["needed",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":791,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["nested",{"_index":1734,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":3600,"title":{},"body":{"index.html":{}}}],["neuron",{"_index":1289,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neuron.svg",{"_index":1290,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":844,"title":{},"body":{"components/ContainerComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":219,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1877,"title":{},"body":{"classes/FlatNode.html":{}}}],["newvalue",{"_index":1722,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":436,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["nextbuttonid",{"_index":2813,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["nextel",{"_index":2845,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["nextmessageid",{"_index":2250,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["nextuid",{"_index":2848,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":624,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["ng5",{"_index":1678,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1754,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":2148,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":2147,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":2146,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":770,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":1589,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ngonchanges(changes",{"_index":1632,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ngondestroy",{"_index":771,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["ngoninit",{"_index":287,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{}}}],["ngx",{"_index":615,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"dependencies.html":{}}}],["ngxs",{"_index":673,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2721,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":3500,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":677,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxsdatapluginmodule",{"_index":2718,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":2733,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1033,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsimmutabledatarepository",{"_index":675,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ngxsloggerpluginmodule",{"_index":2720,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":2743,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":2723,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":2734,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":1034,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nih",{"_index":3605,"title":{},"body":{"index.html":{}}}],["node",{"_index":1862,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["node's",{"_index":1880,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ccf_annotations?.some?.(tag",{"_index":2685,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.children",{"_index":2461,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":2649,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.id",{"_index":2373,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":2446,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.reference_organ",{"_index":2687,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.representation_of",{"_index":2646,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.synonymlabels.find((label",{"_index":2451,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":1861,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["node.ts:11",{"_index":1873,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:13",{"_index":1871,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:18",{"_index":1879,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:25",{"_index":1882,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:36",{"_index":1876,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:38",{"_index":1868,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:9",{"_index":1874,"title":{},"body":{"classes/FlatNode.html":{}}}],["node['@id",{"_index":2647,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodeclickevent",{"_index":2607,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes",{"_index":357,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodes.foreach((node",{"_index":2444,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes.svg",{"_index":1288,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["nodes[node.parent",{"_index":2493,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":1536,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["noninfringement",{"_index":3649,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1830,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["not(:first",{"_index":1432,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["not(:last",{"_index":1918,"title":{},"body":{"components/HeaderComponent.html":{}}}],["note",{"_index":1733,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["notice",{"_index":3260,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["notifies",{"_index":2548,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["now",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":1473,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["null",{"_index":1948,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["null)?.getcontainerelement",{"_index":2797,"title":{},"body":{"injectables/ThemingService.html":{}}}],["number",{"_index":580,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["number((event.target",{"_index":1723,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":1726,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":2093,"title":{},"body":{"classes/InitializationState.html":{}}}],["numebr",{"_index":2899,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["numeric",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["numresults",{"_index":1863,"title":{},"body":{"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o",{"_index":1096,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["o.id",{"_index":2679,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o.representation_of",{"_index":2662,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o['@id",{"_index":2683,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["object",{"_index":213,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.hasownproperty.call(colors",{"_index":2690,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["object.values(state.nodes",{"_index":2428,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observable",{"_index":143,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observableinput",{"_index":1042,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":1043,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":3617,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":2469,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":1135,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["occurs",{"_index":1623,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["off/on",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":951,"title":{},"body":{"components/ContentComponent.html":{}}}],["old",{"_index":3590,"title":{},"body":{"index.html":{}}}],["once",{"_index":1026,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":1576,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ondestroy",{"_index":758,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["one",{"_index":1070,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":132,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{}}}],["onkeyhigh",{"_index":1590,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":1639,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":1591,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":1646,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["online",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["onscroll",{"_index":2522,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onscroll(event",{"_index":2554,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onselect",{"_index":2307,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":2332,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":379,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontolgyselection.length",{"_index":375,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontolgyselection[0].label",{"_index":377,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontological",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":196,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology_search",{"_index":2372,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologyexplorationmodule",{"_index":14,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":2470,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2486,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologysearchcomponent",{"_index":535,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":2284,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":2312,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{},"overview.html":{}}}],["ontologyselected(ontologyselection",{"_index":358,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection",{"_index":156,"title":{"interfaces/OntologySelection.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"coverage.html":{}}}],["ontologyselection.map(selection",{"_index":363,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection[0",{"_index":369,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection[0].label",{"_index":370,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselectioncomponent",{"_index":537,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":200,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselectionmodule",{"_index":2285,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":2482,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":2305,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologytermoccurencesdata",{"_index":1136,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdata$.pipe(take(1)).subscribe(ontologytermsfulldata",{"_index":1186,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdata(filter",{"_index":1221,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdataquerystatus",{"_index":1110,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurrences",{"_index":1155,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologyterms",{"_index":240,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["ontologytermsfulldata",{"_index":1122,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":539,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologytreemodel",{"_index":135,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologytreemodule",{"_index":2286,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologytreenode",{"_index":1866,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["opacities",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":933,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":2506,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["open",{"_index":208,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":2070,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["open_in_new",{"_index":1402,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["openapi",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["openapi/angular",{"_index":1006,"title":{},"body":{"modules/CoreModule.html":{}}}],["opened",{"_index":918,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":2058,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":2015,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":2066,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":2016,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":2108,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening",{"_index":2540,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":2032,"title":{},"body":{"classes/InitializationState.html":{}}}],["opens",{"_index":1519,"title":{},"body":{"components/DropdownComponent.html":{},"classes/InitializationState.html":{}}}],["operator",{"_index":1084,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1044,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["opposite",{"_index":2021,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["optimization",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":602,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["option.displaylabel[0",{"_index":2376,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":2377,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":2378,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option?.displaylabel",{"_index":2366,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":120,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":571,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["options.ceil",{"_index":1728,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":1727,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":1592,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":1502,"title":{},"body":{"components/DropdownComponent.html":{}}}],["order",{"_index":2435,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organ",{"_index":206,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"index.html":{}}}],["organids",{"_index":2660,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organids.has(organ.id",{"_index":2664,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organinfo",{"_index":2615,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organlistvisible",{"_index":209,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["organs",{"_index":1257,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["organselectormodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["origin",{"_index":2870,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["original",{"_index":1870,"title":{},"body":{"classes/FlatNode.html":{}}}],["originx",{"_index":1679,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":1680,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["orthographic",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["ot",{"_index":1245,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["ot2od026671",{"_index":3607,"title":{},"body":{"index.html":{}}}],["other.expanded",{"_index":2135,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":2136,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":2141,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":2139,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":2138,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":2137,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":2140,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherblocks",{"_index":2207,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["otherblocks.push",{"_index":2212,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["others",{"_index":218,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["otherwise",{"_index":1955,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"license.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1799,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{}}}],["output",{"_index":613,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":572,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":1364,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ovaries",{"_index":1291,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1292,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1293,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":1389,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["overall",{"_index":585,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["overflow",{"_index":877,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["overlay",{"_index":230,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["overlay'},{'name",{"_index":544,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":2716,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":2701,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":2700,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":2698,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"coverage.html":{}}}],["overlay.component.ts:16",{"_index":2706,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":2702,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":2704,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":1686,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":2713,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":1684,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.service",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["overlay.service.ts",{"_index":407,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["overlay.service.ts:10",{"_index":422,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:11",{"_index":421,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:13",{"_index":417,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:27",{"_index":414,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:32",{"_index":415,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.setrootelement(el",{"_index":265,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["overlay/app",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["overlay/spinner",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"coverage.html":{}}}],["overlaycontainer",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"injectables/ThemingService.html":{}}}],["overlaymodule",{"_index":1752,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":1584,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":1720,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":1721,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":1681,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":1682,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":3663,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owning",{"_index":2926,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":3050,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":1414,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["page",{"_index":1893,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pages",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":2143,"title":{},"body":{"classes/InitializationState.html":{}}}],["paired",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["pancreas",{"_index":1294,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1295,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1557,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["panel",{"_index":1545,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":1687,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":253,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["param0",{"_index":2644,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["parameters",{"_index":418,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":2028,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":598,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":2257,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":504,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsedatasources",{"_index":505,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsedatasources(value",{"_index":482,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":3507,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2327,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["partial",{"_index":1209,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["particular",{"_index":3647,"title":{},"body":{"license.html":{}}}],["partly",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":1976,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":1981,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":1980,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":1979,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":1978,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["passed",{"_index":198,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1379,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["path",{"_index":630,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["patient",{"_index":1349,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{}}}],["payload",{"_index":671,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["payload('doreset",{"_index":720,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["pelvis",{"_index":1296,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":2850,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["performance",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":3613,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3632,"title":{},"body":{"license.html":{}}}],["person",{"_index":1399,"title":{},"body":{"components/DonorCardComponent.html":{},"license.html":{}}}],["persons",{"_index":3633,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":1093,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["pipe(mergeall",{"_index":2259,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["placed",{"_index":2732,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["placeholdertext",{"_index":2310,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["placement",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":3484,"title":{},"body":{"dependencies.html":{}}}],["pluck",{"_index":147,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["plugin",{"_index":2722,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["pointer",{"_index":1421,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["popover",{"_index":326,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["popover's",{"_index":327,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["popover'},{'name",{"_index":532,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":171,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover.component.html",{"_index":1819,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.scss",{"_index":1818,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts",{"_index":1817,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"coverage.html":{}}}],["popover.component.ts:16",{"_index":1827,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:22",{"_index":1824,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:27",{"_index":1832,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:32",{"_index":1831,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:37",{"_index":1833,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:42",{"_index":1839,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:47",{"_index":1838,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:54",{"_index":1837,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:63",{"_index":1835,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["popover.module.ts",{"_index":1856,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["popover/filters",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["popoverelement",{"_index":1585,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement?.nativeelement?.contains?.(target",{"_index":1711,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":1586,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1759,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["portal",{"_index":1900,"title":{},"body":{"components/HeaderComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["portalmodule",{"_index":1753,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portions",{"_index":3640,"title":{},"body":{"license.html":{}}}],["position",{"_index":835,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":2054,"title":{},"body":{"classes/InitializationState.html":{}}}],["positions",{"_index":801,"title":{},"body":{"components/ContainerComponent.html":{}}}],["positionstrategy",{"_index":1683,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["possible",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["preclose",{"_index":289,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["prefered",{"_index":2836,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["preference",{"_index":301,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["preferences",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":2380,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":1645,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["prev",{"_index":2858,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevbuttonid",{"_index":2812,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevel",{"_index":2843,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevent",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2853,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["previously",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["primary",{"_index":2818,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["private",{"_index":261,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["process",{"_index":910,"title":{},"body":{"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processed",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":788,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["processing",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":3062,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":2699,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["projected",{"_index":796,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects",{"_index":3578,"title":{},"body":{"index.html":{}}}],["projects/.../app",{"_index":3573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../color",{"_index":3674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../container.component.ts",{"_index":3574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../data",{"_index":3673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data.state.ts",{"_index":3571,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../default",{"_index":3675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../drawer.component.ts",{"_index":3669,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":3678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../messages.ts",{"_index":3668,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ontology",{"_index":3671,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene.state.ts",{"_index":3676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store.module.ts",{"_index":3680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../theming.service.ts",{"_index":3677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../thumbnail",{"_index":3679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":2005,"title":{},"body":{"classes/InitializationState.html":{}}}],["promise(resolve",{"_index":2002,"title":{},"body":{"classes/InitializationState.html":{}}}],["prop",{"_index":1964,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["properties",{"_index":119,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["property",{"_index":608,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/ViewerComponent.html":{}}}],["property('expandable",{"_index":3684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property('level",{"_index":3683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prostate",{"_index":1299,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1300,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":410,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{}}}],["provide",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":810,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":423,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":1149,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilter",{"_index":1162,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilterdata",{"_index":1150,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilterquerystatus",{"_index":1118,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilters",{"_index":1765,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/ThemingModule.html":{},"changelog.html":{}}}],["providertoken",{"_index":1331,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["provides",{"_index":2315,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":883,"title":{},"body":{"components/ContentComponent.html":{}}}],["public",{"_index":2304,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["publish",{"_index":3626,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["publishreplay",{"_index":1048,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":1100,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["purpose",{"_index":3648,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":2046,"title":{},"body":{"classes/InitializationState.html":{}}}],["python",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":3550,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1067,"title":{},"body":{"interfaces/DataStateModel.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["query",{"_index":1090,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["querydata",{"_index":1094,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["querydata(query",{"_index":3575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["querying",{"_index":1086,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["querylist",{"_index":806,"title":{},"body":{"components/ContainerComponent.html":{}}}],["querystatus",{"_index":1164,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["question",{"_index":586,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["quickly",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["radius",{"_index":1417,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["range",{"_index":1608,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["rangelabel",{"_index":1599,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["rank",{"_index":666,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"miscellaneous/variables.html":{}}}],["rank']).concat(otherblocks",{"_index":2214,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["rc.1",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":3552,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":3501,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":3553,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2390,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":1665,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["readable",{"_index":3555,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["ready",{"_index":1032,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["real",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":2729,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":899,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":2231,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":704,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["rectify",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["refcount",{"_index":1049,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["reference",{"_index":783,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["referenceorgans",{"_index":2596,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":922,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["referencing",{"_index":2837,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["refernced",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["reforgandata",{"_index":2676,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reforgans",{"_index":2680,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reforgans.has(node.reference_organ",{"_index":2688,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["refresh",{"_index":1794,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["refreshclicked",{"_index":1897,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshes",{"_index":1780,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["refreshfilters",{"_index":1763,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["regions",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1251,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["registered",{"_index":1255,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1959,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":1956,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":1985,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":1960,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1936,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registers",{"_index":1953,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registration",{"_index":1244,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"index.html":{}}}],["registrations",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["registry",{"_index":1943,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":2724,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1935,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["registry.state.ts:114",{"_index":1991,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:134",{"_index":1989,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:43",{"_index":1987,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:74",{"_index":1992,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:84",{"_index":1993,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1236,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1934,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["registry[methodname",{"_index":1968,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regular",{"_index":1185,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["related",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":876,"title":{},"body":{"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":3080,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":2539,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["reliability",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":2969,"title":{},"body":{"components/ViewerComponent.html":{}}}],["reloads",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["rem",{"_index":1797,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["remoteapiendpoint",{"_index":460,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["remove",{"_index":607,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/ThemingService.html":{}}}],["removebox",{"_index":1821,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":2799,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":2763,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["render",{"_index":1829,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":2793,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":2781,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](overlay",{"_index":2801,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":2800,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":2509,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["repeat",{"_index":1050,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{}}}],["repeat(1000",{"_index":1197,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["replay",{"_index":1088,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":144,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["replaysubject(1",{"_index":245,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["replaysubject>(1",{"_index":1123,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["repository",{"_index":1101,"title":{},"body":{"interfaces/DataStateModel.html":{},"index.html":{}}}],["required",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resets",{"_index":314,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["resettheme",{"_index":2756,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resetview",{"_index":334,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["resolve",{"_index":1998,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolved",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["resolves",{"_index":823,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["respond",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["responsible",{"_index":2397,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":3621,"title":{},"body":{"license.html":{}}}],["result",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.ts",{"_index":2151,"title":{},"body":{"interfaces/ListResult.html":{},"coverage.html":{}}}],["resultlabel",{"_index":2523,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.state",{"_index":167,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["results.state.ts",{"_index":2153,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["results.state.ts:30",{"_index":2182,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:31",{"_index":2180,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:35",{"_index":2178,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:38",{"_index":2162,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:58",{"_index":2175,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:62",{"_index":2173,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:66",{"_index":2167,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:70",{"_index":2169,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:74",{"_index":2176,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:81",{"_index":2171,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results/list",{"_index":166,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["results_browser",{"_index":2565,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowser",{"_index":2508,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":541,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":2514,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":15,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":226,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":1184,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["reverse",{"_index":1798,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":680,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"dependencies.html":{}}}],["rgba",{"_index":667,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["rgba(0",{"_index":1445,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["rgba[3",{"_index":697,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":323,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["right.closeexpanded",{"_index":331,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["right.open",{"_index":330,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["right.px",{"_index":897,"title":{},"body":{"components/ContentComponent.html":{}}}],["right.svg",{"_index":1273,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":890,"title":{},"body":{"components/ContentComponent.html":{}}}],["rights",{"_index":3623,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":1425,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["root",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":513,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":2727,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootelement",{"_index":409,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["rootnode",{"_index":2399,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["rotates",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":645,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ru/common",{"_index":3474,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":2434,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["ru/common/typings/immutability",{"_index":669,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["rui",{"_index":3022,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":792,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["running",{"_index":1072,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runtime",{"_index":1243,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rxjsfilter",{"_index":1047,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["rxjsfilter((status",{"_index":1104,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["safedef",{"_index":1949,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["safehtml",{"_index":1937,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1938,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["safeurl",{"_index":2957,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sample",{"_index":2804,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["samples",{"_index":2954,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["sanitize",{"_index":1946,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1246,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ViewerComponent.html":{}}}],["sanitizer",{"_index":1945,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":1951,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":1950,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["sans",{"_index":1923,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sass:math",{"_index":1729,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["saved",{"_index":1784,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["saver",{"_index":3524,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":258,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["scene.filter(node",{"_index":2684,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scene/scene.state",{"_index":2725,"title":{},"body":{"modules/StoreModule.html":{}}}],["scenedata",{"_index":1142,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenedata(filter",{"_index":1227,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenedataquerystatus",{"_index":1114,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenenodeclicked",{"_index":2598,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodeclicked(undefined",{"_index":2606,"title":{},"body":{"injectables/SceneState.html":{}}}],["scenenodehovered",{"_index":2599,"title":{},"body":{"injectables/SceneState.html":{}}}],["scenenodehovered(node",{"_index":2611,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodeunhover",{"_index":2600,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenestate",{"_index":168,"title":{"injectables/SceneState.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenestatemodel",{"_index":2637,"title":{"interfaces/SceneStateModel.html":{}},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["scheduled",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":304,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["schemes",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":3601,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2557,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":2384,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":2559,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollheight",{"_index":2571,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":880,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":2590,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["scrolltop",{"_index":2572,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["search",{"_index":2298,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":536,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["search.component",{"_index":2394,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.component.html",{"_index":2300,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.scss",{"_index":2299,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts",{"_index":2295,"title":{},"body":{"components/OntologySearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:107",{"_index":2334,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:23",{"_index":2316,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:29",{"_index":2317,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:34",{"_index":2346,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:40",{"_index":2344,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:45",{"_index":2313,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:53",{"_index":2349,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:60",{"_index":2328,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:78",{"_index":2322,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:88",{"_index":2338,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":2342,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":2381,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":2290,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":2388,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["search.service",{"_index":2353,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":2396,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["search.service.ts:100",{"_index":2420,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:111",{"_index":2410,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:128",{"_index":2416,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:30",{"_index":2433,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:31",{"_index":2432,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:34",{"_index":2429,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:37",{"_index":2431,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:39",{"_index":2426,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:50",{"_index":2406,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:63",{"_index":2422,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":2289,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["searched",{"_index":2331,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searches",{"_index":2407,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":2297,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":2321,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["searchresults",{"_index":2443,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":2447,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":2448,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":2314,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":2409,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":2458,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":550,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["section.description",{"_index":1409,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["section.label",{"_index":1408,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["section.sectionnumber",{"_index":2909,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sectionnumber",{"_index":2907,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sectionnumber).length",{"_index":2910,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sections",{"_index":2900,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["see",{"_index":3136,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":1537,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["selectable",{"_index":1461,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["selected",{"_index":356,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["selected(ontologynode",{"_index":2484,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedanatomicalstructures",{"_index":2638,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selectedorgans",{"_index":2675,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selectedreferenceorgans",{"_index":2597,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selecting",{"_index":1507,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["selection",{"_index":158,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["selection'},{'name",{"_index":538,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":2499,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":2468,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":2467,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":2465,"title":{},"body":{"components/OntologySelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:23",{"_index":2489,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":2475,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":2479,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:38",{"_index":2480,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":2477,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:47",{"_index":2474,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:48",{"_index":2478,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":2473,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":2487,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:64",{"_index":2483,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:75",{"_index":2485,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":364,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selection.label",{"_index":380,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selection.module",{"_index":2292,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":2498,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":2463,"title":{},"body":{"interfaces/OntologySelection.html":{},"coverage.html":{}}}],["selection/deselection",{"_index":2551,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selection/ontology",{"_index":2291,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"coverage.html":{}}}],["selectionchange",{"_index":573,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":1503,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":1513,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionlabel",{"_index":204,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selections",{"_index":565,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":378,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selectlistresult",{"_index":2158,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["selectlistresult(result",{"_index":2172,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["selector",{"_index":182,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["selectors",{"_index":2841,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["selects",{"_index":1383,"title":{},"body":{"components/DonorCardComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["selecttoken",{"_index":1341,"title":{},"body":{"injectables/DelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1338,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["sell",{"_index":3630,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":779,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto",{"_index":3439,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto(subject",{"_index":1082,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":1133,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._celltypetermoccurencesdataquerystatus",{"_index":1141,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._ontologytermoccurencesdataquerystatus",{"_index":1138,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._providerfilterquerystatus",{"_index":1152,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._scenedataquerystatus",{"_index":1144,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._technologyfilterquerystatus",{"_index":1148,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._tissueblockdataquerystatus",{"_index":1129,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sender",{"_index":2221,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":2125,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":2096,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":2267,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":2236,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1079,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sendtoggle",{"_index":2126,"title":{},"body":{"classes/InitializationState.html":{}}}],["sennet",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["sent",{"_index":971,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["serif",{"_index":1924,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":579,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":2784,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/data",{"_index":1010,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":975,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1013,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":293,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["set(['skin",{"_index":2636,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["set(reforgandata.filter(o",{"_index":2681,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(reforgans.map(o",{"_index":2661,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(selectedorgans.map(o",{"_index":2678,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setlistresults",{"_index":2159,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["setlistresults(@payload('listresults",{"_index":2190,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["setlistresults(listresults",{"_index":2174,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["setreferenceorgans",{"_index":2601,"title":{},"body":{"injectables/SceneState.html":{}}}],["setreferenceorgans(@payload('referenceorgans",{"_index":2642,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setreferenceorgans(referenceorgans",{"_index":2614,"title":{},"body":{"injectables/SceneState.html":{}}}],["setrootelement",{"_index":413,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["setrootelement(el",{"_index":416,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["sets",{"_index":297,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["setscene",{"_index":2602,"title":{},"body":{"injectables/SceneState.html":{}}}],["setscene(@payload('scene",{"_index":2643,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setscene(scene",{"_index":2618,"title":{},"body":{"injectables/SceneState.html":{}}}],["setselectedreferenceorgans",{"_index":2603,"title":{},"body":{"injectables/SceneState.html":{}}}],["setselectedreferenceorgans(@payload('selectedreferenceorgans",{"_index":2641,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setselectedreferenceorgans(selectedreferenceorgans",{"_index":2621,"title":{},"body":{"injectables/SceneState.html":{}}}],["settheme",{"_index":2757,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":2775,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":2098,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["setting",{"_index":2738,"title":{},"body":{"modules/StoreModule.html":{}}}],["settings",{"_index":1760,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settreemodel",{"_index":2405,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["settreemodel(treemodel",{"_index":2425,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["setup",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":1056,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["shadow",{"_index":1068,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["shall",{"_index":3637,"title":{},"body":{"license.html":{}}}],["shared",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":141,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/CoreModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":1812,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":173,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":1813,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/spinner",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/thumbnail",{"_index":1482,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["shared/components/viewer/viewer.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/src/lib/components/body",{"_index":151,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["shared/web",{"_index":481,"title":{},"body":{"components/AppWebComponent.html":{}}}],["sharereplay",{"_index":148,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["sharing",{"_index":1087,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["shortest",{"_index":3530,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":1574,"title":{},"body":{"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["showing",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1660,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":923,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["sides",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["simplechanges",{"_index":1633,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["simplifies",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["single",{"_index":2235,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["site",{"_index":1890,"title":{},"body":{"components/HeaderComponent.html":{},"components/ViewerComponent.html":{}}}],["sites",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":906,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["skin",{"_index":1301,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1302,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipself",{"_index":1001,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["slide",{"_index":2854,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slideinhorizontaldropdown",{"_index":1527,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":1737,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1575,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":1642,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":529,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":1755,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.component.html",{"_index":1578,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.scss",{"_index":1577,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts",{"_index":1573,"title":{},"body":{"components/DualSliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:122",{"_index":1634,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:136",{"_index":1649,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:152",{"_index":1636,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:165",{"_index":1617,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:184",{"_index":1653,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:201",{"_index":1651,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:212",{"_index":1630,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:226",{"_index":1647,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:23",{"_index":1670,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":1641,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:29",{"_index":1666,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:34",{"_index":1605,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":1609,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1607,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:49",{"_index":1612,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1659,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:59",{"_index":1662,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:64",{"_index":1661,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:69",{"_index":1656,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:74",{"_index":1655,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:79",{"_index":1672,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:90",{"_index":1663,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:95",{"_index":1601,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":1739,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider.module.ts",{"_index":1751,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.wrapper",{"_index":1731,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"coverage.html":{}}}],["slidervaluechanged",{"_index":1593,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidesoffsetafter",{"_index":2829,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slidesoffsetbefore",{"_index":2827,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slidesperview",{"_index":2830,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slightly",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1303,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":259,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["snackbar.dismiss",{"_index":290,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["snapshot",{"_index":1182,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["software",{"_index":3579,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":1555,"title":{},"body":{"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["solved",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["sortby",{"_index":2184,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":2363,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(topblocks",{"_index":2213,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["sortbysynonymresult",{"_index":2308,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":2337,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically",{"_index":2309,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":2341,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":2339,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["source.getcelltypetermoccurences().pipe(take(1)).subscribe(celltypetermsfulldata",{"_index":1189,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.getontologytermoccurences().pipe(take(1)).subscribe(ontologytermsfulldata",{"_index":1188,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.pipe",{"_index":1097,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":1012,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["source.service.ts",{"_index":1330,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:10",{"_index":2992,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.service.ts:18",{"_index":2994,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.service.ts:20",{"_index":1342,"title":{},"body":{"injectables/DelegateDataSourceService.html":{}}}],["source.service.ts:23",{"_index":2997,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.worker",{"_index":3003,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.worker.ts",{"_index":3428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source/data",{"_index":1011,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["source/worker",{"_index":2985,"title":{},"body":{"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":496,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["sources.includes(msg.source",{"_index":2249,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":1472,"title":{},"body":{"components/DonorCardComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["spacebetween",{"_index":2831,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["sparc",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["spatialscenenode",{"_index":1039,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spec",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["specific",{"_index":991,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["specified",{"_index":2247,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["specifying",{"_index":2229,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":231,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["spinneractive",{"_index":233,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["spinneroverlaycomponent",{"_index":543,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":16,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1304,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1305,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["sprint",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["stage",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3063,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":3582,"title":{},"body":{"index.html":{}}}],["start",{"_index":842,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":956,"title":{},"body":{"components/ContentComponent.html":{}}}],["start?.opened",{"_index":955,"title":{},"body":{"components/ContentComponent.html":{}}}],["startdrawers",{"_index":865,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":869,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":873,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":3014,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":954,"title":{},"body":{"components/ContentComponent.html":{}}}],["starts",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":1241,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":829,"title":{},"body":{"components/ContainerComponent.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":2577,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":2575,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":2576,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":236,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":2038,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":2043,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":2047,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":932,"title":{},"body":{"components/ContentComponent.html":{}}}],["state('full",{"_index":2048,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":2044,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('open",{"_index":2037,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":934,"title":{},"body":{"components/ContentComponent.html":{}}}],["state.nodes[state.root",{"_index":2430,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["statechange",{"_index":2069,"title":{},"body":{"classes/InitializationState.html":{}}}],["statements",{"_index":3415,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":672,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["states",{"_index":916,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["states.every(state",{"_index":1078,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["static",{"_index":190,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"injectables/ThemingService.html":{}}}],["stats",{"_index":2510,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":1029,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["status.message",{"_index":1206,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["status.status",{"_index":1199,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["statusmessage",{"_index":1030,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["stay",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1703,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["still",{"_index":1828,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["stomach",{"_index":1306,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1307,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":353,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1014,"title":{},"body":{"modules/CoreModule.html":{}}}],["storemodule",{"_index":996,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":2728,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":3556,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":3554,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":127,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":631,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":361,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["style",{"_index":927,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["style.margin",{"_index":895,"title":{},"body":{"components/ContentComponent.html":{}}}],["styled",{"_index":1911,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":558,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":2092,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":185,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":181,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":681,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["subject.next(dataquerystate.completed",{"_index":1083,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":3628,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1200,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["subscription",{"_index":819,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["subscriptions",{"_index":768,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["substantial",{"_index":3639,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1954,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":1622,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["suffix",{"_index":2414,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["super",{"_index":1173,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["super(configstore",{"_index":497,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super(globalconfig",{"_index":2999,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["super._createcontainer",{"_index":441,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["super.ngxsoninit",{"_index":2193,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["support",{"_index":3023,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1250,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swiper",{"_index":2834,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"dependencies.html":{}}}],["swiper.use([navigation",{"_index":2884,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/angular",{"_index":2880,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/core",{"_index":2881,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/types",{"_index":2857,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["swipermodule",{"_index":2879,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiperoptions",{"_index":2825,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["switch",{"_index":939,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["switched",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":1051,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":1098,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":2360,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sync",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["syncexpanded(other",{"_index":2134,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":2131,"title":{},"body":{"classes/InitializationState.html":{}}}],["synonym",{"_index":2413,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonyms",{"_index":2340,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["t",{"_index":1095,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tab",{"_index":390,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["table",{"_index":3473,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":3078,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3472,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1052,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["take(1",{"_index":1196,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["takewhile",{"_index":1053,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["takewhile((status",{"_index":1198,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap",{"_index":1054,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tap((status",{"_index":1193,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap(next",{"_index":1099,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap(organs",{"_index":2666,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tap(results",{"_index":2215,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tap(scene",{"_index":2695,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["target",{"_index":1624,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["technologies",{"_index":1064,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["technology",{"_index":1145,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["technologyfilter",{"_index":1160,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilterdata",{"_index":1146,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilterquerystatus",{"_index":1116,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilters",{"_index":1766,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["telemetry",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":611,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":451,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["templateurl",{"_index":183,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["term",{"_index":1134,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":2471,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["terms",{"_index":1121,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySelectionComponent.html":{}}}],["test",{"_index":1076,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["testing",{"_index":1074,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["text",{"_index":1435,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["theme",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":244,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["themes",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":257,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["theming.initialize(el",{"_index":264,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["theming.service",{"_index":2748,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":997,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":159,"title":{"injectables/ThemingService.html":{}},"body":{"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":2749,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themselves",{"_index":2839,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["thick",{"_index":1314,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1315,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1316,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1317,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":2197,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":1176,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":1219,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":1154,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":1178,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":1225,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.pipe(distinct",{"_index":1158,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._containerelement",{"_index":442,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this._expanded",{"_index":2061,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredmargin",{"_index":2090,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":2080,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":1177,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":1222,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.pipe(distinct",{"_index":1156,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._opened",{"_index":2057,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":2053,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._providerfilterquerystatus$.next(dataquerystate.completed",{"_index":1181,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._providerfilterquerystatus$.next(dataquerystate.running",{"_index":1232,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._providerfilterquerystatus$.pipe(distinct",{"_index":1163,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.next(dataquerystate.completed",{"_index":1179,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.next(dataquerystate.running",{"_index":1228,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.pipe(distinct",{"_index":1159,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.next(dataquerystate.completed",{"_index":1180,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.next(dataquerystate.running",{"_index":1230,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.pipe(distinct",{"_index":1161,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.next(dataquerystate.completed",{"_index":1175,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.next(dataquerystate.running",{"_index":1215,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.pipe(distinct",{"_index":1153,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.aggregatedata",{"_index":1132,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":1166,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.animationsenabled",{"_index":945,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.appendtoroot",{"_index":433,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":1791,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":2789,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":2792,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":2788,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.atscrollbottom",{"_index":2574,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.attached",{"_index":424,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.bodyui.bounds",{"_index":339,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.rotation",{"_index":337,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.rotationx",{"_index":338,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.target",{"_index":335,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.cdr.markforcheck",{"_index":858,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.celltypeselectionlabel",{"_index":367,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.celltypetermoccurencesdata",{"_index":1140,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.celltypetermoccurencesdataquerystatus",{"_index":1168,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.celltypeterms",{"_index":283,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.celltypetreemodel",{"_index":285,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.channel",{"_index":849,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":2256,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":2258,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":2261,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":2237,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":855,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checked.emit(this.selected",{"_index":1394,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.closeiframeviewer",{"_index":393,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.colorassignments",{"_index":2201,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.assigncolor(node['@id",{"_index":2652,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.assigncolor(result.tissueblock.spatialentityid",{"_index":2191,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.colorassignments.colorassignments",{"_index":2204,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.unassigncolor(result.tissueblock.spatialentityid",{"_index":2192,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.consentservice.consent",{"_index":292,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.content",{"_index":860,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":859,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":846,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":848,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":847,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.contentsvisible",{"_index":1715,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":366,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ctx.patchstate",{"_index":737,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.data.querystatus$.pipe",{"_index":234,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.data.state$.pipe(pluck('statusmessage",{"_index":239,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.data.updatefilter",{"_index":362,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.databaseready$.pipe(switchmap",{"_index":1216,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.databaseready$.pipe(take(1",{"_index":1201,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.dataservice.getreferenceorgans",{"_index":2672,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.dataservice.getreferenceorgans().pipe",{"_index":2658,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datasource.getcelltypetreemodel().pipe(sharereplay(1",{"_index":286,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.datasource.getontologytreemodel().pipe(sharereplay(1",{"_index":282,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.datastate",{"_index":2199,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datastate.scenedata",{"_index":2670,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datastate.tissueblockdata",{"_index":2203,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.datastate.updatefilter",{"_index":2651,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.defaulttheme",{"_index":2786,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":2031,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.drawer",{"_index":2944,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":2942,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":942,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":853,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":864,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.element",{"_index":2791,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":2081,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expanded",{"_index":1395,"title":{},"body":{"components/DonorCardComponent.html":{},"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":2123,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":2104,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":2074,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.faded",{"_index":960,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":1127,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.filteredresults",{"_index":2357,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filters",{"_index":1785,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":1841,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":1789,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":1840,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.forcedunassignment.asobservable",{"_index":713,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.forcedunassignment.next",{"_index":728,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.formatlabel(node.label",{"_index":2450,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":2375,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":2356,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ga.event('expanded_toggled",{"_index":1396,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('filter_added",{"_index":619,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.ga.event('filter_removed",{"_index":622,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.ga.event('filter_update",{"_index":1786,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('filters_applied",{"_index":1790,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('filters_reset",{"_index":1793,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('link_clicked",{"_index":1397,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('list_result_selected",{"_index":2564,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.ga.event('search",{"_index":2371,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ga.event('selected_toggled",{"_index":1391,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('selection_change",{"_index":1523,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.ga.event('slider_range_change",{"_index":1717,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.getarguments(definition",{"_index":1970,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getindexofmatch(label",{"_index":2455,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":2449,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":2246,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":1967,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getstate().filter",{"_index":1212,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.getworkerurl(true",{"_index":3000,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["this.globalconfig.getoption('header",{"_index":246,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":247,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('logindisabled",{"_index":250,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":248,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('theme",{"_index":243,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.snapshot.hubmaptoken",{"_index":402,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.handlemessage(msg",{"_index":852,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.highvalue",{"_index":1695,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.initialized",{"_index":2030,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":2097,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":2105,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":2127,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initializesliderpopover",{"_index":1716,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.injector",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(colorassignmentstate",{"_index":2202,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(datastate",{"_index":2200,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(listresultsstate",{"_index":2656,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.issliderinitialized",{"_index":1713,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":1714,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.label}:${lowvalue}:${highvalue",{"_index":1719,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.label}:${value",{"_index":1524,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.leftmargin",{"_index":952,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.linkclick.emit(url",{"_index":1398,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.linkclicked.emit(link",{"_index":2569,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.listresultdeselected.next(result",{"_index":2568,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.listresults",{"_index":2655,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.highlightednodeid",{"_index":2673,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.highlightnode(node['@id",{"_index":2653,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.unhighlightnode",{"_index":2654,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresultselected.next(result",{"_index":2567,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.loading",{"_index":2973,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.locator.prepareexternalurl('0",{"_index":3006,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["this.lookup(nodes",{"_index":2441,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":1693,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":2077,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":2076,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":2128,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":2255,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":2243,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nextbuttonid",{"_index":2846,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.nextmessageid",{"_index":2238,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodes$.pipe",{"_index":2439,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologysearchservice.settreemodel(this.treemodel",{"_index":2491,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.ontologyselectionlabel",{"_index":365,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ontologyservice.filter(value",{"_index":2361,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologytermoccurencesdata",{"_index":1137,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.ontologytermoccurencesdataquerystatus",{"_index":1167,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.ontologyterms",{"_index":274,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ontologytreemodel",{"_index":281,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.opened",{"_index":2102,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":2119,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":2103,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.options",{"_index":1697,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.ceil",{"_index":1707,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":1706,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionschanged",{"_index":1689,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":1522,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.original.children.length",{"_index":1886,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":1885,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":1685,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":1712,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":1708,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":1205,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.position",{"_index":2052,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.prevbuttonid",{"_index":2844,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.providerfilterdata",{"_index":1151,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.providerfilterquerystatus",{"_index":1171,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.registericonimpl(definition",{"_index":1957,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(safedef",{"_index":1952,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry",{"_index":1961,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.removebox",{"_index":1842,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.resetview",{"_index":333,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.resolve",{"_index":2003,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.resultlabel",{"_index":2566,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.rightmargin",{"_index":953,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.rootelement",{"_index":426,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.appendchild(this._containerelement",{"_index":443,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.removechild(this._containerelement",{"_index":425,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.display",{"_index":427,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.height",{"_index":431,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.position",{"_index":429,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.safeurl",{"_index":2972,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.scenedata",{"_index":1143,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.scenedataquerystatus",{"_index":1169,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.selected",{"_index":1390,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.selected.emit(node",{"_index":2374,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selectedreferenceorgans",{"_index":2671,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.selection",{"_index":618,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":621,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":623,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":1525,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.selectionlabel",{"_index":368,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.sendtoggle",{"_index":2106,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.setlistresults(results",{"_index":2216,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.setreferenceorgans(organs",{"_index":2667,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.setscene(scene",{"_index":2696,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.setselectedreferenceorgans(organs.filter(organ",{"_index":2668,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.settheme(this.defaulttheme",{"_index":2790,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":288,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.snapshot",{"_index":717,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.snapshot.colorpalette.concat",{"_index":722,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":2364,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":2365,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":2239,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.source.getaggregateresults(filter",{"_index":1220,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getcelltypetermoccurences(filter",{"_index":1226,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getdatabasestatus()).pipe",{"_index":1192,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getdatasettechnologynames",{"_index":1231,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":1223,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getprovidernames",{"_index":1233,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getscene(filter",{"_index":1229,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.gettissueblockresults(filter",{"_index":1217,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('colorassignments",{"_index":714,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.state$.pipe(pluck('colorassignmentslist",{"_index":715,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":1125,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('highlightedid",{"_index":2625,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('highlightednodeid",{"_index":2179,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.state$.pipe(pluck('listresults",{"_index":2181,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.state$.pipe(pluck('referenceorgans",{"_index":2627,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('scene",{"_index":2629,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('selectedreferenceorgans",{"_index":2631,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('status",{"_index":1103,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.statechange.emit",{"_index":2129,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":2941,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":938,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":851,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":861,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.syncexpanded(other",{"_index":2130,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.technologyfilterdata",{"_index":1147,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.technologyfilterquerystatus",{"_index":1170,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":2787,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.thememode$.next('dark",{"_index":306,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next('light",{"_index":307,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next(e.matches",{"_index":312,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":349,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$]).subscribe",{"_index":277,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":227,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.theming.settheme(`${theme",{"_index":279,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.tissueblock.label",{"_index":1393,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.tissueblockdata",{"_index":1128,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.tissueblockdataquerystatus",{"_index":1165,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.tissuesections.filter(section",{"_index":2908,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":2059,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":2100,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":2099,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":2063,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":2112,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":2109,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":2492,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.treemodel",{"_index":2438,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel$.next(treemodel",{"_index":2437,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel$.pipe(map(state",{"_index":2427,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel?.nodes",{"_index":2459,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.uid",{"_index":2859,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.updatefaded",{"_index":944,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatemargin(position",{"_index":950,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatestatus",{"_index":1202,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.updatestatus(status",{"_index":1194,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.updateurl",{"_index":2971,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.url",{"_index":387,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.validatedrawers",{"_index":854,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.valuerange",{"_index":1699,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":1700,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":1702,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.vieweropen",{"_index":388,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.warmupdatabase",{"_index":1190,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.width",{"_index":2075,"title":{},"body":{"classes/InitializationState.html":{}}}],["those",{"_index":2241,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["thread",{"_index":3682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["three",{"_index":647,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["through",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":494,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":3462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":872,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":870,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":841,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":840,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":836,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumbnail",{"_index":546,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["thumbnailcarouselcomponent",{"_index":545,"title":{"components/ThumbnailCarouselComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["thumbnailcarouselmodule",{"_index":1479,"title":{"modules/ThumbnailCarouselModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules.html":{},"overview.html":{}}}],["thumbnails",{"_index":2805,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["thymus",{"_index":1308,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1309,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tick",{"_index":2912,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tied",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":595,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["timeouts",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["timing",{"_index":967,"title":{},"body":{"components/ContentComponent.html":{}}}],["tissue",{"_index":549,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tissueblock",{"_index":1358,"title":{},"body":{"components/DonorCardComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tissueblock.description",{"_index":1405,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.donor.description",{"_index":1401,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.donor.label",{"_index":1400,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.label",{"_index":1404,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblockdata",{"_index":1126,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockdata(filter",{"_index":1214,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockdataquerystatus",{"_index":1106,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockresult",{"_index":1040,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/ListResult.html":{}}}],["tissueblocks",{"_index":2208,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tissues",{"_index":2895,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["tissuesection",{"_index":2906,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionexists",{"_index":2890,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionexists(sectionnumber",{"_index":2902,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionresult",{"_index":2893,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesections",{"_index":2891,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesections]=\"tissueblock.sections",{"_index":1407,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissuesectionviscomponent",{"_index":548,"title":{"components/TissueSectionVisComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesectionvismodule",{"_index":1480,"title":{"modules/TissueSectionVisModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/TissueSectionVisModule.html":{},"modules.html":{},"overview.html":{}}}],["title",{"_index":1436,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["tmc",{"_index":1063,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":553,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle(opened",{"_index":2101,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglebuttoncomponent",{"_index":552,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":946,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["toggleexpanded(expanded",{"_index":2115,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggleexpansion",{"_index":1356,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["togglefiltervisible",{"_index":1822,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":1504,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":346,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{}}}],["togglescheme",{"_index":348,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["togglesliderpopover",{"_index":1594,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["token",{"_index":400,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["token.length",{"_index":403,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["tool",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["toolbar",{"_index":2977,"title":{},"body":{"components/ViewerComponent.html":{}}}],["top",{"_index":1434,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["topblocks",{"_index":2206,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["topblocks.push",{"_index":2210,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tort",{"_index":3658,"title":{},"body":{"license.html":{}}}],["total",{"_index":2898,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["totaltissuesections",{"_index":2892,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["totaltissuesections]=\"tissueblock.sectioncount",{"_index":1406,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["touch",{"_index":881,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":195,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["tracking/telemetry",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["trackingpopupcomponent",{"_index":139,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["trackingpopupmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["tracks",{"_index":2347,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":1540,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["transition",{"_index":928,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["transition('closed",{"_index":2039,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":935,"title":{},"body":{"components/ContentComponent.html":{}}}],["translatey",{"_index":1560,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["transparency",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":1424,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["travisci",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":445,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":540,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":2490,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.component.ts",{"_index":3450,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tree.module",{"_index":2294,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":2503,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":2293,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["treemodel",{"_index":2400,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["trigger",{"_index":929,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["trigger('expandcollapse",{"_index":2042,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":931,"title":{},"body":{"components/ContentComponent.html":{}}}],["trigger('openclose",{"_index":2036,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggered",{"_index":2336,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["true",{"_index":210,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/ThemingModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1971,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["ts",{"_index":3561,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":3564,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1271,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":862,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turn",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":126,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3666,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":486,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/OntologySearchComponent.html":{}}}],["types",{"_index":979,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["types/lru",{"_index":3502,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":438,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["typing",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2633,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"index.html":{}}}],["ui.component",{"_index":153,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ui.netlify.app",{"_index":3585,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":3595,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":3592,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":152,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ui/organ",{"_index":3594,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":3593,"title":{},"body":{"index.html":{}}}],["uid",{"_index":2810,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["uievent",{"_index":2555,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["unassigncolor",{"_index":744,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["unassigncolor(@payload('key",{"_index":738,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["unassigncolor(key",{"_index":749,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["unchecked",{"_index":612,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":359,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/OntologySelection.html":{}}}],["under",{"_index":1252,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["underline",{"_index":1538,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["unhighlightnode",{"_index":2160,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["unique",{"_index":2218,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["university",{"_index":3603,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":483,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unless",{"_index":1381,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["unlike",{"_index":1242,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unnecessary",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["unselect",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":2950,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":1667,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["unused",{"_index":2824,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["up",{"_index":794,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["update",{"_index":352,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["updated",{"_index":594,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["updatefaded",{"_index":891,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatefilter",{"_index":1764,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatefilter(@payload('filter",{"_index":1208,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":1781,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatemargin",{"_index":892,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatemargin(position",{"_index":917,"title":{},"body":{"components/ContentComponent.html":{}}}],["updates",{"_index":915,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["updatestatus(@payload('status",{"_index":1204,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["updateurl",{"_index":2958,"title":{},"body":{"components/ViewerComponent.html":{}}}],["upgraded",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":1611,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ureter",{"_index":1310,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":212,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["url('./data",{"_index":3002,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["url.createobjecturl(codeblob",{"_index":3012,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["url?.startswith(domain",{"_index":385,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["urls",{"_index":1947,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["use",{"_index":1384,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"license.html":{}}}],["used",{"_index":193,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["useexisting",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["useful",{"_index":838,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":300,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["user/os",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["useremoteapi",{"_index":461,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["users",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":351,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["usevalue",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":2840,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["uterus",{"_index":1311,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1312,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":3565,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":485,"title":{},"body":{"components/AppWebComponent.html":{}}}],["val.every(isstring",{"_index":489,"title":{},"body":{"components/AppWebComponent.html":{}}}],["validatedrawers",{"_index":772,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":800,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validation",{"_index":2348,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":420,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":2442,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechanges",{"_index":2355,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":2358,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueof",{"_index":1999,"title":{},"body":{"classes/InitializationState.html":{}}}],["valuerange",{"_index":1595,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":978,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":511,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":223,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3672,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1313,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":3094,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":1457,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["viewchild",{"_index":133,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["viewchild('bodyui",{"_index":189,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["viewchild('popover",{"_index":1664,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkportal",{"_index":1669,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":2488,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":828,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":813,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewer",{"_index":216,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["viewer.component",{"_index":2984,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":2956,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":2955,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewercomponent",{"_index":555,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"coverage.html":{},"overview.html":{}}}],["viewermodule",{"_index":17,"title":{"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["vieweropen",{"_index":224,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["viewport",{"_index":2558,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["views",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["virtual",{"_index":2512,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["vis",{"_index":2887,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis'},{'name",{"_index":551,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["vis.component",{"_index":2918,"title":{},"body":{"modules/TissueSectionVisModule.html":{}}}],["vis.component.html",{"_index":2889,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.scss",{"_index":2888,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts",{"_index":2886,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"coverage.html":{}}}],["vis.component.ts:12",{"_index":2901,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:15",{"_index":2897,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:18",{"_index":2894,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:21",{"_index":2903,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.module",{"_index":1487,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["vis.module.ts",{"_index":2917,"title":{},"body":{"modules/TissueSectionVisModule.html":{}}}],["vis/tissue",{"_index":1486,"title":{},"body":{"modules/DonorCardModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["visibility",{"_index":1654,"title":{},"body":{"components/DualSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visibility_off",{"_index":1322,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1320,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":1521,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visited",{"_index":2873,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["visual",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":1462,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["wait",{"_index":2001,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":2124,"title":{},"body":{"classes/InitializationState.html":{}}}],["warming",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["warmupdatabase",{"_index":1191,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["warning",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":3644,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3641,"title":{},"body":{"license.html":{}}}],["watchoverflow",{"_index":2832,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["way",{"_index":2560,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["wc",{"_index":450,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":514,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["web",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["webcomponent",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":3505,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":879,"title":{},"body":{"components/ContainerComponent.html":{}}}],["webpages",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":3581,"title":{},"body":{"index.html":{}}}],["week",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":641,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["well",{"_index":2511,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":229,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":205,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["white",{"_index":632,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["whole",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["whose",{"_index":2319,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["width",{"_index":648,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":2132,"title":{},"body":{"classes/InitializationState.html":{}}}],["window",{"_index":220,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.matchmedia",{"_index":296,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.matchmedia('(prefers",{"_index":302,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.open(url",{"_index":391,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["within",{"_index":2476,"title":{},"body":{"components/OntologySelectionComponent.html":{},"changelog.html":{}}}],["without",{"_index":815,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["work",{"_index":2842,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["workaround",{"_index":2142,"title":{},"body":{"classes/InitializationState.html":{}}}],["worker",{"_index":1337,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["worker(url",{"_index":3001,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":2986,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["workerdatasourceservice",{"_index":1336,"title":{"injectables/WorkerDataSourceService.html":{}},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":646,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["wrapped",{"_index":812,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":1532,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["wrapper/container",{"_index":1736,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":816,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["x",{"_index":340,"title":{},"body":{"interfaces/AppOptions.html":{},"components/TissueSectionVisComponent.html":{}}}],["y",{"_index":342,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ResultsBrowserComponent.html":{}}}],["yes",{"_index":2325,"title":{},"body":{"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":344,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["zone.js",{"_index":3567,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nAppModule -->\n\nViewerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/app.module.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { createCustomElement } from '@angular/elements';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BodyUiModule, InfoButtonModule, OrganSelectorModule, TrackingPopupModule } from 'ccf-shared';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\nimport { ViewerModule } from './shared/components/viewer/viewer.module';\nimport { AppWebComponent } from './app-web-component.component';\n\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    BodyUiModule,\n    OrganSelectorModule,\n    InfoButtonModule,\n    MatTooltipModule,\n    ViewerModule,\n    TrackingPopupModule,\n    MatSnackBarModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    { provide: DEFAULT_THEME, useValue: 'hubmap-theme-light' },\n    { provide: OverlayContainer, useExisting: AppRootOverlayContainer }\n  ],\n  entryComponents: [AppComponent]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-eui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CCFDatabaseOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loginEnabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CCFDatabaseOptions, OntologyTreeModel } from 'ccf-database';\nimport { DataSourceService, GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map, pluck, shareReplay } from 'rxjs/operators';\n\nimport { BodyUiComponent } from '../../../ccf-shared/src/lib/components/body-ui/body-ui.component';\nimport { environment } from '../environments/environment';\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { ListResultsState } from './core/store/list-results/list-results.state';\nimport { SceneState } from './core/store/scene/scene.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n\ninterface AppOptions extends CCFDatabaseOptions {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  loginEnabled?: boolean;\n}\n\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('bodyUI', { static: false }) bodyUI: BodyUiComponent;\n\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  cellTypeSelectionLabel = 'cell';\n\n  selectionLabel = 'body | cell';\n\n  /**\n   * Whether or not organ carousel is open\n   */\n  organListVisible = true;\n\n  /**\n   * Emitted url object from the results browser item\n   */\n  url = '';\n\n  /**\n   * Acceptable viewer domains (others will open in new window)\n   */\n  acceptableViewerDomains: string[] = environment.acceptableViewerDomains || [];\n\n  /**\n   * Variable to keep track of whether the viewer is open\n   * or not\n   */\n  viewerOpen = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly loadingMessage$ = this.data.state$.pipe(pluck('statusMessage'));\n\n  readonly ontologyTerms$: Observable;\n  readonly ontologyTreeModel$: Observable;\n\n  readonly cellTypeTerms$: Observable;\n  readonly cellTypeTreeModel$: Observable;\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n  readonly loginDisabled$ = this.globalConfig.getOption('loginDisabled');\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(\n    el: ElementRef, injector: Injector,\n    readonly data: DataState, readonly theming: ThemingService,\n    readonly scene: SceneState, readonly listResultsState: ListResultsState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, overlay: AppRootOverlayContainer,\n    readonly dataSource: DataSourceService, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    overlay.setRootElement(el);\n    data.tissueBlockData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.ontologyTermOccurencesData$.subscribe();\n    data.cellTypeTermOccurencesData$.subscribe();\n    data.sceneData$.subscribe();\n    data.filter$.subscribe();\n    data.technologyFilterData$.subscribe();\n    data.providerFilterData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n\n    this.ontologyTreeModel$ = this.dataSource.getOntologyTreeModel().pipe(shareReplay(1));\n    this.cellTypeTerms$ = data.filter$.pipe(pluck('cellTypeTerms'));\n    this.cellTypeTreeModel$ = this.dataSource.getCellTypeTreeModel().pipe(shareReplay(1));\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    if (window.matchMedia) {\n      // Sets initial theme according to user theme preference\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        this.themeMode$.next('dark');\n      } else {\n        this.themeMode$.next('light');\n      }\n\n      // Listens for changes in user theme preference\n      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n        this.themeMode$.next(e.matches ? 'dark' : 'light');\n      });\n    } else {\n      this.themeMode$.next('light');\n    }\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   *\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent\n  ): void {\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n    this.resetView();\n  }\n\n  resetView(): void {\n    this.bodyUI.target = [0, 0, 0];\n    this.bodyUI.rotation = 0;\n    this.bodyUI.rotationX = 0;\n    this.bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   *\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[] | undefined, type: 'anatomical-structures' | 'cell-type'): void {\n    if (ontologySelection) {\n      if (type === 'anatomical-structures') {\n        this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id) });\n        this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      } else {\n        this.data.updateFilter({ cellTypeTerms: ontologySelection.map(selection => selection.id) });\n        this.cellTypeSelectionLabel = this.createSelectionLabel(ontologySelection);\n      }\n      if (this.ontologySelectionLabel && this.cellTypeSelectionLabel) {\n        this.selectionLabel = `${this.ontologySelectionLabel} | ${this.cellTypeSelectionLabel}`;\n      } else if (this.ontologySelectionLabel) {\n        this.selectionLabel = `${this.ontologySelectionLabel}`;\n      } else if (this.cellTypeSelectionLabel) {\n        this.selectionLabel = `${this.cellTypeSelectionLabel}`;\n      } else {\n        this.selectionLabel = '';\n      }\n      if (ontologySelection[0] && ontologySelection[0].label === 'body') {\n        this.resetView();\n      }\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [], cellTypeTerms: [] });\n    this.ontologySelectionLabel = '';\n    this.cellTypeSelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string {\n    if (ontolgySelection.length === 0) {\n      return '';\n    }\n\n    if (ontolgySelection.length === 1) {\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  url?.startsWith(domain));\n    if (isWhitelisted) {\n      this.url = url;\n      this.viewerOpen = !!url;\n    } else {\n      // Open link in new tab\n      window.open(url, '_blank');\n      this.closeiFrameViewer();\n    }\n  }\n\n  /**\n   * Function to easily close the iFrame viewer.\n   */\n  closeiFrameViewer(): void {\n    this.viewerOpen = false;\n  }\n\n  /**\n   * Gets login token\n   */\n  get loggedIn(): boolean {\n    const token = this.globalConfig.snapshot.hubmapToken ?? '';\n    return token.length > 0;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppRootOverlayContainer.html":{"url":"injectables/AppRootOverlayContainer.html","title":"injectable - AppRootOverlayContainer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppRootOverlayContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    OverlayContainer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attached\n                            \n                            \n                                    Private\n                                rootElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createContainer\n                            \n                            \n                                    Private\n                                appendToRoot\n                            \n                            \n                                setRootElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _createContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    _createContainer()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        appendToRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    appendToRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRootElement\n                        \n                    \n                \n            \n            \n                \nsetRootElement(el: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        attached\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rootElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { Injectable, ElementRef } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppRootOverlayContainer extends OverlayContainer {\n  private rootElement: ElementRef;\n  private attached = false;\n\n  setRootElement(el: ElementRef): void {\n    if (this.attached) {\n      this.rootElement.nativeElement.removeChild(this._containerElement);\n      this.attached = false;\n    }\n\n    this.rootElement = el;\n    this.rootElement.nativeElement.style.display = 'block';\n    this.rootElement.nativeElement.style.position = 'contents';\n    this.rootElement.nativeElement.style.height = '100%';\n    this.appendToRoot();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  protected _createContainer(): void {\n    super._createContainer();\n    this.appendToRoot();\n  }\n\n  private appendToRoot(): void {\n    if (!this._containerElement || !this.rootElement) {\n      return;\n    }\n\n    this.rootElement.nativeElement.appendChild(this._containerElement);\n    this.attached = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSources\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                hubmapAssetUrl\n                            \n                            \n                                hubmapDataService\n                            \n                            \n                                hubmapDataUrl\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                hubmapToken\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                remoteApiEndpoint\n                            \n                            \n                                theme\n                            \n                            \n                                useRemoteApi\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/app-web-component.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSources\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapAssetUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapDataService\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapDataUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapToken\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        remoteApiEndpoint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useRemoteApi\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/app-web-component.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS, GenericGlobalConfig } from 'ccf-shared/web-components';\n\nimport { environment } from '../environments/environment';\n\n\nfunction parseDataSources(value: unknown): string[] {\n  const isString = (val: unknown): val is string => typeof val === 'string';\n  const isStringArray = (val: unknown): val is string[] => Array.isArray(val) && val.every(isString);\n\n  if (typeof value === 'string') {\n    const json = BUILTIN_PARSERS.json(value);\n    if (isStringArray(json)) {\n      return json;\n    }\n  } else if (isStringArray(value)) {\n    return value;\n  }\n\n  throw new Error('Invalid data sources');\n}\n\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() dataSources: string | string[];\n\n  @Input() hubmapDataService: string;\n  @Input() hubmapDataUrl: string;\n  @Input() hubmapAssetUrl: string;\n  @Input() hubmapToken: string;\n  @Input() hubmapPortalUrl: string;\n\n  @Input() useRemoteApi: string | boolean;\n  @Input() remoteApiEndpoint: string;\n  @Input() theme: string;\n  @Input() header: string | boolean;\n  @Input() homeUrl: string;\n  @Input() logoTooltip: string;\n  @Input() loginDisabled: boolean;\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions'],\n        ...environment.customization\n      },\n      parse: {\n        dataSources: parseDataSources,\n        useRemoteApi: BUILTIN_PARSERS.boolean,\n        header: BUILTIN_PARSERS.boolean,\n        loginDisabled: BUILTIN_PARSERS.boolean\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of checkbox component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:33\n                            \n                        \n                \n                    \n                        Number of columns\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:18\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:23\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:28\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterOnChange\n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:53\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Number of columns\n   */\n  @Input() columns = 3;\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Creates an instance of checkbox component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   *\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n      this.ga.event('filter_added', 'filter_checkbox', option);\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n      this.ga.event('filter_removed', 'filter_checkbox', option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5rem;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  &.three {\n    .option {\n      width: 33%;\n    }\n  }\n\n  &.four {\n    .option {\n      width: 25%;\n    }\n  }\n}\n\n.option {\n  color: #fafafa;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            rank\n                                        \n                                \n                                \n                                        \n                                            rgba\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rgba\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rgba:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ColorAssignmentState.html":{"url":"injectables/ColorAssignmentState.html","title":"injectable - ColorAssignmentState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ColorAssignmentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Color Assignment State\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorAssignments$\n                            \n                            \n                                    Readonly\n                                colorAssignmentsList$\n                            \n                            \n                                    Private\n                                    Readonly\n                                forcedUnassignment\n                            \n                            \n                                    Readonly\n                                forcedUnassignment$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignColor\n                            \n                            \n                                getColor\n                            \n                            \n                                unassignColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        assignColor\n                        \n                    \n                \n            \n            \n                \nassignColor(key: string, doReset)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    doReset\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Immutable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Immutable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unassignColor\n                        \n                    \n                \n            \n            \n                \nunassignColor(key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorAssignments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorAssignmentsList$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        forcedUnassignment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        forcedUnassignment$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.forcedUnassignment.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:59\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorAssignmentStateModel.html":{"url":"interfaces/ColorAssignmentStateModel.html","title":"interface - ColorAssignmentStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorAssignmentStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorAssignments\n                                        \n                                \n                                \n                                        \n                                            colorAssignmentsList\n                                        \n                                \n                                \n                                        \n                                            colorPalette\n                                        \n                                \n                                \n                                        \n                                            colorsAvailable\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorAssignments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorAssignments:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorAssignmentsList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorAssignmentsList:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorPalette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorPalette:         Color[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Color[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorsAvailable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorsAvailable:         Color[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Color[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:115\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:83\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:105\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateDrawers\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:124\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageChannel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                        \n                    \n\n            \n                \n                    The connected message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ContentComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:45\n                        \n                    \n\n            \n                \n                    Content component if provided already wrapped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(ContentComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:48\n                        \n                    \n\n            \n                \n                    Content component if provided without wrapping.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(DrawerComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:41\n                        \n                    \n\n            \n                \n                    Drawer components in this container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:62\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component.\n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationsEnabled\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                faded\n                            \n                            \n                                leftMargin\n                            \n                            \n                                rightMargin\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:70\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:60\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateFaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:116\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateMargin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:103\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DrawerComponent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:39\n                        \n                    \n\n            \n                \n                    References to the side drawers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 5.5rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DataSourceService, MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\nimport { CcfApiConfiguration, CcfApiModule } from 'ccf-openapi/angular-client';\n\nimport { environment } from '../../environments/environment';\nimport { HeaderModule } from './header/header.module';\nimport { DelegateDataSourceService } from './services/data-source/data-source.service';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'eui'\n    }),\n    MousePositionTrackerModule,\n\n    CcfApiModule.forRoot(() => new CcfApiConfiguration({\n      basePath: environment.dbOptions.remoteApiEndpoint\n    })),\n\n    HeaderModule,\n    StoreModule,\n    ThemingModule\n  ],\n  providers: [\n    { provide: DataSourceService, useExisting: DelegateDataSourceService }\n  ],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Store data state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            statusMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Loading\" | \"Ready\" | \"Error\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Loading\" | \"Ready\" | \"Error\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, DatabaseStatus, Filter, SpatialSceneNode, TissueBlockResult } from 'ccf-database';\nimport { DataSourceService } from 'ccf-shared';\nimport { combineLatest, defer, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { delay, distinct, filter as rxjsFilter, map, pluck, publishReplay, refCount, repeat, switchMap, take, takeWhile, tap } from 'rxjs/operators';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000']\n};\n\n/** Current state of data queries. */\n// eslint-disable-next-line no-shadow\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n  status: 'Loading' | 'Ready' | 'Error';\n  statusMessage: string;\n}\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER,\n    status: 'Loading',\n    statusMessage: 'Loading database'\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository implements NgxsOnInit {\n  /** Emits when the database is ready. */\n  readonly databaseReady$ = this.state$.pipe(pluck('status'), distinct(), rxjsFilter((status) => status === 'Ready'));\n\n  /** Implementation subject for tissueBlockDataQueryStatus$. */\n  private readonly _tissueBlockDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for ontologyTermOccurencesDataQueryStatus$. */\n  private readonly _ontologyTermOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for cellTypeTermOccurencesDataQueryStatus$. */\n  private readonly _cellTypeTermOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for sceneDataQueryStatus$. */\n  private readonly _sceneDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for technologyFilterQueryStatus$. */\n  private readonly _technologyFilterQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for providerFilterQueryStatus$. */\n  private readonly _providerFilterQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$ = new ReplaySubject>(1);\n  /** Keeping track of all cell type terms there is data for. */\n  readonly cellTypeTermsFullData$ = new ReplaySubject>(1);\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest tissue block query data. */\n  readonly tissueBlockData$ = this.filter$.pipe(queryData(\n    this.tissueBlockData, sendCompletedTo(this._tissueBlockDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest ontology term occurences query data. */\n  readonly ontologyTermOccurencesData$ = this.filter$.pipe(queryData(\n    this.ontologyTermOccurencesData, sendCompletedTo(this._ontologyTermOccurencesDataQueryStatus$)\n  ));\n  /** Latest cell type term occurences query data. */\n  readonly cellTypeTermOccurencesData$ = this.filter$.pipe(queryData(\n    this.cellTypeTermOccurencesData, sendCompletedTo(this._cellTypeTermOccurencesDataQueryStatus$)\n  ));\n  /** Latest scene query data. */\n  readonly sceneData$ = this.filter$.pipe(queryData(\n    this.sceneData, sendCompletedTo(this._sceneDataQueryStatus$)\n  ));\n  /** Latest technology filter label query data. */\n  readonly technologyFilterData$ = this.filter$.pipe(queryData(\n    this.technologyFilterData, sendCompletedTo(this._technologyFilterQueryStatus$)\n  ));\n  /** Latest provider filter label query data. */\n  readonly providerFilterData$ = this.filter$.pipe(queryData(\n    this.providerFilterData, sendCompletedTo(this._providerFilterQueryStatus$)\n  ));\n\n  /** Current status of queries in the tissueBlockData$ observable. */\n  readonly tissueBlockDataQueryStatus$ = this._tissueBlockDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the ontologyTermOccurrences$ observable. */\n  readonly ontologyTermOccurencesDataQueryStatus$ = this._ontologyTermOccurencesDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the cellTypeTermOccurrences$ observable. */\n  readonly cellTypeTermOccurencesDataQueryStatus$ = this._cellTypeTermOccurencesDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the sceneData$ observable. */\n  readonly sceneDataQueryStatus$ = this._sceneDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the technologyFilter$ observable. */\n  readonly technologyFilterQueryStatus$ = this._technologyFilterQueryStatus$.pipe(distinct());\n  /** Current status of queries in the providerFilter$ observable. */\n  readonly providerFilterQueryStatus$ = this._providerFilterQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.tissueBlockDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.ontologyTermOccurencesDataQueryStatus$,\n    this.cellTypeTermOccurencesDataQueryStatus$,\n    this.sceneDataQueryStatus$,\n    this.technologyFilterQueryStatus$,\n    this.providerFilterQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._sceneDataQueryStatus$.next(DataQueryState.Completed);\n    this._technologyFilterQueryStatus$.next(DataQueryState.Completed);\n    this._providerFilterQueryStatus$.next(DataQueryState.Completed);\n  }\n\n  ngxsOnInit(): void {\n    const { ontologyTermsFullData$, ontologyTermOccurencesData$, cellTypeTermsFullData$, cellTypeTermOccurencesData$, source, snapshot: { filter } } = this;\n    if (filter === DEFAULT_FILTER) {\n      // Common case - Reuse the result of the regular query\n      ontologyTermOccurencesData$.pipe(take(1)).subscribe(ontologyTermsFullData$);\n      cellTypeTermOccurencesData$.pipe(take(1)).subscribe(cellTypeTermsFullData$);\n    } else {\n      source.getOntologyTermOccurences().pipe(take(1)).subscribe(ontologyTermsFullData$);\n      source.getCellTypeTermOccurences().pipe(take(1)).subscribe(cellTypeTermsFullData$);\n    }\n    this.warmUpDatabase();\n  }\n\n  private warmUpDatabase(): void {\n    defer(() => this.source.getDatabaseStatus()).pipe(\n      tap((status) => this.updateStatus(status)),\n      delay(2000),\n      take(1)\n    ).pipe(\n      repeat(1000),\n      takeWhile((status) => status.status === 'Loading')\n    ).subscribe();\n\n    this.databaseReady$.pipe(take(1), tap(() => {\n      this.updateStatus({\n        status: 'Ready',\n        message: 'Loading CCF Exploration User Interface (EUI)'\n      });\n    })).subscribe();\n  }\n\n  @DataAction()\n  updateStatus(@Payload('status') status: DatabaseStatus): void {\n    this.patchState({\n      status: status.status,\n      statusMessage: status.message\n    });\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(@Payload('filter') filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: { ...this.getState().filter, ...filter }\n    });\n  }\n\n  /**\n   * Queries for tissue block data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private tissueBlockData(filter: Filter): ObservableInput {\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getTissueBlockResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private ontologyTermOccurencesData(filter: Filter): ObservableInput> {\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for cell type term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private cellTypeTermOccurencesData(filter: Filter): ObservableInput> {\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getCellTypeTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for scene data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private sceneData(filter: Filter): ObservableInput {\n    this._sceneDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getScene(filter)));\n  }\n\n  /**\n   * Queries for technology filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private technologyFilterData(): ObservableInput {\n    this._technologyFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getDatasetTechnologyNames()));\n  }\n\n  /**\n   * Queries for provider filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private providerFilterData(): ObservableInput {\n    this._providerFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getProviderNames()));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DelegateDataSourceOptions.html":{"url":"interfaces/DelegateDataSourceOptions.html","title":"interface - DelegateDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DelegateDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useRemoteApi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRemoteApi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRemoteApi:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService, CCFDatabaseDataSourceService, DataSourceLike, InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\n\nexport interface DelegateDataSourceOptions {\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken {\n    const { useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      return ApiEndpointDataSourceService;\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DelegateDataSourceService.html":{"url":"injectables/DelegateDataSourceService.html","title":"injectable - DelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        InjectorDelegateDataSourceService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                selectToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: DelegateDataSourceOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DelegateDataSourceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService, CCFDatabaseDataSourceService, DataSourceLike, InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\n\nexport interface DelegateDataSourceOptions {\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken {\n    const { useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      return ApiEndpointDataSourceService;\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DonorCardComponent.html":{"url":"components/DonorCardComponent.html","title":"component - DonorCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DonorCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Donor card component which displays data from a patient\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-donor-card\n            \n\n            \n                styleUrls\n                ./donor-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./donor-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                hoverState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCheckbox\n                            \n                            \n                                linkHandler\n                            \n                            \n                                toggleExpansion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                expanded\n                            \n                            \n                                highlighted\n                            \n                            \n                                selected\n                            \n                            \n                                tissueBlock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                linkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of donor card component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:26\n                            \n                        \n                \n                    \n                        Allows color of the checkbox background to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:29\n                            \n                        \n                \n                    \n                        Allows the expanded state of the card to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlighted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:23\n                            \n                        \n                \n                    \n                        Allows the selected state to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueBlock\n                    \n                \n                \n                    \n                        Type :     TissueBlockResult\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:20\n                            \n                        \n                \n                    \n                        Tissue Block to generate the donor card from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:34\n                            \n                        \n                \n                    \n                        Emits the new checked state whenever it changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        linkClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:37\n                            \n                        \n                \n                    \n                        Emit the url of any link when clicked.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-donor-card\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-donor-card'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleCheckbox\n                        \n                    \n                \n            \n            \n                \nhandleCheckbox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:52\n                \n            \n\n\n            \n                \n                    Handles the logic that needs to run when the checkbox is clicked on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkHandler\n                        \n                    \n                \n            \n            \n                \nlinkHandler(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:76\n                \n            \n\n\n            \n                \n                    Handles what happens when an info card is clicked.\nPasses up the link click event unless the card isn't selected\nIn which case it selects it for ease of use.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the URL to emit up.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpansion\n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:62\n                \n            \n\n\n            \n                \n                    Ensures that the expanded variable is only changed if selected first.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-donor-card'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoverState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:40\n                        \n                    \n\n            \n                \n                    To keep track of which element, if any, are hovered over.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { TissueBlockResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Donor card component which displays data from a patient\n */\n@Component({\n  selector: 'ccf-donor-card',\n  templateUrl: './donor-card.component.html',\n  styleUrls: ['./donor-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DonorCardComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-donor-card';\n\n  /** Tissue Block to generate the donor card from */\n  @Input() tissueBlock!: TissueBlockResult;\n\n  /** Allows the selected state to be set from outside the component */\n  @Input() selected = false;\n\n  /** Allows color of the checkbox background to be set from outside the component */\n  @Input() color!: string;\n\n  /** Allows the expanded state of the card to be set from outside the component */\n  @Input() expanded = false;\n\n  @Input() highlighted = false;\n\n  /** Emits the new checked state whenever it changes */\n  @Output() readonly checked = new EventEmitter();\n\n  /** Emit the url of any link when clicked. */\n  @Output() readonly linkClick = new EventEmitter();\n\n  /** To keep track of which element, if any, are hovered over. */\n  hoverState = '';\n\n  /**\n   * Creates an instance of donor card component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Handles the logic that needs to run when the checkbox is clicked on.\n   */\n  handleCheckbox(): void {\n    this.selected = !this.selected;\n    this.ga.event('selected_toggled', 'donor_card', this.tissueBlock.label, +this.selected);\n    this.checked.emit(this.selected);\n    this.expanded = false;\n  }\n\n  /**\n   * Ensures that the expanded variable is only changed if selected first.\n   */\n  toggleExpansion(): void {\n    if (this.selected) {\n      this.expanded = !this.expanded;\n      this.ga.event('expanded_toggled', 'donor_card', this.tissueBlock.label, +this.expanded);\n    }\n  }\n\n  /**\n   * Handles what happens when an info card is clicked.\n   * Passes up the link click event unless the card isn't selected\n   * In which case it selects it for ease of use.\n   *\n   * @param url the URL to emit up.\n   */\n  linkHandler(url: string): void {\n    this.ga.event('link_clicked', 'donor_card', this.tissueBlock.label);\n    if (this.selected) {\n      this.linkClick.emit(url);\n    } else {\n      this.selected = true;\n      this.checked.emit(this.selected);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      person\n\n      \n        {{ tissueBlock.donor.label }}\n        {{ tissueBlock.donor.description }}\n      \n    \n    \n      DONOR\n      open_in_new\n    \n\n    {{ expanded ? \"expand_less\" : \"expand_more\" }}\n  \n\n\n\n  \n    \n      bubble_chart\n      \n        {{ tissueBlock.label }}\n        {{ tissueBlock.description }}\n      \n\n      \n        TISSUE BLOCK\n        open_in_new\n      \n    \n\n     1\"\n      [totalTissueSections]=\"tissueBlock.sectionCount\"\n      [tissueSections]=\"tissueBlock.sections\"\n    >\n\n     0\">\n      \n      \n    \n  \n\n  \n    \n      bubble_chart\n      \n        {{ section.label }}\n        {{ section.description }}\n      \n\n      \n        TISSUE SECTION\n        open_in_new\n      \n    \n\n     0\">\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./donor-card.component.scss\n                \n                :host {\n  width: 100%;\n\n  .main-container {\n    display: flex;\n    min-height: 3rem;\n    width: 100%;\n    align-items: center;\n    padding-left: 0.5rem;\n  }\n\n  .checkbox-background {\n    height: 2rem;\n    width: 2rem;\n    border-radius: 50%;\n    margin-right: 0.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n\n    ::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background,\n    .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {\n      background-color: transparent;\n    }\n\n    &.highlighted {\n      ::ng-deep .mat-ripple-element {\n        opacity: .04;\n      }\n    }\n\n    .checkselected {\n      ::ng-deep .mat-checkbox-frame {\n        border-color: white !important;\n      }\n    }\n\n    .checkbox {\n      margin-left: 1.12rem;\n      margin-bottom: 0.12rem; \n    }\n  }\n\n  .align-end {\n    margin-left: auto;\n  }\n\n  .info-block {\n    display: flex;\n    font-size: 0.75rem;\n    line-height: 1rem;\n    width: 100%;\n    align-items: center;\n\n    &:not(:first-child) {\n      margin-top: 0.5rem;\n    }\n\n    .text-content {\n      .title {\n        font-weight: 600;\n      }\n    }\n  }\n\n  .donor {\n    display: flex;\n    font-size: 0.75rem;\n    line-height: 1rem;\n    align-items: center;\n    flex-grow: 1;\n    height: 2.5rem;\n\n    &:hover, &.highlighted {\n      box-shadow: 0px 6px 2px -2px rgba(0, 0, 0, 0.2), 0px 4px 4px 0px rgba(0, 0, 0, 0.14), 0px 2px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n\n    .hover-state {\n      width: 19.5rem !important;\n    }\n\n    .donor-info {\n      .title {\n        font-weight: 600;\n      }\n    }\n  }\n\n  .hoverable {\n    position: relative;\n  }\n\n  .hover-enabled {\n    position: relative;\n\n    &:hover {\n      .hover-state {\n        opacity: 1;\n      }\n    }\n  }\n\n  .hover-state {\n    transition: opacity 0.15s ease-in-out;\n    opacity: 0;\n    cursor: pointer;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    margin-left: -0.5rem;\n    align-items: center;\n    display: flex;\n    justify-content: flex-end;\n    padding-right: 1rem;\n    font-size: 0.75rem;\n\n    .hover-title {\n      font-weight: lighter;\n    }\n\n    .hover-icon {\n      margin-left: 1rem;\n    }\n  }\n\n  .default-padding {\n    padding: 0.5rem;\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .expanded-view {\n    margin-top: 0.25rem;\n    width: 85%;\n    margin-bottom: 0.25rem;\n  }\n\n  .d-flex {\n    display: flex;\n  }\n\n  .icon-size {\n    height: 1.5rem;\n    width: 1.5rem;\n    font-size: 1.5rem;\n  }\n\n  .selectable {\n    cursor: pointer;\n  }\n\n  .w-80 {\n    width: 80% !important;\n\n    .info-block {\n      .text-content {\n        .description {\n          width: 16rem !important;\n        }\n      }\n    }\n  }\n\n  .ml-5 {\n    margin-left: 0.5rem;\n  }\n\n  .mr-5 {\n    margin-right: 0.5rem;\n  }\n\n  .mt-05 {\n    margin-top: 0.5rem;\n  }\n\n  .description {\n    width: 17rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person              {{ tissueBlock.donor.label }}        {{ tissueBlock.donor.description }}                    DONOR      open_in_new        {{ expanded ? \"expand_less\" : \"expand_more\" }}              bubble_chart              {{ tissueBlock.label }}        {{ tissueBlock.description }}                    TISSUE BLOCK        open_in_new               1\"      [totalTissueSections]=\"tissueBlock.sectionCount\"      [tissueSections]=\"tissueBlock.sections\"    >     0\">                              bubble_chart              {{ section.label }}        {{ section.description }}                    TISSUE SECTION        open_in_new               0\">                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DonorCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DonorCardModule.html":{"url":"modules/DonorCardModule.html","title":"module - DonorCardModule","body":"\n                   \n\n\n\n\n    Modules\n    DonorCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DonorCardModule\n\n\n\ncluster_DonorCardModule_imports\n\n\n\ncluster_DonorCardModule_declarations\n\n\n\ncluster_DonorCardModule_exports\n\n\n\n\nDonorCardComponent\n\nDonorCardComponent\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nDonorCardModule -->\n\nDonorCardComponent->DonorCardModule\n\n\n\n\n\nDonorCardComponent \n\nDonorCardComponent \n\nDonorCardComponent  -->\n\nDonorCardModule->DonorCardComponent \n\n\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nDonorCardModule -->\n\nThumbnailCarouselModule->DonorCardModule\n\n\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nDonorCardModule -->\n\nTissueSectionVisModule->DonorCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DonorCardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThumbnailCarouselModule\n                        \n                        \n                            TissueSectionVisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DonorCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ThumbnailCarouselModule } from '../../../shared/components/thumbnail-carousel/thumbnail-carousel.module';\nimport { DonorCardComponent } from './donor-card.component';\nimport { TissueSectionVisModule } from './../tissue-section-vis/tissue-section-vis.module';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatCheckboxModule,\n    MatIconModule,\n\n    ThumbnailCarouselModule,\n    TissueSectionVisModule\n  ],\n  declarations: [DonorCardComponent],\n  exports: [DonorCardComponent]\n})\nexport class DonorCardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:33\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        selectionChanged\n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:59\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleOptions\n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:50\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        optionsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'invisible'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:38\n                        \n                    \n\n            \n                \n                    Determines if menu contents are visible (used for fade-in effect).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Creates an instance of dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   *\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.ga.event('selection_change', 'dropdown', `${this.label}:${value}`);\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ label }}\n      \n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 0.875rem;\n        border: none;\n\n        mat-select {\n          font-size: 1rem;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      transform: none;\n      height: 0.125rem;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #0000003e;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 9.5rem;\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  \n  .label {\n    padding-bottom: 0.063rem;\n  }\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ label }}                                          {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSliderPopover\n                            \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:touchstart\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:95\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:34\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:44\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:39\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:49\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:touchstart\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:touchstart(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSliderPopover\n                        \n                    \n                \n            \n            \n                \ncloseSliderPopover(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])@HostListener('document:touchstart', ['$event.target'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initializeSliderPopover\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:212\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:122\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:152\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyHigh\n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyLow\n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:226\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionsChanged\n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:136\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliderValueChanged\n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:201\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSliderPopover\n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:184\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contentsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'invisible'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:74\n                        \n                    \n\n            \n                \n                    Determines if slider contents are visible (used for fade-in effect).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:69\n                        \n                    \n\n            \n                \n                    Value bound to the slider's high pointer value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSliderInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:95\n                        \n                    \n\n            \n                \n                    Determines whether slider popover has been created and initialized.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSliderOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:54\n                        \n                    \n\n            \n                \n                    Determines whether slider popover is shown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lowValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:64\n                        \n                    \n\n            \n                \n                    Value bound to the slider's low pointer value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:59\n                        \n                    \n\n            \n                \n                    Slider options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OverlayRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:90\n                        \n                    \n\n            \n                \n                    Reference to the slider popover overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popoverElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('popover', {read: ElementRef, static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:29\n                        \n                    \n\n            \n                \n                    Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popoverPortal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkPortal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(CdkPortal, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:23\n                        \n                    \n\n            \n                \n                    Reference to the template for the slider popover.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:79\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   *\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   * @param ga Analytics service\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n    private readonly ga: GoogleAnalyticsService\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   *\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // eslint-disable-line\n  // eslint-disable-line\n  @HostListener('document:touchstart', ['$event.target']) // eslint-disable-line\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement?.nativeElement?.contains?.(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.ga.event('slider_range_change', 'dual_slider', `${this.label}:${lowValue}:${highValue}`);\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   *\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                @use 'sass:math';\n\n.slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n        font-size: 0.875rem;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      transform: none;\n      height: 0.125rem;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    padding-bottom: 0.25rem;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #0000003e;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 4.375rem;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 0.9375rem;\n    margin-bottom: 0.9375rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - math.div($pointer-size, 2);\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 2rem;\n\n    &.min {\n      margin-right: 1rem;\n    }\n\n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 0.875rem;\n    }\n\n    input {\n      border: none;\n      width: 1.75rem;\n      font-size: 1rem;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                refreshFilters\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                            \n                                providerFilters\n                            \n                            \n                                technologyFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of filters content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:24\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:19\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        providerFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:34\n                            \n                        \n                \n                    \n                        List of providers in the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        technologyFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:29\n                            \n                        \n                \n                    \n                        List of technologies in the data\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:44\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:39\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyButtonClick\n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:68\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshFilters\n                        \n                    \n                \n            \n            \n                \nrefreshFilters()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:76\n                \n            \n\n\n            \n                \n                    Refreshes all filter settings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(value, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:59\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { DEFAULT_FILTER } from '../../../core/store/data/data.state';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters: string[];\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() readonly filtersChange = new EventEmitter>();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() readonly applyFilters = new EventEmitter>();\n\n  /**\n   * Creates an instance of filters content component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates the filter object with a new key/value\n   *\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.ga.event('filter_update', 'filter_content', `${key}:${value}`);\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.ga.event('filters_applied', 'filter_content');\n    this.applyFilters.emit(this.filters);\n  }\n\n  /**\n   * Refreshes all filter settings\n   */\n  refreshFilters(): void {\n    this.filters = JSON.parse(JSON.stringify(DEFAULT_FILTER));\n    this.ga.event('filters_reset', 'filter_content');\n    this.filtersChange.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n\n  APPLY FILTERS\n  \n    refresh\n  \n\n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  &.assays {\n    .option {\n      margin-right: 0 rem;\n      width: 25%\n    }\n  }\n\n  margin-top: 2rem;\n}\n\n.button-container {\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  margin-top: 2rem;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n}\n\n.outline-button {\n  box-shadow: 0.1rem 0.1rem 0.2rem 0rem #0000001d;\n}\n\n.refresh-icon {\n  padding: 0.25rem;\n  border-radius: 0.25rem;\n  margin-right: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: 0.6s;\n\n  .refresh {\n    cursor: pointer;\n    transition: .6s;\n    transition-property: background;\n  }\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n  padding-top: 1rem;\n\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5rem;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            APPLY FILTERS      refresh  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { FiltersContentComponent } from './filters-content.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  imports: [CommonModule, CheckboxModule, DropdownModule, DualSliderModule, MatButtonModule, MatIconModule],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                            \n                                providerFilters\n                            \n                            \n                                technologyFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:22\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:16\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        providerFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:32\n                            \n                        \n                \n                    \n                        List of providers in the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        technologyFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:27\n                            \n                        \n                \n                    \n                        List of technologies in the data\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:37\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:63\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeBox\n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:54\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFilterVisible\n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:47\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filtersVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:42\n                        \n                    \n\n            \n                \n                    Keeps track of whether or not the filters popover box is visible or not\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters: string[];\n\n  /**\n   * Emits the current filters\n   */\n  @Output() readonly filtersChange = new EventEmitter>();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   *\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  z-index: 5;\n  top: 1.2rem;\n  left: 1.48rem;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #00000058;\n\n  .popup-body {\n    padding: 1.5rem;\n    position: relative;\n    height: 28.5rem;\n  }\n\n  &.visible {\n    width: 35rem;\n    height: 28.5rem;\n    transition: width 0.2s ease-in-out;\n    border-width: 1px;\n\n    .popup-body {\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.2s;\n    }\n  }\n\n  &.hidden {\n    width: 0;\n    height: 0;\n    transition: all 0.2s ease-out;\n    transition-delay: 0.3s;\n    pointer-events: none;\n\n    .popup-body {\n      opacity: 0;\n      transition: opacity 0.2s ease-in-out;\n    }\n  }\n}\n\n.show-hide {\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n  padding: 0.5rem;\n  border-radius: 0.25rem;\n  transition: 0.6s;\n\n  .funnel {\n    // margin-top: 0.25rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/flat-node.ts\n        \n\n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                numResults\n                            \n                            \n                                    Optional\n                                opacity\n                            \n                            \n                                    Optional\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyTreeNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                    OntologyTreeNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        numResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        opacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyTreeNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:36\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:18\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:25\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyTreeNode } from 'ccf-database';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  visible?: boolean = true;\n\n  opacity?: number = 20;\n\n  numResults?: number;\n\n  /**\n   * Gets this node's label.\n   */\n  get label(): string {\n    return this.original.label;\n  }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyTreeNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyTreeNode, readonly level: number) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/core/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                homeUrl\n                            \n                            \n                                loggedIn\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:32\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:27\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loginDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:42\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:37\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Portal site\n   */\n  @Input() homeUrl: string;\n\n  @Input() loginDisabled: boolean;\n\n  @Input() logoTooltip: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() readonly refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() readonly downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n  \n  \n  LOGIN\n  LOGOUT\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .home {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 0.125rem;\n    font-weight: 500;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 1rem/1.25rem Inter, sans-serif;\n  }\n\n  .disabled {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  LOGIN  LOGOUT'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HeaderModule_declarations\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer\n  ) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getArguments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:134\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMethodName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:114\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:74\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerIconImpl\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:84\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer\n  ) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deferred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Promise(resolve => {\n    this.resolve = resolve;\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                        \n                    \n\n            \n                \n                    Promise used to await on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether this state is true or false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:41\n                        \n                    \n\n            \n                \n                    Resolve function for the promise.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:46\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueOf\n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:65\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:56\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state('open, open-instant', style({\n        transform: 'none'\n      })),\n      state('closed', style({})),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-opened') // eslint-disable-line\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-expanded') // eslint-disable-line\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // eslint-disable-line\n  get expandedStateObj(): unknown {\n    return {\n      value: this.expandedState2, params: {\n        width: this.width, margin: this.measuredMargin,\n        margin2: this.margin2\n      }\n    };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(\n    messageService: MessageService,\n    cdr: ChangeDetectorRef,\n    private readonly element: ElementRef\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // eslint-disable-line\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // eslint-disable-line\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled': {\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/list-result.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rank\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                                \n                                        \n                                            tissueBlock\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueBlock\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissueBlock:     TissueBlockResult\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TissueBlockResult\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TissueBlockResult } from 'ccf-database';\n\nexport interface ListResult {\n  selected: boolean;\n  color?: string;\n  tissueBlock: TissueBlockResult;\n  rank?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListResultsState.html":{"url":"injectables/ListResultsState.html","title":"injectable - ListResultsState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListResultsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorAssignments\n                            \n                            \n                                    Private\n                                dataState\n                            \n                            \n                                    Readonly\n                                highlightedNodeId$\n                            \n                            \n                                    Readonly\n                                listResults$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deselectListResult\n                            \n                            \n                                highlightNode\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                selectListResult\n                            \n                            \n                                setListResults\n                            \n                            \n                                unHighlightNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataSourceService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deselectListResult\n                        \n                    \n                \n            \n            \n                \ndeselectListResult(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightNode\n                        \n                    \n                \n            \n            \n                \nhighlightNode(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:81\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectListResult\n                        \n                    \n                \n            \n            \n                \nselectListResult(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setListResults\n                        \n                    \n                \n            \n            \n                \nsetListResults(listResults: ListResult[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:58\n                \n            \n\n\n            \n                \n                    Sets the list results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    listResults\n                                    \n                                                ListResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The list of results to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unHighlightNode\n                        \n                    \n                \n            \n            \n                \nunHighlightNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorAssignments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorAssignmentState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:38\n                        \n                    \n\n            \n                \n                    Color assignments state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:35\n                        \n                    \n\n            \n                \n                    The data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedNodeId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        listResults$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('listResults'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:30\n                        \n                    \n\n            \n                \n                    Scene to display in the 3d Scene\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, tap } from 'rxjs/operators';\n\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State({\n  name: 'listResults',\n  defaults: {\n    listResults: []\n  }\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(pluck('listResults'), distinctUntilChanged());\n  readonly highlightedNodeId$ = this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged());\n\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([\n      this.dataState.tissueBlockData$,\n      this.colorAssignments.colorAssignments$\n    ]).pipe(\n      map(([tissueBlocks, colors]) => {\n        const topBlocks: ListResult[] = [];\n        const otherBlocks: ListResult[] = [];\n\n        for (const tissueBlock of tissueBlocks) {\n          const color = colors[tissueBlock.spatialEntityId];\n          if (color) {\n            topBlocks.push({\n              selected: true, color: color.color, tissueBlock, rank: color.rank\n            });\n          } else {\n            otherBlocks.push({\n              selected: false, tissueBlock\n            });\n          }\n        }\n\n        return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n      }),\n      tap(results => this.setListResults(results))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResultsStateModel.html":{"url":"interfaces/ListResultsStateModel.html","title":"interface - ListResultsStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListResultsStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            highlightedNodeId\n                                        \n                                \n                                \n                                        \n                                            listResults\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedNodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightedNodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listResults\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listResults:         ListResult[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListResult[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, tap } from 'rxjs/operators';\n\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State({\n  name: 'listResults',\n  defaults: {\n    listResults: []\n  }\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(pluck('listResults'), distinctUntilChanged());\n  readonly highlightedNodeId$ = this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged());\n\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([\n      this.dataState.tissueBlockData$,\n      this.colorAssignments.colorAssignments$\n    ]).pipe(\n      map(([tissueBlocks, colors]) => {\n        const topBlocks: ListResult[] = [];\n        const otherBlocks: ListResult[] = [];\n\n        for (const tissueBlock of tissueBlocks) {\n          const color = colors[tissueBlock.spatialEntityId];\n          if (color) {\n            topBlocks.push({\n              selected: true, color: color.color, tissueBlock, rank: color.rank\n            });\n          } else {\n            otherBlocks.push({\n              selected: false, tissueBlock\n            });\n          }\n        }\n\n        return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n      }),\n      tap(results => this.setListResults(results))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:50\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:50\n                        \n                    \n\n            \n                \n                    Counter used to give each message a unique id.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:83\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:93\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:103\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        nextMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:112\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:70\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:163\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:153\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                        \n                    \n\n            \n                \n                    The message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:130\n                        \n                    \n\n            \n                \n                    The message listener.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholderText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:29\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyTreeNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFormatter\n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:78\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:60\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:107\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBySynonymResult\n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:88\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortLexically\n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoCompleteOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:40\n                        \n                    \n\n            \n                \n                    Determines if autocomplete is open or close.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:45\n                        \n                    \n\n            \n                \n                    Observable which provides the filtered search results\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:34\n                        \n                    \n\n            \n                \n                    Instance of FormControl - tracks the value and validation status of an individual form control\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ontologyService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologySearchService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:53\n                        \n                    \n\n            \n                \n                    instance of searchService which provides all the search functionality\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { OntologyTreeNode } from 'ccf-database';\nimport { get, sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologySearchComponent implements OnInit {\n  @Input() placeholderText: string;\n\n  /**\n   * Output event-emitter which emits the id of the OntologyTreeNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() readonly selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   *\n   * @param ontologyService instance of searchService which provides all the search functionality\n   * @param ga Analytics service\n   */\n  constructor(public ontologyService: OntologySearchService, private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   *\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   *\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   *\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   *\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyTreeNode;\n    if (node) {\n      this.ga.event('search', 'ontology_search', node.id);\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    search\n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 100%;\n\n  .field {\n    width: 100%;\n    \n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 0.25rem 0.25rem 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n      \n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n          \n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-prefix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 0.25rem 0 0 0.25rem;\n      min-width: 2.5rem;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 0.125rem solid;\n  border-top: none;\n  border-radius: 0 0 0.25rem 0.25rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 23.75rem;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 23.75rem;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 0.25rem 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 0.25rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      search                                {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                            \n                                    Private\n                                treeModel\n                            \n                            \n                                    Private\n                                    Readonly\n                                treeModel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                    Private\n                                lookup\n                            \n                            \n                                setTreeModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:50\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:111\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyTreeNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyTreeNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildren\n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyTreeNode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:128\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OntologyTreeNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIndexOfMatch\n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:100\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        lookup\n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:63\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTreeModel\n                        \n                    \n                \n            \n            \n                \nsetTreeModel(treeModel: OntologyTreeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treeModel\n                                    \n                                            OntologyTreeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        nodes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.treeModel$.pipe(map(state => Object.values(state.nodes)))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:34\n                        \n                    \n\n            \n                \n                    All nodes in the ontology tree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        rootNode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.treeModel$.pipe(map(state => state.nodes[state.root]))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:37\n                        \n                    \n\n            \n                \n                    Root node of the ontology tree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        treeModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OntologyTreeModel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        treeModel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject(1);\n  private treeModel: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map(state => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyTreeNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-selection.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     OntologyTreeNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OntologyTreeNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyTreeNode } from 'ccf-database';\n\nexport interface OntologySelection {\n  location: OntologyTreeNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                OntologySearchService\n                \n            \n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                header\n                            \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                placeholderText\n                            \n                            \n                                termData\n                            \n                            \n                                treeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        treeModel\n                    \n                \n                \n                    \n                        Type :     OntologyTreeModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:38\n                            \n                        \n                \n                    \n                        The ontology tree model to display\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyTreeNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:75\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ontologySearchService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologySearchService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                        \n                    \n\n            \n                \n                    Service for searching the ontology.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologyTreeComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(OntologyTreeComponent, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                        \n                    \n\n            \n                \n                    View child of search component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\n\nimport { OntologySelection } from '../../../core/models/ontology-selection';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss'],\n  providers: [OntologySearchService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologySelectionComponent implements OnChanges {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * The ontology tree model to display\n   */\n  @Input() treeModel: OntologyTreeModel;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  @Input() header: boolean;\n  @Input() placeholderText: string;\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() readonly ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   *\n   * @param ontologySearchService Service for searching the ontology.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('treeModel' in changes && this.treeModel) {\n      this.ontologySearchService.setTreeModel(this.treeModel);\n    }\n  }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   *\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyTreeNode): void {\n    const nodes = this.treeModel?.nodes ?? {};\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_OntologySelectionComponent_providers\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchService\n\nOntologySearchService\n\nOntologySelectionComponent -->\n\nOntologySearchService->OntologySelectionComponent\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\nimport { OpacitySliderModule } from 'ccf-shared';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OpacitySliderModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleHover\n                            \n                            \n                                handleLinkClick\n                            \n                            \n                                handleSelection\n                            \n                            \n                                handleUnhover\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                header\n                            \n                            \n                                highlighted\n                            \n                            \n                                listResults\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemHovered\n                            \n                            \n                                itemUnhovered\n                            \n                            \n                                linkClicked\n                            \n                            \n                                listResultDeselected\n                            \n                            \n                                listResultSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:64\n                            \n                        \n\n                \n                    \n                            Creates an instance of results browser component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :     Immutable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:29\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlighted\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResults\n                    \n                \n                \n                    \n                        Type :         Immutable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:24\n                            \n                        \n                \n                    \n                        Input array of List Results to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:34\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemUnhovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        linkClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:44\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResultDeselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:54\n                            \n                        \n                \n                    \n                        Output emitting the link result deselected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResultSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:49\n                            \n                        \n                \n                    \n                        Output emitting the link result selected\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleHover\n                        \n                    \n                \n            \n            \n                \nhandleHover(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleLinkClick\n                        \n                    \n                \n            \n            \n                \nhandleLinkClick(link: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:93\n                \n            \n\n\n            \n                \n                    Notifies on link click\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the link clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSelection\n                        \n                    \n                \n            \n            \n                \nhandleSelection(result: Immutable, selected: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:79\n                \n            \n\n\n            \n                \n                    Notifies listeners when a selection/deselection is made\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the list result\n\n                                    \n                                \n                                \n                                    selected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether to select or deselect the result\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUnhover\n                        \n                    \n                \n            \n            \n                \nhandleUnhover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onScroll\n                        \n                    \n                \n            \n            \n                \nonScroll(event: UIEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:102\n                \n            \n\n\n            \n                \n                    Handles the scroll event to detect when scroll is at the bottom.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            UIEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scroll event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        atScrollBottom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:64\n                        \n                    \n\n            \n                \n                    Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AggregateResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ListResult } from '../../../core/models/list-result';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResultsBrowserComponent {\n  /**\n   * Input array of List Results to display\n   */\n  @Input() listResults: Immutable;\n\n  /**\n   * Input used to add a list of stats at the top the results browser\n   */\n  @Input() aggregateData: Immutable;\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component\n   */\n  @Input() resultLabel: string;\n\n  @Input() highlighted: string;\n\n  @Input() header: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() readonly linkClicked = new EventEmitter();\n\n  /**\n   * Output emitting the link result selected\n   */\n  @Output() readonly listResultSelected = new EventEmitter>();\n\n  /**\n   * Output emitting the link result deselected\n   */\n  @Output() readonly listResultDeselected = new EventEmitter>();\n\n  @Output() readonly itemHovered = new EventEmitter();\n\n  @Output() readonly itemUnhovered = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Creates an instance of results browser component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Notifies listeners when a selection/deselection is made\n   *\n   * @param result the list result\n   * @param selected whether to select or deselect the result\n   */\n  handleSelection(result: Immutable, selected: boolean): void {\n    this.ga.event('list_result_selected', 'results_browser', this.resultLabel, +selected);\n    if (selected) {\n      this.listResultSelected.next(result);\n    } else {\n      this.listResultDeselected.next(result);\n    }\n  }\n\n  /**\n   * Notifies on link click\n   *\n   * @param link the link clicked\n   */\n  handleLinkClick(link: string): void {\n    this.linkClicked.emit(link);\n  }\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: UIEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 3rem);\n  padding: 0 1.5rem 1.5rem 1.5rem;\n\n  .stat-box {\n    margin-bottom: 1.5rem;\n    line-height: 1.25;\n    min-height: 7.75rem;\n\n    #title {\n      font-size: 1.25rem;\n      margin-bottom: 0.75rem;\n    }\n\n    .stat-row {\n      display: flex;\n      flex-direction: row;\n\n      .stat-value {\n        margin-right: 1rem;\n        width: 5.5rem;\n        text-align: right;\n        font-weight: 600;\n      }\n      .stat-label {\n        font-weight: 300;\n      }\n    }\n  }\n\n  .results-browser-list {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    scrollbar-width: thin;\n    padding-right: .5rem;\n    height: calc(100vh - 20rem);\n\n    &.header-hidden {\n      height: calc(100vh - 16rem);\n    }\n\n    .browser-item-container {\n      width: 100%;\n    }\n  }\n\n  .scroll-gradient {\n    position: absolute;\n    height: 3rem;\n    width: 95%;\n    bottom: 0;\n    pointer-events: none;\n\n\n    &.hidden {\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nResultsBrowserModule -->\n\nDonorCardModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DonorCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserComponent } from './results-browser.component';\nimport { DonorCardModule } from '../donor-card/donor-card.module';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    DonorCardModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorAssignments\n                            \n                            \n                                    Private\n                                dataState\n                            \n                            \n                                    Readonly\n                                highlightedId$\n                            \n                            \n                                    Private\n                                listResults\n                            \n                            \n                                    Readonly\n                                referenceOrgans$\n                            \n                            \n                                    Readonly\n                                scene$\n                            \n                            \n                                    Readonly\n                                selectedReferenceOrgans$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngxsOnInit\n                            \n                            \n                                sceneNodeClicked\n                            \n                            \n                                sceneNodeHovered\n                            \n                            \n                                sceneNodeUnhover\n                            \n                            \n                                setReferenceOrgans\n                            \n                            \n                                setScene\n                            \n                            \n                                setSelectedReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataSourceService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:65\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:136\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeClicked\n                        \n                    \n                \n            \n            \n                \nsceneNodeClicked(undefined: NodeClickEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:114\n                \n            \n\n\n            \n                \n                    Handle scene node clicks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            NodeClickEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeHovered\n                        \n                    \n                \n            \n            \n                \nsceneNodeHovered(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeUnhover\n                        \n                    \n                \n            \n            \n                \nsceneNodeUnhover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReferenceOrgans\n                        \n                    \n                \n            \n            \n                \nsetReferenceOrgans(referenceOrgans: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:95\n                \n            \n\n\n            \n                \n                    Sets the reference organs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    referenceOrgans\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reference organs available\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScene\n                        \n                    \n                \n            \n            \n                \nsetScene(scene: SpatialSceneNode[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:105\n                \n            \n\n\n            \n                \n                    Sets the scene\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active scene to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedReferenceOrgans\n                        \n                    \n                \n            \n            \n                \nsetSelectedReferenceOrgans(selectedReferenceOrgans: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:85\n                \n            \n\n\n            \n                \n                    Sets the selected reference organs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedReferenceOrgans\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorAssignments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorAssignmentState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:63\n                        \n                    \n\n            \n                \n                    Color assignments state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:60\n                        \n                    \n\n            \n                \n                    The data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('highlightedId'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListResultsState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        referenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:51\n                        \n                    \n\n            \n                \n                    Available Reference Organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('scene'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:55\n                        \n                    \n\n            \n                \n                    Scene to display in the 3d Scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedReferenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:53\n                        \n                    \n\n            \n                \n                    Selected Reference Organs\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set(['Skin', 'Heart', 'Kidney', 'Spleen']);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {}\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged());\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged());\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(pluck('scene'), distinctUntilChanged());\n\n  readonly highlightedId$ = this.state$.pipe(pluck('highlightedId'), distinctUntilChanged());\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  private listResults: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n      && node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n\n    // Initialize reference organ info\n    this.dataService.getReferenceOrgans().pipe(\n      map(refOrgans => {\n        const organIds = new Set(refOrgans.map(o => o.representation_of));\n        return ALL_POSSIBLE_ORGANS\n          .filter(organ => organIds.has(organ.id))\n          .map(organ => ({ ...organ, disabled: false, numResults: 0 }));\n      }),\n      take(1),\n      tap(organs => {\n        this.setReferenceOrgans(organs);\n        this.setSelectedReferenceOrgans(organs.filter(organ => DEFAULT_SELECTED_ORGANS.has(organ.organ)));\n      })\n    ).subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$\n    ]).pipe(\n      map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n        const activeOrgans = new Set(selectedOrgans.map(o => o.id));\n        const refOrgans = new Set(refOrganData.filter(o => activeOrgans.has(o.representation_of)).map(o => o['@id']));\n        return scene.filter(node =>\n          (node.ccf_annotations?.some?.(tag => activeOrgans.has(tag))) ||\n          (node.reference_organ && refOrgans.has(node.reference_organ))\n        ).map((node): SpatialSceneNode =>\n          node.entityId && (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id']) ?\n            ({\n              ...node,\n              color: highlightedNodeId === node['@id'] ?\n                [30, 136, 229, 255] :\n                colors[node['@id']].rgba as [number, number, number, number]\n            }) : node\n        );\n      }),\n      tap(scene => this.setScene(scene))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructureSettings\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            highlightedId\n                                        \n                                \n                                \n                                        \n                                            referenceOrgans\n                                        \n                                \n                                \n                                        \n                                            scene\n                                        \n                                \n                                \n                                        \n                                            selectedAnatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            selectedReferenceOrgans\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructureSettings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructureSettings:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referenceOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referenceOrgans:     OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scene\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scene:     SpatialSceneNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialSceneNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedAnatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedAnatomicalStructures:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedReferenceOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedReferenceOrgans:     OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set(['Skin', 'Heart', 'Kidney', 'Spleen']);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {}\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged());\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged());\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(pluck('scene'), distinctUntilChanged());\n\n  readonly highlightedId$ = this.state$.pipe(pluck('highlightedId'), distinctUntilChanged());\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  private listResults: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n      && node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n\n    // Initialize reference organ info\n    this.dataService.getReferenceOrgans().pipe(\n      map(refOrgans => {\n        const organIds = new Set(refOrgans.map(o => o.representation_of));\n        return ALL_POSSIBLE_ORGANS\n          .filter(organ => organIds.has(organ.id))\n          .map(organ => ({ ...organ, disabled: false, numResults: 0 }));\n      }),\n      take(1),\n      tap(organs => {\n        this.setReferenceOrgans(organs);\n        this.setSelectedReferenceOrgans(organs.filter(organ => DEFAULT_SELECTED_ORGANS.has(organ.organ)));\n      })\n    ).subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$\n    ]).pipe(\n      map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n        const activeOrgans = new Set(selectedOrgans.map(o => o.id));\n        const refOrgans = new Set(refOrganData.filter(o => activeOrgans.has(o.representation_of)).map(o => o['@id']));\n        return scene.filter(node =>\n          (node.ccf_annotations?.some?.(tag => activeOrgans.has(tag))) ||\n          (node.reference_organ && refOrgans.has(node.reference_organ))\n        ).map((node): SpatialSceneNode =>\n          node.entityId && (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id']) ?\n            ({\n              ...node,\n              color: highlightedNodeId === node['@id'] ?\n                [30, 136, 229, 255] :\n                colors[node['@id']].rgba as [number, number, number, number]\n            }) : node\n        );\n      }),\n      tap(scene => this.setScene(scene))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayLabel\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     OntologyTreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OntologyTreeNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyTreeNode, provides data associated with a search result\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject(1);\n  private treeModel: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map(state => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyTreeNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spinner-overlay\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spinner-overlay'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spinner-overlay'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 99;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../../../environments/environment';\nimport { ColorAssignmentState } from './color-assignment/color-assignment.state';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ListResultsState } from './list-results/list-results.state';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { SceneState } from './scene/scene.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                element\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyThemeClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:83\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:39\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:21\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:71\n                \n            \n\n\n            \n                \n                    Binds theming service to a component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            ElementRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:60\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:48\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:16\n                        \n                    \n\n            \n                \n                    Default theme class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:18\n                        \n                    \n\n            \n                \n                    Currently active theme class.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, ElementRef, Inject, Injector, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element: ElementRef;\n  private injector: Injector;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailCarouselComponent.html":{"url":"components/ThumbnailCarouselComponent.html","title":"component - ThumbnailCarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThumbnailCarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n\n\n\n    \n        Description\n    \n    \n        Carousel containing sample thumbnails in expanded donor cards\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-thumbnail-carousel\n            \n\n            \n                styleUrls\n                ./thumbnail-carousel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail-carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Readonly\n                                config\n                            \n                            \n                                    Readonly\n                                navigation\n                            \n                            \n                                    Readonly\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                linkClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    prevButtonId\n                                \n                                \n                                    nextButtonId\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     DatasetResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:34\n                            \n                        \n                \n                    \n                        Items to show in the carousel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        linkClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:39\n                            \n                        \n                \n                    \n                        Outputs the result whose link was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-thumbnail-carousel\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-thumbnail-carousel'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:29\n                        \n                    \n\n            \n                \n                    Primary css class selector\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n            \n                \nitemId(_index: number, item: DatasetResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:89\n                \n            \n\n\n            \n                \n                    Extract a unique identifier for an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                            DatasetResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        An unique identifier\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-thumbnail-carousel'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:29\n                        \n                    \n\n            \n                \n                    Primary css class selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SwiperOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:63\n                        \n                    \n\n            \n                \n                    Swiper configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        navigation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NavigationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:75\n                        \n                    \n\n            \n                \n                    Navigation configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : nextUid()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:44\n                        \n                    \n\n            \n                \n                    Per instance unique identifier\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        prevButtonId\n                    \n                \n\n                \n                    \n                        getprevButtonId()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:49\n                                \n                            \n                    \n                        \n                                HTML id for previous slide button\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextButtonId\n                    \n                \n\n                \n                    \n                        getnextButtonId()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:56\n                                \n                            \n                    \n                        \n                                HTML id for next slide button\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { DatasetResult } from 'ccf-database';\nimport { SwiperOptions } from 'swiper';\nimport { NavigationOptions } from 'swiper/types';\n\n// Returns a unique identifier\nconst nextUid = (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})();\n\n\n/**\n * Carousel containing sample thumbnails in expanded donor cards\n */\n@Component({\n  selector: 'ccf-thumbnail-carousel',\n  templateUrl: './thumbnail-carousel.component.html',\n  styleUrls: ['./thumbnail-carousel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThumbnailCarouselComponent {\n  /**\n   * Primary css class selector\n   */\n  @HostBinding('class') readonly className = 'ccf-thumbnail-carousel';\n\n  /**\n   * Items to show in the carousel\n   */\n  @Input() data: DatasetResult[];\n\n  /**\n   * Outputs the result whose link was clicked\n   */\n  @Output() readonly linkClicked = new EventEmitter();\n\n  /**\n   * Per instance unique identifier\n   */\n  readonly uid = nextUid();\n\n  /**\n   * HTML id for previous slide button\n   */\n  get prevButtonId(): string {\n    return `ccf-thumbnail-carousel-prev-button-${this.uid}`;\n  }\n\n  /**\n   * HTML id for next slide button\n   */\n  get nextButtonId(): string {\n    return `ccf-thumbnail-carousel-next-button-${this.uid}`;\n  }\n\n  /**\n   * Swiper configuration\n   */\n  readonly config: SwiperOptions = {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true\n  };\n\n  /**\n   * Navigation configuration\n   */\n  readonly navigation: NavigationOptions = {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId\n  };\n\n  /**\n   * Extract a unique identifier for an item\n   *\n   * @param _index Unused\n   * @param item The item\n   * @returns An unique identifier\n   */\n  itemId(_index: number, item: DatasetResult): string {\n    return item.thumbnail;\n  }\n}\n\n    \n\n    \n        \n  \n    navigate_before\n  \n\n\n\n  \n    \n      \n        \n          {{ item.technology }}\n        \n        \n          DATA\n          open_in_new\n        \n      \n    \n  \n\n\n\n  \n    \n    \n\n    navigate_next\n  \n\n\n    \n\n    \n                \n                    ./thumbnail-carousel.component.scss\n                \n                :host {\n  display: flex;\n\n  .swiper {\n    flex-grow: 1;\n    padding-bottom: 0.3125rem;\n\n    ::ng-deep .swiper-slide {\n      width: 3.75rem;\n      height: 2.8125rem;\n    }\n  }\n\n  .prev, .next {\n    display: flex;\n    align-items: center;\n\n    height: 2.8125rem;\n\n    button {\n      width: 1.5rem;\n      height: 1.5rem;\n      line-height: 1.5rem;\n    }\n\n    .fade {\n      position: absolute;\n      top: -0.625rem;\n      left: -2rem;\n      z-index: 10;\n\n      width: 2rem;\n      height: 2.8125rem + 0.3125rem;\n\n      opacity: 1;\n      transition: opacity ease-in-out 0.3s;\n\n      pointer-events: none;\n    }\n\n    .swiper-button-disabled, .swiper-button-lock {\n      cursor: default;\n      pointer-events: none;\n\n      .fade {\n        opacity: 0;\n      }\n    }\n  }\n\n  .slide {\n    position: relative;\n    width: 100%;\n    height: 100%;\n\n    .thumbnail {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-size: cover;\n\n      position: relative;\n      width: calc(100% - 2 * 0.125rem);\n      height: calc(100% - 2 * 0.125rem);\n\n      border-style: solid;\n      border-width: 0.125rem;\n      border-radius: 0.25rem;\n\n      background-origin: padding-box;\n      background-clip: padding-box;\n\n      font-size: 0.875rem;\n      font-weight: bold;\n\n      &:after {\n        content: \"\";\n\n        position: absolute;\n        bottom: -0.125rem;\n        left: -0.125rem;\n        width: 0.125rem;\n        height: 0.125rem;\n      }\n    }\n\n    .link {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n\n      opacity: 0;\n      transition: opacity ease-in-out 0.3s;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);\n\n      font-size: 0.75rem;\n      line-height: 0.75rem;\n\n      &,\n      &:link,\n      &:visited,\n      &:hover,\n      &:focus,\n      &:active {\n        cursor: pointer;\n        text-decoration: none;\n      }\n    }\n\n    &:hover .link {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      navigate_before                                {{ item.technology }}                          DATA          open_in_new                                  navigate_next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailCarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThumbnailCarouselModule.html":{"url":"modules/ThumbnailCarouselModule.html","title":"module - ThumbnailCarouselModule","body":"\n                   \n\n\n\n\n    Modules\n    ThumbnailCarouselModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThumbnailCarouselModule\n\n\n\ncluster_ThumbnailCarouselModule_declarations\n\n\n\ncluster_ThumbnailCarouselModule_exports\n\n\n\n\nThumbnailCarouselComponent\n\nThumbnailCarouselComponent\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule -->\n\nThumbnailCarouselComponent->ThumbnailCarouselModule\n\n\n\n\n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent  -->\n\nThumbnailCarouselModule->ThumbnailCarouselComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ThumbnailCarouselComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ThumbnailCarouselComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SwiperModule } from 'swiper/angular';\nimport { Navigation, Swiper } from 'swiper/core';\n\nimport { ThumbnailCarouselComponent } from './thumbnail-carousel.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n\n    SwiperModule\n  ],\n  declarations: [ThumbnailCarouselComponent],\n  exports: [ThumbnailCarouselComponent]\n})\nexport class ThumbnailCarouselModule {\n  constructor() {\n    // Install swiper modules\n    Swiper.use([Navigation]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissueSectionVisComponent.html":{"url":"components/TissueSectionVisComponent.html","title":"component - TissueSectionVisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TissueSectionVisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissue-section-vis\n            \n\n            \n                styleUrls\n                ./tissue-section-vis.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissue-section-vis.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tissueSectionExists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tissueSections\n                            \n                            \n                                totalTissueSections\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tissueSections\n                    \n                \n                \n                    \n                        Type :     TissueSectionResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:18\n                            \n                        \n                \n                    \n                        Tissue section data, used to determine which tissues to color on the graph\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalTissueSections\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:15\n                            \n                        \n                \n                    \n                        The total numebr of tissue sections, used for end label\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tissue-section-vis\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tissue-section-vis'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        tissueSectionExists\n                        \n                    \n                \n            \n            \n                \ntissueSectionExists(sectionNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:21\n                \n            \n\n\n            \n                \n                    Returns whether or not the given section number exists in the tissueSection array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectionNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tissue-section-vis'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { TissueSectionResult } from 'ccf-database';\n\n@Component({\n  selector: 'ccf-tissue-section-vis',\n  templateUrl: './tissue-section-vis.component.html',\n  styleUrls: ['./tissue-section-vis.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TissueSectionVisComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-tissue-section-vis';\n\n  /** The total numebr of tissue sections, used for end label */\n  @Input() totalTissueSections!: number;\n\n  /** Tissue section data, used to determine which tissues to color on the graph */\n  @Input() tissueSections!: TissueSectionResult[];\n\n  /** Returns whether or not the given section number exists in the tissueSection array */\n  tissueSectionExists(sectionNumber: number): boolean {\n    if (this.tissueSections.filter(section => section.sectionNumber === sectionNumber).length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n    \n\n    \n        0\n\n  \n  \n\n{{ totalTissueSections }}\n    \n\n    \n                \n                    ./tissue-section-vis.component.scss\n                \n                :host {\n  width: 100%;\n  height: 2.5rem;\n  padding: .5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  display: flex;\n\n  .container {\n    margin-right: .5rem;\n    margin-left: .5rem;\n    flex-grow: 1;\n    display: flex;\n    position: relative;\n    justify-content: space-evenly;\n\n    .line-tick {\n      height: 100%;\n      width: 1px;\n      z-index: 2;\n    }\n\n    .x-axis {\n      width: 100%;\n      height: 2px;\n      position: absolute;\n      top: calc(50% - 1px);\n      right: 0;\n      z-index: 1;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '0    {{ totalTissueSections }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissueSectionVisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissueSectionVisModule.html":{"url":"modules/TissueSectionVisModule.html","title":"module - TissueSectionVisModule","body":"\n                   \n\n\n\n\n    Modules\n    TissueSectionVisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TissueSectionVisModule\n\n\n\ncluster_TissueSectionVisModule_declarations\n\n\n\ncluster_TissueSectionVisModule_exports\n\n\n\n\nTissueSectionVisComponent\n\nTissueSectionVisComponent\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nTissueSectionVisModule -->\n\nTissueSectionVisComponent->TissueSectionVisModule\n\n\n\n\n\nTissueSectionVisComponent \n\nTissueSectionVisComponent \n\nTissueSectionVisComponent  -->\n\nTissueSectionVisModule->TissueSectionVisComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissueSectionVisComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TissueSectionVisComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TissueSectionVisComponent } from './tissue-section-vis.component';\n\n\n\n@NgModule({\n  declarations: [TissueSectionVisComponent],\n  imports: [CommonModule],\n  exports: [TissueSectionVisComponent]\n})\nexport class TissueSectionVisModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:85\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:65\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:75\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:97\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:40\n                        \n                    \n\n            \n                \n                    Whether the owning drawer is opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                        \n                    \n\n            \n                \n                    Position of the owning side drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:27\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      ([expand, collapse] = [collapse, expand]);\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: 0.6s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n    transition: all 0.5s;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Viewer for tissue samples\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                loading\n                            \n                            \n                                safeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:21\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-viewer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-viewer'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeResourceUrl | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:29\n                        \n                    \n\n            \n                \n                    Sanitized url\nNOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output, SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n\n/**\n * Viewer for tissue samples\n */\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements OnChanges {\n  @HostBinding('class') className = 'ccf-viewer';\n\n  @Input() url = '';\n\n  @Output() readonly closed = new EventEmitter();\n\n  loading = true;\n\n  /**\n   * Sanitized url\n   * NOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n   */\n  safeUrl: SafeResourceUrl | null = null;\n\n  constructor(private readonly sanitizer: DomSanitizer) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('url' in changes) {\n      this.updateUrl();\n    }\n  }\n\n  private updateUrl(): void {\n    const { sanitizer, url } = this;\n    this.safeUrl = null;\n    if (url) {\n      this.safeUrl = sanitizer.bypassSecurityTrustResourceUrl(url);\n      this.loading = true;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    launch\n    Open in Portal\n  \n  \n    clear\n  \n\n\n\n  \n  Loading External Site\n\n\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  display: block;\n\n  .toolbar {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    width: 100%;\n    height: 1.5rem;\n\n    .launch {\n      margin-right: 3.5rem;\n\n      &.mat-button-disabled {\n        cursor: not-allowed;\n      }\n\n      .icon {\n        margin-right: 0.25rem;\n      }\n    }\n\n    .close {\n      min-width: 0;\n      padding: 0;\n      line-height: 1.5rem;\n      border-radius: 0;\n    }\n  }\n\n  .overlay {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    top: 1.5rem;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    .spinner {\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  .frame {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      launch    Open in Portal        clear      Loading External Site'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_exports\n\n\n\ncluster_ViewerModule_declarations\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/viewer/viewer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerDataSourceService.html":{"url":"injectables/WorkerDataSourceService.html","title":"injectable - WorkerDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    WorkerCCFDatabaseDataSourceService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createWorker\n                            \n                            \n                                    Private\n                                getWorkerUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, locator: LocationStrategy)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locator\n                                                  \n                                                        \n                                                                        LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(_config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getWorkerUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWorkerUrl(directImport: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directImport\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | URL\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LocationStrategy } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { CCFDatabaseOptions } from 'ccf-database';\nimport { GlobalConfigState, WorkerCCFDatabaseDataSourceService } from 'ccf-shared';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkerDataSourceService extends WorkerCCFDatabaseDataSourceService {\n  constructor(\n    globalConfig: GlobalConfigState,\n    private readonly locator: LocationStrategy\n  ) {\n    super(globalConfig);\n  }\n\n  protected createWorker(_config: CCFDatabaseOptions): Worker {\n    const url = this.getWorkerUrl(true);\n    return new Worker(url, { type: 'module' });\n  }\n\n  private getWorkerUrl(directImport: boolean): string | URL {\n    if (directImport) {\n      return new URL('./data-source.worker', import.meta.url);\n    }\n\n    const externalUrl = this.locator.prepareExternalUrl('0-es2015.worker.js');\n    const codeBlob = new Blob(\n      [`importScripts('${externalUrl}')`],\n      { type: 'application/javascript' }\n    );\n\n    return URL.createObjectURL(codeBlob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-eui/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app-web-component.component.ts\n            \n            function\n            parseDataSources\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                46 %\n                (14/30)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app.component.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/flat-node.ts\n            \n            class\n            FlatNode\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/list-result.ts\n            \n            interface\n            ListResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/ontology-selection.ts\n            \n            interface\n            OntologySelection\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts\n            \n            injectable\n            AppRootOverlayContainer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n            \n            injectable\n            DelegateDataSourceService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n            \n            interface\n            DelegateDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.worker.ts\n            \n            variable\n            database\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts\n            \n            injectable\n            WorkerDataSourceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n            \n            injectable\n            OntologySearchService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n            \n            interface\n            SearchResult\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n            \n            injectable\n            ThemingService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            injectable\n            ColorAssignmentState\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            interface\n            Color\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            interface\n            ColorAssignmentStateModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            variable\n            DEFAULT_COLOR_PALETTE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            injectable\n            DataState\n            \n                92 %\n                (36/39)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            interface\n            DataStateModel\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            allCompleted\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            queryData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            sendCompletedTo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            variable\n            DEFAULT_FILTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n            \n            interface\n            DefaultIconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n            \n            variable\n            DEFAULT_ICONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            injectable\n            IconRegistryState\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n            \n            injectable\n            ListResultsState\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n            \n            interface\n            ListResultsStateModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            injectable\n            SceneState\n            \n                75 %\n                (12/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            SceneStateModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            variable\n            DEFAULT_SELECTED_ORGANS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n            \n            component\n            FiltersContentComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n            \n            component\n            FiltersPopoverComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n            \n            component\n            OntologySearchComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n            \n            component\n            OntologySelectionComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            component\n            OntologyTreeComponent\n            \n                86 %\n                (32/37)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            getLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            isExpandable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts\n            \n            component\n            DonorCardComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n            \n            component\n            ResultsBrowserComponent\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts\n            \n            component\n            TissueSectionVisComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n            \n            function\n            throwDuplicateDrawersError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            class\n            InitializationState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            variable\n            EXPAND_COLLAPSE_PARAMS_DEFAULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            ContentContainerChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerContainersChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerInitialized\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerToggled\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            variable\n            MessageService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n            \n            component\n            ToggleButtonComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n            \n            component\n            DualSliderComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n            \n            component\n            SpinnerOverlayComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n            \n            component\n            ThumbnailCarouselComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n            \n            variable\n            nextUid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts\n            \n            component\n            ViewerComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            class\n            MessageChannel\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            MessageServiceConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.5.7\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.7\n        \n            @math.gl/core : ^3.5.5\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.1\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : ^5.1.1\n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^10.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^6.0.0\n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (projects/.../data.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries.\n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            allCompleted   (projects/.../data.state.ts)\n                        \n                        \n                            parseDataSources   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            queryData   (projects/.../data.state.ts)\n                        \n                        \n                            sendCompletedTo   (projects/.../data.state.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (projects/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allCompleted\n                        \n                    \n                \n            \n            \n                \nallCompleted(states)\n                \n            \n\n\n\n\n            \n                \n                    Helper for testing that all states in an array are DataQueryState.Completed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    states\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of states to test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if all values in the array is Completed.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryData\n                        \n                    \n                \n            \n            \n                \nqueryData(query, next?)\n                \n            \n\n\n\n\n            \n                \n                    Helper operator that combines querying with sharing and replay functionality.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data query function.\n\n                                    \n                                \n                                \n                                    next\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional listener on the values emitted by the latest query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction>\n\n                    \n                    \n                        The combined pipe operator function.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendCompletedTo\n                        \n                    \n                \n            \n            \n                \nsendCompletedTo(subject)\n                \n            \n\n\n\n\n            \n                \n                    Helper creating a function that sends a DataQueryState.Completed to\na subject whenever it is called.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subject\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The subject to send completed messagess to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        The function.\n\n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseDataSources\n                        \n                    \n                \n            \n            \n                \nparseDataSources(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                    Helper function for creating drawer errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The position of the drawer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DonorCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThumbnailCarouselModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissueSectionVisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DonorCardModule\n\n\n\ncluster_DonorCardModule_declarations\n\n\n\ncluster_DonorCardModule_imports\n\n\n\ncluster_DonorCardModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_OntologySelectionComponent_providers\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ThumbnailCarouselModule\n\n\n\ncluster_ThumbnailCarouselModule_declarations\n\n\n\ncluster_ThumbnailCarouselModule_exports\n\n\n\ncluster_TissueSectionVisModule\n\n\n\ncluster_TissueSectionVisModule_declarations\n\n\n\ncluster_TissueSectionVisModule_exports\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nAppModule -->\n\nViewerModule->AppModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDonorCardComponent\n\nDonorCardComponent\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nDonorCardModule -->\n\nDonorCardComponent->DonorCardModule\n\n\n\nResultsBrowserModule -->\n\nDonorCardModule->ResultsBrowserModule\n\n\n\n\n\nDonorCardComponent \n\nDonorCardComponent \n\nDonorCardComponent  -->\n\nDonorCardModule->DonorCardComponent \n\n\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nDonorCardModule -->\n\nThumbnailCarouselModule->DonorCardModule\n\n\n\n\n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent  -->\n\nThumbnailCarouselModule->ThumbnailCarouselComponent \n\n\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nDonorCardModule -->\n\nTissueSectionVisModule->DonorCardModule\n\n\n\n\n\nTissueSectionVisComponent \n\nTissueSectionVisComponent \n\nTissueSectionVisComponent  -->\n\nTissueSectionVisModule->TissueSectionVisComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySearchService\n\nOntologySearchService\n\nOntologySelectionComponent -->\n\nOntologySearchService->OntologySelectionComponent\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nThumbnailCarouselComponent\n\nThumbnailCarouselComponent\n\nThumbnailCarouselModule -->\n\nThumbnailCarouselComponent->ThumbnailCarouselModule\n\n\n\n\n\nTissueSectionVisComponent\n\nTissueSectionVisComponent\n\nTissueSectionVisModule -->\n\nTissueSectionVisComponent->TissueSectionVisModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        21 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            database   (projects/.../data-source.worker.ts)\n                        \n                        \n                            DEFAULT_COLOR_PALETTE   (projects/.../color-assignment.state.ts)\n                        \n                        \n                            DEFAULT_FILTER   (projects/.../data.state.ts)\n                        \n                        \n                            DEFAULT_ICONS   (projects/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_SELECTED_ORGANS   (projects/.../scene.state.ts)\n                        \n                        \n                            DEFAULT_THEME   (projects/.../theming.service.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (projects/.../drawer.component.ts)\n                        \n                        \n                            getLevel   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            isExpandable   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            nextUid   (projects/.../thumbnail-carousel.component.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/services/data-source/data-source.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CCFDatabase()\n                    \n                \n\n            \n                \n                    Worker thread database.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_COLOR_PALETTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_FILTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Filter\n\n                    \n                \n                \n                    \n                        Default value : {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000']\n}\n                    \n                \n\n            \n                \n                    Default values for filters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SELECTED_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set(['Skin', 'Heart', 'Kidney', 'Spleen'])\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : property('level')\n                    \n                \n\n            \n                \n                    Getter function for 'level' on a flat node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpandable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : property('expandable')\n                    \n                \n\n            \n                \n                    Getter function for 'expandable' on a flat node.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n)\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nextUid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})()\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
