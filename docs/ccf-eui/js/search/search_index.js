var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.184,1,3.028]],["body/modules/AppModule.html",[1,6.294,2,1.318,3,1.74,4,4.034,5,4.034,6,4.034,7,2.438,8,0.012,9,2.355,10,5.272,11,5.272,12,4.954,13,5.272,14,5.272,15,5.272,16,5.272,17,5.272,18,1.912,19,1.403,20,1.164,21,0.129,22,0.159,23,0.129,24,0.115,25,4.613,26,2.179,27,6.09,28,1.975,29,1.164,30,6.817,31,0.997,32,4.613,33,0.997,34,1.316,35,0.323,36,4.147,37,4.034,38,1.236,39,3.368,40,4.034,41,4.822,42,3.141,43,4.613,44,4.034,45,6.09,46,4.385,47,1.912,48,0.267,49,2.919,50,2.043,51,6.09,52,4.034,53,3.653,54,4.822,55,3.653,56,5.326,57,3.897,58,2.408,59,5.326,60,4.034,61,6.09,62,6.09,63,6.09,64,6.09,65,0.798,66,1.596,67,4.447,68,4.613,69,4.613,70,4.613,71,4.034,72,3.141,73,4.613,74,4.613,75,2.408,76,4.613,77,4.613,78,4.447,79,4.613,80,4.613,81,4.034,82,3.141,83,4.034,84,4.613,85,3.368,86,4.613,87,4.613,88,2.952,89,3.141,90,4.613,91,2.522,92,4.447,93,3.653,94,3.141,95,2.952,96,4.034,97,4.034,98,0.159,99,0.129,100,1.65,101,2.522,102,0.851,103,0.824,104,6.09,105,4.613,106,4.034,107,4.613,108,3.141,109,0.006,110,0.009,111,0.006]],["title/interfaces/AppOptions.html",[112,0.628,113,3.284]],["body/interfaces/AppOptions.html",[7,0.882,8,0.012,19,0.882,21,0.081,22,0.1,23,0.081,24,0.055,29,1.105,34,1.436,35,0.3,36,2.983,37,2.536,38,1.072,39,2.117,40,2.536,46,3.558,48,0.168,52,2.536,53,2.296,58,3.072,65,1.093,66,1.004,71,2.536,72,1.974,88,1.855,95,4.741,96,4.618,98,0.1,99,0.081,100,1.037,102,1.497,103,0.783,109,0.004,110,0.006,111,0.009,112,0.439,113,3.469,114,1.004,115,2.536,116,1.801,117,4.618,118,0.552,119,0.641,120,1.282,121,4.252,122,5.003,123,5.884,124,5.003,125,1.633,126,0.773,127,1.346,128,0.971,129,2.649,130,0.868,131,2.983,132,3.831,133,2.296,134,4.381,135,3.199,136,1.15,137,2.649,138,2.983,139,2.9,140,5.28,141,2.536,142,1.855,143,3.454,144,2.117,145,1.004,146,1.585,147,1.585,148,2.9,149,1.15,150,4.381,151,2.9,152,2.9,153,2.9,154,1.855,155,1.855,156,4.524,157,2.536,158,2.983,159,2.803,160,2.9,161,2.296,162,2.395,163,2.536,164,2.887,165,2.9,166,1.753,167,2.117,168,2.515,169,2.536,170,1.291,171,2.536,172,1.556,173,2.9,174,2.296,175,1.449,176,1.485,177,2.9,178,2.296,179,1.417,180,2.9,181,1.753,182,0.911,183,1.004,184,2.9,185,0.971,186,2.9,187,0.971,188,0.971,189,2.9,190,1.514,191,1.712,192,2.9,193,0.803,194,3.831,195,2.983,196,1.105,197,2.431,198,4.66,199,2.536,200,2.9,201,3.379,202,2.9,203,4.182,204,2.9,205,1.467,206,2.649,207,2.296,208,3.217,209,2.9,210,1.376,211,2.117,212,3.217,213,2.287,214,2.649,215,2.9,216,1.712,217,2.9,218,2.9,219,0.827,220,2.9,221,2.9,222,2.9,223,2.296,224,2.9,225,2.9,226,1.453,227,2.9,228,1.514,229,1.855,230,2.803,231,0.911,232,2.9,233,2.9,234,2.9,235,2.9,236,2.3,237,2.536,238,2.9,239,2.9,240,3.595,241,4.182,242,2.9,243,2.9,244,2.9,245,2.117,246,2.9,247,2.9,248,2.9,249,2.296,250,2.9,251,1.291,252,0.803,253,1.644,254,1.749,255,0.755,256,2.536,257,2.296,258,1.664,259,4.381,260,2.9,261,0.803,262,2.296,263,1.753,264,2.9,265,2.9,266,2.9,267,2.9,268,2.9,269,2.9,270,2.9,271,2.9,272,2.9,273,2.9,274,2.9,275,2.9,276,2.9,277,2.9,278,3.856,279,2.9,280,1.855,281,2.9,282,2.9,283,2.9,284,2.9,285,2.9,286,2.9,287,2.536,288,2.9,289,2.9,290,2.9,291,2.117,292,2.9,293,1.449,294,2.9,295,2.9,296,2.9,297,1.664,298,2.536,299,2.9,300,2.649,301,4.381,302,4.381,303,1.738,304,5.28,305,2.9,306,2.9,307,4.381,308,2.536,309,1.801,310,2.9,311,2.9,312,2.9,313,5.28,314,2.117,315,1.585,316,1.801,317,0.627,318,2.022,319,2.941,320,3.469,321,5.811,322,4.182,323,1.954,324,4.381,325,2.9,326,2.296,327,2.9,328,2.9,329,2.9,330,2.9,331,2.9,332,2.9,333,4.381,334,2.9,335,2.9,336,1.852,337,2.9,338,2.9,339,2.9,340,2.536,341,2.9,342,2.536,343,1.753,344,1.753,345,2.9,346,2.117,347,1.974,348,2.9,349,2.9,350,2.296,351,2.536,352,1.974,353,2.296,354,1.39,355,1.974,356,2.017,357,2.515,358,2.9,359,1.237,360,3.831,361,3.831,362,5.28,363,4.381,364,4.381,365,6.644,366,4.381,367,6.644,368,5.884,369,2.9,370,2.9,371,0.94,372,1.855,373,1.94,374,2.9,375,4.381,376,1.111,377,2.9,378,4.381,379,2.9,380,2.9,381,2.9,382,2.117,383,2.9,384,2.296,385,2.9,386,2.9,387,2.9,388,4.381,389,1.855,390,2.9,391,2.9,392,2.9,393,2.9,394,1.39,395,2.9,396,1.753,397,2.536,398,2.9,399,2.536,400,2.649,401,2.536,402,2.9,403,2.9]],["title/injectables/AppRootOverlayContainer.html",[36,2.823,404,1.014]],["body/injectables/AppRootOverlayContainer.html",[8,0.012,21,0.149,22,0.182,23,0.149,24,0.151,29,1.681,31,1.701,33,1.574,34,1.737,35,0.251,36,4.536,38,1.727,39,5.867,41,5.768,42,3.611,48,0.307,98,0.182,99,0.149,109,0.007,110,0.009,111,0.007,116,2.739,118,0.554,119,0.975,120,0.918,126,0.725,131,5.471,191,2.362,210,1.665,226,1.219,256,5.826,261,2.304,317,1.146,404,1.63,405,2.65,406,7.027,407,4.637,408,7.284,409,7.284,410,5.319,411,7.641,412,7.641,413,6.662,414,5.303,415,5.303,416,6.662,417,5.303,418,1.297,419,0.948,420,1.146,421,5.303,422,5.303,423,2.899,424,7.284,425,5.303,426,6.662,427,5.303,428,3.207,429,5.303,430,4.199,431,5.303,432,2.441,433,6.662,434,2.769,435,2.769,436,2.65,437,2.261,438,2.899,439,3.393,440,3.393,441,5.303,442,5.303,443,5.303]],["title/components/AppWebComponent.html",[9,1.261,130,0.507]],["body/components/AppWebComponent.html",[7,1.148,8,0.012,9,2.029,21,0.106,22,0.13,23,0.106,24,0.155,31,1.774,35,0.251,38,1.248,48,0.219,65,1.478,66,1.307,89,5.618,95,3.933,98,0.13,99,0.106,103,1.099,109,0.005,110,0.007,111,0.007,116,2.184,118,0.395,119,0.777,120,0.653,121,4.267,122,4.867,124,4.867,125,1.758,126,0.893,127,1.533,128,1.264,129,4.033,130,0.751,138,4.541,154,2.416,155,2.416,170,1.113,172,1.113,176,1.551,179,1.65,182,2.672,187,1.779,188,1.779,196,1.551,216,1.224,219,0.591,226,1.222,231,1.186,249,5.281,254,1.045,255,1.382,263,4.033,394,1.809,418,0.924,419,1.099,420,1.148,444,1.307,445,1.148,446,6.533,447,2.99,448,6.146,449,1.264,450,5.312,451,1.616,452,3.36,453,2.184,454,6.669,455,6.146,456,6.146,457,6.146,458,6.146,459,6.146,460,4.867,461,5.281,462,3.775,463,5.312,464,5.312,465,3.775,466,3.775,467,3.775,468,3.775,469,3.775,470,3.775,471,3.775,472,3.775,473,3.775,474,3.775,475,3.775,476,3.775,477,3.775,478,3.236,479,3.775,480,3.775,481,3.775,482,3.302,483,2.621,484,3.775,485,7.028,486,3.879,487,3.775,488,3.775,489,3.775,490,4.645,491,3.775,492,3.775,493,3.775,494,2.99,495,3.775,496,2.416,497,3.775,498,3.775,499,2.757,500,3.775,501,3.775,502,3.775,503,3.775,504,3.775,505,2.99,506,6.146,507,1.307,508,1.616,509,1.616,510,1.307,511,2.308,512,1.307,513,1.307,514,1.307,515,1.148,516,1.307,517,1.148,518,1.307,519,1.148,520,1.838,521,1.148,522,1.186,523,1.307,524,1.307,525,1.148,526,1.307,527,1.148,528,1.264,529,1.307,530,1.148,531,1.616,532,1.307,533,1.148,534,1.307,535,1.148,536,1.838,537,1.148,538,1.307,539,1.186,540,1.307,541,1.148,542,1.307,543,1.148,544,1.224,545,1.811,546,1.148,547,1.471,548,0.982,549,1.307,550,1.148,551,1.307,552,1.148,553,1.307,554,1.148,555,1.264,556,1.307,557,1.148,558,1.148,559,1.148,560,1.307,561,1.148,562,1.045,563,1.307,564,1.148,565,1.307,566,1.307]],["title/components/CheckboxComponent.html",[130,0.507,515,1.261]],["body/components/CheckboxComponent.html",[7,1.059,8,0.012,9,1.059,21,0.098,22,0.12,23,0.098,24,0.141,29,1.265,31,1.581,33,0.752,34,1.083,35,0.221,38,0.707,48,0.202,65,1.462,98,0.12,99,0.098,101,1.903,102,0.925,103,0.622,109,0.005,110,0.007,111,0.007,118,0.364,120,0.867,125,1.153,126,0.796,127,1.363,128,1.166,130,0.894,158,5.097,170,1.026,172,1.026,176,1.265,179,1.577,182,2.653,183,1.735,185,1.679,187,1.679,188,1.679,193,1.388,196,1.482,197,3.446,205,1.679,213,2.617,216,1.129,219,0.545,228,2.617,229,3.208,231,1.093,251,1.895,252,1.388,253,1.529,255,0.906,300,3.032,309,2.917,316,2.416,317,1.083,323,1.288,350,3.97,354,3.081,371,1.129,372,3.208,382,3.661,418,1.226,419,1.149,420,1.389,444,1.205,445,1.059,449,1.166,451,1.059,453,2.061,478,2.703,507,1.205,508,1.525,509,1.525,510,1.205,511,2.225,512,1.205,513,1.205,514,1.205,515,1.956,516,1.205,517,1.059,518,1.205,519,1.059,520,1.735,521,1.059,522,1.093,523,1.205,524,1.205,525,1.059,526,1.205,527,1.059,528,1.166,529,1.205,530,1.059,531,1.525,532,1.205,533,1.059,534,1.205,535,1.059,536,1.735,537,1.059,538,1.205,539,1.093,540,1.205,541,1.059,542,1.205,543,1.059,544,1.129,545,1.732,546,1.059,547,1.388,548,0.906,549,1.205,550,1.059,551,1.205,552,1.059,553,1.205,554,1.059,555,1.166,556,1.205,557,1.059,558,1.059,559,1.059,560,1.205,561,1.059,562,0.964,563,1.205,564,1.059,565,1.205,566,1.205,567,1.166,568,3.044,569,1.193,570,5.013,571,4.384,572,7.097,573,2.617,574,5.013,575,7.133,576,5.876,577,5.013,578,5.013,579,6.814,580,3.69,581,2.22,582,4.653,583,2.37,584,3.888,585,5.013,586,3.553,587,3.212,588,1.305,589,1.678,590,3.97,591,3.481,592,3.481,593,5.013,594,3.97,595,5.013,596,5.013,597,3.481,598,3.97,599,5.091,600,3.97,601,3.481,602,6.769,603,3.97,604,6.429,605,2.416,606,4.384,607,3.032,608,3.661,609,5.013,610,6.429,611,5.483,612,3.481,613,3.661,614,3.208,615,5.013,616,4.384,617,4.377,618,2.96,619,3.661,620,5.013,621,5.013,622,2.138,623,2.756,624,1.998,625,1.903,626,3.481,627,4.653,628,3.481,629,5.013,630,3.481,631,3.481,632,3.044,633,1.903,634,1.817,635,2.936,636,3.481,637,3.044,638,3.481,639,2.541,640,3.481,641,3.044,642,2.37,643,3.481,644,2.22,645,1.794,646,1.668,647,1.739,648,2.541,649,1.998,650,2.105,651,2.541,652,2.506,653,1.998,654,2.541,655,5.013,656,3.481,657,1.626,658,3.044,659,3.481,660,3.044]],["title/modules/CheckboxModule.html",[0,1.184,661,2.823]],["body/modules/CheckboxModule.html",[2,1.761,3,2.086,8,0.012,18,2.293,19,1.875,20,1.555,21,0.173,22,0.212,23,0.173,24,0.116,26,2.613,28,1.999,35,0.303,47,2.293,48,0.357,98,0.212,99,0.173,109,0.009,110,0.01,111,0.009,515,2.626,623,4.881,661,5.729,662,5.391,663,5.391,664,5.391,665,6.164,666,2.528,667,2.703,668,2.133,669,6.387,670,6.164]],["title/interfaces/Color.html",[112,0.628,303,1.645]],["body/interfaces/Color.html",[8,0.012,21,0.121,22,0.149,23,0.121,24,0.082,34,0.935,35,0.297,48,0.251,98,0.243,99,0.121,102,1.305,103,1.263,109,0.006,110,0.008,111,0.006,112,0.884,114,1.497,116,1.779,118,0.452,119,0.854,126,0.718,127,1.389,145,1.497,147,2.365,149,1.716,175,2.162,191,1.403,214,3.529,219,0.678,226,1.697,236,2.285,261,1.198,303,3.381,336,1.161,359,1.845,373,1.916,376,1.657,404,1.427,419,0.773,589,2.388,671,2.946,672,2.259,673,2.946,674,4.894,675,5.551,676,4.225,677,3.159,678,3.447,679,1.716,680,3.046,681,2.797,682,2.259,683,3.529,684,2.259,685,2.074,686,3.426,687,3.159,688,3.159,689,3.046,690,3.993,691,2.946,692,3.159,693,3.159,694,3.159,695,3.159,696,3.159,697,3.159,698,3.159,699,3.159,700,3.159,701,3.159,702,3.159,703,3.159,704,2.946,705,3.159,706,2.769,707,3.159,708,2.946,709,4.621,710,6.34,711,4.937,712,2.616,713,6.465,714,4.812,715,3.426,716,2.616,717,2.483,718,4.621,719,2.162,720,4.621,721,3.426,722,3.426,723,3.426,724,3.426,725,5.228,726,5.228,727,3.426,728,3.426,729,4.621,730,3.426,731,3.426,732,3.426,733,3.426,734,3.426,735,3.426,736,3.426,737,3.426,738,3.426,739,3.973,740,3.426,741,4.621,742,4.621,743,4.621,744,4.621,745,3.529,746,3.426,747,3.426,748,3.426,749,3.426]],["title/injectables/ColorAssignmentState.html",[404,1.014,719,2.072]],["body/injectables/ColorAssignmentState.html",[8,0.012,21,0.11,22,0.134,23,0.11,24,0.145,29,1.372,31,1.634,33,1.353,34,1.175,35,0.29,48,0.226,98,0.233,99,0.11,102,1.493,103,1.21,109,0.005,110,0.008,111,0.005,112,0.824,116,2.236,118,0.408,119,0.796,120,1.083,126,0.681,127,1.433,145,1.351,147,2.135,149,1.549,175,1.951,191,1.764,214,3.289,219,0.852,226,1.636,236,2.343,261,1.733,303,3.315,317,1.538,336,1.048,359,2.319,373,1.729,376,1.496,404,1.33,405,1.951,418,1.531,419,1.21,420,1.538,569,0.793,589,2.033,671,5.25,672,4.026,673,2.659,674,4.572,675,4.57,676,4.554,677,2.851,678,3.715,679,1.549,680,2.84,681,2.607,682,2.039,683,3.785,684,2.039,685,1.871,686,3.092,687,2.851,688,2.851,689,3.268,690,4.303,691,2.659,692,2.851,693,2.851,694,2.851,695,2.851,696,2.851,697,2.851,698,2.851,699,2.851,700,2.851,701,2.851,702,2.851,703,2.851,704,2.659,705,2.851,706,2.499,707,2.851,708,2.659,709,4.307,710,6.202,711,4.927,712,2.361,713,6.452,714,5.148,715,4.307,716,2.361,717,2.241,718,4.307,719,2.718,720,5.835,721,4.307,722,4.307,723,4.307,724,4.307,725,4.956,726,4.956,727,3.092,728,3.092,729,5.36,730,3.092,731,3.092,732,3.092,733,3.092,734,3.092,735,3.092,736,3.092,737,3.092,738,3.092,739,3.703,740,3.092,741,4.307,742,4.307,743,4.307,744,4.307,745,3.289,746,3.092,747,3.092,748,3.092,749,3.092,750,5.439,751,5.439,752,5.439,753,3.905,754,2.157,755,3.905,756,3.905,757,3.905,758,3.905,759,3.905,760,3.905,761,3.905,762,3.905]],["title/interfaces/ColorAssignmentStateModel.html",[112,0.628,708,2.823]],["body/interfaces/ColorAssignmentStateModel.html",[8,0.012,21,0.121,22,0.148,23,0.121,24,0.081,34,0.932,35,0.297,48,0.25,98,0.243,99,0.121,102,1.303,103,1.262,109,0.006,110,0.008,111,0.006,112,0.882,114,1.493,116,1.773,118,0.451,119,0.852,126,0.826,127,1.318,145,1.493,147,2.358,149,1.711,175,2.156,191,1.399,214,3.522,219,0.676,226,1.695,236,2.282,261,1.194,303,3.38,336,1.158,359,1.84,373,1.91,376,1.652,404,1.425,419,0.771,589,2.106,671,2.937,672,2.252,673,2.937,674,4.695,675,4.814,676,4.218,677,3.15,678,3.442,679,1.711,680,3.04,681,2.791,682,2.252,683,3.522,684,2.252,685,2.067,686,3.416,687,3.15,688,3.15,689,3.04,690,3.987,691,2.937,692,3.15,693,3.15,694,3.15,695,3.15,696,3.15,697,3.15,698,3.15,699,3.15,700,3.15,701,3.15,702,3.15,703,3.15,704,2.937,705,3.15,706,2.76,707,3.15,708,3.965,709,5.837,710,6.51,711,5.03,712,3.987,713,6.587,714,4.806,715,3.416,716,2.609,717,2.476,718,4.611,719,2.156,720,4.611,721,3.416,722,3.416,723,3.416,724,3.416,725,5.22,726,5.22,727,3.416,728,3.416,729,4.611,730,3.416,731,3.416,732,3.416,733,3.416,734,3.416,735,3.416,736,3.416,737,3.416,738,3.416,739,3.965,740,3.416,741,4.611,742,4.611,743,4.611,744,4.611,745,3.522,746,3.416,747,3.416,748,3.416,749,3.416,763,4.611]],["title/components/ContainerComponent.html",[130,0.507,517,1.261]],["body/components/ContainerComponent.html",[7,0.9,8,0.012,9,0.9,21,0.083,22,0.102,23,0.083,24,0.149,29,1.122,31,1.691,33,1.501,34,1.284,35,0.252,38,0.6,48,0.171,65,1.452,91,2.431,98,0.102,99,0.188,100,1.591,102,0.986,103,1.062,109,0.004,110,0.006,111,0.006,118,0.465,119,0.651,120,0.769,125,1.367,126,0.81,127,0.529,128,0.99,129,3.594,130,0.924,145,1.023,149,1.173,170,0.872,172,1.752,174,3.521,176,1.689,179,2.134,182,2.609,183,1.539,185,1.489,187,1.489,188,1.489,193,1.231,196,1.348,205,1.489,210,2.181,216,0.959,219,0.837,226,1.367,231,0.929,251,1.311,252,1.231,253,1.547,255,0.769,261,2.279,263,3.594,280,1.892,297,2.552,315,4.071,317,1.155,336,0.794,344,1.788,359,1.896,371,0.959,376,2.047,394,2.131,418,1.088,419,1.062,420,1.155,428,1.788,444,1.023,445,0.9,449,0.99,451,0.9,494,2.342,507,1.023,508,1.938,509,1.353,510,1.023,511,2.057,512,1.023,513,1.023,514,1.023,515,0.9,516,1.023,517,1.808,518,1.023,519,1.808,520,1.539,521,0.9,522,0.929,523,1.023,524,1.023,525,0.9,526,1.023,527,0.9,528,0.99,529,1.023,530,0.9,531,1.353,532,1.023,533,0.9,534,1.023,535,0.9,536,1.539,537,0.9,538,1.023,539,0.929,540,1.023,541,0.9,542,1.023,543,0.9,544,1.733,545,1.575,546,0.9,547,1.231,548,0.769,549,1.023,550,0.9,551,1.023,552,0.9,553,1.023,554,0.9,555,0.99,556,1.023,557,0.9,558,0.9,559,0.9,560,1.023,561,0.9,562,0.819,563,1.023,564,0.9,565,1.023,566,1.023,567,0.99,569,1.085,588,1.157,589,1.27,618,3.082,644,3.494,754,2.357,764,2.342,765,4.232,766,2.79,767,3.889,768,4.446,769,2.938,770,5.343,771,4.446,772,3.054,773,2.921,774,5.343,775,5.343,776,4.729,777,3.521,778,4.706,779,3.103,780,5.943,781,2.321,782,3.028,783,3.494,784,5.343,785,3.889,786,4.446,787,2.047,788,2.934,789,3.103,790,3.247,791,1.828,792,4.446,793,4.446,794,2.755,795,2.957,796,3.889,797,4.446,798,3.247,799,3.028,800,2.957,801,2.534,802,3.889,803,4.446,804,2.957,805,3.028,806,2.957,807,4.446,808,4.446,809,2.46,810,2.957,811,2.845,812,2.222,813,6.945,814,4.446,815,5.943,816,2.957,817,4.047,818,3.889,819,5.943,820,4.446,821,2.957,822,3.028,823,3.889,824,4.446,825,2.957,826,3.638,827,3.247,828,2.957,829,2.957,830,3.889,831,2.957,832,2.957,833,2.957,834,1.478,835,2.957,836,2.586,837,2.586,838,2.159,839,2.342,840,1.788,841,2.586,842,2.717,843,2.586,844,3.521,845,2.957,846,2.586,847,2.957,848,2.586,849,3.067,850,2.921,851,2.342,852,2.957,853,2.957,854,2.957,855,2.957,856,1.892,857,2.342,858,2.586,859,2.159,860,2.957,861,2.957,862,3.889,863,1.788,864,2.321,865,3.889,866,2.957,867,2.957,868,2.013,869,2.957,870,1.697,871,2.957,872,2.957,873,4.446,874,4.446,875,2.957,876,2.957,877,2.957,878,2.957,879,2.957,880,2.957,881,2.957,882,1.544,883,1.697,884,3.028,885,1.697,886,2.957,887,2.586,888,2.586]],["title/components/ContentComponent.html",[130,0.507,519,1.261]],["body/components/ContentComponent.html",[7,0.83,8,0.012,9,0.83,20,0.689,21,0.077,22,0.094,23,0.077,24,0.15,29,1.056,31,1.707,33,1.329,34,1.403,35,0.231,38,0.554,48,0.158,65,1.44,98,0.094,99,0.182,100,1.497,102,0.939,103,1.208,109,0.004,110,0.006,111,0.006,118,0.437,119,0.612,120,0.88,125,1.554,126,0.819,127,0.488,128,0.914,129,3.449,130,0.873,145,0.945,170,0.804,172,1.813,176,1.056,179,2.187,182,2.586,185,1.401,187,1.401,188,1.401,191,2.191,193,1.158,196,1.284,205,2.334,210,2.121,216,0.885,219,0.655,226,1.312,231,0.857,236,1.761,251,1.233,252,1.158,253,1.758,255,0.71,261,2.153,263,3.449,280,1.746,291,1.993,315,3.363,317,1.647,318,2.486,323,2.402,336,1.813,343,1.651,344,1.651,371,0.885,372,2.677,376,1.045,394,1.308,418,1.245,419,1.099,420,1.627,428,1.651,444,0.945,445,0.83,449,0.914,451,1.273,452,1.492,507,0.945,508,1.871,509,1.273,510,0.945,511,1.974,512,0.945,513,0.945,514,0.945,515,0.83,516,0.945,517,0.83,518,0.945,519,1.735,520,1.448,521,0.83,522,0.857,523,0.945,524,0.945,525,0.83,526,0.945,527,0.83,528,0.914,529,0.945,530,0.83,531,1.273,532,0.945,533,0.83,534,0.945,535,0.83,536,1.448,537,0.83,538,0.945,539,0.857,540,0.945,541,0.83,542,0.945,543,0.83,544,1.65,545,1.5,546,0.83,547,1.158,548,0.71,549,0.945,550,0.83,551,0.945,552,0.83,553,0.945,554,0.83,555,0.914,556,0.945,557,0.83,558,0.83,559,0.83,560,0.945,561,0.83,562,0.756,563,0.945,564,0.83,565,0.945,566,0.945,567,0.914,569,1.158,588,1.089,589,2.083,617,1.858,618,2.988,645,2.904,657,2.317,754,2.44,766,2.656,769,2.668,773,2.781,776,4.6,777,3.313,779,2.978,781,2.184,783,3.521,785,3.659,787,1.926,788,2.626,789,2.978,790,3.055,791,1.72,794,2.574,798,3.055,799,2.849,801,1.784,805,2.849,812,2.091,823,3.659,826,3.464,827,3.055,834,1.364,838,1.993,842,2.432,849,3.878,850,3.548,859,1.993,863,1.651,864,1.425,868,1.858,882,1.425,884,1.858,889,2.387,890,4.184,891,6.488,892,2.005,893,4.449,894,5.088,895,6.151,896,5.088,897,5.088,898,5.704,899,4.184,900,4.184,901,4.184,902,5.704,903,5.704,904,5.704,905,4.184,906,2.677,907,4.184,908,4.029,909,4.184,910,4.184,911,3.715,912,4.184,913,4.001,914,4.184,915,3.313,916,2.729,917,3.313,918,3.313,919,2.729,920,2.729,921,4.184,922,3.449,923,2.287,924,4.184,925,4.487,926,2.729,927,4.184,928,2.729,929,2.849,930,3.055,931,4.184,932,5.704,933,2.387,934,3.077,935,2.005,936,2.387,937,2.161,938,2.729,939,2.729,940,1.784,941,2.729,942,2.729,943,2.729,944,2.729,945,2.729,946,2.387,947,2.161,948,2.92,949,4.184,950,2.729,951,4.184,952,2.729,953,1.651,954,1.746,955,2.729,956,2.729,957,2.729,958,5.088,959,2.729,960,2.729,961,4.184,962,2.729,963,2.729,964,4.184,965,2.729,966,2.729,967,2.729,968,1.209,969,1.993,970,2.387,971,1.746,972,2.729,973,2.729,974,2.729,975,1.746]],["title/interfaces/ContentContainerChanged.html",[112,0.628,976,2.508]],["body/interfaces/ContentContainerChanged.html",[8,0.012,21,0.136,22,0.167,23,0.136,24,0.091,35,0.182,98,0.286,99,0.136,103,0.866,109,0.007,110,0.009,111,0.007,112,1.119,114,1.677,118,0.506,119,0.92,125,1.446,126,0.939,130,0.936,176,1.587,179,2.257,181,2.93,193,1.342,205,2.106,208,2.649,219,0.985,236,1.677,309,3.038,315,3.438,359,2.066,434,2.53,435,2.53,436,2.421,437,2.066,438,2.649,439,3.1,440,3.1,452,2.649,483,2.978,562,1.342,569,0.984,588,1.637,589,1.796,644,2.785,645,2.25,657,2.039,679,2.931,769,2.871,772,2.322,783,3.625,787,2.231,788,2.895,791,2.871,794,3.335,809,2.895,863,2.93,864,3.283,925,3.803,929,3.299,953,2.93,976,4.223,977,2.93,978,4.29,979,4.282,980,4.282,981,4.468,982,3.299,983,3.803,984,3.299,985,2.781,986,3.803,987,4.282,988,3.538,989,3.538,990,3.803,991,3.803,992,3.143,993,3.538,994,2.231,995,3.299,996,4.282,997,2.93,998,3.646]],["title/modules/CoreModule.html",[0,1.184,10,2.823]],["body/modules/CoreModule.html",[0,1.928,2,1.547,3,1.928,8,0.012,10,5.784,18,2.12,19,1.647,20,1.366,21,0.152,22,0.186,23,0.152,24,0.102,28,2.189,35,0.316,38,1.099,47,2.12,48,0.314,65,1.273,66,1.874,91,2.961,92,3.954,97,4.736,98,0.186,99,0.152,108,3.687,109,0.008,110,0.009,111,0.008,120,0.937,137,4.082,141,4.736,154,3.465,155,3.465,219,1.057,494,4.289,666,2.336,999,4.736,1000,4.736,1001,4.736,1002,5.784,1003,5.5,1004,5.5,1005,5.415,1006,6.75,1007,5.415,1008,4.596,1009,6.75,1010,5.415,1011,6.75,1012,5.415,1013,5.415,1014,4.736,1015,5.415,1016,4.596,1017,5.415,1018,3.687,1019,4.289,1020,5.415,1021,5.415,1022,5.415,1023,5.415,1024,5.415,1025,5.415,1026,5.415,1027,5.415,1028,5.415,1029,4.736,1030,7.354,1031,5.415,1032,4.289,1033,5.415]],["title/interfaces/DataStateModel.html",[112,0.628,1034,3.284]],["body/interfaces/DataStateModel.html",[8,0.012,21,0.072,22,0.206,23,0.072,24,0.048,33,1.55,34,1.368,35,0.264,48,0.149,65,0.847,66,0.889,98,0.19,99,0.072,100,0.919,101,1.404,102,1.514,103,0.713,108,1.748,109,0.01,110,0.006,111,0.004,112,0.604,114,0.889,116,1.055,118,0.417,119,0.584,120,0.444,125,0.59,126,0.689,127,0.875,136,1.942,137,2.413,142,2.554,143,3.613,144,1.875,145,0.889,146,1.404,147,1.404,149,1.018,161,3.16,162,1.404,193,1.656,195,2.717,196,1.235,197,1.837,203,3.877,210,0.806,211,1.875,219,1.124,226,1.649,228,1.34,229,1.643,236,2.429,237,2.245,240,1.748,241,2.033,245,4.825,251,0.757,252,0.711,253,1.901,254,2.247,258,2.291,261,2.127,300,1.553,309,1.055,316,3.481,317,0.555,353,3.16,373,2.168,376,0.983,394,3.167,404,0.976,419,0.459,420,0.863,428,2.413,434,1.34,435,1.34,436,2.447,437,1.095,531,0.781,558,1.214,569,0.521,573,4.011,588,1.039,589,0.733,634,1.34,678,2.556,679,1.018,680,2.084,681,1.913,682,1.34,684,1.34,685,1.23,689,3.874,717,1.474,787,1.182,794,1.018,839,3.877,840,1.553,844,3.877,849,1.474,922,1.553,923,2.676,948,1.474,985,2.81,997,1.553,1034,3.16,1035,1.748,1036,6.834,1037,6.331,1038,5.779,1039,6.331,1040,3.16,1041,3.334,1042,5.124,1043,1.875,1044,2.245,1045,3.991,1046,2.033,1047,2.033,1048,3.991,1049,6.832,1050,3.991,1051,3.49,1052,1.875,1053,4.896,1054,2.567,1055,2.567,1056,3.991,1057,2.245,1058,2.245,1059,1.875,1060,1.748,1061,2.717,1062,3.575,1063,1.643,1064,2.033,1065,2.245,1066,2.245,1067,2.245,1068,2.033,1069,2.033,1070,2.033,1071,1.748,1072,2.245,1073,2.245,1074,2.245,1075,6.232,1076,1.474,1077,2.567,1078,2.033,1079,2.033,1080,4.282,1081,4.623,1082,2.033,1083,4.829,1084,2.033,1085,3.49,1086,2.567,1087,1.474,1088,1.553,1089,2.245,1090,2.245,1091,2.567,1092,3.49,1093,2.245,1094,2.245,1095,2.245,1096,2.245,1097,2.033,1098,6.452,1099,1.553,1100,4.989,1101,3.133,1102,2.033,1103,1.748,1104,2.567,1105,2.567,1106,2.567,1107,2.567,1108,2.567,1109,2.245,1110,2.567,1111,2.567,1112,2.567,1113,4.825,1114,3.991,1115,2.567,1116,3.991,1117,2.567,1118,3.991,1119,2.567,1120,3.991,1121,2.567,1122,3.991,1123,2.567,1124,3.991,1125,2.567,1126,3.991,1127,2.567,1128,3.991,1129,3.49,1130,3.991,1131,3.991,1132,3.991,1133,2.567,1134,3.991,1135,6.608,1136,2.567,1137,2.567,1138,3.991,1139,3.49,1140,2.567,1141,2.567,1142,4.032,1143,5.522,1144,3.991,1145,2.567,1146,2.567,1147,3.991,1148,2.567,1149,2.567,1150,3.991,1151,2.567,1152,2.567,1153,3.49,1154,3.991,1155,2.567,1156,2.567,1157,3.991,1158,3.991,1159,2.567,1160,2.567,1161,2.567,1162,2.567,1163,2.567,1164,2.567,1165,2.567,1166,2.567,1167,2.567,1168,2.567,1169,2.567,1170,2.567,1171,2.567,1172,2.567,1173,2.567,1174,2.567,1175,2.567,1176,2.567,1177,2.567,1178,2.567,1179,2.567,1180,2.567,1181,1.553,1182,2.567,1183,2.567,1184,2.567,1185,2.567,1186,2.567,1187,2.567,1188,2.567,1189,2.567,1190,2.567,1191,2.033,1192,2.567,1193,2.567,1194,2.567,1195,2.567,1196,2.567,1197,2.567,1198,2.567,1199,2.567,1200,2.567,1201,2.567,1202,2.567,1203,2.567,1204,2.033,1205,2.567,1206,2.567,1207,3.991,1208,2.717,1209,2.567,1210,2.567,1211,2.245,1212,2.567,1213,3.991,1214,2.567,1215,1.748,1216,2.567,1217,2.567,1218,1.748,1219,2.567,1220,2.567,1221,4.367,1222,2.567,1223,2.567,1224,6.608,1225,2.567,1226,2.567,1227,2.567,1228,2.567,1229,2.567,1230,2.567,1231,2.567,1232,2.567,1233,2.567,1234,2.567,1235,2.567,1236,2.567,1237,2.567,1238,2.567,1239,2.567,1240,2.567,1241,2.567]],["title/interfaces/DefaultIconDefinition.html",[112,0.628,1242,3.028]],["body/interfaces/DefaultIconDefinition.html",[8,0.012,21,0.099,22,0.122,23,0.099,24,0.067,88,5.521,98,0.175,103,0.633,109,0.005,110,0.007,111,0.005,112,0.537,114,1.226,118,0.37,119,0.743,120,1.301,126,0.705,127,1.42,212,4.746,213,2.651,293,3.568,316,1.457,318,2.628,323,2.539,357,2.034,419,1.551,508,2.237,569,0.719,791,1.457,870,2.915,940,1.511,1218,2.413,1242,4.334,1243,2.413,1244,2.806,1245,2.806,1246,2.806,1247,4.245,1248,3.099,1249,4.021,1250,3.543,1251,3.543,1252,2.413,1253,3.543,1254,3.099,1255,2.806,1256,3.099,1257,6.331,1258,3.708,1259,4.733,1260,5.133,1261,3.708,1262,2.413,1263,2.806,1264,2.413,1265,5.197,1266,3.099,1267,7.507,1268,3.099,1269,3.099,1270,3.099,1271,4.441,1272,3.099,1273,3.099,1274,3.099,1275,3.099,1276,3.099,1277,3.099,1278,5.669,1279,5.669,1280,6,1281,6,1282,2.587,1283,3.099,1284,4.672,1285,3.099,1286,3.099,1287,3.099,1288,4.441,1289,4.441,1290,4.441,1291,3.099,1292,3.099,1293,6,1294,3.099,1295,4.441,1296,3.099,1297,3.099,1298,3.099,1299,3.099,1300,3.099,1301,5.669,1302,3.099,1303,3.099,1304,4.441,1305,3.099,1306,3.099,1307,3.099,1308,3.099,1309,3.099,1310,3.099,1311,4.441,1312,2.587,1313,3.099,1314,3.099,1315,3.099,1316,3.099,1317,3.099,1318,5.669,1319,3.099,1320,3.099,1321,5.669,1322,3.099,1323,3.099,1324,2.587,1325,3.099,1326,3.099,1327,6,1328,3.099,1329,4.441,1330,3.099,1331,2.806,1332,3.099,1333,2.806,1334,3.099,1335,3.099]],["title/interfaces/DelegateDataSourceOptions.html",[112,0.628,1336,3.028]],["body/interfaces/DelegateDataSourceOptions.html",[8,0.012,21,0.163,22,0.2,23,0.163,24,0.109,35,0.297,38,1.179,48,0.337,65,1.005,66,2.01,98,0.242,99,0.163,103,1.038,109,0.008,110,0.01,111,0.008,112,0.88,114,2.01,116,2.388,118,0.607,119,1.031,120,1.365,125,1.745,126,0.767,127,1.356,154,3.717,155,3.717,226,1.745,254,1.608,359,2.477,404,1.724,410,4.241,423,3.175,460,6.506,461,6.506,486,4.241,548,1.511,1016,3.955,1018,3.955,1019,4.6,1336,5.54,1337,3.955,1338,4.241,1339,6.163,1340,6.163,1341,6.163,1342,5.08,1343,6.163,1344,4.799,1345,5.146,1346,5.08,1347,5.08]],["title/injectables/DelegateDataSourceService.html",[404,1.014,1016,2.823]],["body/injectables/DelegateDataSourceService.html",[8,0.012,21,0.162,22,0.198,23,0.162,24,0.132,29,1.771,31,1.247,33,1.247,35,0.296,38,1.171,48,0.334,65,0.998,66,1.997,98,0.241,99,0.162,103,1.031,109,0.008,110,0.01,111,0.008,112,0.874,116,2.885,118,0.603,120,0.998,125,1.327,126,0.628,127,1.031,154,3.692,155,3.692,226,1.74,254,1.597,359,2.46,404,1.717,405,2.883,410,5.524,418,1.411,419,1.031,423,3.154,460,5.99,461,5.99,486,4.213,548,1.826,1016,4.779,1018,4.779,1019,4.569,1336,5.747,1337,4.779,1338,4.213,1339,6.616,1340,6.138,1341,6.138,1342,5.046,1343,6.616,1344,4.779,1345,5.125,1346,6.138,1347,5.046,1348,7.019,1349,5.769]],["title/components/DonorCardComponent.html",[130,0.507,521,1.261]],["body/components/DonorCardComponent.html",[7,0.711,8,0.012,9,0.711,20,0.59,21,0.171,22,0.08,23,0.066,24,0.142,29,0.935,31,1.61,33,0.996,34,1.315,35,0.173,38,0.474,48,0.135,65,1.42,98,0.08,99,0.171,101,1.278,102,1.123,109,0.003,110,0.005,111,0.005,118,0.244,119,0.542,120,0.641,125,1.059,126,0.789,127,1.14,128,0.783,130,0.899,136,0.927,170,0.689,172,0.689,174,1.851,176,0.935,179,1.237,182,2.537,183,1.283,185,1.242,187,1.242,188,1.242,191,2.068,194,3.242,195,2.524,196,1.162,210,0.734,212,3.327,216,0.758,219,0.822,223,2.936,228,1.935,229,2.372,231,0.734,236,2.358,251,1.093,252,1.026,253,0.965,254,1.026,255,0.608,293,3.041,303,2.53,309,1.524,317,1.378,318,2.331,323,1.705,336,1.945,356,3.137,371,1.973,376,2.008,389,3.356,418,0.907,419,1.14,420,1.315,428,3.68,432,2.633,437,1.581,444,0.809,445,0.711,449,0.783,451,0.711,453,1.524,478,2.414,507,0.809,508,1.739,509,1.739,510,0.809,511,1.815,512,0.809,513,0.809,514,0.809,515,0.711,516,0.809,517,0.711,518,0.809,519,0.711,520,1.283,521,1.595,522,2.492,523,0.809,524,0.809,525,0.711,526,0.809,527,0.711,528,0.783,529,0.809,530,0.711,531,1.128,532,0.809,533,0.711,534,0.809,535,0.711,536,1.283,537,0.711,538,0.809,539,0.734,540,0.809,541,0.711,542,0.809,543,0.711,544,1.494,545,1.358,546,0.711,547,1.026,548,0.608,549,0.809,550,0.711,551,0.809,552,0.711,553,0.809,554,0.711,555,0.783,556,0.809,557,0.711,558,1.94,559,1.402,560,0.809,561,0.711,562,0.647,563,0.809,564,0.711,565,0.809,566,0.809,567,0.783,569,1.161,575,6.23,581,1.642,583,1.591,584,3.171,586,2.786,587,2.519,588,0.965,598,2.936,602,5.001,605,2.351,606,4.586,618,1.707,622,1.965,624,1.341,625,1.278,633,2.519,634,2.405,635,3.041,637,3.242,641,3.242,642,3.571,644,1.035,645,2.593,646,2.513,647,2.303,648,4.831,649,3.66,650,2.786,652,2.906,657,2.31,754,0.927,781,1.935,783,2.322,799,2.524,801,2.236,812,1.853,834,1.168,842,1.965,850,2.027,864,1.935,882,1.22,883,2.128,884,2.524,885,1.341,892,2.916,911,1.707,913,3.282,935,1.12,940,2.236,948,2.128,968,2.824,971,1.495,975,2.948,992,3.489,1047,3.649,1076,1.341,1247,1.935,1331,2.936,1333,2.936,1350,4.557,1351,5.967,1352,5.502,1353,2.044,1354,6.769,1355,3.242,1356,3.242,1357,4.607,1358,3.707,1359,4.029,1360,4.607,1361,5.244,1362,3.707,1363,5.244,1364,5.001,1365,3.364,1366,4.607,1367,3.707,1368,2.337,1369,4.443,1370,3.493,1371,3.894,1372,2.337,1373,2.337,1374,2.337,1375,2.337,1376,2.337,1377,2.337,1378,3.68,1379,3.707,1380,2.337,1381,4.153,1382,2.707,1383,3.707,1384,2.337,1385,3.242,1386,3.242,1387,2.372,1388,3.707,1389,3.707,1390,2.524,1391,2.242,1392,2.337,1393,2.936,1394,2.707,1395,3.707,1396,3.242,1397,6.085,1398,2.337,1399,4.607,1400,4.607,1401,3.707,1402,4.586,1403,2.337,1404,2.337,1405,2.337,1406,3.242,1407,3.707,1408,3.707,1409,5.322,1410,5.244,1411,3.707,1412,3.707,1413,3.707,1414,3.707,1415,3.707,1416,3.707,1417,1.495,1418,1.495,1419,3.041,1420,2.985,1421,3.041,1422,2.524,1423,1.853,1424,1.278,1425,1.851,1426,2.128,1427,2.645,1428,2.405,1429,2.337,1430,2.337,1431,2.337,1432,2.337,1433,2.044,1434,2.337,1435,1.851,1436,2.337,1437,2.337,1438,3.649,1439,2.337,1440,1.591,1441,2.741,1442,2.519,1443,3.649,1444,3.242,1445,1.707,1446,1.851,1447,5.785,1448,1.278,1449,5.001,1450,2.044,1451,3.364,1452,3.649,1453,2.337,1454,3.242,1455,2.337,1456,2.337,1457,2.337,1458,2.337,1459,2.337,1460,2.337,1461,1.22,1462,2.337,1463,2.621,1464,1.495,1465,2.044,1466,2.337,1467,2.786,1468,2.337,1469,2.337,1470,3.707,1471,2.044,1472,2.337,1473,2.936,1474,2.337,1475,2.337,1476,2.044,1477,2.337,1478,2.337,1479,1.707,1480,2.337]],["title/modules/DonorCardModule.html",[0,1.184,1481,2.823]],["body/modules/DonorCardModule.html",[2,1.652,3,2.008,8,0.012,18,2.208,19,1.76,20,1.46,21,0.162,22,0.199,23,0.162,24,0.109,26,2.515,28,2.28,35,0.313,47,2.208,48,0.335,49,3.369,50,2.562,98,0.199,99,0.162,109,0.008,110,0.01,111,0.008,521,2.606,522,1.817,558,1.76,559,2.139,623,4.581,666,2.433,667,2.602,668,2.002,669,6.148,1350,3.498,1351,4.581,1352,4.224,1481,5.81,1482,5.059,1483,5.059,1484,5.059,1485,5.059,1486,5.589,1487,5.589,1488,5.785,1489,5.785,1490,3.939,1491,5.785,1492,5.785,1493,4.224,1494,5.785]],["title/interfaces/DrawerContainersChanged.html",[112,0.628,983,2.508]],["body/interfaces/DrawerContainersChanged.html",[8,0.012,21,0.135,22,0.165,23,0.135,24,0.09,35,0.181,98,0.286,99,0.135,103,0.858,109,0.007,110,0.009,111,0.007,112,1.115,114,1.662,118,0.502,119,0.915,125,1.438,126,0.939,130,0.9,176,1.754,179,2.273,181,2.904,193,1.33,205,2.094,208,2.625,219,0.752,236,1.662,309,3.028,315,4.175,359,2.666,434,2.507,435,2.507,436,2.4,437,2.048,438,2.625,439,3.073,440,3.073,452,2.625,483,2.965,562,1.33,569,0.975,588,1.627,589,1.786,644,2.769,645,2.237,657,2.027,679,2.921,769,2.858,772,2.302,783,3.261,787,2.211,788,2.879,791,2.57,794,3.332,809,2.879,863,2.904,864,3.265,925,3.781,929,4.257,953,2.904,976,3.781,977,2.904,978,4.28,979,4.257,980,4.257,981,4.449,982,3.27,983,4.204,984,4.257,985,3.589,986,3.781,987,4.257,988,3.507,989,3.507,990,3.781,991,3.781,992,3.125,993,3.507,994,2.211,995,3.27,996,4.257,997,2.904,998,3.63]],["title/interfaces/DrawerInitialized.html",[112,0.628,990,2.508]],["body/interfaces/DrawerInitialized.html",[8,0.012,21,0.137,22,0.168,23,0.137,24,0.092,35,0.184,98,0.286,99,0.137,103,0.873,109,0.007,110,0.009,111,0.007,112,1.122,114,1.69,118,0.51,119,0.925,125,1.454,126,0.939,130,0.857,176,1.595,179,2.269,181,2.953,193,1.352,205,2.117,208,2.67,219,0.765,236,1.69,309,2.881,315,3.456,359,2.083,434,2.55,435,2.55,436,2.441,437,2.083,438,2.67,439,3.125,440,3.125,452,2.67,483,2.989,562,1.352,569,0.991,588,1.645,589,1.806,644,2.799,645,2.262,657,2.05,679,2.94,769,2.881,772,2.341,783,3.282,787,2.248,788,2.91,791,2.599,794,3.339,809,2.91,863,2.953,864,3.3,925,3.823,929,3.325,953,2.953,976,3.823,977,2.953,978,4.299,979,4.304,980,4.304,981,4.485,982,3.325,983,3.823,984,3.325,985,2.803,986,3.823,987,4.304,988,4.616,989,4.616,990,4.239,991,3.823,992,3.159,993,3.566,994,2.248,995,3.325,996,4.304,997,2.953,998,3.659]],["title/modules/DrawerModule.html",[0,1.184,11,2.823]],["body/modules/DrawerModule.html",[2,1.569,3,1.945,8,0.012,11,5.868,18,2.138,19,1.67,20,1.385,21,0.154,22,0.189,23,0.154,24,0.103,26,2.436,28,1.781,35,0.315,47,2.138,48,0.318,49,3.263,50,2.432,56,5.954,57,4.357,58,2.867,59,5.954,60,4.802,91,3.002,92,4.01,93,4.348,98,0.189,99,0.154,109,0.008,110,0.01,111,0.008,172,2.508,517,2.589,519,2.589,561,2.589,562,1.52,666,2.356,837,4.802,838,4.01,982,3.739,1495,4.802,1496,4.802,1497,4.802,1498,5.491,1499,4.117,1500,4.117,1501,5.491,1502,4.348,1503,5.491]],["title/interfaces/DrawerToggled.html",[112,0.628,991,2.508]],["body/interfaces/DrawerToggled.html",[8,0.012,21,0.131,22,0.16,23,0.131,24,0.088,35,0.175,98,0.284,99,0.131,103,0.832,109,0.007,110,0.009,111,0.007,112,1.102,114,1.61,118,0.486,119,0.896,125,1.785,126,0.941,130,0.837,176,1.545,179,2.287,181,2.813,193,1.696,205,2.437,208,3.348,219,0.729,236,2.12,309,2.991,315,3.348,359,1.984,434,2.429,435,2.429,436,2.325,437,1.984,438,2.543,439,2.977,440,2.977,452,2.543,483,2.92,562,1.696,569,0.945,588,1.594,589,2.217,644,2.712,645,2.777,657,2.517,679,2.886,769,2.814,772,2.23,783,3.222,787,2.819,788,2.819,791,2.518,794,3.317,809,2.819,863,2.813,864,3.197,925,4.693,929,3.168,953,2.813,976,3.704,977,2.813,978,4.132,979,4.17,980,4.17,981,4.381,982,3.168,983,3.704,984,3.168,985,2.67,986,3.704,987,4.17,988,3.397,989,3.397,990,3.704,991,4.14,992,3.879,993,4.472,994,2.819,995,4.17,996,4.17,997,2.813,998,3.574]],["title/components/DropdownComponent.html",[130,0.507,525,1.261]],["body/components/DropdownComponent.html",[7,0.995,8,0.012,9,0.995,21,0.092,22,0.113,23,0.092,24,0.141,29,1.209,31,1.591,33,1.036,34,1.35,35,0.18,38,0.664,48,0.19,65,1.456,98,0.113,99,0.092,101,1.789,102,0.885,109,0.005,110,0.007,111,0.007,118,0.342,119,0.701,120,0.829,126,0.781,127,1.364,128,1.096,130,0.918,158,4.527,170,0.965,172,0.965,176,1.209,179,1.523,182,2.637,183,1.659,185,1.606,187,1.606,188,1.606,193,1.327,196,1.431,197,3.198,216,1.061,219,0.889,228,2.503,230,2.094,231,1.028,251,1.413,252,1.327,253,1.247,255,0.852,278,2.39,317,0.707,318,2.392,323,1.774,336,1.676,356,3.388,376,1.253,384,2.592,418,1.173,419,1.116,420,1.591,430,3.796,432,2.612,444,1.133,445,0.995,449,1.096,451,0.995,453,1.971,478,2.477,507,1.133,508,1.458,509,1.458,510,1.133,511,2.162,512,1.133,513,1.133,514,1.133,515,0.995,516,1.133,517,0.995,518,1.133,519,0.995,520,1.659,521,0.995,522,1.028,523,1.133,524,1.133,525,1.9,526,1.133,527,0.995,528,1.096,529,1.133,530,0.995,531,1.458,532,1.133,533,0.995,534,1.133,535,0.995,536,1.659,537,0.995,538,1.133,539,1.028,540,1.133,541,0.995,542,1.133,543,0.995,544,1.061,545,1.672,546,0.995,547,1.327,548,0.852,549,1.133,550,0.995,551,1.133,552,0.995,553,1.133,554,0.995,555,1.096,556,1.133,557,0.995,558,0.995,559,0.995,560,1.133,561,0.995,562,0.906,563,1.133,564,0.995,565,1.133,566,1.133,567,1.096,569,1.152,573,2.503,580,3.256,581,2.123,582,4.492,583,2.228,584,3.777,586,3.431,587,3.101,588,1.247,605,2.332,611,5.011,622,2.044,624,1.878,625,1.789,627,2.592,633,3.634,634,3.471,635,3.678,642,3.264,646,2.298,647,3.322,649,3.256,650,1.979,651,2.39,652,1.396,657,2.327,842,1.396,864,2.503,908,4.946,913,2.752,922,2.899,934,1.979,935,1.568,940,2.419,968,2.766,1052,3.5,1076,1.878,1417,2.094,1418,3.63,1421,3.472,1423,3.121,1440,2.228,1441,1.568,1448,1.789,1461,1.709,1463,2.396,1504,2.862,1505,6.969,1506,6.436,1507,5.673,1508,4.794,1509,5.673,1510,4.794,1511,6.245,1512,4.794,1513,3.272,1514,3.796,1515,3.272,1516,4.794,1517,2.899,1518,3.272,1519,3.272,1520,4.794,1521,3.272,1522,3.272,1523,4.794,1524,4.946,1525,4.946,1526,3.796,1527,3.5,1528,3.816,1529,4.794,1530,3.272,1531,3.272,1532,3.272,1533,4.192,1534,4.794,1535,3.272,1536,4.192,1537,4.34,1538,4.12,1539,3.863,1540,5.673,1541,2.592,1542,2.592,1543,2.962,1544,3.264,1545,2.39,1546,3.996,1547,3.796,1548,2.094,1549,4.56,1550,2.228,1551,4.192,1552,2.862,1553,3.272,1554,2.862,1555,2.862,1556,3.5,1557,2.862,1558,3.272,1559,2.592,1560,3.272,1561,1.878,1562,2.094,1563,3.272,1564,2.592,1565,3.272,1566,2.862,1567,2.862,1568,3.272]],["title/modules/DropdownModule.html",[0,1.184,1569,2.823]],["body/modules/DropdownModule.html",[2,1.743,3,2.074,8,0.012,18,2.28,19,1.857,20,1.54,21,0.171,22,0.21,23,0.171,24,0.115,26,2.598,28,1.979,35,0.308,47,2.28,48,0.354,98,0.21,99,0.171,109,0.009,110,0.01,111,0.009,525,2.623,666,2.513,667,2.687,668,2.112,1538,3.503,1569,5.718,1570,5.338,1571,5.338,1572,5.338,1573,6.103,1574,5.749,1575,4.833,1576,5.749,1577,4.833,1578,6.103]],["title/components/DualSliderComponent.html",[130,0.507,527,1.261]],["body/components/DualSliderComponent.html",[7,0.555,8,0.012,9,0.555,21,0.051,22,0.063,23,0.051,24,0.147,29,0.765,31,1.683,33,1.392,34,1.574,35,0.189,38,0.371,42,1.243,48,0.106,53,1.445,65,1.36,82,5.328,98,0.063,99,0.051,100,1.085,102,0.56,103,1.076,109,0.003,110,0.004,111,0.004,118,0.191,119,0.663,120,0.995,126,0.783,127,0.899,130,0.787,131,4.098,133,1.445,158,4.501,170,0.538,172,0.538,176,0.765,179,1.044,182,2.445,183,1.05,185,1.016,190,2.366,191,2.025,193,1.502,196,0.982,197,2.771,198,3.081,205,1.518,210,1.579,216,0.592,219,0.609,226,1.156,228,2.366,230,4.407,231,0.573,251,1.336,252,0.84,253,1.412,255,0.789,261,1.83,278,1.333,308,3.963,309,2.23,317,0.841,318,1.49,323,1.44,326,6.252,336,1.677,343,1.834,346,2.214,352,1.243,356,1.396,359,1.293,371,1.759,373,1.343,376,1.49,418,1.406,419,1.151,420,1.574,430,2.401,432,1.396,434,2.031,435,2.031,437,1.659,444,0.632,445,0.555,449,0.611,451,1.183,452,2.477,453,1.247,478,2.152,507,0.632,508,0.922,509,2.162,510,0.632,511,1.568,512,0.632,513,0.632,514,0.632,515,0.555,516,0.632,517,0.555,518,0.632,519,0.555,520,1.05,521,0.555,522,0.573,523,0.632,524,0.632,525,0.555,526,0.632,527,1.378,528,2.157,529,0.632,530,0.555,531,0.922,532,0.632,533,0.555,534,0.632,535,0.555,536,1.05,537,0.555,538,0.632,539,0.573,540,0.632,541,0.555,542,0.632,543,0.555,544,0.592,545,1.147,546,0.555,547,0.84,548,0.475,549,0.632,550,0.555,551,0.632,552,0.555,553,0.632,554,0.555,555,0.611,556,0.632,557,0.555,558,0.555,559,0.555,560,0.632,561,0.555,562,0.505,563,0.632,564,0.555,565,0.632,566,0.632,567,1.016,569,1.222,573,2.366,580,3.879,581,1.343,582,3.081,584,2.74,586,2.74,587,2.127,588,1.179,589,1.719,600,1.445,603,2.401,605,1.599,618,3.45,622,1.293,624,1.048,625,0.998,627,1.445,632,1.596,633,2.477,634,2.366,635,2.513,642,1.243,645,1.799,646,2.41,647,2.265,649,2.886,650,1.834,651,2.214,652,2.452,653,1.741,657,1.864,714,2.649,754,1.543,766,2.625,779,2.366,782,2.065,783,0.808,789,1.583,791,2.474,801,1.293,805,2.065,842,1.293,849,1.741,850,0.998,864,0.953,870,1.741,885,1.048,888,3.963,892,1.453,908,3.982,913,3.3,922,3.777,935,0.875,940,2.144,968,2.402,985,2.601,994,2.771,1052,2.214,1076,1.048,1215,3.085,1221,2.214,1371,2.899,1378,1.834,1387,2.899,1391,1.834,1417,1.168,1418,1.94,1419,1.944,1420,1.583,1421,2.711,1422,1.243,1423,1.516,1426,1.048,1428,3.451,1441,2.172,1442,0.998,1448,0.998,1461,0.953,1463,1.944,1514,2.401,1524,2.401,1525,2.401,1527,3.961,1528,2.886,1533,2.652,1536,2.652,1537,3.041,1538,2.886,1539,2.065,1541,1.445,1542,2.401,1543,2.366,1544,1.243,1545,1.333,1546,2.899,1547,2.401,1548,1.168,1549,3.309,1550,2.065,1551,2.652,1554,1.596,1555,1.596,1556,2.214,1557,1.596,1559,1.445,1561,1.048,1564,2.401,1566,1.596,1567,1.596,1579,6.197,1580,1.596,1581,2.214,1582,6.1,1583,3.081,1584,3.89,1585,3.033,1586,3.89,1587,6.018,1588,5.425,1589,6.018,1590,6.246,1591,5.749,1592,4.531,1593,4.531,1594,3.033,1595,4.531,1596,2.401,1597,3.033,1598,3.033,1599,5.425,1600,4.531,1601,4.531,1602,3.89,1603,3.033,1604,3.033,1605,3.033,1606,5.028,1607,1.825,1608,3.033,1609,2.652,1610,3.033,1611,2.214,1612,1.825,1613,3.033,1614,1.825,1615,6.246,1616,1.825,1617,2.214,1618,3.033,1619,1.825,1620,2.401,1621,4.397,1622,1.825,1623,4.397,1624,3.89,1625,3.963,1626,4.531,1627,4.531,1628,3.963,1629,4.531,1630,4.531,1631,4.531,1632,4.531,1633,1.825,1634,3.033,1635,3.033,1636,1.825,1637,1.825,1638,1.834,1639,2.401,1640,3.588,1641,1.825,1642,3.033,1643,1.825,1644,3.033,1645,2.652,1646,1.825,1647,5.028,1648,1.825,1649,5.749,1650,3.89,1651,4.531,1652,3.89,1653,3.033,1654,1.825,1655,4.531,1656,1.825,1657,2.652,1658,1.825,1659,3.033,1660,1.825,1661,3.402,1662,1.825,1663,1.825,1664,4.531,1665,2.401,1666,1.825,1667,2.652,1668,1.825,1669,1.825,1670,1.825,1671,3.033,1672,3.033,1673,1.825,1674,2.401,1675,3.89,1676,3.033,1677,1.825,1678,1.825,1679,1.825,1680,3.033,1681,2.652,1682,3.033,1683,1.596,1684,1.596,1685,3.588,1686,1.825,1687,1.825,1688,1.825,1689,1.825,1690,3.033,1691,1.825,1692,1.825,1693,1.825,1694,1.825,1695,1.825,1696,1.825,1697,1.825,1698,1.596,1699,1.825,1700,3.033,1701,1.825,1702,3.033,1703,1.825,1704,1.825,1705,3.033,1706,3.033,1707,1.825,1708,3.89,1709,1.825,1710,1.825,1711,1.825,1712,1.825,1713,1.825,1714,1.825,1715,1.825,1716,1.825,1717,1.825,1718,1.825,1719,3.033,1720,3.89,1721,3.033,1722,3.89,1723,1.825,1724,1.825,1725,1.825,1726,1.825,1727,1.825,1728,1.825,1729,4.531,1730,1.825,1731,1.825,1732,1.825,1733,3.033,1734,3.033,1735,3.033,1736,1.825,1737,1.94,1738,1.825,1739,1.825,1740,2.065,1741,1.825,1742,1.825,1743,1.825,1744,3.033,1745,1.825,1746,1.825,1747,1.825,1748,1.825,1749,1.445,1750,3.033,1751,1.596,1752,1.825,1753,1.825,1754,1.825]],["title/modules/DualSliderModule.html",[0,1.184,12,2.653]],["body/modules/DualSliderModule.html",[2,1.686,3,2.033,8,0.012,12,5.338,18,2.235,19,1.796,20,1.489,21,0.166,22,0.203,23,0.166,24,0.111,26,2.546,28,1.914,35,0.317,42,4.02,47,2.235,48,0.342,82,4.02,98,0.203,99,0.166,109,0.008,110,0.01,111,0.008,527,2.612,528,1.977,666,2.463,667,2.634,668,2.043,1538,3.389,1574,5.636,1575,4.675,1576,5.636,1577,4.675,1579,4.675,1582,4.311,1683,5.163,1685,4.675,1755,5.163,1756,5.163,1757,5.163,1758,5.903,1759,7.117,1760,7.117,1761,7.117,1762,5.903]],["title/components/FiltersContentComponent.html",[130,0.507,530,1.261]],["body/components/FiltersContentComponent.html",[7,0.879,8,0.012,9,0.879,21,0.081,22,0.099,23,0.081,24,0.148,29,1.103,31,1.684,33,1.27,34,1.534,35,0.25,38,0.587,48,0.167,65,1.445,66,1,91,2.389,98,0.099,99,0.081,101,1.58,102,1.084,109,0.004,110,0.006,111,0.006,118,0.302,119,0.639,120,0.756,125,1.005,126,0.819,127,1.232,128,0.968,130,0.842,163,2.527,170,0.852,172,0.852,176,1.482,179,1.414,182,2.603,183,1.512,185,1.464,187,1.464,188,1.464,196,1.33,213,2.282,216,0.937,219,0.988,228,3.705,231,0.907,251,1.288,252,1.21,253,1.371,254,1.626,255,0.752,291,3.848,293,2.184,309,1.797,316,3.171,317,0.625,318,1.107,323,1.95,336,1.781,347,2.976,354,3.18,371,2.046,418,1.069,419,1.05,420,1.434,444,1,445,0.879,449,0.968,451,0.879,453,1.797,478,2.632,483,1.232,507,1,508,1.329,509,1.329,510,1,511,2.033,512,1,513,1,514,1,515,0.879,516,1,517,0.879,518,1,519,0.879,520,1.512,521,0.879,522,0.907,523,1,524,1,525,0.879,526,1,527,0.879,528,1.464,529,1,530,1.787,531,2.528,532,1,533,0.879,534,1,535,0.879,536,1.512,537,0.879,538,1,539,0.907,540,1,541,0.879,542,1,543,0.879,544,0.937,545,2.141,546,1.329,547,1.837,548,1.371,549,1,550,0.879,551,1,552,0.879,553,1,554,0.879,555,0.968,556,1,557,0.879,558,0.879,559,0.879,560,1,561,0.879,562,0.8,563,1,564,0.879,565,1,566,1,567,0.968,569,1.07,571,2.527,573,2.282,581,1.935,583,1.968,584,3.552,586,3.187,587,2.881,588,1.137,605,2.833,611,1.968,617,1.968,619,3.191,622,2.505,624,1.659,625,1.58,633,1.58,634,1.509,644,1.935,645,2.374,646,2.094,652,2.83,653,1.659,654,2.11,657,2.152,658,3.822,660,2.527,712,2.643,714,4.692,783,3.052,789,2.282,885,3.809,892,2.526,893,4.609,922,2.643,934,2.643,935,3.18,940,2.247,994,3.173,1062,2.11,1071,2.976,1076,1.659,1247,1.509,1356,2.527,1369,3.191,1370,1.659,1371,2.796,1378,2.643,1381,3.461,1419,2.184,1420,2.282,1421,2.184,1422,3.588,1423,3.153,1424,1.58,1426,3.025,1427,1.659,1428,1.509,1441,2.815,1448,1.58,1463,2.184,1479,3.191,1505,2.527,1527,3.191,1528,2.508,1546,1.849,1556,2.11,1561,2.508,1562,2.796,1582,2.11,1763,5.351,1764,5.738,1765,2.527,1766,3.461,1767,4.652,1768,4.37,1769,3.372,1770,5.517,1771,5.874,1772,5.874,1773,5.874,1774,4.37,1775,4.609,1776,4.609,1777,4.609,1778,4.609,1779,4.609,1780,4.609,1781,6.309,1782,4.37,1783,2.89,1784,2.89,1785,2.89,1786,4.37,1787,2.89,1788,3.191,1789,2.89,1790,3.822,1791,2.89,1792,3.822,1793,2.89,1794,3.822,1795,2.89,1796,5.874,1797,2.89,1798,2.89,1799,4.37,1800,4.37,1801,2.89,1802,4.37,1803,5.874,1804,2.89,1805,2.288,1806,2.527,1807,2.89,1808,2.11,1809,2.527,1810,2.89,1811,4.609,1812,2.89,1813,5.27,1814,2.89,1815,4.37,1816,2.89,1817,2.89,1818,2.89,1819,2.89,1820,4.37,1821,4.37,1822,4.37,1823,4.652,1824,4.609,1825,2.89,1826,2.89,1827,2.89,1828,2.11,1829,4.37,1830,2.89,1831,1.968,1832,2.89,1833,2.527,1834,2.11]],["title/modules/FiltersContentModule.html",[0,1.184,1835,2.823]],["body/modules/FiltersContentModule.html",[2,1.585,3,1.957,8,0.012,12,5.199,18,2.152,19,1.688,20,1.4,21,0.156,22,0.191,23,0.156,24,0.105,26,2.452,28,2.222,35,0.318,47,2.152,48,0.322,49,3.284,50,2.457,65,0.96,66,1.92,81,4.851,82,3.777,83,4.851,98,0.191,99,0.156,109,0.008,110,0.01,111,0.008,530,2.592,531,1.688,545,2.02,661,5.533,666,2.371,667,2.536,668,1.92,1569,5.533,1763,3.777,1764,4.051,1835,5.86,1836,4.851,1837,4.851,1838,4.851,1839,4.851,1840,5.533,1841,5.547,1842,4.144,1843,3.355,1844,6.852,1845,5.547,1846,5.547,1847,5.547,1848,4.051,1849,4.393,1850,5.547]],["title/components/FiltersPopoverComponent.html",[130,0.507,170,1.222]],["body/components/FiltersPopoverComponent.html",[7,0.979,8,0.012,9,0.979,20,1.418,21,0.09,22,0.111,23,0.09,24,0.147,29,1.195,31,1.666,33,1.214,34,1.493,35,0.178,38,0.654,48,0.187,65,1.454,66,1.114,72,5.311,91,2.589,98,0.111,99,0.09,102,0.874,109,0.005,110,0.007,111,0.007,118,0.587,119,0.693,120,0.557,125,1.089,126,0.797,127,1.108,128,1.078,130,0.807,170,1.826,172,0.949,176,1.195,179,1.772,182,2.633,183,1.639,185,1.586,187,1.586,188,1.586,191,1.822,195,4.219,196,1.418,201,3.965,205,2.075,213,2.473,216,1.044,219,0.742,228,3.606,231,1.011,253,0.838,254,1.716,291,2.35,293,3.097,316,2.547,317,1.024,318,1.814,323,1.191,326,6.105,336,1.508,344,2.864,346,3.458,354,3.31,355,3.225,376,1.233,394,2.27,396,2.864,418,0.787,419,1.004,420,1.024,444,1.114,445,0.979,449,1.078,451,0.979,453,1.947,478,2.739,499,2.35,507,1.114,508,1.441,509,1.441,510,1.114,511,2.145,512,1.114,513,1.114,514,1.114,515,0.979,516,1.114,517,0.979,518,1.114,519,0.979,520,1.639,521,0.979,522,1.011,523,1.114,524,1.114,525,0.979,526,1.114,527,0.979,528,1.078,529,1.114,530,0.979,531,2.562,532,1.114,533,0.979,534,1.114,535,0.979,536,1.639,537,0.979,538,1.114,539,1.011,540,1.114,541,0.979,542,1.114,543,0.979,544,1.044,545,2.104,546,0.979,547,1.716,548,0.838,549,1.114,550,0.979,551,1.114,552,0.979,553,1.114,554,0.979,555,1.078,556,1.114,557,0.979,558,0.979,559,0.979,560,1.114,561,0.979,562,0.891,563,1.114,564,0.979,565,1.114,566,1.114,567,1.882,569,0.962,573,3.235,581,2.097,605,2.715,614,2.06,622,2.396,642,2.192,644,2.097,645,1.152,646,1.543,648,2.35,657,2.009,712,3.993,789,2.473,842,2.816,870,3.557,883,3.225,885,1.848,935,3.422,940,2.396,968,1.425,975,3.595,992,2.808,1052,3.458,1071,3.225,1076,1.848,1218,3.225,1369,3.458,1370,1.848,1371,3.031,1421,2.808,1423,2.808,1424,1.76,1427,1.848,1428,2.473,1441,2.27,1448,4.088,1461,1.681,1463,2.367,1467,1.947,1473,2.549,1528,3.79,1543,3.235,1546,2.06,1550,3.225,1556,3.458,1561,1.848,1581,2.35,1763,5.311,1766,5.469,1767,3.751,1775,4.914,1776,4.914,1777,4.914,1778,4.142,1779,4.914,1780,4.914,1788,3.458,1794,4.142,1806,2.815,1811,2.815,1824,5.419,1828,2.35,1831,2.192,1851,2.815,1852,5.619,1853,4.736,1854,5.619,1855,6.196,1856,6.196,1857,5.619,1858,3.219,1859,5.419,1860,4.736,1861,3.219,1862,4.142,1863,4.142,1864,4.142,1865,3.219,1866,3.219,1867,3.219,1868,3.219,1869,3.219,1870,4.736,1871,3.219,1872,6.196,1873,3.219,1874,3.219,1875,3.219,1876,5.619,1877,3.219,1878,3.219,1879,4.736,1880,3.219,1881,3.219,1882,3.219,1883,3.219,1884,3.219,1885,3.219,1886,3.219]],["title/modules/FiltersPopoverModule.html",[0,1.184,13,2.823]],["body/modules/FiltersPopoverModule.html",[2,1.712,3,2.051,8,0.012,13,5.782,18,2.255,19,1.823,20,1.512,21,0.168,22,0.206,23,0.168,24,0.113,26,2.57,28,2.329,35,0.307,47,2.255,48,0.347,49,3.442,50,2.654,72,4.081,98,0.206,99,0.168,109,0.008,110,0.01,111,0.008,170,2.536,171,5.241,531,2.185,666,2.486,667,2.658,668,2.074,1763,4.081,1764,4.376,1835,5.635,1887,5.241,1888,5.993,1889,5.241,1890,5.241,1891,5.993,1892,5.993]],["title/classes/FlatNode.html",[99,0.116,1893,3.284]],["body/classes/FlatNode.html",[8,0.012,21,0.13,22,0.159,23,0.13,24,0.151,29,1.54,31,1.708,33,1.569,35,0.174,65,0.801,98,0.159,99,0.13,102,0.854,109,0.006,110,0.009,111,0.006,118,0.484,119,0.893,120,1.388,125,1.669,126,0.86,127,1.091,130,0.746,136,1.836,190,3.565,193,1.69,196,2.023,197,3.474,205,2.044,210,1.916,213,4.046,219,1.182,226,1.57,251,2.14,252,1.69,253,1.889,255,1.204,317,1.319,319,3.05,336,1.242,418,1.493,419,1.091,420,1.319,445,2.44,569,1.386,589,2.34,782,4.155,940,2.912,1528,3.919,1609,5.337,1665,4.833,1893,5.749,1894,3.379,1895,7.014,1896,4.047,1897,4.468,1898,5.407,1899,5.971,1900,4.627,1901,5.056,1902,6.157,1903,4.627,1904,7.164,1905,8.114,1906,4.627,1907,5.337,1908,4.627,1909,4.627,1910,6.103,1911,4.627,1912,6.103,1913,4.627,1914,4.627,1915,6.103,1916,4.627,1917,4.627,1918,6.103,1919,4.833,1920,4.627,1921,4.627,1922,4.627,1923,4.627]],["title/components/HeaderComponent.html",[130,0.507,533,1.261]],["body/components/HeaderComponent.html",[7,1.173,8,0.012,9,1.173,21,0.174,22,0.133,23,0.108,24,0.145,31,1.628,35,0.145,38,0.783,48,0.223,65,1.478,94,2.626,98,0.133,99,0.108,102,0.995,109,0.005,110,0.008,111,0.008,118,0.403,121,4.533,122,4.923,124,4.923,125,1.548,126,0.82,127,1.203,128,1.292,130,0.76,170,1.137,172,1.137,176,1.36,179,1.669,182,2.677,183,1.866,185,1.806,187,1.806,188,1.806,196,1.568,211,4.915,212,2.947,216,1.25,219,0.845,231,1.211,249,4.923,254,1.493,300,3.26,303,1.529,314,3.937,316,2.912,323,1.427,336,1.669,371,2.297,376,1.477,389,3.45,399,4.715,401,5.436,419,0.964,432,2.862,444,1.335,445,1.173,449,1.292,451,1.173,453,2.216,478,2.911,507,1.335,508,1.64,509,1.64,510,1.335,511,2.33,512,1.335,513,1.335,514,1.335,515,1.173,516,1.335,517,1.173,518,1.335,519,1.173,520,1.866,521,1.173,522,1.211,523,1.335,524,1.335,525,1.173,526,1.335,527,1.173,528,1.292,529,1.335,530,1.173,531,2.155,532,1.335,533,2.048,534,1.335,535,1.173,536,1.866,537,1.173,538,1.335,539,1.211,540,1.335,541,1.173,542,1.335,543,1.173,544,1.25,545,1.832,546,1.173,547,1.493,548,1.003,549,1.335,550,1.173,551,1.335,552,1.173,553,1.335,554,1.173,555,1.292,556,1.335,557,1.173,558,1.173,559,1.173,560,1.335,561,1.173,562,1.068,563,1.335,564,1.173,565,1.335,566,1.335,567,1.292,569,0.783,573,3.515,581,2.387,600,3.054,605,2.912,619,3.937,622,2.651,645,1.929,647,2.694,649,3.095,650,2.332,652,3.021,657,2.183,712,3.26,846,4.715,892,2.979,913,2.213,934,2.332,935,1.848,968,3.137,984,2.626,994,3.099,1057,4.715,1370,3.095,1378,4.439,1419,3.107,1420,3.246,1421,2.694,1423,3.107,1424,2.108,1425,3.054,1427,2.213,1428,2.013,1440,2.626,1442,2.108,1445,2.816,1463,1.927,1467,3.759,1517,3.26,1543,2.815,1548,2.467,1561,2.213,1562,2.467,1767,4.269,1823,4.923,1924,3.372,1925,5.887,1926,6.419,1927,6.731,1928,3.671,1929,6.216,1930,5.391,1931,6.216,1932,6.216,1933,3.856,1934,3.856,1935,4.539,1936,3.856,1937,5.391,1938,3.856,1939,3.856,1940,3.856,1941,3.856,1942,5.391,1943,3.372,1944,3.856,1945,3.372,1946,3.856,1947,2.816,1948,3.856,1949,3.856,1950,3.856,1951,3.856,1952,3.054,1953,3.856,1954,3.856,1955,3.856,1956,3.856,1957,3.856,1958,3.856,1959,3.856,1960,2.332]],["title/modules/HeaderModule.html",[0,1.184,1002,2.823]],["body/modules/HeaderModule.html",[2,1.717,3,2.055,8,0.012,18,2.259,19,1.828,20,1.516,21,0.169,22,0.207,23,0.169,24,0.113,26,2.574,28,1.949,35,0.315,47,2.259,48,0.348,49,3.448,50,2.661,54,5.697,55,4.759,98,0.207,99,0.169,109,0.008,110,0.01,111,0.008,533,2.618,666,2.49,667,2.662,668,2.08,1002,5.7,1842,4.35,1843,3.634,1961,5.256,1962,5.256,1963,5.256,1964,6.01,1965,7.194,1966,6.01,1967,6.01]],["title/interfaces/IconDefinition.html",[112,0.628,1968,3.028]],["body/interfaces/IconDefinition.html",[8,0.012,21,0.111,22,0.136,23,0.111,24,0.074,33,1.469,34,0.852,35,0.285,48,0.228,50,1.745,57,2.521,58,2.057,98,0.188,99,0.111,102,0.727,103,1.381,109,0.006,110,0.008,111,0.006,112,0.597,114,1.364,116,1.62,118,0.412,119,0.801,120,1.375,125,1.259,126,0.739,127,1.381,191,2.396,193,1.741,210,1.975,212,4.46,213,2.858,219,0.857,226,1.777,236,2.352,251,1.161,252,1.091,253,1.923,255,1.025,261,1.881,293,3.693,317,1.183,320,3.12,373,1.745,404,1.339,419,1.468,420,0.852,483,2.898,508,2.464,569,0.8,588,1.025,613,5.213,635,2.735,678,2.858,680,2.858,681,2.623,682,2.057,684,2.057,685,1.889,870,3.142,1032,3.12,1040,4.334,1113,2.877,1181,2.383,1243,2.683,1246,6.12,1247,4.441,1252,4.627,1257,5.914,1258,5.213,1259,5.534,1260,5.381,1261,3.996,1262,4.627,1264,3.727,1390,3.727,1391,3.31,1611,2.877,1620,3.12,1968,5.534,1969,2.877,1970,3.12,1971,4.787,1972,5.942,1973,5.381,1974,5.5,1975,4.334,1976,3.446,1977,2.521,1978,6.463,1979,3.446,1980,4.334,1981,3.446,1982,3.446,1983,2.262,1984,3.446,1985,3.12,1986,3.446,1987,3.446,1988,3.446,1989,4.787,1990,4.334,1991,3.446,1992,3.446,1993,3.446,1994,3.446,1995,3.446,1996,4.787,1997,3.446,1998,3.446,1999,3.446,2000,3.446,2001,3.12,2002,3.446,2003,3.446,2004,5.5,2005,3.446,2006,3.12,2007,3.446,2008,3.446,2009,3.446,2010,3.446,2011,3.446,2012,3.446,2013,3.446,2014,3.446,2015,3.446,2016,3.446,2017,3.446,2018,3.446,2019,3.446]],["title/injectables/IconRegistryState.html",[404,1.014,1977,2.653]],["body/injectables/IconRegistryState.html",[8,0.012,21,0.1,22,0.123,23,0.1,24,0.135,29,1.291,31,1.489,33,1.63,34,0.774,35,0.278,48,0.208,50,1.586,57,2.292,58,1.87,98,0.176,99,0.1,102,0.661,103,1.348,109,0.005,110,0.007,111,0.005,112,0.542,116,2.104,118,0.374,120,1.276,125,1.498,126,0.75,127,1.231,191,2.446,193,1.984,210,2.163,212,4.197,213,1.87,219,0.561,226,1.735,236,2.48,251,1.508,252,1.417,253,1.865,255,1.332,261,2.157,293,2.984,317,1.29,320,4.052,373,2.266,404,1.252,405,1.79,418,1.685,419,1.464,420,0.774,483,2.778,508,2.335,569,1.322,588,1.332,613,5.508,635,3.255,678,3.117,680,2.672,681,2.453,682,1.87,684,1.87,685,1.717,754,1.421,870,2.056,1032,4.052,1040,4.728,1113,3.736,1181,2.166,1243,4.879,1246,6.08,1247,4.412,1252,5.136,1257,5.508,1258,4.756,1259,5.508,1260,4.052,1261,2.615,1262,4.435,1264,3.484,1390,4.435,1391,3.939,1611,3.736,1620,4.052,1968,5.908,1969,5.232,1970,2.836,1971,3.132,1972,4.475,1973,4.052,1974,6.266,1975,5.158,1976,3.132,1977,3.274,1978,6.812,1979,4.475,1980,5.158,1981,4.475,1982,4.475,1983,3.427,1984,3.132,1985,2.836,1986,3.132,1987,3.132,1988,4.475,1989,5.696,1990,5.158,1991,4.475,1992,3.132,1993,4.475,1994,5.696,1995,4.475,1996,4.475,1997,3.132,1998,3.132,1999,3.132,2000,3.132,2001,2.836,2002,3.132,2003,3.132,2004,5.221,2005,3.132,2006,2.836,2007,3.132,2008,3.132,2009,3.132,2010,5.221,2011,3.132,2012,3.132,2013,3.132,2014,3.132,2015,3.132,2016,3.132,2017,4.475,2018,5.221,2019,3.132,2020,5.117,2021,3.581,2022,3.581,2023,3.581,2024,3.581,2025,3.581,2026,3.581,2027,3.581,2028,3.581]],["title/classes/InitializationState.html",[99,0.116,2029,3.284]],["body/classes/InitializationState.html",[8,0.012,20,0.902,21,0.063,22,0.077,23,0.063,24,0.118,29,0.902,31,1.289,33,1.289,34,1.594,35,0.21,48,0.13,65,0.619,98,0.077,99,0.125,100,0.799,102,1.032,103,1.231,109,0.003,110,0.005,111,0.003,118,0.234,119,0.523,125,1.647,126,0.649,128,0.748,129,2.163,130,0.729,131,2.435,145,0.773,172,1.318,176,0.564,179,2.204,182,0.702,183,0.773,185,0.748,187,0.748,188,0.748,190,2.335,191,2.111,193,0.99,205,2.098,208,4.031,210,2.209,213,1.867,219,0.981,226,1.765,229,1.43,236,2.695,251,0.659,252,0.619,253,1.63,255,0.581,261,2.223,263,2.163,280,1.43,293,3.515,297,2.053,309,0.919,317,1.105,318,1.37,319,2.982,323,1.324,336,1.953,343,1.351,346,2.612,347,2.435,394,2.144,396,2.163,418,0.875,420,1.209,434,3.739,435,3.739,436,2.235,437,3.054,438,2.445,439,2.862,440,2.862,452,3.057,478,2.028,483,0.953,508,1.088,509,1.906,544,0.725,562,0.619,567,0.748,569,0.454,573,2.335,588,0.581,589,1.022,605,0.919,617,3.481,618,2.354,619,1.632,622,2.672,645,2.67,657,2.419,765,2.832,766,1.867,767,1.954,769,2.102,772,2.144,773,1.222,776,3.045,778,1.769,779,1.167,788,1.647,789,1.867,790,1.632,791,1.47,794,1.774,796,1.954,798,1.632,801,0.953,805,1.521,809,1.647,811,1.43,812,1.117,826,2.435,827,1.632,830,3.128,834,1.117,842,2.18,849,3.737,850,3.559,856,1.43,857,1.769,858,1.954,859,1.632,862,3.128,868,1.521,883,2.053,891,1.954,915,1.769,918,1.769,925,4.254,930,1.632,933,1.954,934,3.789,935,1.714,936,1.954,937,1.769,946,1.954,947,1.769,948,1.283,953,2.163,954,1.43,969,2.612,975,2.289,986,1.351,992,3.635,1081,1.632,1087,1.283,1088,2.163,1099,2.163,1255,1.769,1382,1.632,1402,5.218,1526,1.769,1543,1.167,1547,1.769,1549,4.084,1628,1.954,1638,1.351,1674,1.769,1684,1.954,1894,1.632,2029,3.542,2030,1.632,2031,3.577,2032,4.472,2033,6.265,2034,5.112,2035,5.112,2036,5.112,2037,3.577,2038,4.472,2039,2.234,2040,7.034,2041,4.472,2042,2.234,2043,2.234,2044,2.234,2045,2.234,2046,2.234,2047,4.472,2048,2.234,2049,2.234,2050,1.954,2051,3.911,2052,5.479,2053,5.316,2054,3.911,2055,3.911,2056,5.218,2057,3.911,2058,4.891,2059,3.128,2060,3.911,2061,3.542,2062,4.048,2063,3.128,2064,4.471,2065,3.577,2066,2.234,2067,2.234,2068,2.234,2069,2.234,2070,2.234,2071,2.234,2072,2.234,2073,2.234,2074,3.577,2075,2.234,2076,3.577,2077,2.234,2078,2.234,2079,2.234,2080,1.769,2081,5.592,2082,2.234,2083,2.234,2084,2.234,2085,3.911,2086,1.954,2087,3.128,2088,3.577,2089,2.234,2090,5.112,2091,2.234,2092,3.577,2093,2.234,2094,2.234,2095,2.234,2096,4.472,2097,2.234,2098,2.234,2099,2.234,2100,2.862,2101,2.234,2102,4.472,2103,2.234,2104,2.234,2105,3.128,2106,2.234,2107,2.234,2108,2.234,2109,5.966,2110,3.577,2111,5.112,2112,3.577,2113,3.577,2114,2.234,2115,4.472,2116,3.577,2117,2.234,2118,2.234,2119,2.234,2120,2.234,2121,3.577,2122,3.577,2123,2.234,2124,2.234,2125,4.472,2126,2.234,2127,2.234,2128,2.234,2129,2.234,2130,3.577,2131,2.234,2132,2.234,2133,1.954,2134,2.234,2135,2.234,2136,2.234,2137,4.471,2138,4.472,2139,5.112,2140,3.577,2141,3.577,2142,2.234,2143,2.234,2144,2.234,2145,2.234,2146,2.234,2147,2.234,2148,1.954,2149,1.954,2150,2.234,2151,3.577,2152,2.234,2153,2.234,2154,2.234,2155,2.234,2156,2.234,2157,2.234,2158,2.234,2159,2.234,2160,1.521,2161,2.234,2162,2.234,2163,3.577,2164,2.234,2165,2.234,2166,2.234,2167,2.234,2168,2.234,2169,2.234,2170,3.577,2171,4.472,2172,2.234,2173,2.234,2174,3.577,2175,2.234,2176,2.234,2177,2.234,2178,2.234,2179,2.234,2180,1.769,2181,2.234,2182,2.234,2183,2.234]],["title/interfaces/ListResult.html",[112,0.628,2184,2.653]],["body/interfaces/ListResult.html",[8,0.012,21,0.174,22,0.214,23,0.174,24,0.117,35,0.234,65,1.076,98,0.214,109,0.009,110,0.01,111,0.009,112,0.941,114,2.152,118,0.65,119,1.074,120,1.396,125,1.796,126,0.878,127,1.396,136,2.466,303,3.201,356,3.715,589,2.231,674,4.88,1047,6.39,1365,5.892,2184,4.697,2185,5.437,2186,5.437]],["title/injectables/ListResultsState.html",[164,2.267,404,1.014]],["body/injectables/ListResultsState.html",[8,0.012,21,0.106,22,0.13,23,0.106,24,0.151,29,1.339,31,1.721,33,1.575,34,1.737,35,0.3,46,4.763,48,0.219,65,0.653,66,1.305,98,0.183,99,0.106,100,1.35,102,1.411,103,1.192,109,0.009,110,0.007,111,0.01,112,0.571,116,2.182,118,0.394,119,0.777,120,1.216,126,0.815,127,1.192,137,4.032,142,3.397,145,1.305,146,2.062,147,2.062,149,1.496,162,3.984,164,2.902,166,4.86,191,1.223,193,1.47,210,1.184,226,0.867,236,2.782,251,1.565,252,1.47,253,1.381,254,1.846,255,1.599,258,4.183,261,2.117,297,3.047,303,2.891,317,1.147,354,3.195,356,2.444,359,1.609,371,2.162,404,1.299,405,1.885,418,1.719,419,1.303,420,1.147,569,1.078,588,1.735,672,1.969,674,2.281,678,3.207,679,1.496,680,2.772,681,2.544,682,1.969,683,3.715,684,1.969,685,1.808,690,4.249,711,3.715,716,2.281,717,2.165,719,3.07,739,2.568,745,3.715,754,1.496,923,2.062,1041,4.962,1061,2.568,1101,2.414,1181,2.281,1208,2.568,1365,4.485,1638,3.21,1928,2.568,2184,5.184,2187,6.365,2188,2.987,2189,5.322,2190,5.362,2191,5.309,2192,5.309,2193,5.309,2194,5.309,2195,5.83,2196,3.299,2197,5.309,2198,3.876,2199,4.485,2200,4.183,2201,4.643,2202,3.772,2203,4.643,2204,3.772,2205,2.653,2206,3.772,2207,4.643,2208,3.772,2209,3.772,2210,3.772,2211,3.772,2212,3.876,2213,3.772,2214,4.643,2215,3.772,2216,4.643,2217,3.772,2218,3.615,2219,2.987,2220,2.414,2221,3.299,2222,2.568,2223,2.568,2224,2.754,2225,3.299,2226,3.299,2227,3.299,2228,2.754,2229,2.754,2230,2.414,2231,2.754,2232,2.754,2233,2.568,2234,2.754,2235,2.754,2236,2.754,2237,2.754,2238,3.299,2239,2.754,2240,3.299,2241,3.299,2242,3.299,2243,3.299,2244,3.299,2245,3.299,2246,3.299,2247,3.299,2248,3.299,2249,3.299,2250,3.299,2251,3.299]],["title/interfaces/ListResultsStateModel.html",[112,0.628,2224,3.028]],["body/interfaces/ListResultsStateModel.html",[8,0.012,21,0.127,22,0.156,23,0.127,24,0.085,34,1.664,35,0.309,46,4.53,48,0.262,65,0.783,66,1.566,98,0.207,99,0.127,100,1.619,102,1.328,103,1.286,109,0.008,110,0.008,111,0.009,112,0.685,114,1.566,116,1.861,118,0.473,119,0.88,120,1.041,126,0.654,127,1.286,137,3.637,142,3.848,145,1.566,146,2.474,147,2.474,149,1.795,162,3.692,164,2.474,166,2.737,191,1.468,193,1.253,210,1.421,226,1.041,236,2.72,251,1.334,252,1.253,253,1.565,254,1.665,255,1.565,258,3.877,261,1.993,297,2.598,303,2.971,354,2.882,356,2.769,359,1.93,371,1.95,404,1.471,419,0.809,588,1.565,672,2.363,674,2.737,678,3.14,679,1.795,680,3.14,681,2.882,682,2.363,683,3.637,684,2.363,685,2.169,690,4.084,711,2.737,716,2.737,717,2.598,719,3.005,739,3.082,745,4.084,923,2.474,1041,4.599,1061,3.082,1101,2.896,1181,2.737,1208,3.082,1365,4.931,1638,2.737,1928,3.082,2184,5.17,2187,3.584,2188,3.584,2189,5.738,2190,5.556,2195,3.958,2198,3.305,2199,4.391,2200,4.095,2201,3.958,2203,3.958,2205,2.262,2207,3.958,2212,3.305,2214,3.958,2216,3.958,2218,3.082,2219,3.584,2220,2.896,2221,3.958,2222,3.082,2223,3.082,2224,4.391,2225,3.958,2226,3.958,2227,3.958,2228,3.305,2229,3.305,2230,2.896,2231,3.305,2232,3.305,2233,3.082,2234,3.305,2235,3.305,2236,3.305,2237,3.305,2238,3.958,2239,3.305,2240,3.958,2241,3.958,2242,3.958,2243,3.958,2244,3.958,2245,3.958,2246,3.958,2247,3.958,2248,3.958,2249,3.958,2250,3.958,2251,3.958]],["title/interfaces/Message.html",[112,0.628,794,1.645]],["body/interfaces/Message.html",[8,0.012,21,0.108,22,0.285,23,0.108,24,0.073,33,1.53,34,1.164,35,0.234,38,1.094,48,0.223,98,0.252,99,0.151,100,1.378,102,1.147,103,0.963,109,0.005,110,0.008,111,0.005,112,0.816,114,1.333,118,0.403,119,0.788,120,0.932,125,0.886,126,0.771,143,4.444,145,1.333,149,1.528,190,2.011,193,1.067,205,1.29,210,1.21,219,1.109,226,1.628,251,1.831,252,1.067,253,2.032,254,1.492,255,1.003,261,2.032,316,1.584,317,0.833,319,3.105,336,1.034,400,2.33,404,1.318,423,2.946,451,1.89,483,3.02,496,3.976,548,1.402,569,0.782,580,2.211,588,2,589,2.023,607,4.282,679,3.171,689,3.513,766,2.813,769,2.215,772,3.791,779,2.011,787,1.774,788,3.681,794,3.412,801,1.643,809,2.481,811,2.465,840,2.33,856,3.448,906,2.465,954,3.448,978,4.011,998,2.011,1008,3.669,1060,2.623,1087,2.211,1099,2.33,1103,5.129,1499,2.33,1500,3.258,1983,2.211,2100,3.976,2160,2.623,2205,3.667,2252,2.465,2253,4.582,2254,4.306,2255,3.093,2256,3.934,2257,2.623,2258,3.448,2259,2.813,2260,4.282,2261,3.757,2262,2.813,2263,3.669,2264,2.465,2265,2.623,2266,2.813,2267,3.448,2268,2.813,2269,2.813,2270,2.813,2271,2.813,2272,2.813,2273,2.813,2274,3.934,2275,2.813,2276,2.813,2277,2.813,2278,2.813,2279,3.669,2280,2.813,2281,3.934,2282,2.813,2283,2.813,2284,2.813,2285,2.813,2286,2.813,2287,2.813,2288,2.813,2289,2.813,2290,4.537,2291,2.813,2292,2.813,2293,2.813,2294,2.813,2295,2.813,2296,2.813,2297,2.813,2298,2.813,2299,2.813]],["title/classes/MessageChannel.html",[99,0.116,809,1.909]],["body/classes/MessageChannel.html",[8,0.012,21,0.095,22,0.284,23,0.095,24,0.14,29,1.244,31,1.57,33,1.664,34,1.253,35,0.218,38,1.001,48,0.197,98,0.242,99,0.138,100,1.217,102,1.071,103,0.881,109,0.005,110,0.007,111,0.005,112,0.747,118,0.355,119,0.721,120,1.218,125,0.782,126,0.79,143,4.597,145,1.177,149,1.349,190,3.028,193,1.365,205,1.139,210,1.068,219,1.103,226,1.553,251,1.99,252,0.942,253,1.973,254,0.942,255,1.283,261,2.132,316,1.398,317,1.066,319,3.519,336,1.323,400,2.057,404,1.206,418,1.556,419,1.137,420,0.735,423,2.695,451,1.764,483,2.879,496,4.505,548,1.283,569,1.371,580,1.952,588,1.936,589,2.011,607,4.083,679,3.094,689,3.792,766,2.574,769,2.027,772,3.814,779,1.776,787,2.27,788,3.798,794,3.403,801,1.45,809,2.67,811,2.176,840,2.057,856,3.155,906,3.155,954,3.155,978,4.067,998,2.574,1008,3.357,1060,2.316,1087,2.83,1099,2.057,1103,4.945,1499,2.057,1500,2.982,1894,2.483,1983,1.952,2100,4.505,2160,3.357,2205,3.179,2252,2.176,2253,4.597,2254,4.32,2255,1.952,2256,2.483,2257,2.316,2258,3.155,2259,2.483,2260,4.083,2261,3.507,2262,2.483,2263,3.357,2264,2.176,2265,2.316,2266,3.6,2267,4.32,2268,3.6,2269,3.6,2270,3.6,2271,3.6,2272,2.483,2273,2.483,2274,3.6,2275,3.6,2276,3.6,2277,4.644,2278,2.483,2279,4.331,2280,3.6,2281,3.6,2282,3.6,2283,3.6,2284,2.483,2285,4.644,2286,2.483,2287,2.483,2288,2.483,2289,2.483,2290,4.235,2291,2.483,2292,2.483,2293,2.483,2294,2.483,2295,2.483,2296,2.483,2297,2.483,2298,2.483,2299,2.483,2300,4.93,2301,4.93,2302,4.93,2303,3.401,2304,4.93,2305,3.401,2306,3.401,2307,3.401,2308,3.401,2309,3.401]],["title/injectables/MessageService.html",[404,1.014,769,1.705]],["body/injectables/MessageService.html",[8,0.012,21,0.102,22,0.281,23,0.102,24,0.136,29,1.302,31,1.496,33,1.6,34,1.299,35,0.226,38,1.048,48,0.21,98,0.247,99,0.145,100,1.296,102,1.109,103,0.922,109,0.005,110,0.007,111,0.005,112,0.781,118,0.379,119,0.755,120,1.133,125,0.833,126,0.753,143,4.431,145,1.254,149,1.437,190,1.892,193,1.003,205,1.214,210,1.138,219,1.159,226,1.591,251,1.93,252,1.429,253,2.003,254,1.003,255,1.343,261,2.162,316,1.49,317,1.115,319,3.003,336,0.973,400,2.191,404,1.262,405,1.811,418,1.262,419,0.922,420,0.783,423,2.821,451,1.828,483,2.951,496,3.845,548,1.564,569,1.22,580,2.08,588,2.076,589,1.717,607,4.575,679,3.001,689,3.613,766,2.694,769,2.845,772,3.885,779,3.419,787,1.668,788,3.732,794,3.406,801,2.2,809,2.767,811,3.302,840,3.12,856,3.302,906,2.319,954,3.302,978,3.932,998,1.892,1008,3.513,1060,2.467,1087,2.08,1099,3.12,1103,4.712,1499,2.191,1500,3.12,1983,3.449,2100,3.845,2160,2.467,2205,3.003,2252,2.319,2253,4.092,2254,3.845,2255,2.08,2256,2.646,2257,2.467,2258,3.302,2259,2.646,2260,4.35,2261,4.185,2262,2.646,2263,3.513,2264,2.319,2265,2.467,2266,2.646,2267,3.302,2268,2.646,2269,2.646,2270,2.646,2271,2.646,2272,2.646,2273,2.646,2274,3.768,2275,2.646,2276,2.646,2277,2.646,2278,2.646,2279,3.513,2280,2.646,2281,3.768,2282,2.646,2283,2.646,2284,2.646,2285,2.646,2286,2.646,2287,3.768,2288,2.646,2289,2.646,2290,4.388,2291,2.646,2292,2.646,2293,2.646,2294,2.646,2295,3.768,2296,2.646,2297,3.768,2298,3.768,2299,2.646,2310,4.512,2311,3.623,2312,5.16,2313,3.623,2314,3.623,2315,3.623]],["title/interfaces/MessageServiceConfig.html",[112,0.628,2261,2.508]],["body/interfaces/MessageServiceConfig.html",[8,0.012,21,0.109,22,0.28,23,0.109,24,0.073,33,1.537,34,1.174,35,0.235,38,1.103,48,0.226,98,0.253,99,0.152,100,1.395,102,1.154,103,0.971,109,0.005,110,0.008,111,0.005,112,0.823,114,1.349,118,0.407,119,0.795,120,0.94,125,1.438,126,0.736,143,4.453,145,1.349,149,1.546,190,2.035,193,1.079,205,1.819,210,1.224,219,1.114,226,1.635,251,1.843,252,1.079,253,2.037,254,1.079,255,1.014,261,2.039,316,1.602,317,0.842,319,3.125,336,1.046,400,2.357,404,1.329,423,2.97,451,1.902,483,3.033,496,4.001,548,1.414,569,0.791,580,3.118,588,2.037,589,1.786,607,4.454,679,3.057,689,3.531,766,2.836,769,2.233,772,3.752,779,2.035,787,1.794,788,3.722,794,3.396,801,1.662,809,2.501,811,2.494,840,2.357,856,3.476,906,2.494,954,3.476,978,3.888,998,2.035,1008,3.699,1060,2.654,1087,2.237,1099,2.357,1103,4.842,1499,2.357,1500,3.285,1983,2.237,2100,4.001,2160,2.654,2205,3.125,2252,2.494,2253,4.257,2254,4.001,2255,2.237,2256,2.846,2257,2.654,2258,3.476,2259,2.846,2260,4.454,2261,4.09,2262,3.966,2263,4.842,2264,2.494,2265,2.654,2266,2.846,2267,3.476,2268,2.846,2269,2.846,2270,2.846,2271,2.846,2272,2.846,2273,2.846,2274,3.966,2275,2.846,2276,2.846,2277,2.846,2278,2.846,2279,3.699,2280,2.846,2281,3.966,2282,2.846,2283,2.846,2284,2.846,2285,2.846,2286,2.846,2287,2.846,2288,2.846,2289,2.846,2290,4.565,2291,2.846,2292,2.846,2293,2.846,2294,2.846,2295,2.846,2296,2.846,2297,2.846,2298,2.846,2299,2.846]],["title/modules/OntologyExplorationModule.html",[0,1.184,14,2.823]],["body/modules/OntologyExplorationModule.html",[2,1.655,3,2.01,8,0.012,14,5.854,18,2.209,19,1.762,20,1.461,21,0.163,22,0.199,23,0.163,24,0.109,28,2.281,35,0.304,47,2.209,48,0.336,75,3.024,98,0.199,99,0.163,109,0.008,110,0.01,111,0.008,196,1.912,666,2.435,667,2.604,668,2.005,1849,4.587,2316,5.066,2317,5.066,2318,5.066,2319,5.483,2320,5.834,2321,5.483,2322,3.167,2323,5.793,2324,3.325,2325,4.23,2326,5.793,2327,3.503,2328,5.066]],["title/components/OntologySearchComponent.html",[130,0.507,535,1.261]],["body/components/OntologySearchComponent.html",[7,0.78,8,0.012,9,0.78,21,0.072,22,0.088,23,0.072,24,0.142,29,1.006,31,1.603,33,1.476,34,1.549,35,0.264,38,0.52,48,0.149,65,1.427,75,3.924,98,0.088,99,0.072,100,1.426,102,0.736,103,0.712,109,0.01,110,0.006,111,0.011,118,0.417,119,0.583,120,1.034,126,0.763,127,1.18,128,0.858,130,0.807,132,4.277,136,1.017,143,3.459,145,0.887,146,1.401,149,1.017,170,0.755,172,0.755,176,1.006,179,1.313,182,2.567,183,1.379,185,1.335,187,1.335,188,1.335,191,1.292,196,1.955,197,2.54,208,2.673,216,0.831,219,0.766,226,1.125,228,2.081,231,0.805,251,1.175,252,1.942,253,1.646,255,0.667,261,0.71,287,4.824,300,3.336,316,2.01,317,0.861,318,0.982,319,2.757,322,3.156,336,2.041,356,3.04,357,2.288,371,1.789,376,2.423,394,3.032,396,2.41,418,1.462,419,1.18,420,1.675,432,1.835,444,0.887,445,0.78,449,0.858,451,0.78,453,1.638,478,1.94,486,1.871,507,0.887,508,1.212,509,1.212,510,0.887,511,1.909,512,0.887,513,0.887,514,0.887,515,0.78,516,0.887,517,0.78,518,0.887,519,0.78,520,1.379,521,0.78,522,0.805,523,0.887,524,0.887,525,0.78,526,0.887,527,0.78,528,0.858,529,0.887,530,0.78,531,1.212,532,0.887,533,0.78,534,0.887,535,1.678,536,1.379,537,0.78,538,0.887,539,0.805,540,0.887,541,0.78,542,0.887,543,0.78,544,0.831,545,1.441,546,0.78,547,2.284,548,0.667,549,0.887,550,0.78,551,0.887,552,0.78,553,0.887,554,0.78,555,0.858,556,0.887,557,0.78,558,0.78,559,0.78,560,0.887,561,0.78,562,0.71,563,0.887,564,0.78,565,0.887,566,0.887,567,0.858,569,1.284,581,1.765,584,3.336,586,3.336,587,2.673,588,1.436,589,1.138,599,3.156,605,2.01,611,3.756,618,2.54,622,2.353,624,1.471,625,1.401,633,2.673,634,2.553,635,3.649,644,1.135,645,1.974,646,1.228,647,2.444,652,1.093,657,2.051,836,3.485,849,2.288,850,2.179,884,1.745,948,2.288,968,2.443,971,1.64,1036,3.485,1058,2.241,1087,2.288,1097,3.873,1142,1.871,1324,1.871,1390,2.714,1417,1.64,1418,1.64,1423,3.649,1424,3.267,1441,1.91,1442,1.401,1446,2.029,1463,3.412,1464,2.55,1467,1.55,1517,2.41,1527,2.91,1537,4.485,1538,4.191,1539,1.745,1541,2.029,1543,3.12,1545,1.871,1548,1.64,1559,3.156,1562,1.64,1617,2.91,1645,3.485,1751,2.241,1769,2.55,1828,4.62,1834,1.871,1897,3.12,1901,3.53,1943,2.241,1952,2.029,2180,3.156,2205,1.992,2219,2.029,2220,1.64,2279,2.714,2322,4.109,2324,4.364,2329,2.029,2330,3.985,2331,3.485,2332,4.277,2333,3.485,2334,4.89,2335,4.89,2336,6.828,2337,6.604,2338,3.985,2339,3.985,2340,3.985,2341,3.985,2342,4.277,2343,2.563,2344,3.43,2345,3.985,2346,4.89,2347,4.732,2348,2.563,2349,2.563,2350,3.985,2351,3.485,2352,3.985,2353,4.882,2354,2.563,2355,3.985,2356,3.985,2357,2.029,2358,7.749,2359,3.985,2360,2.563,2361,3.985,2362,3.985,2363,3.156,2364,3.985,2365,6.327,2366,2.563,2367,3.485,2368,3.985,2369,3.985,2370,2.563,2371,5.517,2372,3.985,2373,3.985,2374,2.563,2375,3.985,2376,2.563,2377,4.89,2378,2.563,2379,3.985,2380,3.985,2381,2.563,2382,1.871,2383,2.241,2384,2.241,2385,2.241,2386,2.563,2387,2.563,2388,2.563,2389,2.563,2390,2.563,2391,2.029,2392,2.563,2393,2.563,2394,2.563,2395,2.563,2396,2.563,2397,2.563,2398,2.563,2399,2.563,2400,2.563,2401,2.563,2402,2.563,2403,2.563,2404,2.563,2405,2.563,2406,2.563,2407,2.563,2408,3.985,2409,3.985,2410,3.985,2411,3.985,2412,2.029,2413,2.563,2414,2.563,2415,3.985,2416,2.241]],["title/modules/OntologySearchModule.html",[0,1.184,2319,2.653]],["body/modules/OntologySearchModule.html",[2,1.684,3,2.031,8,0.012,18,2.233,19,1.793,20,1.487,21,0.165,22,0.203,23,0.165,24,0.111,26,2.544,28,1.912,35,0.316,47,2.233,48,0.342,49,3.408,50,2.611,75,3.078,98,0.203,99,0.165,109,0.008,110,0.01,111,0.008,196,1.487,535,2.612,666,2.461,667,2.632,668,2.04,1538,3.384,1574,5.631,1575,4.669,2319,5.336,2322,3.223,2324,3.384,2382,4.305,2383,5.156,2417,5.156,2418,5.156,2419,5.156,2420,5.156,2421,6.219,2422,7.111,2423,7.111,2424,7.111,2425,5.895,2426,5.156]],["title/injectables/OntologySearchService.html",[404,1.014,2344,2.38]],["body/injectables/OntologySearchService.html",[8,0.012,21,0.09,22,0.11,23,0.09,24,0.145,29,1.192,31,1.642,33,1.665,34,1.021,35,0.268,38,0.959,48,0.186,65,0.555,98,0.162,99,0.09,102,1.379,103,1.179,109,0.009,110,0.007,111,0.01,112,0.715,118,0.805,119,0.691,120,1.193,126,0.796,127,1.475,135,5.036,136,1.272,143,3.065,144,2.342,145,1.11,146,2.582,149,1.272,175,1.603,196,2.032,197,3.769,219,0.878,226,1.516,245,3.449,252,0.888,253,1.904,254,0.888,261,2.068,316,1.942,317,1.212,319,2.36,357,4.519,372,3.022,373,3.054,404,1.513,405,1.603,418,1.687,419,1.233,420,1.425,445,1.882,547,2.32,569,1.4,589,1.602,676,3.958,754,1.272,791,1.942,801,2.014,817,3.216,822,3.216,948,3.55,1042,4.516,1043,2.342,1088,2.856,1142,5.691,1393,2.54,1394,3.449,1442,3.381,1464,2.052,1517,1.939,1537,2.856,1617,4.516,1740,3.216,1769,4.413,1788,3.449,1897,4.178,1901,5.037,1919,5.795,1947,5.343,2220,2.052,2255,1.841,2324,4.421,2344,3.55,2347,2.54,2353,3.818,2363,3.74,2391,3.74,2412,3.74,2427,6.1,2428,2.54,2429,4.131,2430,4.131,2431,4.903,2432,5.795,2433,4.723,2434,4.723,2435,4.723,2436,4.723,2437,4.723,2438,3.207,2439,4.131,2440,7.087,2441,3.207,2442,4.131,2443,4.131,2444,5.409,2445,4.131,2446,4.131,2447,3.207,2448,4.131,2449,4.131,2450,4.131,2451,3.207,2452,4.131,2453,3.207,2454,4.131,2455,4.131,2456,4.131,2457,3.207,2458,5.409,2459,4.131,2460,3.207,2461,4.131,2462,3.207,2463,3.207,2464,3.207,2465,2.805,2466,2.805,2467,4.903,2468,2.805,2469,2.54,2470,2.805,2471,2.805,2472,2.805,2473,2.805,2474,2.805,2475,2.805,2476,4.131,2477,2.805,2478,4.131,2479,4.131,2480,4.131,2481,4.131,2482,2.805,2483,2.805,2484,2.805,2485,2.805,2486,2.805,2487,2.805,2488,4.131,2489,4.131,2490,2.54,2491,2.805,2492,2.805]],["title/interfaces/OntologySelection.html",[112,0.628,156,2.823]],["body/interfaces/OntologySelection.html",[8,0.012,21,0.176,22,0.216,23,0.176,24,0.118,35,0.236,65,1.087,98,0.216,109,0.009,110,0.01,111,0.009,112,0.951,114,2.174,118,0.656,119,1.08,126,0.854,127,1.495,136,2.491,156,5.028,197,3.727,359,3.345,1901,5.18,2205,4.046,2493,5.493,2494,5.493,2495,6.411]],["title/components/OntologySelectionComponent.html",[130,0.507,537,1.261]],["body/components/OntologySelectionComponent.html",[7,1.014,8,0.012,9,1.014,21,0.094,22,0.115,23,0.094,24,0.149,29,1.226,31,1.697,33,1.05,34,1.362,35,0.252,38,0.677,48,0.193,65,1.459,75,4.14,88,3.109,91,2.656,98,0.115,99,0.094,100,1.738,102,0.615,103,0.596,109,0.005,110,0.007,111,0.009,118,0.348,119,0.711,120,0.992,121,3.668,125,1.117,126,0.855,127,1.126,128,1.116,130,0.949,133,2.639,135,4.186,136,1.322,156,4.29,157,2.915,158,5.288,170,0.982,172,0.982,176,1.59,179,1.539,182,2.642,183,1.681,185,1.627,187,1.627,188,1.627,190,2.537,191,1.575,193,1.345,196,2.159,198,5.537,199,4.249,216,1.081,219,0.522,231,1.047,251,1.432,252,1.345,253,1.264,254,1.345,255,1.264,309,1.997,316,1.997,350,3.847,354,2.329,355,3.308,356,3.406,357,1.913,371,2.043,418,1.402,419,1.197,444,1.154,445,2.465,449,1.116,451,1.014,453,1.997,478,2.992,507,1.154,508,1.478,509,1.478,510,1.154,511,2.18,512,1.154,513,1.154,514,1.154,515,1.014,516,1.154,517,1.014,518,1.154,519,1.014,520,1.681,521,1.014,522,1.047,523,1.154,524,1.154,525,1.014,526,1.154,527,1.014,528,1.116,529,1.154,530,1.014,531,1.478,532,1.154,533,1.014,534,1.154,535,1.014,536,1.681,537,1.916,538,1.154,539,1.978,540,1.154,541,1.014,542,1.154,543,1.014,544,1.081,545,1.69,546,1.014,547,2.048,548,0.867,549,1.154,550,1.014,551,1.154,552,1.014,553,1.154,554,1.014,555,1.116,556,1.154,557,1.014,558,1.014,559,1.014,560,1.154,561,1.014,562,0.923,563,1.154,564,1.014,565,1.154,566,1.154,567,1.116,569,1.164,573,2.537,581,2.151,588,1.492,605,2.357,618,2.237,622,2.072,712,4.474,754,1.322,789,3.289,1129,6.114,1215,3.308,1371,3.109,1386,4.249,1440,3.308,1464,3.109,1583,4.54,1596,3.847,1639,3.847,1640,4.989,1769,3.668,1897,3.497,1901,4.031,2230,3.109,2322,4.335,2324,1.913,2325,5.79,2327,2.016,2331,5.014,2342,5.014,2344,4.508,2384,2.915,2385,2.915,2432,4.989,2469,2.639,2490,2.639,2496,2.915,2497,4.858,2498,5.733,2499,4.858,2500,5.733,2501,5.733,2502,5.733,2503,3.333,2504,4.858,2505,3.333,2506,3.333,2507,4.249,2508,3.333,2509,3.333,2510,3.333,2511,3.333,2512,4.858,2513,4.858,2514,3.333,2515,4.858,2516,3.333,2517,4.858,2518,3.333,2519,4.858,2520,3.333,2521,2.915,2522,3.333,2523,3.333,2524,3.333]],["title/modules/OntologySelectionModule.html",[0,1.184,2320,2.823]],["body/modules/OntologySelectionModule.html",[2,1.67,3,2.021,8,0.012,18,2.222,19,1.779,20,1.475,21,0.164,22,0.201,23,0.164,24,0.11,26,2.532,28,2.294,35,0.305,47,2.222,48,0.339,75,3.053,98,0.201,99,0.164,109,0.008,110,0.01,111,0.008,196,1.92,537,2.625,666,2.449,667,2.619,668,2.024,1849,4.631,2319,5.265,2320,5.818,2321,5.265,2322,3.197,2324,3.356,2325,4.27,2327,3.536,2328,5.114,2344,4.368,2525,5.114,2526,5.114,2527,5.114,2528,5.847,2529,5.847,2530,5.847]],["title/modules/OntologyTreeModule.html",[0,1.184,2321,2.653]],["body/modules/OntologyTreeModule.html",[2,1.686,3,2.033,8,0.012,18,2.235,19,1.796,20,1.489,21,0.166,22,0.203,23,0.166,24,0.111,26,2.546,28,1.914,35,0.317,47,2.235,48,0.342,49,3.411,50,2.614,54,5.636,55,4.675,65,1.021,66,2.043,75,3.082,98,0.203,99,0.166,109,0.008,110,0.01,111,0.008,196,1.489,539,2.697,666,2.463,667,2.634,668,2.043,1842,4.304,1843,3.57,2321,5.338,2322,3.227,2327,3.57,2521,5.163,2531,5.163,2532,5.163,2533,5.163,2534,5.903,2535,7.117,2536,5.903,2537,7.117]],["title/components/ResultsBrowserComponent.html",[130,0.507,541,1.261]],["body/components/ResultsBrowserComponent.html",[7,0.816,8,0.012,9,0.816,21,0.075,22,0.092,23,0.075,24,0.149,29,1.042,31,1.702,33,1.319,34,1.498,35,0.23,38,0.545,48,0.156,58,3.857,65,1.427,78,6.142,98,0.092,99,0.075,101,1.467,102,1.19,103,0.738,109,0.011,110,0.006,111,0.011,118,0.28,119,0.604,120,1.056,121,3.618,125,1.404,126,0.843,127,1.271,128,0.899,130,0.869,136,1.064,170,0.791,172,0.791,175,1.341,176,1.042,178,3.271,179,1.351,182,2.581,183,1.429,185,1.383,187,1.383,188,1.383,191,1.339,193,1.785,195,2.812,196,1.27,197,2.318,205,2.159,214,1.623,216,1.632,219,0.956,226,0.617,231,0.843,251,1.217,252,1.144,253,1.588,255,0.698,293,2.064,317,0.58,323,1.863,336,1.109,342,2.347,354,3.219,356,3.191,371,2.09,373,1.829,382,3.016,389,4.646,418,1.493,419,1.2,420,0.893,432,1.236,437,1.144,444,0.929,445,0.816,449,0.899,451,0.816,453,1.698,478,2.974,507,0.929,508,1.256,509,1.531,510,0.929,511,1.957,512,0.929,513,0.929,514,0.929,515,0.816,516,0.929,517,0.816,518,0.929,519,0.816,520,1.429,521,0.816,522,0.843,523,0.929,524,0.929,525,0.816,526,0.929,527,0.816,528,0.899,529,0.929,530,0.816,531,1.256,532,0.929,533,0.816,534,0.929,535,0.816,536,1.429,537,0.816,538,0.929,539,0.843,540,0.929,541,1.72,542,0.929,543,0.816,544,0.87,545,1.484,546,0.816,547,1.144,548,0.698,549,0.929,550,0.816,551,0.929,552,0.816,553,0.929,554,0.816,555,0.899,556,0.929,557,0.816,558,0.816,559,0.816,560,0.929,561,0.816,562,0.743,563,0.929,564,0.816,565,0.929,566,0.929,567,0.899,569,1.239,581,1.829,583,1.827,584,3.419,586,3.045,587,2.752,588,1.075,605,3.037,608,3.016,614,1.717,618,2.968,622,3.197,624,1.54,625,1.467,644,2.504,645,1.801,646,1.286,647,3.554,649,2.89,650,2.498,652,2.749,653,2.89,654,3.016,657,1.833,676,4.436,677,1.96,802,3.612,842,1.144,884,1.827,885,2.371,887,3.612,913,1.54,968,2.855,969,1.96,970,2.347,971,1.717,1044,2.347,1139,4.403,1215,2.812,1324,1.96,1350,4.795,1364,4.403,1371,2.643,1378,3.419,1381,3.271,1387,3.618,1417,1.717,1418,2.643,1419,1.341,1421,2.064,1428,1.401,1438,2.125,1441,1.979,1442,1.467,1443,3.987,1444,2.347,1448,1.467,1461,1.401,1467,3.419,1471,2.347,1543,2.156,1544,2.812,1611,3.016,1621,3.612,1698,3.612,1737,2.643,1834,1.96,1859,3.612,1863,3.612,2100,4.125,2184,1.717,2190,3.428,2205,1.341,2416,2.347,2538,2.347,2539,4.13,2540,5.654,2541,5.654,2542,4.13,2543,5.654,2544,4.13,2545,4.13,2546,5.034,2547,4.13,2548,5.034,2549,4.13,2550,4.13,2551,4.13,2552,5.034,2553,4.13,2554,6.104,2555,5.034,2556,5.034,2557,4.403,2558,5.034,2559,5.034,2560,4.13,2561,2.684,2562,2.684,2563,2.684,2564,2.684,2565,2.684,2566,4.13,2567,2.684,2568,2.684,2569,2.684,2570,4.13,2571,4.13,2572,2.684,2573,4.13,2574,2.684,2575,2.684,2576,2.684,2577,4.13,2578,2.684,2579,5.654,2580,4.13,2581,2.684,2582,4.13,2583,4.13,2584,2.684,2585,4.13,2586,5.034,2587,2.684,2588,7.111,2589,4.13,2590,4.13,2591,4.13,2592,3.612,2593,5.034,2594,2.684,2595,2.684,2596,2.684,2597,2.684,2598,2.684,2599,2.684,2600,2.684,2601,4.13,2602,4.13,2603,4.13,2604,4.13,2605,2.684,2606,4.13,2607,4.13,2608,5.654,2609,2.684,2610,2.684,2611,2.347,2612,2.684,2613,4.13,2614,2.684,2615,2.125]],["title/modules/ResultsBrowserModule.html",[0,1.184,15,2.823]],["body/modules/ResultsBrowserModule.html",[2,1.705,3,2.046,8,0.012,15,5.778,18,2.25,19,1.816,20,1.506,21,0.167,22,0.205,23,0.167,24,0.112,26,2.563,28,2.323,35,0.306,47,2.25,48,0.346,78,5.231,98,0.205,99,0.167,109,0.008,110,0.01,111,0.01,522,1.874,541,2.616,666,2.479,667,2.651,668,2.066,1350,3.609,1352,4.358,1481,5.63,2616,5.22,2617,5.968,2618,5.22,2619,5.22,2620,5.968,2621,7.164,2622,5.968,2623,5.968,2624,5.968]],["title/components/RunSpatialSearchComponent.html",[130,0.507,543,1.261]],["body/components/RunSpatialSearchComponent.html",[7,1.328,8,0.012,9,1.328,21,0.122,22,0.15,23,0.122,24,0.134,31,1.433,35,0.164,38,0.886,48,0.253,65,1.498,98,0.15,99,0.214,102,1.309,109,0.006,110,0.008,111,0.008,118,0.456,119,0.859,126,0.722,127,0.78,128,1.462,130,0.811,170,1.287,172,1.287,176,1.481,179,1.78,182,2.704,183,2.032,185,1.966,187,1.966,188,1.966,196,1.673,216,1.416,219,0.684,228,3.065,231,1.371,317,1.269,318,1.672,371,1.416,419,1.049,420,1.269,444,1.511,445,1.328,449,1.462,451,1.328,507,1.511,508,2.251,509,1.786,510,1.511,511,2.455,512,1.511,513,1.511,514,1.511,515,1.328,516,1.511,517,1.328,518,1.511,519,1.328,520,2.032,521,1.328,522,1.371,523,1.511,524,1.511,525,1.328,526,1.511,527,1.328,528,1.462,529,1.511,530,1.328,531,1.786,532,1.511,533,1.328,534,1.511,535,1.328,536,2.032,537,1.328,538,1.511,539,1.371,540,1.511,541,1.328,542,1.511,543,2.158,544,2.714,545,2.541,546,1.328,547,2.295,548,1.726,549,1.511,550,1.328,551,1.511,552,1.328,553,1.511,554,1.328,555,1.462,556,1.511,557,1.328,558,1.328,559,1.328,560,1.511,561,1.328,562,1.209,563,1.511,564,1.328,565,1.511,566,1.511,567,1.462,569,0.886,581,2.6,605,2.727,622,2.504,633,2.387,634,2.279,635,2.934,645,1.562,652,1.862,754,1.732,773,3.626,781,3.065,801,2.504,812,2.934,834,2.182,882,2.279,892,2.093,994,3.509,1247,2.279,1378,3.55,1419,2.182,1420,2.279,1526,4.649,1539,2.973,1848,5.179,2329,3.457,2332,5.801,2333,5.134,2625,5.617,2626,6.633,2627,4.366,2628,5.871,2629,5.871,2630,4.366]],["title/modules/RunSpatialSearchModule.html",[0,1.184,1840,2.823]],["body/modules/RunSpatialSearchModule.html",[2,1.731,3,2.065,8,0.012,18,2.27,19,1.844,20,1.529,21,0.17,22,0.208,23,0.17,24,0.114,26,2.587,28,1.965,35,0.308,47,2.27,48,0.351,49,3.465,50,2.684,98,0.208,99,0.17,109,0.008,110,0.01,111,0.008,543,2.621,544,1.965,545,2.277,666,2.502,667,2.676,668,2.098,1840,5.71,1842,4.372,1843,3.665,1848,4.425,2420,5.3,2426,5.3,2625,4.799,2631,5.3,2632,5.3,2633,5.3]],["title/injectables/SceneState.html",[168,2.38,404,1.014]],["body/injectables/SceneState.html",[8,0.012,21,0.127,22,0.104,23,0.085,24,0.15,29,1.143,31,1.713,33,1.513,34,1.699,35,0.286,46,4.531,48,0.176,65,0.784,66,1.049,98,0.187,99,0.085,100,1.085,102,1.451,103,1.076,109,0.004,110,0.006,111,0.004,112,0.459,116,1.862,118,0.317,119,0.663,120,1.169,125,1.247,126,0.801,127,0.81,137,3.639,142,2.899,145,1.049,146,1.657,147,1.657,149,1.203,162,3.694,164,2.965,166,1.833,167,2.214,168,2.6,191,0.983,193,1.254,201,1.94,206,2.74,219,0.943,226,1.042,236,2.743,240,2.064,251,1.335,252,1.254,253,1.676,254,1.666,255,1.411,258,4.782,261,2.106,297,3.878,303,2.387,309,1.246,317,1.3,336,0.814,352,3.085,354,1.453,356,3.111,371,1.951,404,1.108,405,1.515,418,1.653,419,1.252,420,1.3,483,1.293,569,1.222,588,1.566,589,1.719,594,2.401,618,1.396,639,2.214,672,1.583,678,3.656,679,1.203,680,2.365,681,2.171,682,1.583,683,3.28,684,1.583,685,1.453,690,4.451,706,1.94,711,3.28,716,1.833,717,1.74,719,2.711,745,3.28,754,2.151,791,3.167,911,2.214,923,1.657,940,1.293,1041,4.601,1046,5.828,1059,2.214,1061,2.064,1101,1.94,1181,1.833,1204,2.401,1208,3.085,1218,2.064,1265,4.6,1282,2.214,1284,2.064,1312,2.214,1382,2.214,1387,1.94,1528,1.74,1638,2.74,1897,3.656,1898,2.401,1928,2.064,1960,1.833,2189,3.96,2190,3.693,2196,2.651,2198,3.308,2199,3.96,2200,3.693,2212,3.308,2218,4.097,2222,2.064,2223,2.064,2228,2.214,2229,2.214,2230,1.94,2231,2.214,2232,2.214,2233,3.085,2234,2.214,2235,2.214,2236,2.214,2237,2.214,2239,2.214,2634,2.214,2635,5.262,2636,6.553,2637,6.296,2638,4.743,2639,4.53,2640,5.262,2641,4.53,2642,4.53,2643,4.53,2644,4.53,2645,3.032,2646,3.032,2647,5.262,2648,3.032,2649,3.962,2650,3.962,2651,3.962,2652,3.032,2653,3.032,2654,3.032,2655,5.374,2656,3.032,2657,4.394,2658,3.032,2659,3.032,2660,3.085,2661,3.032,2662,3.032,2663,3.032,2664,3.032,2665,3.962,2666,3.032,2667,3.962,2668,3.032,2669,3.962,2670,3.032,2671,3.962,2672,3.032,2673,2.214,2674,3.962,2675,2.214,2676,2.401,2677,2.214,2678,3.962,2679,3.962,2680,2.651,2681,2.651,2682,2.651,2683,2.651,2684,2.651,2685,3.962,2686,3.962,2687,5.262,2688,2.651,2689,4.743,2690,2.651,2691,2.651,2692,2.651,2693,2.651,2694,2.651,2695,2.651,2696,2.651,2697,2.401,2698,2.651,2699,2.651,2700,2.651,2701,2.651,2702,2.651,2703,2.651,2704,2.651,2705,2.651,2706,2.651,2707,2.651,2708,2.651,2709,2.651,2710,2.651,2711,2.651,2712,2.651,2713,2.651,2714,2.651,2715,2.651,2716,2.651,2717,2.651,2718,2.651,2719,2.651,2720,2.651,2721,2.651,2722,2.651,2723,2.651,2724,2.651,2725,2.651,2726,2.651,2727,2.651,2728,2.651,2729,2.651,2730,2.651,2731,2.401,2732,2.651,2733,2.651,2734,2.651,2735,2.651,2736,2.651]],["title/interfaces/SceneStateModel.html",[112,0.628,2677,3.028]],["body/interfaces/SceneStateModel.html",[8,0.012,21,0.144,22,0.123,23,0.1,24,0.067,34,1.594,35,0.297,46,4.166,48,0.208,65,0.885,66,1.24,98,0.205,99,0.1,100,1.281,102,1.323,103,1.164,109,0.005,110,0.007,111,0.005,112,0.542,114,1.24,116,1.472,118,0.374,119,0.749,120,0.885,125,1.373,126,0.821,127,1.164,137,3.094,142,3.274,145,1.24,146,1.958,147,1.958,149,1.421,162,3.264,164,2.797,166,2.166,167,2.615,168,2.056,191,1.161,193,0.992,201,2.292,206,3.094,219,1.02,226,1.177,236,2.657,240,2.439,251,1.056,252,0.992,253,1.793,254,1.417,255,1.332,258,4.765,261,1.908,297,3.427,303,2.368,309,1.472,336,0.961,352,3.484,354,1.717,356,2.999,371,1.659,404,1.252,419,0.64,483,1.527,588,1.332,589,1.861,594,2.836,618,1.649,639,2.615,672,1.87,678,3.401,679,1.421,680,2.672,681,2.453,682,1.87,683,3.094,684,1.87,685,1.717,690,4.166,706,2.292,711,2.166,716,2.166,717,2.056,719,2.557,745,3.611,763,4.052,791,3.032,911,2.615,923,1.958,940,1.527,1041,4.065,1046,5.841,1059,2.615,1061,2.439,1101,2.292,1181,2.166,1204,2.836,1208,3.484,1218,2.439,1265,4.333,1282,2.615,1284,2.439,1312,2.615,1382,2.615,1387,2.292,1528,2.056,1638,2.166,1897,3.597,1898,2.836,1928,2.439,1960,2.166,2189,4.36,2190,2.439,2198,2.615,2199,3.736,2200,3.484,2212,2.615,2218,3.484,2222,2.439,2223,2.439,2228,2.615,2229,2.615,2230,2.292,2231,2.615,2232,2.615,2233,3.484,2234,2.615,2235,2.615,2236,2.615,2237,2.615,2239,2.615,2634,2.615,2635,6.025,2636,6.812,2637,6.596,2638,3.132,2640,3.132,2647,4.475,2649,3.132,2650,3.132,2651,3.132,2655,5.606,2657,3.736,2660,2.439,2665,3.132,2667,3.132,2669,3.132,2671,3.132,2673,2.615,2674,4.475,2675,2.615,2676,2.836,2677,3.736,2678,6.025,2679,6.025,2680,3.132,2681,3.132,2682,3.132,2683,3.132,2684,3.132,2685,4.475,2686,4.475,2687,5.696,2688,3.132,2689,5.221,2690,3.132,2691,3.132,2692,3.132,2693,3.132,2694,3.132,2695,3.132,2696,3.132,2697,2.836,2698,3.132,2699,3.132,2700,3.132,2701,3.132,2702,3.132,2703,3.132,2704,3.132,2705,3.132,2706,3.132,2707,3.132,2708,3.132,2709,3.132,2710,3.132,2711,3.132,2712,3.132,2713,3.132,2714,3.132,2715,3.132,2716,3.132,2717,3.132,2718,3.132,2719,3.132,2720,3.132,2721,3.132,2722,3.132,2723,3.132,2724,3.132,2725,3.132,2726,3.132,2727,3.132,2728,3.132,2729,3.132,2730,3.132,2731,2.836,2732,3.132,2733,3.132,2734,3.132,2735,3.132,2736,3.132]],["title/interfaces/SearchResult.html",[112,0.628,2353,2.823]],["body/interfaces/SearchResult.html",[8,0.012,21,0.111,22,0.136,23,0.111,24,0.074,33,1.543,34,0.852,35,0.285,38,0.8,48,0.228,65,0.682,98,0.188,99,0.111,102,1.161,103,1.276,109,0.01,110,0.008,111,0.011,112,0.952,114,1.364,118,0.846,119,0.801,126,0.777,127,1.42,135,4.592,136,1.563,143,2.992,144,2.877,145,1.364,146,2.992,149,1.563,175,1.969,196,1.95,197,3.696,219,0.857,226,1.642,245,2.877,252,1.515,253,2.011,254,1.515,261,1.741,319,1.969,357,4.351,372,2.521,373,2.785,404,1.538,420,0.852,445,1.665,547,2.325,569,0.8,589,1.941,676,3.502,791,1.62,801,1.68,817,2.683,822,2.683,948,3.142,1042,4.592,1043,2.877,1088,2.383,1142,5.396,1393,4.334,1394,2.877,1442,2.992,1464,3.502,1517,3.31,1537,2.383,1617,3.996,1740,2.683,1769,3.502,1788,2.877,1897,4.228,1901,5.137,1919,5.381,1947,5.396,2220,2.521,2255,3.142,2324,2.262,2344,3.142,2347,4.334,2353,4.282,2363,3.12,2391,3.12,2412,3.12,2427,3.12,2428,3.12,2429,3.446,2430,3.446,2431,3.446,2432,4.98,2439,3.446,2440,7.021,2442,3.446,2443,3.446,2444,4.787,2445,3.446,2446,3.446,2448,3.446,2449,3.446,2450,3.446,2452,3.446,2454,3.446,2455,3.446,2456,3.446,2458,4.787,2459,3.446,2461,3.446,2465,3.446,2466,4.787,2467,6.463,2468,3.446,2469,3.12,2470,3.446,2471,3.446,2472,3.446,2473,3.446,2474,3.446,2475,3.446,2476,4.787,2477,3.446,2478,4.787,2479,4.787,2480,4.787,2481,4.787,2482,3.446,2483,3.446,2484,3.446,2485,3.446,2486,3.446,2487,3.446,2488,4.787,2489,4.787,2490,3.12,2491,3.446,2492,3.446]],["title/components/SpatialSearchConfigBehaviorComponent.html",[130,0.507,546,1.261]],["body/components/SpatialSearchConfigBehaviorComponent.html",[7,1.021,8,0.012,9,1.021,21,0.094,22,0.115,23,0.094,24,0.153,29,1.232,31,1.742,33,1.515,34,1.7,35,0.264,38,0.681,48,0.195,65,1.46,66,1.162,98,0.115,99,0.094,100,1.747,102,1.465,103,0.6,109,0.005,110,0.007,111,0.007,118,0.351,119,0.714,120,1.162,126,0.787,128,1.124,129,3.822,130,0.703,168,3.628,169,2.935,170,0.989,172,0.989,176,1.232,179,1.545,181,2.03,182,2.643,183,1.69,185,1.636,187,1.636,188,1.636,196,1.452,206,3.481,216,1.088,219,1.161,231,1.054,255,1.271,258,3.304,261,1.75,263,2.953,280,2.148,317,1.452,396,3.822,418,1.408,419,1.2,420,1.452,434,1.752,435,1.752,436,1.677,437,1.431,438,1.835,444,1.162,445,1.021,449,1.124,451,1.021,507,1.162,508,1.485,509,1.485,510,1.162,511,2.188,512,1.162,513,1.162,514,1.162,515,1.021,516,1.162,517,1.021,518,1.162,519,1.021,520,1.69,521,1.021,522,1.054,523,1.162,524,1.162,525,1.021,526,1.162,527,1.021,528,1.124,529,1.162,530,1.021,531,1.485,532,1.162,533,1.021,534,1.162,535,1.021,536,1.69,537,1.021,538,1.162,539,1.054,540,1.162,541,1.021,542,1.162,543,1.021,544,1.088,545,2.293,546,1.923,547,2.388,548,2.238,549,1.162,550,1.485,551,1.162,552,1.021,553,1.162,554,1.021,555,1.124,556,1.162,557,1.021,558,1.021,559,1.021,560,1.162,561,1.021,562,0.929,563,1.162,564,1.021,565,1.162,566,1.162,567,1.124,605,2.974,766,3.005,776,3.919,779,3.3,826,3.919,868,2.285,1063,5.032,1265,3.822,1805,2.658,1808,5.923,2357,2.658,2655,5.679,2737,5.191,2738,2.935,2739,4.883,2740,5.756,2741,4.883,2742,5.756,2743,5.756,2744,5.756,2745,5.034,2746,5.756,2747,5.528,2748,6.321,2749,4.27,2750,4.27,2751,3.356,2752,5.756,2753,6.321,2754,4.883,2755,3.356,2756,3.356,2757,3.356,2758,3.356,2759,4.883,2760,3.356,2761,4.883,2762,3.356,2763,3.356,2764,3.356,2765,3.356,2766,3.356,2767,3.356,2768,3.867,2769,3.356,2770,3.356,2771,3.356,2772,2.148,2773,2.935,2774,3.356,2775,3.356,2776,4.883,2777,3.356,2778,5.756,2779,3.356,2780,6.321,2781,3.356,2782,3.356,2783,3.356,2784,3.356,2785,3.356,2786,3.356,2787,3.356,2788,3.356,2789,3.356,2790,3.356,2791,3.356,2792,3.356]],["title/modules/SpatialSearchConfigBehaviorModule.html",[0,1.184,2793,3.028]],["body/modules/SpatialSearchConfigBehaviorModule.html",[2,1.689,3,2.035,8,0.012,18,2.237,19,1.798,20,1.491,21,0.166,22,0.203,23,0.166,24,0.111,26,2.548,28,2.31,35,0.306,47,2.237,48,0.343,98,0.203,99,0.166,109,0.008,110,0.01,111,0.008,545,2.099,546,2.613,547,2.249,548,1.989,666,2.465,667,2.636,668,2.046,1805,4.681,1808,4.316,1809,5.17,2737,3.783,2772,3.783,2793,6.187,2794,5.17,2795,5.17,2796,5.17,2797,5.17,2798,5.617,2799,5.911,2800,7.123,2801,5.911]],["title/components/SpatialSearchConfigComponent.html",[130,0.507,550,1.261]],["body/components/SpatialSearchConfigComponent.html",[7,1.063,8,0.012,9,1.063,21,0.165,22,0.12,23,0.098,24,0.146,31,1.65,35,0.189,38,0.709,48,0.203,65,1.476,66,1.209,98,0.173,99,0.165,102,1.352,109,0.005,110,0.007,111,0.007,118,0.365,119,0.736,121,3.217,126,0.843,127,0.625,128,1.17,130,0.72,170,1.03,172,1.03,176,1.269,179,1.581,182,2.659,183,1.74,185,1.684,187,1.684,188,1.684,196,1.486,197,1.609,206,3.561,216,1.133,219,1.009,231,1.097,317,1.087,318,1.338,323,1.861,336,1.907,347,2.379,371,2.213,396,3.041,419,0.899,420,1.087,432,1.609,444,1.209,445,1.063,449,1.17,451,1.063,453,2.067,478,2.555,507,1.209,508,1.529,509,1.529,510,1.209,511,2.229,512,1.209,513,1.209,514,1.209,515,1.063,516,1.209,517,1.063,518,1.209,519,1.063,520,1.74,521,1.063,522,1.849,523,1.209,524,1.209,525,1.063,526,1.209,527,1.063,528,1.17,529,1.209,530,1.063,531,1.529,532,1.209,533,1.063,534,1.209,535,1.063,536,1.74,537,1.063,538,1.209,539,1.097,540,1.209,541,1.063,542,1.209,543,1.063,544,1.133,545,2.405,546,1.063,547,2.374,548,1.906,549,1.209,550,1.959,551,1.209,552,1.063,553,1.209,554,1.063,555,1.17,556,1.209,557,1.063,558,1.063,559,1.063,560,1.209,561,1.063,562,1.392,563,1.209,564,1.063,565,1.209,566,1.209,567,1.17,581,2.227,605,3.138,614,2.236,622,2.91,633,1.91,634,1.825,635,2.513,645,1.799,646,2.823,647,2.513,649,2.886,652,3.196,653,2.886,654,2.552,657,2.088,754,1.386,773,3.219,781,2.625,783,2.227,812,2.513,834,1.746,849,2.006,882,1.825,892,2.823,913,2.886,934,2.113,935,1.675,940,1.49,968,2.608,994,2.711,1063,4.884,1076,2.886,1265,4.127,1370,2.006,1419,2.943,1420,3.075,1421,3.219,1422,4.386,1423,3.552,1424,3.219,1426,2.886,1427,2.886,1428,3.075,1443,2.767,1448,2.749,1449,4.397,1450,3.056,1451,2.552,1452,3.982,1463,1.746,1473,2.767,1479,2.552,1537,3.041,1538,2.886,1539,2.379,1543,3.363,1544,3.423,1545,2.552,1546,2.236,1548,2.236,1561,2.006,1562,2.236,1737,2.236,1828,2.552,1831,2.379,1945,5.633,1960,2.113,2611,3.056,2655,4.983,2737,4.957,2745,5.15,2747,5.15,2749,5.15,2750,5.15,2768,4.664,2772,4.957,2802,2.767,2803,5.889,2804,5.028,2805,5.889,2806,3.495,2807,3.495,2808,3.495,2809,3.495,2810,3.495,2811,3.495,2812,3.495,2813,5.028,2814,5.15,2815,5.028,2816,5.028,2817,5.889,2818,3.495,2819,3.495,2820,3.495,2821,5.028,2822,3.495,2823,3.495,2824,3.495]],["title/modules/SpatialSearchConfigModule.html",[0,1.184,2798,2.823]],["body/modules/SpatialSearchConfigModule.html",[2,1.684,3,2.031,8,0.012,18,2.233,19,1.793,20,1.487,21,0.165,22,0.203,23,0.165,24,0.111,26,2.544,28,1.912,35,0.316,47,2.233,48,0.342,49,3.408,50,2.611,98,0.203,99,0.165,109,0.008,110,0.01,111,0.008,545,1.738,547,2.114,550,2.612,666,2.461,667,2.632,668,2.04,1576,5.631,1577,4.669,1842,4.3,1843,3.565,2382,4.305,2421,6.219,2737,3.772,2772,3.772,2773,5.156,2798,5.678,2825,5.156,2826,5.156,2827,5.156,2828,5.895,2829,7.111,2830,5.895]],["title/components/SpinnerOverlayComponent.html",[130,0.507,552,1.261]],["body/components/SpinnerOverlayComponent.html",[7,1.263,8,0.012,9,1.263,20,1.432,21,0.116,22,0.143,23,0.116,24,0.137,31,1.502,35,0.156,38,0.843,48,0.241,65,1.492,85,5.312,98,0.143,99,0.211,102,1.193,109,0.006,110,0.008,111,0.008,118,0.593,119,0.83,120,1.202,125,0.955,126,0.756,127,1.155,128,1.391,130,0.889,170,1.224,172,1.224,176,1.432,179,1.735,182,2.693,183,1.964,185,1.901,187,1.901,188,1.901,191,1.84,196,1.631,205,1.901,216,1.346,230,5.138,231,2.643,317,1.397,336,1.523,344,2.511,371,1.346,376,2.173,419,1.014,420,1.397,432,2.612,444,1.437,445,1.263,449,1.391,451,1.263,453,2.333,478,2.564,507,1.437,508,2.213,509,1.726,510,1.437,511,2.405,512,1.437,513,1.437,514,1.437,515,1.263,516,1.437,517,1.263,518,1.437,519,1.263,520,1.964,521,1.263,522,1.304,523,1.437,524,1.437,525,1.263,526,1.437,527,1.263,528,1.391,529,1.437,530,1.263,531,1.726,532,1.437,533,1.263,534,1.437,535,1.263,536,1.964,537,1.263,538,1.437,539,1.304,540,1.437,541,1.263,542,1.437,543,1.263,544,1.346,545,1.905,546,1.263,547,1.571,548,1.08,549,1.437,550,1.263,551,1.437,552,2.113,553,1.437,554,1.263,555,1.391,556,1.437,557,1.263,558,1.263,559,1.263,560,1.437,561,1.263,562,1.15,563,1.437,564,1.263,565,1.437,566,1.437,567,1.391,569,1.477,614,3.631,635,2.836,645,1.486,646,1.99,647,2.075,652,2.42,653,2.383,657,1.346,754,1.647,773,3.534,781,2.963,783,1.839,812,2.836,834,2.075,842,1.771,882,2.168,885,2.383,892,2.72,935,2.72,940,3.202,968,1.839,971,2.657,975,3.631,1355,4.962,1419,2.075,1420,2.168,1426,2.383,1428,2.963,1442,4.339,1461,2.168,1517,3.431,1528,2.383,1543,2.168,1550,3.864,1661,5.653,1737,2.657,1831,2.827,2660,4.731,2831,5.761,2832,3.631,2833,5.674,2834,6.464,2835,5.674,2836,4.152,2837,5.674,2838,4.152,2839,5.674,2840,5.674,2841,4.152,2842,4.152,2843,4.152]],["title/modules/SpinnerOverlayModule.html",[0,1.184,16,2.823]],["body/modules/SpinnerOverlayModule.html",[2,1.751,3,2.079,8,0.012,16,5.722,18,2.286,19,1.864,20,1.546,21,0.172,22,0.211,23,0.172,24,0.116,26,2.604,28,1.987,35,0.302,47,2.286,48,0.355,85,4.475,98,0.211,99,0.172,109,0.009,110,0.01,111,0.009,231,2.286,552,2.624,666,2.519,667,2.694,668,2.121,2831,4.854,2844,5.36,2845,5.36,2846,5.36,2847,6.129,2848,6.365,2849,5.36,2850,6.129]],["title/modules/StoreModule.html",[0,1.184,1003,2.823]],["body/modules/StoreModule.html",[0,1.616,2,1.616,8,0.012,21,0.159,22,0.195,23,0.159,24,0.107,28,1.834,35,0.32,47,2.177,48,0.328,65,0.979,66,2.4,88,3.619,98,0.238,99,0.159,103,1.011,109,0.008,110,0.01,111,0.008,138,4.722,154,3.619,155,3.619,162,3.791,164,3.791,166,3.421,167,4.13,168,3.98,254,1.566,303,2.244,353,4.479,354,2.711,384,4.479,672,2.953,681,2.711,685,2.711,719,3.465,923,3.092,1003,4.722,1247,2.953,1960,3.421,1969,4.13,1977,4.437,2222,3.851,2223,3.851,2851,4.479,2852,5.656,2853,4.947,2854,5.656,2855,4.947,2856,6.558,2857,5.656,2858,5.656,2859,5.656,2860,4.947,2861,4.479,2862,5.656,2863,5.656,2864,5.656,2865,4.947,2866,5.656,2867,5.656,2868,5.656,2869,5.656,2870,6.934,2871,5.656,2872,5.656,2873,5.656,2874,5.656,2875,5.656,2876,5.656,2877,5.656]],["title/modules/ThemingModule.html",[0,1.184,1004,2.823]],["body/modules/ThemingModule.html",[2,1.794,3,2.109,8,0.012,18,2.319,19,1.911,20,1.585,21,0.176,22,0.216,23,0.176,24,0.118,35,0.278,47,2.319,48,0.364,91,4.037,92,4.586,93,4.974,98,0.216,99,0.176,109,0.009,110,0.01,111,0.009,159,5.352,210,1.972,1004,5.695,2878,5.493,2879,5.493,2880,6.28,2881,7.384,2882,6.28,2883,6.28,2884,6.28]],["title/injectables/ThemingService.html",[159,2.653,404,1.014]],["body/injectables/ThemingService.html",[8,0.012,21,0.104,22,0.128,23,0.104,24,0.151,29,1.327,31,1.717,33,1.568,34,1.697,35,0.198,38,0.756,41,2.948,42,2.535,46,5.004,48,0.216,67,2.719,95,5.483,98,0.181,99,0.227,103,1.362,106,3.256,109,0.005,110,0.007,111,0.005,118,0.389,119,0.77,120,1.318,126,0.843,127,1.464,130,0.887,131,4.942,159,3.366,176,1.327,190,3.185,205,1.762,219,0.956,226,1.524,230,3.366,251,1.55,253,1.819,255,0.969,257,5.907,261,2.268,293,2.629,297,3.019,314,3.841,317,1.647,355,5.188,382,5.563,400,2.252,404,1.287,405,1.861,418,1.71,419,1.25,420,0.805,452,2.035,509,2.269,569,1.346,588,1.889,613,5.105,616,6.347,801,2.243,818,3.256,843,3.256,844,2.948,1029,3.256,1088,3.181,1221,3.841,1441,1.784,1623,3.256,1657,4.6,1902,2.719,1983,3.805,2001,2.948,2257,2.535,2258,2.382,2264,2.382,2495,2.948,2660,5.188,2697,5.249,2885,2.948,2886,5.26,2887,7.46,2888,5.26,2889,6.628,2890,6.628,2891,5.26,2892,3.723,2893,3.723,2894,5.26,2895,3.723,2896,4.6,2897,4.6,2898,6.992,2899,3.723,2900,5.26,2901,6.628,2902,3.723,2903,5.26,2904,5.26,2905,5.26,2906,3.723,2907,5.26,2908,3.723,2909,5.26,2910,3.723,2911,3.723,2912,3.723,2913,3.723,2914,3.723,2915,3.723,2916,3.256,2917,3.723,2918,3.723,2919,3.723,2920,3.723,2921,6.628,2922,3.723,2923,3.723,2924,3.723,2925,3.723,2926,3.723,2927,5.26,2928,3.723,2929,3.723,2930,3.723,2931,3.723,2932,3.723,2933,3.723,2934,3.723,2935,3.723]],["title/components/ThumbnailCarouselComponent.html",[130,0.507,554,1.261]],["body/components/ThumbnailCarouselComponent.html",[7,0.85,8,0.012,9,0.85,20,1.075,21,0.078,22,0.096,23,0.078,24,0.141,29,1.075,31,1.586,33,1.343,35,0.217,38,0.567,48,0.162,65,1.453,98,0.096,99,0.184,102,1.414,103,0.5,109,0.007,110,0.006,111,0.006,118,0.445,119,0.623,120,0.484,126,0.741,127,1.218,128,0.936,130,0.631,136,1.108,170,0.824,172,0.824,175,2.129,176,1.075,179,1.386,182,2.614,183,1.474,185,1.427,187,1.427,188,1.427,191,1.381,196,1.303,207,5.993,210,1.338,214,4.247,216,0.906,219,0.438,226,1.429,231,0.878,252,1.18,253,1.109,254,1.721,317,1.416,318,1.977,323,1.034,336,1.931,343,2.576,344,1.69,371,1.872,376,2.381,389,3.978,418,0.684,419,0.923,420,1.343,432,1.961,436,2.886,437,1.817,444,0.967,445,0.85,449,0.936,451,0.85,453,1.751,478,1.69,499,2.041,507,0.967,508,1.993,509,1.296,510,0.967,511,1.998,512,0.967,513,0.967,514,0.967,515,0.85,516,0.967,517,0.85,518,0.967,519,0.85,520,1.474,521,0.85,522,1.621,523,0.967,524,0.967,525,0.85,526,0.967,527,0.85,528,0.936,529,0.967,530,0.85,531,1.296,532,0.967,533,0.85,534,0.967,535,0.85,536,1.474,537,0.85,538,0.967,539,0.878,540,0.967,541,0.85,542,0.967,543,0.85,544,0.906,545,1.522,546,0.85,547,1.18,548,1.503,549,0.967,550,0.85,551,0.967,552,0.85,553,0.967,554,1.757,555,2.616,556,0.967,557,0.85,558,0.85,559,0.85,560,0.967,561,0.85,562,0.774,563,0.967,564,0.85,565,0.967,566,0.967,567,0.936,569,0.865,581,2.557,589,1.475,605,2.122,614,2.726,622,1.817,633,1.528,634,1.459,647,2.58,649,2.963,650,1.69,651,2.041,652,2.793,653,1.604,657,2.209,754,1.108,773,2.822,781,2.224,782,2.901,783,2.286,812,2.129,834,1.397,842,2.651,870,2.445,882,1.459,883,2.445,892,2.979,913,2.963,934,1.69,935,2.042,940,2.793,948,2.445,968,3.186,969,3.111,971,2.726,975,2.726,992,2.129,994,3.312,1076,1.604,1370,2.963,1378,2.576,1409,3.726,1419,2.58,1420,3.246,1421,2.58,1422,2.901,1423,2.58,1424,1.528,1426,2.445,1427,2.445,1428,2.695,1438,3.374,1441,2.042,1442,1.528,1445,2.041,1447,3.726,1448,2.822,1451,2.041,1452,2.213,1454,2.444,1461,2.695,1463,1.397,1467,3.122,1490,5.081,1524,3.374,1542,2.213,1543,2.695,1548,4.359,1550,2.901,1562,1.788,1581,3.111,1737,1.788,1749,3.374,1864,3.726,1952,2.213,1960,1.69,2205,2.886,2253,4.638,2254,4.359,2260,3.492,2267,3.304,2351,3.726,2557,4.515,2660,1.903,2936,5.449,2937,2.213,2938,3.726,2939,3.726,2940,4.26,2941,5.163,2942,4.26,2943,4.923,2944,5.163,2945,4.26,2946,5.163,2947,5.163,2948,6.55,2949,2.795,2950,2.795,2951,4.26,2952,5.163,2953,4.515,2954,4.26,2955,2.795,2956,4.26,2957,4.26,2958,4.26,2959,5.163,2960,4.26,2961,4.26,2962,5.729,2963,4.26,2964,4.26,2965,4.26,2966,4.26,2967,2.795,2968,5.698,2969,5.163,2970,4.26,2971,4.26,2972,4.26,2973,4.26,2974,3.726,2975,4.26,2976,4.26,2977,4.26,2978,4.26,2979,4.26,2980,4.26,2981,2.795,2982,4.088,2983,2.795,2984,4.26,2985,2.795,2986,2.795,2987,3.726,2988,6.55,2989,2.795,2990,2.795,2991,2.795,2992,4.26,2993,4.26,2994,2.795,2995,4.26,2996,4.26,2997,4.26,2998,4.26,2999,2.795,3000,5.163,3001,2.795,3002,2.795,3003,2.795,3004,2.795,3005,2.795,3006,2.795,3007,2.795,3008,2.795]],["title/modules/ThumbnailCarouselModule.html",[0,1.184,1486,2.823]],["body/modules/ThumbnailCarouselModule.html",[2,2.033,3,2.033,8,0.012,18,2.235,19,1.796,20,1.489,21,0.166,22,0.203,23,0.166,24,0.111,26,2.546,28,1.914,35,0.314,47,2.235,48,0.342,49,3.411,50,2.614,98,0.203,99,0.166,109,0.008,110,0.01,111,0.008,255,1.536,554,2.612,555,1.977,666,2.463,667,2.634,668,2.043,1486,5.68,1490,4.02,1842,4.304,1843,3.57,2936,4.311,2943,4.675,2968,5.636,3009,5.163,3010,5.163,3011,5.163,3012,5.903,3013,7.117,3014,5.903,3015,5.903,3016,5.903,3017,5.903,3018,5.903]],["title/components/TissueSectionVisComponent.html",[130,0.507,557,1.261]],["body/components/TissueSectionVisComponent.html",[7,1.173,8,0.012,9,1.173,21,0.108,22,0.133,23,0.108,24,0.138,29,1.36,31,1.531,33,1.343,35,0.203,38,0.783,48,0.223,65,1.487,98,0.133,99,0.206,102,1.148,109,0.005,110,0.008,111,0.008,118,0.65,119,0.789,120,0.667,125,1.24,126,0.771,127,0.689,128,1.292,130,0.76,136,1.529,170,1.137,172,1.137,176,1.36,179,1.669,182,2.677,183,1.866,185,1.806,187,1.806,188,1.806,191,1.25,193,1.864,196,1.568,197,2.482,205,1.806,210,1.211,216,1.25,226,1.24,231,1.211,254,1.493,303,2.138,317,1.165,318,2.065,323,2.301,336,1.807,340,3.372,343,2.332,344,3.26,371,1.748,373,2.387,376,2.065,418,0.943,419,1.312,420,1.165,432,2.862,437,1.644,444,1.335,445,1.173,449,1.292,451,1.173,453,2.216,478,2.466,507,1.335,508,2.155,509,1.64,510,1.335,511,2.33,512,1.335,513,1.335,514,1.335,515,1.173,516,1.335,517,1.173,518,1.335,519,1.173,520,1.866,521,1.173,522,1.211,523,1.335,524,1.335,525,1.173,526,1.335,527,1.173,528,1.292,529,1.335,530,1.173,531,1.64,532,1.335,533,1.173,534,1.335,535,1.173,536,1.866,537,1.173,538,1.335,539,1.211,540,1.335,541,1.173,542,1.335,543,1.173,544,1.25,545,1.832,546,1.173,547,1.493,548,1.003,549,1.335,550,1.173,551,1.335,552,1.173,553,1.335,554,1.173,555,1.292,556,1.335,557,2.048,558,2.517,559,2.602,560,1.335,561,1.173,562,1.068,563,1.335,564,1.173,565,1.335,566,1.335,567,1.292,589,2.152,644,1.708,645,1.929,646,2.584,652,2.651,657,2.016,754,1.529,781,2.815,783,1.708,812,2.694,834,1.927,842,2.299,850,2.947,882,2.013,883,2.213,968,2.753,1350,4.439,1359,5.436,1421,3.107,1426,2.213,1441,1.848,1445,2.816,1446,3.054,1451,2.816,1461,2.013,1479,2.816,1493,5.359,1561,3.095,1834,4.539,2080,3.054,2592,4.715,3019,5.812,3020,3.372,3021,7.34,3022,6.216,3023,5.391,3024,5.391,3025,6.216,3026,7.084,3027,6.216,3028,3.856,3029,4.715,3030,4.715,3031,3.856,3032,5.391,3033,5.391,3034,5.391,3035,5.391,3036,5.391,3037,3.856,3038,5.391,3039,5.391,3040,5.391,3041,3.856,3042,3.856,3043,3.856,3044,3.856,3045,3.856,3046,3.856,3047,3.856]],["title/modules/TissueSectionVisModule.html",[0,1.184,1487,2.823]],["body/modules/TissueSectionVisModule.html",[2,1.758,3,2.084,8,0.012,18,2.291,19,1.872,20,1.553,21,0.173,22,0.212,23,0.173,24,0.116,26,2.611,28,1.996,35,0.293,47,2.291,48,0.357,98,0.212,99,0.173,109,0.009,110,0.01,111,0.009,557,2.625,558,1.872,559,2.366,666,2.525,667,2.7,668,2.13,1350,3.722,1487,5.727,1493,4.495,3019,4.875,3048,5.383,3049,5.383,3050,5.383,3051,6.155,3052,6.155]],["title/components/ToggleButtonComponent.html",[130,0.507,561,1.261]],["body/components/ToggleButtonComponent.html",[7,0.888,8,0.012,9,0.888,21,0.082,22,0.1,23,0.082,24,0.147,29,1.111,31,1.67,33,1.494,34,1.44,35,0.222,38,0.593,48,0.169,65,1.456,98,0.1,99,0.187,100,2.113,101,1.596,102,0.979,103,0.948,109,0.004,110,0.006,111,0.006,118,0.305,119,0.644,120,0.762,125,1.457,126,0.725,127,0.948,128,0.978,129,3.571,130,0.89,145,1.01,170,0.86,172,1.868,176,1.111,179,2.254,182,2.606,183,1.524,185,1.475,187,1.475,188,1.475,191,1.719,193,1.219,196,1.338,205,2.122,210,1.665,216,0.947,219,0.69,226,1.358,231,0.917,236,1.524,251,1.298,252,1.219,253,1.536,255,0.76,261,2.055,263,3.571,280,1.868,315,2.407,317,1.369,318,1.687,319,2.201,323,2.185,371,1.719,418,1.077,419,1.191,420,1.369,434,1.524,435,1.524,437,1.245,444,1.01,445,0.888,449,0.978,451,0.888,507,1.01,508,1.928,509,1.339,510,1.01,511,2.044,512,1.01,513,1.01,514,1.01,515,0.888,516,1.01,517,0.888,518,1.01,519,0.888,520,1.524,521,0.888,522,0.917,523,1.01,524,1.01,525,0.888,526,1.01,527,0.888,528,0.978,529,1.01,530,0.888,531,1.339,532,1.01,533,0.888,534,1.01,535,0.888,536,1.524,537,0.888,538,1.01,539,0.917,540,1.01,541,0.888,542,1.01,543,0.888,544,1.719,545,1.563,546,0.888,547,1.219,548,0.76,549,1.01,550,0.888,551,1.01,552,0.888,553,1.01,554,0.888,555,0.978,556,1.01,557,0.888,558,0.888,559,0.888,560,1.01,561,1.796,562,2.276,563,1.01,564,0.888,565,1.01,566,1.01,567,0.978,569,1.076,588,1.146,618,3.067,646,1.399,652,1.245,657,0.947,754,1.158,765,4.199,766,2.768,769,2.926,772,1.399,773,2.898,776,4.708,777,3.487,778,4.676,779,3.083,781,2.299,782,2.998,787,2.027,788,2.441,789,3.083,790,3.215,791,1.81,794,2.642,798,3.215,799,2.998,801,1.878,805,2.998,812,2.201,826,3.61,827,3.215,834,1.459,838,2.131,842,3.165,849,3.389,850,4.177,857,2.312,859,2.131,865,2.553,868,1.988,882,1.524,883,1.676,892,1.399,906,2.818,915,3.487,917,3.487,918,3.487,922,2.663,925,4.182,930,4.864,935,2.11,947,2.312,953,1.765,968,1.293,992,2.201,994,3.699,1247,3.803,1418,1.868,1419,1.459,1420,1.524,1423,2.201,1424,2.407,1427,1.676,1428,1.524,1441,1.399,1461,1.524,1463,3.329,1502,6.181,1546,3.778,1561,1.676,1638,2.663,1831,1.988,2080,2.312,2085,2.553,2086,4.637,2087,4.637,2105,3.851,2133,2.553,2137,3.851,2148,5.826,2149,5.826,3053,6.826,3054,2.553,3055,5.302,3056,4.403,3057,4.403,3058,2.919,3059,4.403,3060,6.661,3061,4.403,3062,4.403,3063,5.302,3064,2.919,3065,2.919,3066,2.919,3067,2.919,3068,2.919,3069,2.919,3070,2.919,3071,2.919,3072,2.919,3073,2.919,3074,2.919,3075,2.919,3076,2.919,3077,2.919,3078,2.919,3079,2.919,3080,2.919,3081,2.919,3082,2.919,3083,4.403,3084,4.403,3085,2.919,3086,2.919]],["title/components/ViewerComponent.html",[130,0.507,564,1.261]],["body/components/ViewerComponent.html",[7,1.128,8,0.012,9,1.128,21,0.104,22,0.128,23,0.104,24,0.148,29,1.323,31,1.673,33,1.133,34,1.43,35,0.197,38,0.753,48,0.215,57,2.372,58,1.936,65,1.478,98,0.128,99,0.171,100,1.876,101,2.027,102,0.968,103,0.663,109,0.005,110,0.007,111,0.007,118,0.387,119,0.767,120,0.907,126,0.811,127,1.088,128,1.242,130,0.744,170,1.093,172,1.093,176,1.323,179,1.633,182,2.668,183,1.815,185,1.756,187,1.756,188,1.756,196,1.535,208,2.867,210,1.911,212,4.161,216,2.468,219,0.581,230,2.372,231,1.647,255,0.965,261,1.685,309,2.156,317,1.509,318,1.42,323,2.252,336,1.945,371,1.973,396,2.242,397,4.586,418,1.283,419,1.183,420,1.509,428,2.242,432,2.802,437,1.581,444,1.283,445,1.128,449,1.242,451,1.128,453,2.156,478,2.08,507,1.283,508,1.595,509,1.595,510,1.283,511,2.29,512,1.283,513,1.283,514,1.283,515,1.128,516,1.283,517,1.128,518,1.283,519,1.128,520,1.815,521,1.128,522,1.164,523,1.283,524,1.283,525,1.128,526,1.283,527,1.128,528,1.242,529,1.283,530,1.128,531,1.595,532,1.283,533,1.128,534,1.283,535,1.128,536,1.815,537,1.128,538,1.283,539,1.164,540,1.283,541,1.128,542,1.283,543,1.128,544,1.202,545,1.794,546,1.128,547,1.452,548,0.965,549,1.283,550,1.128,551,1.283,552,1.128,553,1.283,554,1.128,555,1.242,556,1.283,557,1.128,558,1.851,559,1.128,560,1.283,561,1.128,562,1.026,563,1.283,564,2.012,565,1.283,566,1.283,567,1.242,569,0.753,581,2.322,605,2.502,617,3.571,622,2.236,635,1.853,645,2.177,647,2.621,648,2.707,652,2.821,653,2.128,657,1.973,754,1.471,773,3.327,781,2.738,783,2.322,812,2.621,834,1.853,842,1.581,850,2.027,851,4.153,882,1.936,892,2.917,968,2.695,994,1.707,1038,6.105,1247,1.936,1254,4.586,1391,3.171,1417,2.372,1419,2.621,1420,2.738,1421,1.853,1423,1.853,1424,2.027,1426,3.01,1427,2.128,1435,2.936,1441,1.777,1461,1.936,1463,1.853,1467,3.68,1583,4.819,1596,4.153,1639,4.153,1640,5.239,1737,2.372,1740,3.571,1925,4.586,1935,3.829,1960,2.242,1973,4.819,1975,5.239,1980,4.819,1983,4.007,1985,2.936,2053,4.819,3087,3.242,3088,4.586,3089,6.085,3090,5.244,3091,6.085,3092,6.616,3093,3.707,3094,5.244,3095,3.707,3096,3.707,3097,5.244,3098,3.707,3099,3.707,3100,3.707,3101,4.586,3102,5.244,3103,5.244,3104,5.244,3105,3.707,3106,5.244,3107,3.707,3108,6.085,3109,5.244,3110,4.586,3111,3.707,3112,3.707,3113,3.707]],["title/modules/ViewerModule.html",[0,1.184,17,2.823]],["body/modules/ViewerModule.html",[2,1.724,3,2.06,8,0.012,17,5.705,18,2.265,19,1.836,20,1.523,21,0.169,22,0.208,23,0.169,24,0.114,26,2.58,28,1.957,35,0.312,47,2.265,48,0.35,49,3.456,50,2.673,98,0.208,99,0.169,109,0.008,110,0.01,111,0.008,231,1.895,564,2.619,666,2.496,667,2.669,668,2.089,1842,4.361,1843,3.65,2848,6.307,2849,5.278,3114,5.278,3115,5.278,3116,5.278,3117,6.035,3118,6.035]],["title/injectables/WorkerDataSourceService.html",[404,1.014,1344,2.823]],["body/injectables/WorkerDataSourceService.html",[0,1.524,8,0.012,21,0.15,22,0.183,23,0.15,24,0.144,29,1.687,31,1.579,33,1.445,35,0.288,38,1.083,48,0.309,65,1.157,66,1.847,98,0.183,99,0.15,102,0.985,103,1.306,109,0.007,110,0.009,111,0.007,116,2.749,117,6.697,118,0.558,120,1.264,125,1.68,126,0.858,127,1.195,136,2.116,138,5.214,212,3.993,219,1.144,226,1.68,254,2.12,255,1.74,261,2.12,262,5.296,404,1.636,405,2.666,410,5.334,418,1.787,419,1.306,423,2.917,668,1.847,1337,5.214,1338,3.896,1344,4.554,1345,4.883,3119,6.697,3120,7.305,3121,6.688,3122,6.688,3123,5.335,3124,7.305,3125,7.658,3126,5.335,3127,6.688,3128,5.335,3129,5.335,3130,6.688,3131,5.335,3132,6.688,3133,5.335,3134,5.335,3135,5.335,3136,5.335,3137,5.335,3138,5.335,3139,5.335,3140,5.335,3141,5.335,3142,5.335,3143,5.335,3144,5.335,3145,5.335,3146,5.335]],["title/changelog.html",[3147,2.525,3148,2.525,3149,2.738]],["body/changelog.html",[3,1.361,8,0.009,21,0.167,31,0.428,38,0.402,58,1.694,65,1.377,66,0.686,89,3.844,91,1.083,94,4.385,95,2.077,108,5.418,109,0.003,110,0.005,111,0.009,112,0.903,114,0.686,119,0.29,120,0.343,126,0.216,130,0.582,136,2.085,175,2.627,176,0.819,182,1.019,193,0.899,196,1.569,201,4.12,203,3.773,206,4.749,207,2.57,214,1.198,216,2.088,219,1.009,254,2.138,257,1.569,258,3.571,262,1.569,278,2.37,293,2.381,298,4.937,300,3.762,303,1.89,309,1.694,314,1.447,316,1.959,317,0.428,318,0.759,321,1.733,322,1.569,323,0.733,343,2.881,347,1.349,351,1.733,352,1.349,354,1.555,355,2.806,356,0.912,360,3.604,361,4.167,371,1.705,372,1.268,376,1.243,389,2.077,428,2.492,436,2.979,438,1.774,445,0.603,449,1.596,490,1.733,496,1.268,499,4.122,509,0.603,522,1.019,547,1.879,548,0.516,558,2.177,559,0.987,562,0.899,567,0.664,580,1.863,587,1.083,589,0.566,590,2.57,598,2.57,599,1.569,603,5.933,607,1.198,608,1.447,611,2.21,625,1.083,644,0.878,657,0.643,704,1.349,789,1.035,791,2.898,799,2.21,801,2.242,817,1.349,822,1.349,842,0.845,863,1.198,864,1.694,885,1.137,917,1.569,922,3.179,930,1.447,940,0.845,986,1.198,992,1.622,994,1.494,995,1.349,998,1.035,1059,1.447,1063,2.077,1064,2.57,1068,2.57,1070,1.569,1071,1.349,1078,1.569,1079,3.773,1082,4.163,1084,1.569,1088,1.963,1098,1.569,1100,3.479,1113,1.447,1153,2.838,1191,2.57,1215,2.21,1221,2.37,1247,1.035,1248,1.733,1249,1.569,1252,2.806,1255,3.264,1256,1.733,1262,1.349,1263,1.569,1265,4.329,1284,2.806,1354,1.733,1369,1.447,1370,1.137,1385,2.838,1387,1.268,1390,1.349,1391,1.198,1394,1.447,1396,1.733,1433,4.597,1435,1.569,1448,1.774,1464,3.612,1465,1.733,1476,4.167,1506,1.733,1514,2.57,1517,1.963,1525,1.569,1537,1.198,1538,1.137,1544,1.349,1552,1.733,1564,1.569,1581,2.37,1665,2.57,1667,3.604,1674,2.57,1681,2.838,1740,2.21,1749,1.569,1766,1.569,1769,1.268,1770,3.604,1790,1.733,1792,1.733,1823,3.773,1833,1.733,1862,4.167,1902,2.37,1926,2.838,1935,3.838,1947,2.37,2006,2.57,2061,2.57,2180,1.569,2200,3.244,2205,0.99,2218,4.94,2233,1.349,2255,1.137,2260,2.881,2310,1.733,2367,1.733,2495,2.57,2507,1.733,2615,2.57,2657,3.009,2673,4.955,2731,2.57,2865,1.733,2896,1.733,2897,1.733,2938,1.733,2939,2.838,2943,1.569,2962,1.733,2974,4.167,2987,2.838,3029,4.597,3088,4.167,3110,2.838,3148,3.009,3149,2.57,3150,1.733,3151,1.733,3152,3.245,3153,4.764,3154,1.982,3155,8.562,3156,3.245,3157,3.245,3158,5.645,3159,1.982,3160,1.982,3161,5.645,3162,1.982,3163,6.786,3164,3.245,3165,4.72,3166,7.17,3167,5.213,3168,1.982,3169,5.96,3170,5.213,3171,1.982,3172,1.982,3173,3.245,3174,4.764,3175,1.982,3176,3.245,3177,4.121,3178,1.982,3179,4.121,3180,1.982,3181,1.982,3182,1.982,3183,1.982,3184,1.982,3185,1.982,3186,7.158,3187,1.982,3188,1.982,3189,1.733,3190,1.733,3191,1.733,3192,1.982,3193,3.245,3194,1.733,3195,1.982,3196,3.245,3197,4.764,3198,4.764,3199,4.121,3200,1.982,3201,1.982,3202,1.982,3203,1.982,3204,5.645,3205,4.471,3206,4.597,3207,3.604,3208,1.982,3209,6.625,3210,4.597,3211,1.982,3212,3.245,3213,1.982,3214,4.121,3215,5.44,3216,7.049,3217,3.245,3218,1.982,3219,1.982,3220,3.245,3221,6.786,3222,3.604,3223,1.982,3224,5.645,3225,5.257,3226,1.982,3227,1.982,3228,1.982,3229,1.982,3230,1.982,3231,1.982,3232,2.838,3233,2.838,3234,5.96,3235,5.44,3236,1.982,3237,1.982,3238,1.982,3239,1.982,3240,4.597,3241,1.982,3242,3.245,3243,1.982,3244,3.245,3245,3.245,3246,3.245,3247,3.245,3248,1.982,3249,1.982,3250,1.982,3251,1.982,3252,3.245,3253,3.245,3254,1.982,3255,1.982,3256,3.245,3257,3.245,3258,4.764,3259,1.982,3260,1.982,3261,1.982,3262,1.982,3263,3.245,3264,1.982,3265,1.982,3266,5.645,3267,2.838,3268,1.982,3269,1.982,3270,1.982,3271,4.121,3272,3.245,3273,5.645,3274,2.838,3275,4.764,3276,2.838,3277,1.982,3278,1.982,3279,3.245,3280,3.245,3281,1.982,3282,1.982,3283,3.245,3284,1.982,3285,1.982,3286,1.982,3287,1.982,3288,3.245,3289,1.982,3290,1.982,3291,1.982,3292,1.982,3293,1.982,3294,1.982,3295,1.982,3296,1.982,3297,1.982,3298,3.245,3299,1.982,3300,1.982,3301,4.121,3302,4.121,3303,3.245,3304,1.982,3305,1.982,3306,1.982,3307,3.245,3308,1.982,3309,1.982,3310,1.982,3311,3.245,3312,3.245,3313,4.121,3314,1.982,3315,1.982,3316,1.982,3317,1.982,3318,1.982,3319,3.245,3320,1.982,3321,1.982,3322,1.982,3323,4.121,3324,3.245,3325,1.982,3326,1.982,3327,4.121,3328,3.245,3329,4.764,3330,1.982,3331,1.982,3332,1.982,3333,3.245,3334,1.982,3335,1.982,3336,1.982,3337,1.982,3338,1.982,3339,1.982,3340,4.121,3341,1.982,3342,4.121,3343,5.257,3344,3.245,3345,3.245,3346,3.245,3347,4.121,3348,4.764,3349,5.257,3350,3.245,3351,4.121,3352,1.982,3353,1.982,3354,5.96,3355,4.121,3356,4.764,3357,1.982,3358,1.982,3359,1.982,3360,1.982,3361,3.245,3362,1.982,3363,1.982,3364,1.982,3365,3.245,3366,1.982,3367,1.982,3368,3.604,3369,3.245,3370,3.604,3371,1.982,3372,1.982,3373,1.982,3374,1.982,3375,1.982,3376,1.982,3377,1.982,3378,1.982,3379,1.982,3380,1.982,3381,1.982,3382,4.764,3383,5.645,3384,4.121,3385,1.982,3386,1.982,3387,4.121,3388,1.982,3389,1.982,3390,1.982,3391,3.245,3392,3.245,3393,4.121,3394,1.982,3395,1.982,3396,1.982,3397,1.982,3398,1.982,3399,1.733,3400,1.982,3401,1.982,3402,1.982,3403,1.982,3404,1.982,3405,1.982,3406,1.982,3407,1.982,3408,1.982,3409,1.982,3410,1.982,3411,1.982,3412,1.982,3413,1.982,3414,6.221,3415,1.982,3416,3.604,3417,6.221,3418,4.121,3419,4.764,3420,3.245,3421,4.121,3422,1.982,3423,1.982,3424,1.982,3425,1.982,3426,3.245,3427,1.982,3428,1.982,3429,1.982,3430,3.245,3431,1.982,3432,1.982,3433,1.982,3434,1.982,3435,1.982,3436,1.982,3437,1.982,3438,1.982,3439,1.982,3440,1.982,3441,1.982,3442,1.982,3443,1.982,3444,1.982,3445,1.982,3446,1.982,3447,1.982,3448,1.982,3449,1.982,3450,1.982,3451,1.982,3452,1.982,3453,1.982,3454,1.982,3455,3.245,3456,1.982,3457,3.245,3458,1.982,3459,3.245,3460,3.245,3461,4.764,3462,4.764,3463,3.245,3464,3.245,3465,1.982,3466,1.982,3467,1.982,3468,1.982,3469,1.733,3470,1.982,3471,1.982,3472,1.982,3473,1.982,3474,1.982,3475,1.982,3476,3.245,3477,6.625,3478,4.121,3479,3.245,3480,1.982,3481,3.245,3482,1.982,3483,1.982,3484,1.982,3485,1.982,3486,1.982,3487,1.982,3488,3.245,3489,5.213,3490,3.245,3491,1.982,3492,1.982,3493,1.982,3494,1.982,3495,3.773,3496,1.982,3497,3.245,3498,1.982,3499,1.982,3500,1.982,3501,3.245,3502,1.982,3503,1.982,3504,1.982,3505,3.245,3506,4.121,3507,3.245,3508,1.982,3509,2.838,3510,1.982,3511,1.982,3512,1.982,3513,1.982,3514,1.982,3515,1.982,3516,1.982,3517,1.982,3518,1.982,3519,1.733,3520,1.982,3521,1.982,3522,1.982,3523,1.982,3524,1.982,3525,1.982,3526,1.733,3527,1.982,3528,1.982,3529,3.245,3530,1.733,3531,1.982,3532,1.982,3533,1.982,3534,1.982,3535,1.982,3536,1.982,3537,1.982,3538,1.982,3539,1.982,3540,3.245,3541,1.982,3542,1.982,3543,3.245,3544,1.982,3545,1.982,3546,1.982,3547,1.982,3548,1.982,3549,1.982,3550,1.982,3551,1.982,3552,1.982]],["title/coverage.html",[3495,4.489]],["body/coverage.html",[7,1.04,8,0.012,9,1.04,23,0.096,24,0.165,36,2.327,38,1.004,39,2.495,67,2.495,72,2.327,75,3.532,78,3.612,82,2.327,85,2.495,89,3.369,99,0.163,109,0.005,110,0.007,111,0.005,112,1.244,113,2.706,115,4.327,126,0.372,130,1.026,136,1.355,156,2.327,159,2.187,162,1.868,164,1.868,166,2.992,168,1.962,170,1.007,172,1.007,219,0.535,223,6.358,254,0.946,303,1.355,336,2.206,394,3.242,404,1.91,406,2.989,407,2.989,432,3.955,446,3.918,447,3.918,505,2.706,515,1.04,517,1.04,519,1.04,521,1.04,525,1.04,527,1.04,530,1.04,533,1.04,535,1.04,537,1.04,539,1.073,541,1.04,543,1.04,545,1.458,546,1.04,547,1.765,548,1.287,550,1.04,552,1.04,554,1.04,557,1.04,559,1.505,561,1.04,564,1.04,568,2.989,671,4.34,672,3.328,673,4.34,691,2.327,708,2.327,719,1.708,764,3.918,769,2.034,794,1.355,809,1.573,889,2.989,976,2.067,977,4.091,983,2.067,990,2.067,991,2.067,1016,2.327,1018,3.96,1034,2.706,1035,4.802,1062,2.495,1069,3.918,1102,2.706,1242,2.495,1243,4.34,1244,3.918,1245,3.918,1264,2.327,1336,2.495,1337,4.34,1338,4.246,1344,2.327,1350,3.517,1351,2.706,1352,2.495,1353,2.989,1425,4.605,1490,3.369,1493,2.495,1499,2.067,1500,2.067,1502,2.706,1504,2.989,1579,2.706,1580,2.989,1763,3.369,1764,2.495,1765,2.989,1808,2.495,1848,2.495,1851,2.989,1893,2.706,1895,2.989,1896,2.989,1907,2.989,1924,2.989,1968,2.495,1969,3.612,1970,3.918,1977,2.187,2029,2.706,2030,4.246,2062,2.706,2184,2.187,2185,2.989,2186,2.989,2187,3.918,2188,3.918,2224,2.495,2252,4.513,2254,2.187,2261,2.067,2322,3.698,2324,3.338,2325,2.495,2327,3.517,2329,3.918,2344,1.962,2353,2.327,2427,3.918,2428,3.918,2493,2.989,2494,2.989,2496,2.989,2538,2.989,2615,2.706,2625,2.706,2634,4.246,2675,2.495,2677,2.495,2737,3.166,2738,2.989,2772,2.187,2802,2.706,2831,2.706,2832,2.989,2851,2.706,2861,2.706,2885,3.918,2936,3.612,2937,3.918,2982,2.706,3019,2.706,3020,2.989,3053,2.989,3054,2.989,3087,2.989,3119,2.989,3165,2.706,3205,2.706,3495,2.706,3553,3.417,3554,4.947,3555,6.374,3556,3.417,3557,3.417,3558,4.947,3559,4.947,3560,3.417,3561,3.417,3562,4.947,3563,5.815,3564,3.417,3565,4.947,3566,2.989,3567,8.084,3568,3.417,3569,3.417,3570,5.815,3571,3.417,3572,3.417,3573,4.947,3574,3.417,3575,3.417,3576,2.989,3577,2.989,3578,5.815,3579,5.815,3580,3.417,3581,3.417,3582,3.417,3583,4.947,3584,3.417,3585,4.947,3586,3.417,3587,3.417,3588,3.417,3589,4.605,3590,3.417,3591,2.989,3592,2.989,3593,3.417,3594,3.417,3595,3.417,3596,3.417,3597,3.417,3598,4.947,3599,3.417,3600,2.989,3601,3.417,3602,3.417,3603,3.417,3604,4.947,3605,4.947,3606,4.947,3607,3.417,3608,3.417,3609,3.417,3610,3.417,3611,3.417]],["title/dependencies.html",[3,1.425,3194,3.024]],["body/dependencies.html",[3,1.408,8,0.012,23,0.138,44,4.31,48,0.286,57,4.069,58,3.32,109,0.007,110,0.009,111,0.007,145,1.706,175,2.463,201,3.153,509,1.934,587,2.694,624,3.65,625,2.694,639,3.598,668,1.706,681,3.047,685,2.362,687,3.598,688,3.598,763,3.903,937,3.903,1042,3.598,1043,4.643,1075,3.903,1259,3.598,1261,3.598,1582,3.598,1625,4.31,1685,3.903,1897,2.573,2220,3.153,2230,3.153,2382,3.598,2853,4.31,2855,4.31,2856,5.561,2953,4.31,2968,3.903,3210,4.31,3232,4.31,3267,4.31,3274,4.31,3368,4.31,3416,5.561,3612,4.928,3613,4.928,3614,8.338,3615,4.928,3616,4.928,3617,4.928,3618,4.928,3619,4.928,3620,4.928,3621,4.928,3622,4.928,3623,4.928,3624,4.928,3625,4.928,3626,4.928,3627,7.039,3628,4.928,3629,6.358,3630,4.928,3631,4.928,3632,4.928,3633,4.928,3634,7.039,3635,4.928,3636,4.928,3637,4.928,3638,4.928,3639,4.928,3640,4.928,3641,4.928,3642,4.928,3643,4.928,3644,4.928,3645,4.928,3646,6.358,3647,4.928,3648,4.928,3649,4.928,3650,4.928,3651,6.358,3652,4.928,3653,4.928,3654,6.358,3655,4.928,3656,4.928,3657,4.928,3658,4.928,3659,4.928,3660,4.928,3661,4.928,3662,4.928,3663,4.928,3664,4.928,3665,4.928,3666,4.928,3667,4.928,3668,4.928,3669,4.31,3670,4.928,3671,4.928,3672,4.928,3673,4.928,3674,4.928,3675,4.928,3676,6.358,3677,4.928,3678,4.928,3679,4.928,3680,4.928,3681,4.928,3682,4.928,3683,4.928,3684,4.928,3685,4.928,3686,4.928,3687,4.928,3688,4.928,3689,4.928,3690,4.928,3691,4.928,3692,4.928,3693,4.928,3694,4.928,3695,4.928,3696,4.928,3697,4.928,3698,4.928,3699,4.928,3700,4.928,3701,4.928,3702,4.928,3703,6.358,3704,4.928,3705,4.928,3706,4.928,3707,4.928,3708,4.928,3709,4.928,3710,4.928,3711,4.928,3712,4.928,3713,4.928,3714,4.928,3715,4.928]],["title/miscellaneous/enumerations.html",[3716,1.985,3717,4.364]],["body/miscellaneous/enumerations.html",[8,0.012,24,0.125,109,0.009,110,0.011,111,0.009,118,0.692,161,6.028,236,2.29,254,1.832,420,1.645,573,3.455,1035,4.505,1075,5.24,1080,6.657,1081,5.558,3716,3.798,3717,5.787,3718,5.24]],["title/miscellaneous/functions.html",[3716,1.985,3719,4.364]],["body/miscellaneous/functions.html",[8,0.012,24,0.141,33,1.733,34,1.221,89,4.718,109,0.008,110,0.01,111,0.008,118,0.59,120,1.412,125,1.299,127,1.01,179,1.86,210,1.774,211,4.125,229,3.615,254,1.564,373,3.319,394,3.843,418,1.962,419,1.433,420,1.221,436,3.463,446,4.473,447,5.487,482,4.94,505,5.487,569,1.586,689,3.913,764,4.473,787,2.601,839,6.188,840,4.19,841,4.94,842,2.955,848,4.94,851,4.473,923,4.097,985,3.977,997,3.416,1035,3.846,1051,4.94,1081,5.059,1082,4.473,1083,6.059,1084,4.473,1085,4.94,1087,3.242,1088,3.416,1089,4.94,1090,4.94,1092,6.059,1093,4.94,1094,4.94,1095,4.94,1096,4.94,1097,4.473,1098,5.935,1099,3.416,1100,4.125,1101,3.615,1102,5.487,2357,4.473,3576,6.059,3577,6.059,3600,6.059,3716,3.242,3718,5.935,3719,4.94,3720,5.649,3721,5.649,3722,5.649]],["title/index.html",[118,0.361,3147,2.525,3148,2.525]],["body/index.html",[8,0.009,21,0.223,65,1.511,94,5.256,108,5.025,109,0.008,110,0.009,111,0.008,112,1.027,114,1.888,130,0.667,175,2.727,206,4.463,300,4.463,438,2.983,608,4.952,789,2.849,870,3.132,892,2.615,1014,6.751,1078,4.321,1079,5.371,1100,3.984,1109,5.931,1191,5.371,1211,4.772,1252,3.715,1370,3.132,1935,3.984,2673,3.984,3149,4.321,3150,5.931,3151,5.931,3165,4.321,3166,5.931,3170,6.751,3189,4.772,3190,4.772,3191,4.772,3206,6.943,3207,6.751,3215,5.931,3222,4.772,3233,5.931,3235,4.772,3276,5.931,3509,4.772,3519,4.772,3723,5.456,3724,5.456,3725,5.456,3726,5.931,3727,5.456,3728,5.456,3729,6.782,3730,6.782,3731,6.782,3732,7.38,3733,5.456,3734,5.456,3735,7.72,3736,7.38,3737,5.456,3738,5.456,3739,6.782,3740,5.456,3741,5.456,3742,5.456,3743,6.782,3744,5.456,3745,5.456,3746,5.456,3747,5.456,3748,5.456,3749,5.456,3750,5.456,3751,5.456,3752,5.456,3753,5.456,3754,5.456,3755,5.456,3756,5.456,3757,5.456,3758,5.456,3759,5.456,3760,5.456,3761,5.456,3762,5.456,3763,5.456]],["title/license.html",[3147,2.525,3148,2.525,3764,3.024]],["body/license.html",[8,0.01,20,1.502,94,4.053,109,0.008,110,0.01,111,0.008,178,4.714,205,1.994,618,2.74,689,3.108,817,4.053,822,5.221,1391,4.325,1406,5.205,1990,4.714,2255,3.416,3205,4.714,3240,6.255,3399,6.255,3469,5.205,3489,5.205,3526,5.205,3669,5.205,3726,7.418,3764,5.205,3765,5.952,3766,7.667,3767,5.952,3768,5.952,3769,7.152,3770,5.952,3771,5.952,3772,5.952,3773,5.952,3774,7.152,3775,5.952,3776,5.952,3777,5.952,3778,5.952,3779,5.952,3780,5.952,3781,5.952,3782,5.952,3783,5.952,3784,5.952,3785,5.952,3786,5.952,3787,7.152,3788,5.952,3789,5.952,3790,5.952,3791,5.952,3792,5.952,3793,7.152,3794,5.952,3795,5.952,3796,5.952,3797,5.952,3798,5.952,3799,5.952,3800,5.952,3801,5.952,3802,5.952,3803,5.952,3804,5.952,3805,5.952,3806,5.952,3807,5.952,3808,5.952,3809,5.952,3810,5.952,3811,5.952,3812,5.952,3813,5.952,3814,5.952,3815,5.952,3816,5.952,3817,5.952]],["title/modules.html",[2,1.619]],["body/modules.html",[1,4.19,2,1.639,8,0.01,10,3.908,11,3.908,12,3.672,13,3.908,14,3.908,15,3.908,16,3.908,17,3.908,58,4.566,109,0.008,110,0.01,111,0.008,661,3.908,1002,3.908,1003,3.908,1004,3.908,1258,6.385,1481,3.908,1486,3.908,1487,3.908,1569,3.908,1835,3.908,1840,3.908,2319,3.672,2320,3.908,2321,3.672,2657,4.19,2793,4.19,2798,3.908,3030,5.019,3167,7.648,3818,8.754]],["title/overview.html",[3819,4.958]],["body/overview.html",[1,6.137,2,1.045,3,1.484,4,3.198,5,3.198,6,3.198,7,1.837,8,0.012,9,1.837,10,5.327,11,5.562,12,4.749,13,5.164,14,5.442,15,5.164,16,4.913,17,4.913,18,1.631,19,1.112,20,0.923,109,0.005,110,0.007,111,0.005,114,1.266,159,3.865,170,2.187,172,2.187,176,0.923,405,1.828,515,2.258,517,2.258,519,2.258,521,2.258,525,2.258,527,2.258,530,2.258,533,2.258,535,2.258,537,2.347,539,2.33,541,2.258,543,2.258,546,2.258,550,2.258,552,2.258,554,2.258,557,2.258,561,2.258,564,2.258,590,2.896,661,4.913,662,3.198,663,3.198,664,3.198,999,3.198,1000,3.198,1001,3.198,1002,5.327,1003,4.113,1004,4.729,1481,5.327,1482,3.198,1483,3.198,1484,3.198,1485,3.198,1486,4.913,1487,4.913,1495,3.198,1496,3.198,1497,3.198,1569,4.913,1570,3.198,1571,3.198,1572,3.198,1755,3.198,1756,3.198,1757,3.198,1835,5.527,1836,3.198,1837,3.198,1838,3.198,1839,3.198,1840,4.913,1887,3.198,1889,3.198,1890,3.198,1894,2.67,1961,3.198,1962,3.198,1963,3.198,2316,3.198,2317,3.198,2318,3.198,2319,5.065,2320,5.527,2321,5.065,2344,3.467,2417,3.198,2418,3.198,2419,3.198,2525,3.198,2526,3.198,2527,3.198,2531,3.198,2532,3.198,2533,3.198,2616,3.198,2618,3.198,2619,3.198,2631,3.198,2632,3.198,2633,3.198,2793,5.419,2794,3.198,2795,3.198,2796,3.198,2797,3.198,2798,4.913,2825,3.198,2826,3.198,2827,3.198,2844,3.198,2845,3.198,2846,3.198,2878,3.198,2879,3.198,3009,3.198,3010,3.198,3011,3.198,3048,3.198,3049,3.198,3050,3.198,3114,3.198,3115,3.198,3116,3.198,3370,3.198,3530,4.542,3819,3.198,3820,3.657,3821,3.657]],["title/miscellaneous/typealiases.html",[3716,1.985,3822,4.99]],["body/miscellaneous/typealiases.html",[8,0.012,24,0.147,75,2.949,109,0.008,110,0.01,111,0.008,118,0.59,126,0.888,176,1.425,179,2.012,181,3.416,208,4.272,236,2.594,315,3.088,357,3.242,394,3.321,547,2.075,588,1.47,607,3.416,644,2.502,679,3.181,769,2.848,772,2.707,788,3.19,794,2.973,809,3.19,883,3.242,976,3.416,977,3.416,978,3.788,979,3.846,980,3.846,981,3.615,983,3.416,986,4.19,987,5.103,990,3.416,991,3.416,992,2.823,996,5.103,997,3.416,998,3.913,1063,4.434,1440,3.846,1897,2.949,2030,4.125,2050,4.94,2051,6.059,2052,6.059,2053,5.487,2054,4.94,2055,6.059,2056,4.94,2057,6.059,2058,4.94,2059,4.94,2060,4.94,2061,4.473,2322,3.088,2327,3.416,2737,3.615,2768,4.473,2772,3.615,2802,5.487,2814,4.94,3147,4.125,3589,5.487,3716,3.242,3823,5.649,3824,7.137,3825,6.554,3826,6.929,3827,4.94,3828,5.649]],["title/miscellaneous/variables.html",[3716,1.985,3829,4.364]],["body/miscellaneous/variables.html",[8,0.012,24,0.146,38,0.632,66,1.077,67,3.373,75,1.625,88,5.481,95,2.956,99,0.155,103,0.556,109,0.004,110,0.006,111,0.004,118,0.325,126,0.742,136,2.185,138,2.119,162,1.701,164,1.701,168,1.786,210,0.977,212,4.683,213,1.625,219,0.955,226,1.267,240,2.119,241,2.465,303,1.832,316,1.899,317,1.753,318,2.494,323,2.41,336,1.479,357,1.786,373,1.378,376,2.11,394,2.214,400,2.794,418,0.761,419,1.531,420,1.707,423,1.701,531,0.947,588,1.586,645,1.114,657,1.009,671,2.119,672,1.625,673,3.146,674,2.794,675,3.373,691,3.146,692,2.273,693,2.273,694,2.273,695,2.273,696,2.273,697,2.273,698,2.273,699,2.273,700,2.273,701,2.273,702,2.273,703,2.273,704,2.119,705,2.273,706,1.992,707,2.273,719,1.555,769,1.899,791,1.899,794,2.185,923,1.701,940,1.327,977,1.882,981,1.992,985,1.786,1018,2.119,1035,2.119,1062,3.373,1063,1.992,1064,2.465,1065,2.722,1066,2.722,1067,2.722,1068,2.465,1069,2.465,1070,2.465,1071,2.119,1072,2.722,1073,2.722,1074,2.722,1242,2.273,1243,2.119,1244,2.465,1245,3.658,1249,2.465,1257,6.248,1262,2.119,1263,2.465,1264,3.146,1265,5.149,1266,2.722,1267,7.435,1268,2.722,1269,2.722,1270,2.722,1271,4.04,1272,2.722,1273,2.722,1274,2.722,1275,2.722,1276,2.722,1277,2.722,1278,5.331,1279,5.331,1280,5.695,1281,5.695,1282,3.373,1283,2.722,1284,4.645,1285,2.722,1286,2.722,1287,2.722,1288,4.04,1289,4.04,1290,4.04,1291,2.722,1292,2.722,1293,5.695,1294,2.722,1295,4.04,1296,2.722,1297,2.722,1298,2.722,1299,2.722,1300,2.722,1301,5.331,1302,2.722,1303,2.722,1304,4.04,1305,2.722,1306,2.722,1307,2.722,1308,2.722,1309,2.722,1310,2.722,1311,4.04,1312,3.373,1313,2.722,1314,2.722,1315,2.722,1316,2.722,1317,2.722,1318,5.331,1319,2.722,1320,2.722,1321,5.331,1322,2.722,1323,2.722,1324,2.273,1325,2.722,1326,2.722,1327,5.695,1328,2.722,1329,4.04,1330,2.722,1331,2.465,1332,2.722,1333,2.465,1334,2.722,1335,2.722,1337,2.119,1345,2.273,1490,2.119,1499,2.794,1500,3.332,1549,2.273,1897,2.412,1899,2.722,1902,2.273,1904,4.04,1977,1.992,2030,2.273,2062,3.658,2063,2.722,2064,2.722,2252,1.992,2258,1.992,2260,3.332,2261,1.882,2263,2.119,2264,2.956,2265,2.119,2267,3.525,2322,1.701,2327,1.882,2634,2.273,2675,3.373,2676,2.465,2851,2.465,2860,2.722,2861,3.658,2885,2.465,2916,2.722,2936,2.273,2937,3.658,2982,3.658,3101,4.04,3566,4.04,3589,4.363,3591,4.04,3592,4.04,3716,1.786,3718,2.465,3824,2.722,3825,2.722,3827,4.04,3829,2.722,3830,3.112,3831,3.112,3832,3.112,3833,3.112,3834,3.112,3835,4.62,3836,3.112,3837,3.112,3838,3.112,3839,3.112,3840,3.112,3841,3.112]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":336,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.063rem",{"_index":1565,"title":{},"body":{"components/DropdownComponent.html":{}}}],["0.095rem",{"_index":1752,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":3715,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1457,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.125rem",{"_index":1548,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.12rem",{"_index":1437,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.14",{"_index":1455,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.15s",{"_index":1460,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.16",{"_index":2821,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["0.18.0",{"_index":3658,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1829,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":1453,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.2.0",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":3677,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1463,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["0.2rem",{"_index":1556,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["0.2s",{"_index":1824,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["0.3125rem",{"_index":2998,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.3s",{"_index":1550,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.4",{"_index":345,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["0.4s",{"_index":2843,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5.0",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":648,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["0.5s",{"_index":3086,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.6",{"_index":3006,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.6.0",{"_index":3509,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.625rem",{"_index":3001,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.6s",{"_index":1831,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.75rem",{"_index":1438,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.875rem",{"_index":1542,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.9375rem",{"_index":1750,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0/1",{"_index":3555,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3608,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3554,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3564,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3565,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3563,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3562,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3558,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3582,"title":{},"body":{"coverage.html":{}}}],["0000001d",{"_index":1830,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0000003e",{"_index":1557,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["00000058",{"_index":1883,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["00e5ff",{"_index":701,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["01",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1433,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["05",{"_index":1476,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["06",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1449,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["0rem",{"_index":1546,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1",{"_index":376,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":3653,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3662,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":3710,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":3083,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["1.12rem",{"_index":1436,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["1.16.0",{"_index":3691,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":3655,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":3416,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":3665,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":3692,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":2609,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["1.25rem",{"_index":2611,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["1.2rem",{"_index":1881,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["1.3.5",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":3368,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":3679,"title":{},"body":{"dependencies.html":{}}}],["1.48rem",{"_index":1882,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["1.5.0",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["1.55rem",{"_index":1558,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":1739,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["1.5rem",{"_index":1467,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["1.6.0",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":3666,"title":{},"body":{"dependencies.html":{}}}],["1.75rem",{"_index":1754,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["1/1",{"_index":3567,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3572,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":499,"title":{},"body":{"components/AppWebComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["10.0.0",{"_index":3675,"title":{},"body":{"dependencies.html":{}}}],["10/12",{"_index":3571,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":3588,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":432,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1456,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["10x",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3370,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11.2.1",{"_index":3693,"title":{},"body":{"dependencies.html":{}}}],["110",{"_index":1066,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":3165,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{}}}],["12.0.1",{"_index":3695,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":3614,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":3618,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":3585,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":3586,"title":{},"body":{"coverage.html":{}}}],["12/16",{"_index":3581,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":3596,"title":{},"body":{"coverage.html":{}}}],["125rem",{"_index":2824,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["13",{"_index":1068,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["13/13",{"_index":3599,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":3584,"title":{},"body":{"coverage.html":{}}}],["136",{"_index":2732,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["14",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["14/15",{"_index":3594,"title":{},"body":{"coverage.html":{}}}],["14/30",{"_index":3557,"title":{},"body":{"coverage.html":{}}}],["14rem",{"_index":2823,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["15.126.1",{"_index":3613,"title":{},"body":{"dependencies.html":{}}}],["15rem",{"_index":1751,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["16",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":3668,"title":{},"body":{"dependencies.html":{}}}],["16rem",{"_index":1471,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["17",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["17rem",{"_index":1477,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["18",{"_index":3821,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":3601,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":2414,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["19.5rem",{"_index":1458,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["1].color",{"_index":734,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["1em",{"_index":1540,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1px",{"_index":1561,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":646,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem/1.25rem",{"_index":1956,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1s",{"_index":1951,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2",{"_index":343,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["2.0.0",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":3672,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":3082,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.1.0",{"_index":3274,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2",{"_index":341,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["2.2.0",{"_index":3267,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":3232,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5rem",{"_index":1446,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["2.6.7",{"_index":3696,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":3664,"title":{},"body":{"dependencies.html":{}}}],["2.8125rem",{"_index":3000,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["2/10",{"_index":3609,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":3605,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":3575,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1907,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["2019",{"_index":3489,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["20em",{"_index":1745,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["20rem",{"_index":2614,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["21",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["21.5rem",{"_index":2820,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["22",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":2733,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["23.75rem",{"_index":2415,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["24",{"_index":3530,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["24px.svg",{"_index":1327,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":660,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["255",{"_index":706,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["25rem",{"_index":1945,"title":{},"body":{"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["26",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["26/26",{"_index":3607,"title":{},"body":{"coverage.html":{}}}],["26th",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":1551,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["2979ff",{"_index":693,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["2px",{"_index":1451,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["2rem",{"_index":1422,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["3",{"_index":590,"title":{},"body":{"components/CheckboxComponent.html":{},"changelog.html":{},"overview.html":{}}}],["3.0",{"_index":3730,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":3210,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":3634,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":3640,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":3642,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3112,"title":{},"body":{"components/ViewerComponent.html":{}}}],["3.6",{"_index":3751,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":3704,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":3646,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":3648,"title":{},"body":{"dependencies.html":{}}}],["3.75rem",{"_index":2999,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["3/3",{"_index":3604,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":3561,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2731,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["30.5rem",{"_index":2819,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["300",{"_index":2612,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["3000",{"_index":295,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["31",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["32/37",{"_index":3590,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["35rem",{"_index":1884,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["36/39",{"_index":3574,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":2218,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["3rem",{"_index":1418,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["3s",{"_index":1553,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":2962,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["4.0.2",{"_index":3645,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":3670,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":3688,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":3660,"title":{},"body":{"dependencies.html":{}}}],["4.375rem",{"_index":1747,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["4.6.0",{"_index":3681,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3570,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1955,"title":{},"body":{"components/HeaderComponent.html":{}}}],["42/44",{"_index":3602,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":3556,"title":{},"body":{"coverage.html":{}}}],["4em",{"_index":1880,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1454,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["4rem",{"_index":1943,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["5",{"_index":1473,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["5.0.0",{"_index":3682,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":3687,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":970,"title":{},"body":{"components/ContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["5/5",{"_index":3578,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3597,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1425,"title":{},"body":{"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["500",{"_index":1950,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5em",{"_index":1568,"title":{},"body":{"components/DropdownComponent.html":{}}}],["5rem",{"_index":1834,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["5s",{"_index":973,"title":{},"body":{"components/ContentComponent.html":{}}}],["6.0.1",{"_index":3685,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":3698,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3643,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":3707,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":3705,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":3580,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":3579,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3560,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1444,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["66",{"_index":3595,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1450,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["6s",{"_index":1832,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["7.75rem",{"_index":2610,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["7/7",{"_index":3603,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":3568,"title":{},"body":{"coverage.html":{}}}],["7323e2",{"_index":697,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["75",{"_index":3559,"title":{},"body":{"coverage.html":{}}}],["75rem",{"_index":1748,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["76",{"_index":3587,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["8.25rem",{"_index":1949,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.3.2",{"_index":3713,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":3638,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":3627,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":3630,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":3569,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":3598,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1470,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["82b1ff",{"_index":699,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["83",{"_index":1069,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["85",{"_index":1465,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["86",{"_index":3583,"title":{},"body":{"coverage.html":{}}}],["9.5rem",{"_index":1560,"title":{},"body":{"components/DropdownComponent.html":{}}}],["9.75px",{"_index":2630,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["9.85rem",{"_index":1535,"title":{},"body":{"components/DropdownComponent.html":{}}}],["9/9",{"_index":3606,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1833,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["92",{"_index":3573,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":3593,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2615,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["99",{"_index":2842,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["9th",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["_aggregatedataquerystatus",{"_index":1117,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":392,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["_celltypetermoccurencesdataquerystatus",{"_index":1121,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_config",{"_index":3129,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["_createcontainer",{"_index":411,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["_error",{"_index":2009,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":2099,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":2957,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["_measuredmargin",{"_index":2129,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":2123,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":797,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_ontologytermoccurencesdataquerystatus",{"_index":1119,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_opened",{"_index":2095,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":2091,"title":{},"body":{"classes/InitializationState.html":{}}}],["_providerfilterquerystatus",{"_index":1127,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_scenedataquerystatus",{"_index":1123,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_technologyfilterquerystatus",{"_index":1125,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_tissueblockdataquerystatus",{"_index":1115,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["a.color.color",{"_index":749,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["ability",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":3526,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1461,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["acc",{"_index":744,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["acc[item.key",{"_index":742,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["accent",{"_index":637,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["acceptable",{"_index":215,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["acceptableviewerdomains",{"_index":221,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["accepting",{"_index":2179,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessors",{"_index":782,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["according",{"_index":299,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["accordingly",{"_index":1860,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["accurate",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["acf32b",{"_index":698,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":3812,"title":{},"body":{"license.html":{}}}],["actions",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":232,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["active",{"_index":2660,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["active/showing",{"_index":2837,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activeorgans",{"_index":2717,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["activeorgans.has(o.representation_of)).map(o",{"_index":2722,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["activeorgans.has(tag",{"_index":2726,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["actual_component",{"_index":566,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":382,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{}}}],["addclass",{"_index":2932,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":2896,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["addsvgicon",{"_index":2012,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["adjusting",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":765,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["again",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":2168,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":1681,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["agerange",{"_index":1065,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate",{"_index":1138,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregatedata",{"_index":1139,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":1226,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":1116,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1044,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["ala",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":3823,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1419,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["all_possible_organs",{"_index":2674,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["allcompleted",{"_index":3576,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["allcompleted(states",{"_index":1085,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["allowed",{"_index":3113,"title":{},"body":{"components/ViewerComponent.html":{}}}],["allowing",{"_index":2566,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":1369,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["allowtouchmove",{"_index":2960,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["along",{"_index":2512,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":2839,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":818,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["alt",{"_index":3734,"title":{},"body":{"index.html":{}}}],["always",{"_index":846,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analytics",{"_index":587,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1010,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1022,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":360,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["anatomicalstructuresettings",{"_index":2679,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["and/or",{"_index":3785,"title":{},"body":{"license.html":{}}}],["angular",{"_index":175,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular's",{"_index":1644,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":937,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3615,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":2049,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{}}}],["angular/cdk/portal",{"_index":1683,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":2622,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":668,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1007,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":3616,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2382,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3617,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2383,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":1843,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/checkbox",{"_index":623,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{}}}],["angular/material/dialog",{"_index":1805,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["angular/material/form",{"_index":1575,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/icon",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":2425,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["angular/material/progress",{"_index":2849,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/radio",{"_index":2830,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["angular/material/select",{"_index":1577,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["angular/material/snack",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["angular/material/toolbar",{"_index":1966,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":2536,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":3620,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":3621,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":933,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animate('.5s",{"_index":2076,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":943,"title":{},"body":{"components/ContentComponent.html":{}}}],["animate(0",{"_index":2075,"title":{},"body":{"classes/InitializationState.html":{}}}],["animation",{"_index":1549,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":891,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":894,"title":{},"body":{"components/ContentComponent.html":{}}}],["api",{"_index":3170,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":3744,"title":{},"body":{"index.html":{}}}],["apiendpointdatasourceservice",{"_index":1340,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["app",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":184,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.component.scss",{"_index":186,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app/core/services/theming/theming.service",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app_bootstrap_listener",{"_index":2881,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":2411,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["appelement",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["appendtoroot",{"_index":412,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["application",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["application/javascript",{"_index":3145,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["applied",{"_index":1790,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["apply",{"_index":1796,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":1771,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilters",{"_index":1778,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":1870,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applythemeclass",{"_index":2888,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":2894,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1025,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":113,"title":{"interfaces/AppOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["approotoverlaycontainer",{"_index":36,"title":{"injectables/AppRootOverlayContainer.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["appropriate",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":9,"title":{"components/AppWebComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["arg",{"_index":2000,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":2004,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter(value",{"_index":2019,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":2017,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":1620,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arising",{"_index":3815,"title":{},"body":{"license.html":{}}}],["array",{"_index":373,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/TissueSectionVisComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array.from(searchresults.values",{"_index":2484,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["array.isarray(val",{"_index":488,"title":{},"body":{"components/AppWebComponent.html":{}}}],["arrow",{"_index":1566,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["arrow_left",{"_index":3074,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":3073,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["asct+b",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["asking",{"_index":596,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assays",{"_index":1825,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["assets/icons/expand_less",{"_index":1334,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/expand_more",{"_index":1332,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/filter.svg",{"_index":1335,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1326,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organs/ico",{"_index":1267,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1329,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assigncolor",{"_index":750,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assigncolor(@payload('key",{"_index":727,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["assigncolor(key",{"_index":753,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment",{"_index":715,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["assignment.state",{"_index":2222,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["assignment.state.ts",{"_index":673,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assignment.state.ts:102",{"_index":758,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:57",{"_index":761,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:59",{"_index":762,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:60",{"_index":759,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:61",{"_index":760,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:63",{"_index":756,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:69",{"_index":755,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment/color",{"_index":672,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assignment/selection",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["assignments",{"_index":2212,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["associated",{"_index":2255,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":2035,"title":{},"body":{"classes/InitializationState.html":{}}}],["at(nodes",{"_index":2491,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atscrollbottom",{"_index":2548,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":3063,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["attached",{"_index":408,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["attempts",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["authentication",{"_index":1948,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authors",{"_index":3806,"title":{},"body":{"license.html":{}}}],["auto",{"_index":971,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["autocomplete",{"_index":2377,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":2334,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["automatic",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":2657,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":2041,"title":{},"body":{"classes/InitializationState.html":{}}}],["awaited",{"_index":2031,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":3762,"title":{},"body":{"index.html":{}}}],["axis",{"_index":3047,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["b92dff",{"_index":695,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1370,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":1993,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{}}}],["base",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":372,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["basepath",{"_index":1027,"title":{},"body":{"modules/CoreModule.html":{}}}],["basewebcomponent",{"_index":448,"title":{},"body":{"components/AppWebComponent.html":{}}}],["basic",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":2117,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.left",{"_index":2120,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.right",{"_index":2119,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1255,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["behavior",{"_index":2739,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior'},{'name",{"_index":549,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["behavior.component",{"_index":1809,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["behavior.component.html",{"_index":2741,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.scss",{"_index":2740,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts",{"_index":2738,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"coverage.html":{}}}],["behavior.component.ts:18",{"_index":2766,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:20",{"_index":2767,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:22",{"_index":2769,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:24",{"_index":2770,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:26",{"_index":2765,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:28",{"_index":2764,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:30",{"_index":2763,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:32",{"_index":2754,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:48",{"_index":2758,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:52",{"_index":2762,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:58",{"_index":2760,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:63",{"_index":2755,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:69",{"_index":2756,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:73",{"_index":2757,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.module.ts",{"_index":2799,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["behavior/spatial",{"_index":1808,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"coverage.html":{}}}],["being",{"_index":2865,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["beta",{"_index":3215,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":347,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["bind",{"_index":1042,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["binds",{"_index":2907,"title":{},"body":{"injectables/ThemingService.html":{}}}],["bladder",{"_index":1266,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1268,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":3143,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["block",{"_index":428,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1269,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1270,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["bmirange",{"_index":1067,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":201,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyui",{"_index":192,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["bodyuicomponent",{"_index":150,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["bodyuimodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["bold",{"_index":651,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["bone",{"_index":1271,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":125,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["booleaninput",{"_index":2047,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":2904,"title":{},"body":{"injectables/ThemingService.html":{}}}],["border",{"_index":1423,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["both",{"_index":1064,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bottom",{"_index":647,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["bound",{"_index":1664,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["box",{"_index":1448,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["brain",{"_index":1274,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1275,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":177,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["breaking",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["breaks",{"_index":2231,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bringing",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3818,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":542,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":2623,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":2547,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":2546,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":2538,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"coverage.html":{}}}],["browser.component.ts:102",{"_index":2587,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:111",{"_index":2576,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:115",{"_index":2584,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:24",{"_index":2564,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:29",{"_index":2561,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:34",{"_index":2565,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:36",{"_index":2563,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:38",{"_index":2562,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:44",{"_index":2569,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:49",{"_index":2574,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:54",{"_index":2572,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:56",{"_index":2567,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:58",{"_index":2568,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:64",{"_index":2560,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:79",{"_index":2581,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:93",{"_index":2578,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":2620,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/donor",{"_index":1351,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"coverage.html":{}}}],["browser/results",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"coverage.html":{}}}],["browser/tissue",{"_index":3019,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["browseranimationsmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browserify",{"_index":3706,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["bubble_chart",{"_index":1410,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["bug",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3727,"title":{},"body":{"index.html":{}}}],["builds",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["builtin_parsers",{"_index":479,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.boolean",{"_index":506,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.json(value",{"_index":491,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":994,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":563,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":1503,"title":{},"body":{"modules/DrawerModule.html":{}}}],["button.component.html",{"_index":3056,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":3055,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":3054,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:19",{"_index":3061,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:22",{"_index":3062,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:27",{"_index":3072,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:38",{"_index":3069,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3068,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:42",{"_index":3059,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:65",{"_index":3065,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:75",{"_index":3066,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:85",{"_index":3064,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:97",{"_index":3067,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button/toggle",{"_index":1502,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["buttonclick",{"_index":2626,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["buttonclicked",{"_index":2747,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["c",{"_index":3767,"title":{},"body":{"license.html":{}}}],["c.color",{"_index":738,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["cache",{"_index":3651,"title":{},"body":{"dependencies.html":{}}}],["cacheable",{"_index":3709,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":2121,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":3085,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":969,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["calc(100vh",{"_index":2613,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["calc(50",{"_index":2080,"title":{},"body":{"classes/InitializationState.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":2113,"title":{},"body":{"classes/InitializationState.html":{}}}],["call",{"_index":320,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["callback",{"_index":2367,"title":{},"body":{"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["called",{"_index":1088,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["cancelregistration",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":3656,"title":{},"body":{"dependencies.html":{}}}],["captures",{"_index":350,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["card",{"_index":1354,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["card'},{'name",{"_index":523,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["card.component",{"_index":1492,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["card.component.html",{"_index":1358,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.scss",{"_index":1357,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts",{"_index":1353,"title":{},"body":{"components/DonorCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":1379,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:20",{"_index":1375,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:23",{"_index":1374,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:26",{"_index":1368,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:29",{"_index":1372,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:31",{"_index":1373,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:34",{"_index":1376,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:37",{"_index":1377,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:40",{"_index":1367,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:52",{"_index":1380,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:62",{"_index":1392,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:76",{"_index":1384,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.module",{"_index":2624,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["card.module.ts",{"_index":1488,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["card/donor",{"_index":1352,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/ResultsBrowserModule.html":{},"coverage.html":{}}}],["cards",{"_index":2940,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel",{"_index":207,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["carousel'},{'name",{"_index":556,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["carousel.component",{"_index":3016,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["carousel.component.html",{"_index":2942,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.scss",{"_index":2941,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts",{"_index":2937,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["carousel.component.ts:29",{"_index":2951,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:34",{"_index":2949,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:39",{"_index":2950,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:44",{"_index":2983,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:49",{"_index":2986,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:56",{"_index":2990,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:63",{"_index":2967,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:75",{"_index":2981,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:89",{"_index":2955,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.module",{"_index":1491,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["carousel.module.ts",{"_index":3012,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["carousel/thumbnail",{"_index":1490,"title":{},"body":{"modules/DonorCardModule.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":948,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["cases",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":2008,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["cause",{"_index":3102,"title":{},"body":{"components/ViewerComponent.html":{}}}],["ccf",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["ccfapiconfiguration",{"_index":1011,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfapimodule",{"_index":1012,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfapimodule.forroot",{"_index":1026,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfdatabase",{"_index":3838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccfdatabasedatasourceservice",{"_index":1341,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["ccfdatabaseoptions",{"_index":117,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/WorkerDataSourceService.html":{}}}],["ccfdrawer",{"_index":2068,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":768,"title":{},"body":{"components/ContainerComponent.html":{}}}],["cdk",{"_index":1563,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":1675,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdr",{"_index":263,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["cdr.markforcheck",{"_index":280,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["ceil",{"_index":1708,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cell",{"_index":203,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["celltypeselectionlabel",{"_index":202,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["celltypetermoccurencesdata",{"_index":1147,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdata$.pipe(take(1)).subscribe(celltypetermsfulldata",{"_index":1195,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdata(filter",{"_index":1232,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdataquerystatus",{"_index":1120,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurrences",{"_index":1165,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypeterms",{"_index":241,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["celltypetermsfulldata",{"_index":1132,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetreemodel",{"_index":242,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["center",{"_index":892,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["cff",{"_index":972,"title":{},"body":{"components/ContentComponent.html":{}}}],["change",{"_index":789,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":864,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":187,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":128,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":188,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":129,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["changelog",{"_index":3149,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":309,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["changes.selection",{"_index":1697,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":1695,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["channel",{"_index":772,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["channels",{"_index":2287,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["charge",{"_index":178,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ResultsBrowserComponent.html":{},"license.html":{}}}],["checkbox",{"_index":575,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["checkbox'},{'name",{"_index":516,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":670,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":577,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":576,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":636,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":515,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkboxes",{"_index":572,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":661,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checked",{"_index":602,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["checked.mat",{"_index":1429,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["checkmark",{"_index":638,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":921,"title":{},"body":{"components/ContentComponent.html":{}}}],["checkselected",{"_index":1434,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["child",{"_index":1440,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":1919,"title":{},"body":{"classes/FlatNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["choices",{"_index":1516,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":3809,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":3057,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":901,"title":{},"body":{"components/ContentComponent.html":{}}}],["class.hidden]=\"hidden",{"_index":1822,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["class=\"filter",{"_index":1820,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["classend",{"_index":2086,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1894,"title":{},"body":{"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"overview.html":{}}}],["classname",{"_index":773,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["clean",{"_index":2295,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["cleans",{"_index":805,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["cleanup",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":3109,"title":{},"body":{"components/ViewerComponent.html":{}}}],["click",{"_index":1387,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["clicked",{"_index":1378,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["clicking",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":2650,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["client",{"_index":1014,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["clientheight",{"_index":2601,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["clip",{"_index":3005,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["close",{"_index":396,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ViewerComponent.html":{}}}],["closed",{"_index":2053,"title":{},"body":{"classes/InitializationState.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["closedialog",{"_index":2805,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["closeexpanded",{"_index":2146,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeiframeviewer",{"_index":398,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["closeopendone",{"_index":2153,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1628,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["closesliderpopover",{"_index":1594,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closesliderpopover(target",{"_index":1634,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cls",{"_index":2898,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":1359,"title":{},"body":{"components/DonorCardComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":662,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":663,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":664,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":999,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":1001,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1000,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule",{"_index":1482,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_declarations",{"_index":1485,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_exports",{"_index":1483,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_imports",{"_index":1484,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":1495,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":1496,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":1497,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":1570,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":1571,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":1572,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":1755,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":1756,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":1757,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":1836,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":1837,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":1839,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":1838,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule",{"_index":1887,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":1890,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":1889,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":1888,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_headermodule",{"_index":1961,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1962,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1963,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":2316,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":2317,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":2318,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":2417,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":2418,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":2419,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":2525,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":3820,"title":{},"body":{"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":2526,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":2528,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologyselectionmodule_ontologyselectioncomponent_providers",{"_index":2527,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule",{"_index":2531,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":2533,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":2532,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":2616,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":2619,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":2618,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":2617,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_runspatialsearchmodule",{"_index":2631,"title":{},"body":{"modules/RunSpatialSearchModule.html":{},"overview.html":{}}}],["cluster_runspatialsearchmodule_declarations",{"_index":2632,"title":{},"body":{"modules/RunSpatialSearchModule.html":{},"overview.html":{}}}],["cluster_runspatialsearchmodule_exports",{"_index":2633,"title":{},"body":{"modules/RunSpatialSearchModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule",{"_index":2794,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_declarations",{"_index":2797,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_exports",{"_index":2796,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_imports",{"_index":2795,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule",{"_index":2825,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule_declarations",{"_index":2826,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule_exports",{"_index":2827,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule",{"_index":2844,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":2846,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":2845,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":2878,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":2879,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule",{"_index":3009,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule_declarations",{"_index":3011,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule_exports",{"_index":3010,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule",{"_index":3048,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule_declarations",{"_index":3050,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule_exports",{"_index":3049,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":3114,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":3115,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":3116,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["coalescing",{"_index":2786,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["code",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["codeblob",{"_index":3142,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["codex",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":2048,"title":{},"body":{"classes/InitializationState.html":{}}}],["collaboration",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["collapse",{"_index":2149,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":2058,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":2145,"title":{},"body":{"classes/InitializationState.html":{}}}],["collisions",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":303,"title":{"interfaces/Color.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.color",{"_index":739,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["color.rank",{"_index":2246,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["color].concat(colorsavailable",{"_index":747,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignments",{"_index":711,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colorassignments[key",{"_index":726,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist",{"_index":713,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.filter(a",{"_index":748,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.reduce>>((acc",{"_index":741,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.slice(0",{"_index":735,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist[colorassignmentslist.length",{"_index":733,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentstate",{"_index":719,"title":{"injectables/ColorAssignmentState.html":{}},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colorassignmentstatemodel",{"_index":708,"title":{"interfaces/ColorAssignmentStateModel.html":{}},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{}}}],["colorizing",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["colorpalette",{"_index":709,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colors",{"_index":716,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colors[node['@id']].rgba",{"_index":2734,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colors[tissueblock.spatialentityid",{"_index":2244,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["colorsavailable",{"_index":710,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable.filter(c",{"_index":737,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable.length",{"_index":731,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable[0",{"_index":732,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["column",{"_index":1737,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["columns",{"_index":579,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["combination",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["combined",{"_index":997,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":142,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":276,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["combines",{"_index":1093,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":3659,"title":{},"body":{"dependencies.html":{}}}],["comma",{"_index":383,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["common",{"_index":1191,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":667,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":1219,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":2873,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1081,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["completion",{"_index":2151,"title":{},"body":{"classes/InitializationState.html":{}}}],["complexity",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["componenet",{"_index":2330,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":130,"title":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":1610,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":447,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component.component.ts:31",{"_index":465,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":469,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:34",{"_index":470,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":468,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":472,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":471,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":477,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":475,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:41",{"_index":476,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":466,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:43",{"_index":467,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:44",{"_index":474,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:45",{"_index":473,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:47",{"_index":463,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":512,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":2901,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":176,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":2455,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computations",{"_index":2430,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":1680,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["comunica/query",{"_index":3623,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":3661,"title":{},"body":{"dependencies.html":{}}}],["concat(colorassignmentslist",{"_index":740,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["condition",{"_index":2476,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":3792,"title":{},"body":{"license.html":{}}}],["config",{"_index":548,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["config'},{'name",{"_index":551,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["config.component",{"_index":2773,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["config.component.html",{"_index":2804,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.scss",{"_index":2803,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts",{"_index":2802,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.component.ts:14",{"_index":2813,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:16",{"_index":2806,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:18",{"_index":2807,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:20",{"_index":2808,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:22",{"_index":2812,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:24",{"_index":2811,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:26",{"_index":2809,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:28",{"_index":2810,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.isolated",{"_index":2289,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.module",{"_index":2801,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["config.module.ts",{"_index":2828,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["config/spatial",{"_index":2772,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["configstore",{"_index":464,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":2260,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":2815,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["confirmation",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2310,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["connect(source",{"_index":2298,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":811,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connectedposition",{"_index":1682,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connection",{"_index":3816,"title":{},"body":{"license.html":{}}}],["connects",{"_index":2297,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":140,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["consider",{"_index":2871,"title":{},"body":{"modules/StoreModule.html":{}}}],["consortium",{"_index":3768,"title":{},"body":{"license.html":{}}}],["const",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":3104,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor",{"_index":255,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"modules/ThumbnailCarouselModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["constructor(@inject(message_service_config",{"_index":2288,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1029,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ThemingService.html":{}}}],["constructor(cdr",{"_index":2751,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["constructor(config",{"_index":2311,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":462,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(dataservice",{"_index":2196,"title":{},"body":{"injectables/ListResultsState.html":{},"injectables/SceneState.html":{}}}],["constructor(defaulttheme",{"_index":2892,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(drawer",{"_index":3058,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(ga",{"_index":583,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["constructor(globalconfig",{"_index":3123,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["constructor(messageservice",{"_index":785,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["constructor(ontologysearchservice",{"_index":2503,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":2343,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(original",{"_index":1900,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":1607,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(private",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["constructor(public",{"_index":2386,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":1923,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(registry",{"_index":2021,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(sanitizer",{"_index":3093,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(source",{"_index":2303,"title":{},"body":{"classes/MessageChannel.html":{}}}],["contain",{"_index":984,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["container",{"_index":644,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":518,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":771,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":770,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1501,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":517,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerpayload",{"_index":987,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":863,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["containing",{"_index":870,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ThumbnailCarouselComponent.html":{},"index.html":{}}}],["contains",{"_index":619,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{}}}],["content",{"_index":783,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["content'},{'name",{"_index":520,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":1850,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["content.component.html",{"_index":1768,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.scss",{"_index":893,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{}}}],["content.component.ts",{"_index":1765,"title":{},"body":{"components/FiltersContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:25",{"_index":1784,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:30",{"_index":1783,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:35",{"_index":1789,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:40",{"_index":1785,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:45",{"_index":1787,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:50",{"_index":1791,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:55",{"_index":1793,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:60",{"_index":1782,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:67",{"_index":1804,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:69",{"_index":1797,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:79",{"_index":1801,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:88",{"_index":1795,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:96",{"_index":1798,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.module",{"_index":1892,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["content.module.ts",{"_index":1841,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["content/content.component",{"_index":837,"title":{},"body":{"components/ContainerComponent.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":1764,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["content1",{"_index":774,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":775,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":833,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":814,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":824,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":519,"title":{"components/ContentComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":976,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["contents",{"_index":430,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contentsvisible",{"_index":1586,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["continue",{"_index":2817,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["contract",{"_index":3813,"title":{},"body":{"license.html":{}}}],["control",{"_index":322,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["controls",{"_index":1523,"title":{},"body":{"components/DropdownComponent.html":{}}}],["convention",{"_index":440,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["coordinate",{"_index":3150,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":3787,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3774,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3766,"title":{},"body":{"license.html":{}}}],["core",{"_index":1030,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/list",{"_index":2594,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["core/models/ontology",{"_index":157,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/app",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["core/services/ontology",{"_index":2384,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":160,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/data/data.state",{"_index":163,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersContentComponent.html":{}}}],["core/store/list",{"_index":165,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/scene/scene.state",{"_index":169,"title":{},"body":{"interfaces/AppOptions.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["coremodule",{"_index":10,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["cors",{"_index":3663,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":2267,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":3003,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["coverage",{"_index":3495,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["create",{"_index":1609,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":1910,"title":{},"body":{"classes/FlatNode.html":{}}}],["createcustomelement",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":1665,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"changelog.html":{}}}],["creates",{"_index":251,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":374,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["createworker",{"_index":3121,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["createworker(_config",{"_index":3127,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["creating",{"_index":840,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["credits",{"_index":3753,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1613,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["css",{"_index":2953,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"dependencies.html":{}}}],["ctrlclick",{"_index":2685,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["cuboid",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":573,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":355,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["cursor",{"_index":1427,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["customelements.define('ccf",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["cyberinfrastructure",{"_index":3755,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1466,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["da326f",{"_index":696,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":3810,"title":{},"body":{"license.html":{}}}],["dark",{"_index":313,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark)').addeventlistener('change",{"_index":310,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark)').matches",{"_index":305,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark/light",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":254,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["data.aggregatedata$.subscribe",{"_index":267,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.celltypetermoccurencesdata$.subscribe",{"_index":269,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.pipe(pluck('celltypeterms",{"_index":284,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":275,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.subscribe",{"_index":271,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.ontologytermoccurencesdata$.subscribe",{"_index":268,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.providerfilterdata$.subscribe",{"_index":273,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.scenedata$.subscribe",{"_index":270,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.technologyfilterdata$.subscribe",{"_index":272,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.tissueblockdata$.subscribe",{"_index":266,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data/data.state",{"_index":2223,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["dataaction",{"_index":678,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["database",{"_index":136,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/FlatNode.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databaseready",{"_index":1110,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["databasestatus",{"_index":1045,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["dataquerystate",{"_index":161,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":1083,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["dataquerystate.running",{"_index":237,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{}}}],["dataservice",{"_index":2198,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datasetresult",{"_index":2948,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["datasets",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":260,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["datasourcelike",{"_index":1342,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["datasources",{"_index":454,"title":{},"body":{"components/AppWebComponent.html":{}}}],["datasourceservice",{"_index":137,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datastate",{"_index":162,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datastatemodel",{"_index":1034,"title":{"interfaces/DataStateModel.html":{}},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{}}}],["deal",{"_index":3776,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3817,"title":{},"body":{"license.html":{}}}],["december",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":615,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["deck.gl",{"_index":707,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["deck.gl/core",{"_index":3626,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":3628,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":3631,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":3632,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["decoration",{"_index":1952,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["decorator",{"_index":1043,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["decorators",{"_index":754,"title":{},"body":{"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["deep",{"_index":634,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["deeply",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":317,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_color_palette",{"_index":691,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_color_palette.concat",{"_index":718,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["default_filter",{"_index":1062,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/FiltersContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1264,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_selected_organs",{"_index":2675,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_selected_organs.has(organ.organ",{"_index":2709,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["default_theme",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1242,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":717,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["defaulttheme",{"_index":2887,"title":{},"body":{"injectables/ThemingService.html":{}}}],["defer",{"_index":1048,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["deferred",{"_index":2032,"title":{},"body":{"classes/InitializationState.html":{}}}],["defined",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{}}}],["definition",{"_index":1246,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":1998,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":1997,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["delay",{"_index":1052,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delay(2000",{"_index":1203,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["delegatedatasourceoptions",{"_index":1336,"title":{"interfaces/DelegateDataSourceOptions.html":{}},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasourceservice",{"_index":1016,"title":{"injectables/DelegateDataSourceService.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{}}}],["demo",{"_index":3256,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["descendants",{"_index":815,"title":{},"body":{"components/ContainerComponent.html":{}}}],["describes",{"_index":593,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["description",{"_index":569,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["deselect",{"_index":2583,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["deselected",{"_index":2573,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["deselectlistresult",{"_index":2191,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["deselectlistresult(result",{"_index":2201,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["details",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["detect",{"_index":1698,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["detected",{"_index":1642,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":798,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":790,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determine",{"_index":2592,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["determines",{"_index":1527,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{}}}],["developed",{"_index":3754,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":2869,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":3519,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":1770,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["dialogref",{"_index":2752,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["diff",{"_index":2604,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["different",{"_index":2180,"title":{},"body":{"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["digits",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["directimport",{"_index":3132,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["direction",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["directive",{"_index":510,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":565,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":435,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["disabled",{"_index":1960,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["disables",{"_index":2690,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["display",{"_index":371,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":1517,"title":{},"body":{"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":2338,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":2352,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["displaylabel",{"_index":2467,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1355,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":1053,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["distinctuntilchanged",{"_index":690,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["distribute",{"_index":3783,"title":{},"body":{"license.html":{}}}],["dobootstrap",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1625,"title":{},"body":{"components/DualSliderComponent.html":{},"dependencies.html":{}}}],["document:click",{"_index":1604,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:click(target",{"_index":1622,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:touchstart",{"_index":1605,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:touchstart(target",{"_index":1633,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["documentation",{"_index":3205,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":444,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["domains",{"_index":217,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["domsanitizer",{"_index":1975,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["don't",{"_index":381,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["done",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":522,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["donor_card",{"_index":1399,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["donorcardcomponent",{"_index":521,"title":{"components/DonorCardComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["donorcardmodule",{"_index":1481,"title":{"modules/DonorCardModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["donors",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["doreset",{"_index":729,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["dotenv",{"_index":3667,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":199,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":1926,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":1931,"title":{},"body":{"components/HeaderComponent.html":{}}}],["drawer",{"_index":179,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":524,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":3080,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":3079,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":2069,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":2070,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":3081,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":874,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":838,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":172,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":955,"title":{},"body":{"components/ContentComponent.html":{}}}],["drawercontainerschanged",{"_index":983,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":1857,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":990,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":11,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":996,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":315,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":873,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":991,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":1505,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["dropdown'},{'name",{"_index":526,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":1578,"title":{},"body":{"modules/DropdownModule.html":{}}}],["dropdown.component.html",{"_index":1508,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1507,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":525,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":1569,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":528,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dual_slider",{"_index":1725,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["dualslidercomponent",{"_index":527,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":12,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["duration",{"_index":291,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["during",{"_index":1221,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["dynamic",{"_index":3619,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":311,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["e040fb",{"_index":700,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":2269,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ease",{"_index":975,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["easier",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["easily",{"_index":395,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["effect",{"_index":1525,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["efficiency",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":256,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{}}}],["element",{"_index":509,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["element.getboundingclientrect",{"_index":2118,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":2929,"title":{},"body":{"injectables/ThemingService.html":{}}}],["element.nativeelement.contains(target",{"_index":1717,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["elementref",{"_index":131,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["elements",{"_index":2972,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["ellipsis",{"_index":1478,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["embedded",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":606,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["emits",{"_index":228,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{}}}],["emitted",{"_index":211,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{}}}],["emitter",{"_index":2350,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["emitters",{"_index":2544,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":2100,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{}}}],["empty",{"_index":2449,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enable",{"_index":2356,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":911,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["encapsulates",{"_index":2497,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["end",{"_index":850,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["end?.expanded",{"_index":966,"title":{},"body":{"components/ContentComponent.html":{}}}],["end?.opened",{"_index":965,"title":{},"body":{"components/ContentComponent.html":{}}}],["enddrawers",{"_index":875,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":878,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":881,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":964,"title":{},"body":{"components/ContentComponent.html":{}}}],["ensures",{"_index":1393,"title":{},"body":{"components/DonorCardComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":1651,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["entire",{"_index":2860,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":2358,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":2400,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":2401,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entrycomponents",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":1077,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["enumerations",{"_index":3717,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":154,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"modules/StoreModule.html":{}}}],["environment.acceptableviewerdomains",{"_index":222,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["environment.customization",{"_index":503,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":501,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions.remoteapiendpoint",{"_index":1028,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.disabledbworker",{"_index":1347,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["environment.googleanalyticstoken",{"_index":1024,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":2870,"title":{},"body":{"modules/StoreModule.html":{}}}],["environments/environment",{"_index":155,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":844,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ThemingService.html":{}}}],["error('invalid",{"_index":495,"title":{},"body":{"components/AppWebComponent.html":{}}}],["error('the",{"_index":1031,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":852,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":841,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":3657,"title":{},"body":{"dependencies.html":{}}}],["es2015.worker.js",{"_index":3141,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["eslint",{"_index":434,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["eslint/naming",{"_index":439,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["eslint/prefer",{"_index":2784,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["etc",{"_index":995,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["eui",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["eui/src/app/app",{"_index":446,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eui/src/app/app.component.ts",{"_index":115,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["eui/src/app/app.module.ts",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/app.module.ts:55",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/core/core.module.ts",{"_index":1005,"title":{},"body":{"modules/CoreModule.html":{}}}],["eui/src/app/core/header/header.component.ts",{"_index":1924,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["eui/src/app/core/header/header.component.ts:18",{"_index":1934,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:20",{"_index":1938,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:22",{"_index":1939,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:27",{"_index":1936,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:32",{"_index":1933,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:37",{"_index":1941,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:42",{"_index":1940,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.module.ts",{"_index":1964,"title":{},"body":{"modules/HeaderModule.html":{}}}],["eui/src/app/core/models/flat",{"_index":1895,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["eui/src/app/core/models/list",{"_index":2185,"title":{},"body":{"interfaces/ListResult.html":{},"coverage.html":{}}}],["eui/src/app/core/models/ontology",{"_index":2493,"title":{},"body":{"interfaces/OntologySelection.html":{},"coverage.html":{}}}],["eui/src/app/core/services/app",{"_index":406,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["eui/src/app/core/services/data",{"_index":1337,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/services/ontology",{"_index":2427,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["eui/src/app/core/services/theming/theming.module.ts",{"_index":2880,"title":{},"body":{"modules/ThemingModule.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts",{"_index":2885,"title":{},"body":{"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:13",{"_index":2912,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:14",{"_index":2913,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:16",{"_index":2911,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:18",{"_index":2914,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:21",{"_index":2902,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:25",{"_index":2893,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:39",{"_index":2899,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:48",{"_index":2910,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:60",{"_index":2908,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:71",{"_index":2906,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:83",{"_index":2895,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/store/color",{"_index":671,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/data/data.state.ts",{"_index":1035,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/icon",{"_index":1243,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/list",{"_index":2187,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts",{"_index":2634,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:105",{"_index":2659,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:114",{"_index":2648,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:125",{"_index":2652,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:129",{"_index":2653,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:136",{"_index":2645,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:51",{"_index":2668,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:53",{"_index":2672,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:55",{"_index":2670,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:57",{"_index":2666,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:60",{"_index":2664,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:63",{"_index":2663,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:65",{"_index":2644,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:85",{"_index":2662,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:95",{"_index":2656,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/store.module.ts",{"_index":2851,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/modules/filters/filters",{"_index":1763,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["eui/src/app/modules/ontology",{"_index":2322,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/modules/results",{"_index":1350,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts",{"_index":568,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:18",{"_index":592,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:23",{"_index":597,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:28",{"_index":601,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:33",{"_index":591,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":585,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:53",{"_index":612,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.module.ts",{"_index":665,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts",{"_index":764,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:105",{"_index":804,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:115",{"_index":795,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:124",{"_index":806,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":792,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":825,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":816,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":821,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":829,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":832,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":810,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:62",{"_index":786,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:83",{"_index":800,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts",{"_index":889,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:103",{"_index":926,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:116",{"_index":920,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":909,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":910,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":912,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":914,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":907,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":928,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":905,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:60",{"_index":919,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:70",{"_index":916,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/drawer.module.ts",{"_index":1498,"title":{},"body":{"modules/DrawerModule.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":2030,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":2042,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":2039,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:41",{"_index":2043,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:46",{"_index":2044,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:56",{"_index":2046,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:65",{"_index":2045,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/messages.ts",{"_index":977,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/drawer/toggle",{"_index":3053,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts",{"_index":1504,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:18",{"_index":1513,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:23",{"_index":1515,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:28",{"_index":1518,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:33",{"_index":1519,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:38",{"_index":1512,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:50",{"_index":1522,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:59",{"_index":1521,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.module.ts",{"_index":1573,"title":{},"body":{"modules/DropdownModule.html":{}}}],["eui/src/app/shared/components/dual",{"_index":1579,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/run",{"_index":2625,"title":{},"body":{"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/spatial",{"_index":2737,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/spinner",{"_index":2831,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/thumbnail",{"_index":2936,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts",{"_index":3087,"title":{},"body":{"components/ViewerComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:17",{"_index":3097,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:19",{"_index":3095,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:21",{"_index":3096,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:23",{"_index":3100,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:29",{"_index":3094,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:33",{"_index":3098,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:39",{"_index":3099,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.module.ts",{"_index":3117,"title":{},"body":{"modules/ViewerModule.html":{}}}],["eui/src/app/shared/services/message/message.service.ts",{"_index":2252,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:103",{"_index":2307,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:112",{"_index":2308,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:128",{"_index":2315,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:130",{"_index":2312,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:153",{"_index":2314,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:163",{"_index":2313,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:50",{"_index":2304,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:70",{"_index":2309,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:83",{"_index":2305,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:93",{"_index":2306,"title":{},"body":{"classes/MessageChannel.html":{}}}],["evenly",{"_index":3045,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["event",{"_index":618,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["event.checked",{"_index":626,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.key",{"_index":1732,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.target",{"_index":1621,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["event.target'])@hostlistener('document:touchstart",{"_index":1636,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["eventemitter",{"_index":605,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":2102,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":614,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["everything",{"_index":1182,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["except",{"_index":2275,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["executionstrategy",{"_index":2874,"title":{},"body":{"modules/StoreModule.html":{}}}],["exists",{"_index":3039,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["expand",{"_index":2148,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":2155,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":2062,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expand_less",{"_index":1333,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"miscellaneous/variables.html":{}}}],["expand_more",{"_index":1331,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"miscellaneous/variables.html":{}}}],["expandable",{"_index":1899,"title":{},"body":{"classes/FlatNode.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":2157,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":992,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":2097,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":2054,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":2103,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":2055,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":2057,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":2108,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":2142,"title":{},"body":{"classes/InitializationState.html":{}}}],["exploration",{"_index":1211,"title":{},"body":{"interfaces/DataStateModel.html":{},"index.html":{}}}],["exploration.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":2323,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["exportas",{"_index":767,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":666,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["express",{"_index":3669,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extended",{"_index":2060,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":116,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/WorkerDataSourceService.html":{}}}],["external",{"_index":3110,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["externalurl",{"_index":3139,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["extra",{"_index":3674,"title":{},"body":{"dependencies.html":{}}}],["extract",{"_index":2956,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["extraction",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1276,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1277,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1305,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f.svg",{"_index":1306,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":2265,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1524,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["faded",{"_index":895,"title":{},"body":{"components/ContentComponent.html":{}}}],["fadein",{"_index":1536,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":900,"title":{},"body":{"components/ContentComponent.html":{}}}],["fail",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["fallopian",{"_index":1278,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":191,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["favor",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":2814,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fetch",{"_index":1261,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["fetches",{"_index":2448,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["ff8800",{"_index":692,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["ffd740",{"_index":694,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1538,"title":{},"body":{"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":3775,"title":{},"body":{"license.html":{}}}],["fill",{"_index":1554,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["filler",{"_index":1954,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":316,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["filter's",{"_index":325,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filter(organ",{"_index":2703,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(value",{"_index":2391,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter_checkbox",{"_index":629,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filter_content",{"_index":1813,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["filterbox",{"_index":324,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filterbox.removebox",{"_index":332,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filtered",{"_index":2279,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{}}}],["filteredorgans",{"_index":2742,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["filteredresults",{"_index":2335,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filteronchange",{"_index":578,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":609,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filterorgans",{"_index":2748,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["filters",{"_index":531,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["filterschange",{"_index":1779,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":530,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":1835,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":170,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":13,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":1854,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["final",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["finished",{"_index":988,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["finishing",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["fired",{"_index":1632,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["first",{"_index":1394,"title":{},"body":{"components/DonorCardComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["fit",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":3802,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":1904,"title":{},"body":{"classes/FlatNode.html":{},"miscellaneous/variables.html":{}}}],["flatnode",{"_index":1893,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["flatnode(original",{"_index":1922,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":652,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["floor",{"_index":1705,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["fly",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":3008,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["following",{"_index":3791,"title":{},"body":{"license.html":{}}}],["font",{"_index":649,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["forcedunassignment",{"_index":720,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["form",{"_index":1537,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["format",{"_index":704,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["formatlabel",{"_index":2433,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":2439,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":2442,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":2355,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":2336,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":2421,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["forwards",{"_index":1555,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":2443,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["four",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["frame",{"_index":1435,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["framework",{"_index":3151,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":3772,"title":{},"body":{"license.html":{}}}],["fs",{"_index":3673,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":2061,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":394,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":1097,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":3719,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":3760,"title":{},"body":{"index.html":{}}}],["funnel",{"_index":1886,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["furnished",{"_index":3790,"title":{},"body":{"license.html":{}}}],["further",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":586,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["gap",{"_index":2818,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["gatoken",{"_index":1023,"title":{},"body":{"modules/CoreModule.html":{}}}],["generate",{"_index":598,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"changelog.html":{}}}],["generated",{"_index":3203,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["genericglobalconfig",{"_index":480,"title":{},"body":{"components/AppWebComponent.html":{}}}],["genericmessage",{"_index":979,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":980,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":981,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["get(event",{"_index":2402,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["getarguments",{"_index":2018,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":2023,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getchildren",{"_index":2434,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":2446,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3826,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getclassend",{"_index":3070,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcolor",{"_index":751,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["getcolor(key",{"_index":724,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["getcontent",{"_index":828,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getexpandable",{"_index":1916,"title":{},"body":{"classes/FlatNode.html":{}}}],["gethaswrappedcontent",{"_index":831,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":3071,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getindexofmatch",{"_index":2435,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":2450,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":1913,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlevel",{"_index":3591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmessages",{"_index":2277,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":2300,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":2280,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":2301,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":2283,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":2010,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":2025,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getnextbuttonid",{"_index":2989,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["getprevbuttonid",{"_index":2985,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["getrangelabel",{"_index":1678,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["gets",{"_index":319,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{}}}],["getter",{"_index":3101,"title":{},"body":{"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["getter/setter",{"_index":2090,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":2889,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3147,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["getworkerurl",{"_index":3122,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["getworkerurl(directimport",{"_index":3130,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["github",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2268,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":3038,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["gizmo",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":262,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{}}}],["globalconfigstate",{"_index":138,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":2126,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['dboptions",{"_index":502,"title":{},"body":{"components/AppWebComponent.html":{}}}],["good",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":625,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":584,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["gradient",{"_index":2593,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["granted",{"_index":3771,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3030,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"modules.html":{}}}],["graphical",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":3676,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":571,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["grow",{"_index":1445,"title":{},"body":{"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["gtex",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["half",{"_index":2059,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1256,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["handle",{"_index":2649,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["handlecheckbox",{"_index":1361,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["handlehover",{"_index":2549,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlehover(id",{"_index":2575,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlelinkclick",{"_index":2550,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlelinkclick(link",{"_index":2577,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlemessage",{"_index":777,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":793,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":915,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handler",{"_index":1659,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":1381,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["handleselection",{"_index":2551,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handleselection(result",{"_index":2580,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handleunhover",{"_index":2552,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handling",{"_index":1611,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":1792,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happens",{"_index":1385,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["happy",{"_index":2864,"title":{},"body":{"modules/StoreModule.html":{}}}],["haswrappedcontent",{"_index":784,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":121,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["header'},{'name",{"_index":534,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":1967,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1930,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1929,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.module",{"_index":1015,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":533,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":1002,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heart",{"_index":1282,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1283,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":968,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["helmet",{"_index":3680,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":839,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":2233,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["hereby",{"_index":3770,"title":{},"body":{"license.html":{}}}],["hex",{"_index":687,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"dependencies.html":{}}}],["hexrgb",{"_index":686,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["hexrgb(color",{"_index":703,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["hidden",{"_index":885,"title":{},"body":{"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1885,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["hidelimitlabels",{"_index":1711,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1712,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hides",{"_index":1872,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["high",{"_index":1650,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["highlight",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":1364,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highlightedid",{"_index":2635,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["highlightednodeid",{"_index":2189,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["highlightnode",{"_index":2192,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["highlightnode(id",{"_index":2203,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["highlights",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["highvalue",{"_index":1587,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["holders",{"_index":3807,"title":{},"body":{"license.html":{}}}],["home",{"_index":1944,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":122,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["hook",{"_index":1645,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":882,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding",{"_index":834,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":2107,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":931,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('@openclose",{"_index":2106,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":812,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding('class.active",{"_index":2841,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":2085,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":927,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('style.margin",{"_index":932,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbindings",{"_index":781,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostlistener",{"_index":1684,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":2156,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":2152,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":1635,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":1716,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1603,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hover",{"_index":1447,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["hoverable",{"_index":1459,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["hovered",{"_index":1395,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["hovering",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["hoverstate",{"_index":1360,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["html",{"_index":508,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["htmlelement",{"_index":1623,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["htmlinputelement).value",{"_index":1731,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http://purl.obolibrary.org/obo/cl_0000000",{"_index":1073,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":1072,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhfskin",{"_index":2688,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":1006,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://beta",{"_index":3731,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":3743,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":3736,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":3735,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":3738,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":3733,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":2875,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmapasseturl",{"_index":455,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapdataservice",{"_index":456,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapdataurl",{"_index":457,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapportalurl",{"_index":458,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmaptoken",{"_index":459,"title":{},"body":{"components/AppWebComponent.html":{}}}],["icon",{"_index":1247,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/RunSpatialSearchComponent.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["icondefinition",{"_index":1968,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["iconregistry",{"_index":1976,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1977,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1262,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1245,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":2205,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"interfaces/OntologySelection.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["idb",{"_index":3683,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":2254,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"coverage.html":{}}}],["iec",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":397,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ViewerComponent.html":{}}}],["image",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":676,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":1113,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["implemented",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":3799,"title":{},"body":{"license.html":{}}}],["implies",{"_index":993,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["import.meta.url",{"_index":3138,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["important",{"_index":642,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["imported",{"_index":1032,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["importscripts('${externalurl",{"_index":3144,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["improve",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":3794,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3240,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["indeterminate.mat",{"_index":1430,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["index",{"_index":118,"title":{"index.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":3758,"title":{},"body":{"index.html":{}}}],["indicates",{"_index":1918,"title":{},"body":{"classes/FlatNode.html":{}}}],["individual",{"_index":599,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["infinity",{"_index":294,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["infix",{"_index":1541,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["infobuttonmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["information",{"_index":608,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":1879,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["init",{"_index":2361,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":298,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["initialconfig",{"_index":500,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialdelay",{"_index":498,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":2130,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":2029,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{},"coverage.html":{}}}],["initialize",{"_index":2697,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":2900,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":2905,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":452,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":2903,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":1638,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{}}}],["initializesliderpopover",{"_index":1595,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializing",{"_index":989,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["inject",{"_index":2257,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["inject(default_theme",{"_index":2919,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injectable",{"_index":404,"title":{"injectables/AppRootOverlayContainer.html":{},"injectables/ColorAssignmentState.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{}},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":405,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"injectables/ColorAssignmentState.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{},"overview.html":{}}}],["injecting",{"_index":2229,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":2258,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('default",{"_index":2916,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["injector.get(overlaycontainer",{"_index":2930,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":2928,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":2917,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1343,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["inner",{"_index":643,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["input",{"_index":478,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["inputs",{"_index":453,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["inside",{"_index":1742,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["install",{"_index":3017,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["instance",{"_index":252,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["instant",{"_index":2052,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":1749,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["instructions",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":1957,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interact",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":112,"title":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"interfaces/ListResult.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologySelection.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":114,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"interfaces/ListResult.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologySelection.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1289,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1290,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invisible",{"_index":908,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["iri",{"_index":2680,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["isexpandable",{"_index":3592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["islighttheme",{"_index":225,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["isn't",{"_index":1389,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["isolated",{"_index":2263,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["issliderinitialized",{"_index":1588,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":1589,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isstring",{"_index":484,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray",{"_index":487,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray(json",{"_index":492,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray(value",{"_index":493,"title":{},"body":{"components/AppWebComponent.html":{}}}],["issue",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":3225,"title":{},"body":{"changelog.html":{}}}],["iswhitelisted",{"_index":386,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["it's",{"_index":321,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["item",{"_index":214,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["item.color",{"_index":743,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["item.technology",{"_index":2996,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["item.thumbnail",{"_index":2994,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["itemhovered",{"_index":2555,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["itemid",{"_index":2945,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["itemid(_index",{"_index":2954,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["items",{"_index":1420,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["itemselected",{"_index":2743,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["itemunhovered",{"_index":2556,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["iu",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":3191,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["join",{"_index":2399,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["json",{"_index":490,"title":{},"body":{"components/AppWebComponent.html":{},"changelog.html":{}}}],["json.parse(json.stringify(default_filter",{"_index":1818,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["jsonld",{"_index":3686,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1426,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["keep",{"_index":194,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{}}}],["keeping",{"_index":1128,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":1859,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["key",{"_index":714,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["key/value",{"_index":1802,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["keyboardevent",{"_index":1647,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyframes",{"_index":1533,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keyval",{"_index":3684,"title":{},"body":{"dependencies.html":{}}}],["key}:${value",{"_index":1814,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["kidney",{"_index":1284,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kidney.svg",{"_index":1285,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":3798,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1286,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1287,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":197,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["label.slice(0",{"_index":2487,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.slice(index",{"_index":2488,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":2483,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":2485,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labeled",{"_index":570,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["labels",{"_index":600,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{}}}],["labs/data",{"_index":2853,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":682,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["labs/data/repositories",{"_index":684,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["labs/dispatch",{"_index":3644,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1288,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":384,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"modules/StoreModule.html":{}}}],["latest",{"_index":1100,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["launch",{"_index":3108,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers",{"_index":3629,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":2199,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ld",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":318,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left.closeexpanded",{"_index":329,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["left.open",{"_index":328,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["left.px",{"_index":903,"title":{},"body":{"components/ContentComponent.html":{}}}],["left.svg",{"_index":1280,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["leftmargin",{"_index":896,"title":{},"body":{"components/ContentComponent.html":{}}}],["legend",{"_index":507,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["level",{"_index":1902,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":2375,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["liability",{"_index":3811,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3808,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3189,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":3764,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["lifecycle",{"_index":2362,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["lighter",{"_index":1462,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["limitation",{"_index":3778,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3469,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":437,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["link",{"_index":389,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["linkage",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["linkclick",{"_index":1366,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["linkclicked",{"_index":2557,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["linked",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["linkhandler",{"_index":1362,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["linkhandler(url",{"_index":1383,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["links",{"_index":3222,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":354,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["listen",{"_index":2262,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1099,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["listeners",{"_index":802,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["listens",{"_index":308,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{}}}],["listresult",{"_index":2184,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/ResultsBrowserComponent.html":{},"coverage.html":{}}}],["listresultdeselected",{"_index":2558,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listresults",{"_index":2190,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["listresultselected",{"_index":2559,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listresultsstate",{"_index":164,"title":{"injectables/ListResultsState.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listresultsstatemodel",{"_index":2224,"title":{"interfaces/ListResultsStateModel.html":{}},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["literal",{"_index":763,"title":{},"body":{"interfaces/ColorAssignmentStateModel.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["little",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1291,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1292,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":2200,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["loaded",{"_index":1248,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loaders.gl/core",{"_index":3633,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":3635,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":3636,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":1038,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ViewerComponent.html":{}}}],["loadingmessage",{"_index":238,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["located",{"_index":2084,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":2495,"title":{},"body":{"interfaces/OntologySelection.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["locations",{"_index":1821,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["locationstrategy",{"_index":3125,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["locator",{"_index":3124,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["lock",{"_index":3002,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["lodash",{"_index":2220,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["log",{"_index":3752,"title":{},"body":{"index.html":{}}}],["logged",{"_index":1937,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":401,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{}}}],["logger",{"_index":2876,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":1382,"title":{},"body":{"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["login",{"_index":399,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{}}}],["logindisabled",{"_index":249,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["loginenabled",{"_index":123,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["logo",{"_index":1927,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":124,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["logout",{"_index":1942,"title":{},"body":{"components/HeaderComponent.html":{}}}],["longer",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["looks",{"_index":2454,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":2436,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":2452,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["low",{"_index":1655,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["low/high",{"_index":1699,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":1617,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowvalue",{"_index":1590,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lru",{"_index":3689,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":3637,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1293,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lung.svg",{"_index":1294,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1295,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":1215,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["main",{"_index":174,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{}}}],["major",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":2768,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"miscellaneous/typealiases.html":{}}}],["managed",{"_index":827,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["managers",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["manages",{"_index":2886,"title":{},"body":{"injectables/ThemingService.html":{}}}],["many",{"_index":180,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["map",{"_index":146,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}}}],["map(([scene",{"_index":2714,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([tissueblocks",{"_index":2240,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["map((color",{"_index":702,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["map((node",{"_index":2729,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(nodes",{"_index":2471,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(organ",{"_index":2705,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(reforgans",{"_index":2699,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(searchresults",{"_index":2394,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":235,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["map(states",{"_index":1180,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["march",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":645,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":2064,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":3694,"title":{},"body":{"dependencies.html":{}}}],["marrow",{"_index":1272,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1273,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":635,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["matautocompletemodule",{"_index":2423,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":2365,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":1842,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["match",{"_index":1947,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["matcheckboxchange",{"_index":610,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":669,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{}}}],["matching",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1781,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["matdialogmodule",{"_index":2800,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["matdialogref",{"_index":2753,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["material",{"_index":1979,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matformfieldmodule",{"_index":1574,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{}}}],["math.div($pointer",{"_index":1753,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.gl/core",{"_index":3639,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":3641,"title":{},"body":{"dependencies.html":{}}}],["math.max(...this.selection",{"_index":1703,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(...this.selection",{"_index":1701,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["maticonmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":1974,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":2424,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matprogressspinnermodule",{"_index":2848,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["matradiomodule",{"_index":2829,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["matselectmodule",{"_index":1576,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["matsnackbar",{"_index":134,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["matsnackbarmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":1965,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":2535,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":1559,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["mc",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["measured",{"_index":2122,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":2124,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":2114,"title":{},"body":{"classes/InitializationState.html":{}}}],["memory",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1506,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["merchantability",{"_index":3801,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3781,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":2259,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":794,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1499,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1500,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":809,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":2299,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":2286,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":788,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":769,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":857,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":944,"title":{},"body":{"components/ContentComponent.html":{}}}],["messageserviceconfig",{"_index":2261,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagess",{"_index":1089,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":449,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["method",{"_index":613,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":2007,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":2001,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["min",{"_index":1417,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["minor",{"_index":3161,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":3716,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3765,"title":{},"body":{"license.html":{}}}],["ml",{"_index":1472,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["mock",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":278,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["model",{"_index":2230,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["models/list",{"_index":2221,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["modify",{"_index":3780,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/filters/filters",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["modules/ontology",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["monorepo",{"_index":3723,"title":{},"body":{"index.html":{}}}],["more",{"_index":1079,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":1626,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1009,"title":{},"body":{"modules/CoreModule.html":{}}}],["moved",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":1627,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mr",{"_index":1474,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["msg",{"_index":918,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":956,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.drawers",{"_index":950,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.opened",{"_index":3077,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":947,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":954,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["mt",{"_index":1475,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["much",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":2884,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3724,"title":{},"body":{"index.html":{}}}],["n3",{"_index":3690,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":419,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["namespace",{"_index":1257,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["navigate_before",{"_index":2995,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["navigate_next",{"_index":2997,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["navigation",{"_index":2943,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"changelog.html":{}}}],["navigationoptions",{"_index":2969,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["necessary",{"_index":1657,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1218,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersPopoverComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["needed",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":799,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["nested",{"_index":1741,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":3756,"title":{},"body":{"index.html":{}}}],["neuron",{"_index":1297,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neuron.svg",{"_index":1298,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":851,"title":{},"body":{"components/ContainerComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":219,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1912,"title":{},"body":{"classes/FlatNode.html":{}}}],["newvalue",{"_index":1729,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":436,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["nextbuttonid",{"_index":2947,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["nextel",{"_index":2979,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["nextmessageid",{"_index":2285,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["nextuid",{"_index":2982,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":633,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["ng5",{"_index":1685,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1761,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":2183,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":2182,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":2181,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":778,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":1596,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ngonchanges(changes",{"_index":1639,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ngondestroy",{"_index":779,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["ngoninit",{"_index":287,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{}}}],["ngx",{"_index":624,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"dependencies.html":{}}}],["ngxs",{"_index":681,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2855,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":3647,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":685,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxsdatapluginmodule",{"_index":2852,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":2867,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1040,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsimmutabledatarepository",{"_index":683,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ngxsloggerpluginmodule",{"_index":2854,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":2877,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":2857,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":2868,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":1041,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nih",{"_index":3761,"title":{},"body":{"index.html":{}}}],["node",{"_index":1897,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["node's",{"_index":1915,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ccf_annotations?.some?.(tag",{"_index":2725,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.children",{"_index":2492,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":2689,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.id",{"_index":2405,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":2477,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.reference_organ",{"_index":2727,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.representation_of",{"_index":2686,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.synonymlabels.find((label",{"_index":2482,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":1896,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["node.ts:11",{"_index":1908,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:13",{"_index":1906,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:18",{"_index":1914,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:25",{"_index":1917,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:36",{"_index":1911,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:38",{"_index":1903,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:9",{"_index":1909,"title":{},"body":{"classes/FlatNode.html":{}}}],["node['@id",{"_index":2687,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodeclickevent",{"_index":2647,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes",{"_index":357,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodes.foreach((node",{"_index":2475,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes.svg",{"_index":1296,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["nodes[node.parent",{"_index":2524,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":1543,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["noninfringement",{"_index":3805,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1864,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["not(:first",{"_index":1439,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["not(:last",{"_index":1953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["note",{"_index":1740,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["notice",{"_index":3399,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["notifies",{"_index":2579,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["now",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":1480,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["null",{"_index":1983,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["null)?.getcontainerelement",{"_index":2931,"title":{},"body":{"injectables/ThemingService.html":{}}}],["nullish",{"_index":2785,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["number",{"_index":589,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["number((event.target",{"_index":1730,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":1733,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":2128,"title":{},"body":{"classes/InitializationState.html":{}}}],["numebr",{"_index":3033,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["numeric",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["numresults",{"_index":1898,"title":{},"body":{"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o",{"_index":1104,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["o.id",{"_index":2719,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o.representation_of",{"_index":2702,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o['@id",{"_index":2723,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["object",{"_index":213,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.hasownproperty.call(colors",{"_index":2730,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["object.values(state.nodes",{"_index":2459,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observable",{"_index":143,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observableinput",{"_index":1049,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":1050,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":3773,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":2500,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":1143,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["occurs",{"_index":1630,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["off/on",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":958,"title":{},"body":{"components/ContentComponent.html":{}}}],["old",{"_index":3737,"title":{},"body":{"index.html":{}}}],["once",{"_index":1033,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":1583,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ondestroy",{"_index":766,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["one",{"_index":1078,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":132,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{}}}],["onkeyhigh",{"_index":1597,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":1646,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":1598,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":1653,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["online",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["onscroll",{"_index":2553,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onscroll(event",{"_index":2585,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onselect",{"_index":2339,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":2364,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":379,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontolgyselection.length",{"_index":375,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontolgyselection[0].label",{"_index":377,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontological",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":196,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology_search",{"_index":2404,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologyexplorationmodule",{"_index":14,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":2501,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2517,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologysearchcomponent",{"_index":535,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":2319,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":2344,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{},"overview.html":{}}}],["ontologyselected(ontologyselection",{"_index":358,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection",{"_index":156,"title":{"interfaces/OntologySelection.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"coverage.html":{}}}],["ontologyselection.map(selection",{"_index":363,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection[0",{"_index":369,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection[0].label",{"_index":370,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselectioncomponent",{"_index":537,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":200,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselectionmodule",{"_index":2320,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":2513,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":2337,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologytermoccurencesdata",{"_index":1144,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdata$.pipe(take(1)).subscribe(ontologytermsfulldata",{"_index":1194,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdata(filter",{"_index":1229,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdataquerystatus",{"_index":1118,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurrences",{"_index":1163,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologyterms",{"_index":240,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["ontologytermsfulldata",{"_index":1130,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":539,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologytreemodel",{"_index":135,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologytreemodule",{"_index":2321,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologytreenode",{"_index":1901,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["opacities",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":940,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":2537,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["open",{"_index":208,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":2105,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["open_in_new",{"_index":1409,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["openapi",{"_index":3233,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/angular",{"_index":1013,"title":{},"body":{"modules/CoreModule.html":{}}}],["openapi/js",{"_index":3748,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":3750,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":3749,"title":{},"body":{"index.html":{}}}],["opened",{"_index":925,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":2093,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":2050,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":2101,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":2051,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":2143,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening",{"_index":2571,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":2067,"title":{},"body":{"classes/InitializationState.html":{}}}],["opens",{"_index":1526,"title":{},"body":{"components/DropdownComponent.html":{},"classes/InitializationState.html":{},"components/RunSpatialSearchComponent.html":{}}}],["openspatialsearch",{"_index":1772,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["operator",{"_index":1092,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1051,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["opposite",{"_index":2056,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["optimization",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":611,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["option.displaylabel[0",{"_index":2408,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":2409,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":2410,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option?.displaylabel",{"_index":2398,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":120,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":580,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["options.ceil",{"_index":1735,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":1734,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":1599,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":1509,"title":{},"body":{"components/DropdownComponent.html":{}}}],["order",{"_index":2466,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organ",{"_index":206,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{},"index.html":{}}}],["organ.hassex",{"_index":2789,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["organ.name",{"_index":2816,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["organ.sex",{"_index":2790,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["organchange",{"_index":2744,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["organids",{"_index":2700,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organids.has(organ.id",{"_index":2704,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organinfo",{"_index":2655,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["organlistvisible",{"_index":209,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["organs",{"_index":1265,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["organselectormodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["origin",{"_index":3004,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["original",{"_index":1905,"title":{},"body":{"classes/FlatNode.html":{}}}],["originx",{"_index":1686,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":1687,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["orthographic",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["ot",{"_index":1253,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["ot2od026671",{"_index":3763,"title":{},"body":{"index.html":{}}}],["other.expanded",{"_index":2170,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":2171,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":2176,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":2174,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":2173,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":2172,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":2175,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherblocks",{"_index":2242,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["otherblocks.push",{"_index":2247,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["others",{"_index":218,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["otherwise",{"_index":1990,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"license.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1828,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["output",{"_index":622,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":581,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":1371,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ovaries",{"_index":1299,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1300,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1301,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":1396,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["overall",{"_index":594,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["overflow",{"_index":884,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["overlay",{"_index":230,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["overlay'},{'name",{"_index":553,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":2850,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":2835,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":2834,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":2832,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"coverage.html":{}}}],["overlay.component.ts:16",{"_index":2840,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":2836,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":2838,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":1693,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":2847,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":1691,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.service",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["overlay.service.ts",{"_index":407,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["overlay.service.ts:10",{"_index":422,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:11",{"_index":421,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:13",{"_index":417,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:27",{"_index":414,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:32",{"_index":415,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.setrootelement(el",{"_index":265,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["overlay/app",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["overlay/spinner",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"coverage.html":{}}}],["overlaycontainer",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"injectables/ThemingService.html":{}}}],["overlaymodule",{"_index":1759,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":1591,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":1727,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":1728,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":1688,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":1689,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":3819,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owning",{"_index":3060,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":3194,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":1421,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["page",{"_index":1928,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pages",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":2178,"title":{},"body":{"classes/InitializationState.html":{}}}],["paired",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["pancreas",{"_index":1302,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1303,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1564,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["panel",{"_index":1552,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":1694,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":253,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["param0",{"_index":2684,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["parameters",{"_index":418,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":2063,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":607,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":2292,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":504,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsedatasources",{"_index":505,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsedatasources(value",{"_index":482,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":3654,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2359,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["partial",{"_index":1217,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["particular",{"_index":3803,"title":{},"body":{"license.html":{}}}],["partly",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":2011,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":2016,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":2015,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":2014,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":2013,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["passed",{"_index":198,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1386,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["path",{"_index":639,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["patient",{"_index":1356,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{}}}],["payload",{"_index":679,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["payload('doreset",{"_index":728,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["pelvis",{"_index":1304,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":2984,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["performance",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":3769,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3788,"title":{},"body":{"license.html":{}}}],["person",{"_index":1406,"title":{},"body":{"components/DonorCardComponent.html":{},"license.html":{}}}],["persons",{"_index":3789,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":1101,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["pipe(mergeall",{"_index":2294,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["placed",{"_index":2866,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["placeholdertext",{"_index":2342,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["placement",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":3622,"title":{},"body":{"dependencies.html":{}}}],["pluck",{"_index":147,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["plugin",{"_index":2856,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["pointer",{"_index":1428,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["popover",{"_index":326,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["popover's",{"_index":327,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["popover'},{'name",{"_index":532,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":171,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover.component.html",{"_index":1853,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.scss",{"_index":1852,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts",{"_index":1851,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"coverage.html":{}}}],["popover.component.ts:17",{"_index":1861,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:23",{"_index":1858,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:28",{"_index":1867,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:33",{"_index":1865,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:38",{"_index":1866,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":1868,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:48",{"_index":1869,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:53",{"_index":1875,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:58",{"_index":1874,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:65",{"_index":1873,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:74",{"_index":1871,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["popover.module.ts",{"_index":1891,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["popover/filters",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["popoverelement",{"_index":1592,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement?.nativeelement?.contains?.(target",{"_index":1718,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":1593,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1766,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["portal",{"_index":1935,"title":{},"body":{"components/HeaderComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["portalmodule",{"_index":1760,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portions",{"_index":3796,"title":{},"body":{"license.html":{}}}],["position",{"_index":842,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":2089,"title":{},"body":{"classes/InitializationState.html":{}}}],["positions",{"_index":808,"title":{},"body":{"components/ContainerComponent.html":{}}}],["positionstrategy",{"_index":1690,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["possible",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["preclose",{"_index":289,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["prefered",{"_index":2970,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["preference",{"_index":301,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["preferences",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":2412,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":1652,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["prev",{"_index":2992,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevbuttonid",{"_index":2946,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevel",{"_index":2977,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevent",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2987,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["previously",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["primary",{"_index":2952,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["private",{"_index":261,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["process",{"_index":917,"title":{},"body":{"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processed",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":796,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["processing",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":3206,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":2833,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["projected",{"_index":803,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects",{"_index":3725,"title":{},"body":{"index.html":{}}}],["projects/.../app",{"_index":3720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../color",{"_index":3831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../container.component.ts",{"_index":3721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../data",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data.state.ts",{"_index":3718,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../default",{"_index":3832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../drawer.component.ts",{"_index":3825,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":3835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../messages.ts",{"_index":3824,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ontology",{"_index":3827,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene.state.ts",{"_index":3833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../spatial",{"_index":3828,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":3837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../theming.service.ts",{"_index":3834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../thumbnail",{"_index":3836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":2040,"title":{},"body":{"classes/InitializationState.html":{}}}],["promise(resolve",{"_index":2037,"title":{},"body":{"classes/InitializationState.html":{}}}],["prop",{"_index":1999,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["properties",{"_index":119,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["property",{"_index":617,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/ViewerComponent.html":{}}}],["property('expandable",{"_index":3841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property('level",{"_index":3840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prostate",{"_index":1307,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1308,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":410,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{}}}],["provide",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":817,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":423,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":1157,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilter",{"_index":1170,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilterdata",{"_index":1158,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilterquerystatus",{"_index":1126,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilters",{"_index":1775,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/ThemingModule.html":{},"changelog.html":{}}}],["providertoken",{"_index":1339,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["provides",{"_index":2347,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":890,"title":{},"body":{"components/ContentComponent.html":{}}}],["public",{"_index":1769,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["publish",{"_index":3782,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["publishreplay",{"_index":1055,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":1108,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["purpose",{"_index":3804,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":2081,"title":{},"body":{"classes/InitializationState.html":{}}}],["python",{"_index":3190,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":3697,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1075,"title":{},"body":{"interfaces/DataStateModel.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["query",{"_index":1098,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["querydata",{"_index":1102,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["querydata(query",{"_index":3722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["querying",{"_index":1094,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["querylist",{"_index":813,"title":{},"body":{"components/ContainerComponent.html":{}}}],["querystatus",{"_index":1172,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["question",{"_index":595,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["quickly",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["radio",{"_index":2822,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["radius",{"_index":1424,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["range",{"_index":1615,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["rangelabel",{"_index":1606,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["rank",{"_index":674,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"miscellaneous/variables.html":{}}}],["rank']).concat(otherblocks",{"_index":2249,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["rc.1",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":3699,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":3625,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":3649,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":3700,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2422,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":1672,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["readable",{"_index":3702,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["ready",{"_index":1039,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["real",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":2863,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":906,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":2266,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":712,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["rectify",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["refcount",{"_index":1056,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["reference",{"_index":791,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["referenceorgans",{"_index":2636,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":929,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["referencing",{"_index":2971,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["refernced",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["reforgandata",{"_index":2716,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reforgans",{"_index":2720,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reforgans.has(node.reference_organ",{"_index":2728,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["refresh",{"_index":1823,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["refreshclicked",{"_index":1932,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshes",{"_index":1799,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["refreshfilters",{"_index":1773,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["regions",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1259,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["registered",{"_index":1263,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1994,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":1991,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":2020,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":1995,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1971,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registers",{"_index":1988,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registration",{"_index":1252,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"index.html":{}}}],["registrations",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["registry",{"_index":1978,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":2858,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1970,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["registry.state.ts:114",{"_index":2026,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:134",{"_index":2024,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:43",{"_index":2022,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:74",{"_index":2027,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:84",{"_index":2028,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1244,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1969,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["registry[methodname",{"_index":2003,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regular",{"_index":1193,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["related",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":883,"title":{},"body":{"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":2570,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["reliability",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":3103,"title":{},"body":{"components/ViewerComponent.html":{}}}],["reloads",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["rem",{"_index":1826,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["remoteapiendpoint",{"_index":460,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["remove",{"_index":616,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/ThemingService.html":{}}}],["removebox",{"_index":1855,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":2933,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["removed/deleted",{"_index":1794,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["removes",{"_index":2897,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["render",{"_index":1863,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":2927,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":2915,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](overlay",{"_index":2935,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":2934,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":2540,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["repeat",{"_index":1057,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{}}}],["repeat(1000",{"_index":1205,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["replay",{"_index":1096,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":144,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["replaysubject(1",{"_index":245,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["replaysubject>(1",{"_index":1131,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["repository",{"_index":1109,"title":{},"body":{"interfaces/DataStateModel.html":{},"index.html":{}}}],["required",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resets",{"_index":314,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["resettheme",{"_index":2890,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resetview",{"_index":334,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["resolve",{"_index":2033,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolved",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["resolves",{"_index":830,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["respond",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["responsible",{"_index":2429,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":3777,"title":{},"body":{"license.html":{}}}],["result",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.ts",{"_index":2186,"title":{},"body":{"interfaces/ListResult.html":{},"coverage.html":{}}}],["resultlabel",{"_index":2554,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.state",{"_index":167,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["results.state.ts",{"_index":2188,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["results.state.ts:30",{"_index":2217,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:31",{"_index":2215,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:35",{"_index":2213,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:38",{"_index":2197,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:58",{"_index":2210,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:62",{"_index":2208,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:66",{"_index":2202,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:70",{"_index":2204,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:74",{"_index":2211,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:81",{"_index":2206,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results/list",{"_index":166,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["results_browser",{"_index":2596,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowser",{"_index":2539,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":541,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":2545,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":15,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":226,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":1192,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["reverse",{"_index":1827,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":688,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"dependencies.html":{}}}],["rgba",{"_index":675,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["rgba(0",{"_index":1452,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["rgba[3",{"_index":705,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":323,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["right.closeexpanded",{"_index":331,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["right.open",{"_index":330,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["right.px",{"_index":904,"title":{},"body":{"components/ContentComponent.html":{}}}],["right.svg",{"_index":1281,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":897,"title":{},"body":{"components/ContentComponent.html":{}}}],["rights",{"_index":3779,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":1432,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["root",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":513,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":2861,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootelement",{"_index":409,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["rootnode",{"_index":2431,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["rotates",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["ru/common",{"_index":3612,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":2465,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["ru/common/typings/immutability",{"_index":677,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["rui",{"_index":3166,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":544,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["running",{"_index":1080,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runspatialsearchcomponent",{"_index":543,"title":{"components/RunSpatialSearchComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runspatialsearchmodule",{"_index":1840,"title":{"modules/RunSpatialSearchModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["runtime",{"_index":1251,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/subscription",{"_index":2771,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rxjsfilter",{"_index":1054,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["rxjsfilter((status",{"_index":1112,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["s",{"_index":1786,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["safedef",{"_index":1984,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["safehtml",{"_index":1972,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1973,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["safeurl",{"_index":3091,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sample",{"_index":2938,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["samples",{"_index":3088,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["sanitize",{"_index":1981,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1254,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ViewerComponent.html":{}}}],["sanitizer",{"_index":1980,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":1986,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":1985,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["sans",{"_index":1958,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sass:math",{"_index":1736,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["saved",{"_index":1803,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["saver",{"_index":3671,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":258,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"changelog.html":{}}}],["scene.filter(node",{"_index":2724,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scene.referenceorgans$.subscribe((organs",{"_index":2774,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["scene/scene.state",{"_index":2859,"title":{},"body":{"modules/StoreModule.html":{}}}],["scenedata",{"_index":1150,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenedata(filter",{"_index":1235,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenedataquerystatus",{"_index":1122,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenenodeclicked",{"_index":2638,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodeclicked(undefined",{"_index":2646,"title":{},"body":{"injectables/SceneState.html":{}}}],["scenenodehovered",{"_index":2639,"title":{},"body":{"injectables/SceneState.html":{}}}],["scenenodehovered(node",{"_index":2651,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodeunhover",{"_index":2640,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenestate",{"_index":168,"title":{"injectables/SceneState.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenestatemodel",{"_index":2677,"title":{"interfaces/SceneStateModel.html":{}},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["scheduled",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":304,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["schemes",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":3757,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2588,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":2416,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":2590,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollheight",{"_index":2602,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":887,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":2621,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["scrolltop",{"_index":2603,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["search",{"_index":547,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["search'},{'name",{"_index":536,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["search.component",{"_index":2426,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/RunSpatialSearchModule.html":{}}}],["search.component.html",{"_index":2333,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{}}}],["search.component.scss",{"_index":2332,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{}}}],["search.component.ts",{"_index":2329,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:107",{"_index":2366,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:14",{"_index":2628,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["search.component.ts:19",{"_index":2627,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["search.component.ts:23",{"_index":2348,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:29",{"_index":2349,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:34",{"_index":2378,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:40",{"_index":2376,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:45",{"_index":2345,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:53",{"_index":2381,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:60",{"_index":2360,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:78",{"_index":2354,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:88",{"_index":2370,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":2374,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":2413,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":1849,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":2420,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/RunSpatialSearchModule.html":{}}}],["search.service",{"_index":2385,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":2428,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["search.service.ts:100",{"_index":2451,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:111",{"_index":2441,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:128",{"_index":2447,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:30",{"_index":2464,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:31",{"_index":2463,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:34",{"_index":2460,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:37",{"_index":2462,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:39",{"_index":2457,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:50",{"_index":2438,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:63",{"_index":2453,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":2324,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["search/run",{"_index":1848,"title":{},"body":{"modules/FiltersContentModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"coverage.html":{}}}],["searched",{"_index":2363,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searches",{"_index":1788,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":2331,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":2353,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["searchresults",{"_index":2474,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":2478,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":2479,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":2346,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":2440,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":2489,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":559,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["section.description",{"_index":1416,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["section.label",{"_index":1415,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["section.sectionnumber",{"_index":3043,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sectionnumber",{"_index":3041,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sectionnumber).length",{"_index":3044,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sections",{"_index":3034,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["see",{"_index":3276,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":1544,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["selectable",{"_index":1468,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["selected",{"_index":356,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["selected(ontologynode",{"_index":2515,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedanatomicalstructures",{"_index":2678,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selectedorgan",{"_index":2745,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["selectedorgans",{"_index":2715,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selectedreferenceorgans",{"_index":2637,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selecting",{"_index":1514,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["selection",{"_index":158,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["selection'},{'name",{"_index":538,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":2530,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":2499,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":2498,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":2496,"title":{},"body":{"components/OntologySelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:23",{"_index":2520,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":2506,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":2510,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:38",{"_index":2511,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":2508,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:47",{"_index":2505,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:48",{"_index":2509,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":2504,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":2518,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:64",{"_index":2514,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:75",{"_index":2516,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":364,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selection.label",{"_index":380,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selection.module",{"_index":2326,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":2529,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":2494,"title":{},"body":{"interfaces/OntologySelection.html":{},"coverage.html":{}}}],["selection/deselection",{"_index":2582,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selection/ontology",{"_index":2325,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"coverage.html":{}}}],["selectionchange",{"_index":582,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":1510,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":1520,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionlabel",{"_index":204,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selections",{"_index":574,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":378,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selectlistresult",{"_index":2193,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["selectlistresult(result",{"_index":2207,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["selector",{"_index":182,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["selectors",{"_index":2975,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["selects",{"_index":1390,"title":{},"body":{"components/DonorCardComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["selecttoken",{"_index":1348,"title":{},"body":{"injectables/DelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1346,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["sell",{"_index":3786,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":787,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto",{"_index":3577,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto(subject",{"_index":1090,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":1141,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._celltypetermoccurencesdataquerystatus",{"_index":1149,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._ontologytermoccurencesdataquerystatus",{"_index":1146,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._providerfilterquerystatus",{"_index":1160,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._scenedataquerystatus",{"_index":1152,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._technologyfilterquerystatus",{"_index":1156,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._tissueblockdataquerystatus",{"_index":1137,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sender",{"_index":2256,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":2160,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":2131,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":2302,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":2271,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1087,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sendtoggle",{"_index":2161,"title":{},"body":{"classes/InitializationState.html":{}}}],["sennet",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["sent",{"_index":978,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["serif",{"_index":1959,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":588,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":2918,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/data",{"_index":1017,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":982,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1020,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":293,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["set(['skin",{"_index":2676,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["set(reforgandata.filter(o",{"_index":2721,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(reforgans.map(o",{"_index":2701,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(selectedorgans.map(o",{"_index":2718,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setlistresults",{"_index":2194,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["setlistresults(@payload('listresults",{"_index":2225,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["setlistresults(listresults",{"_index":2209,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["setreferenceorgans",{"_index":2641,"title":{},"body":{"injectables/SceneState.html":{}}}],["setreferenceorgans(@payload('referenceorgans",{"_index":2682,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setreferenceorgans(referenceorgans",{"_index":2654,"title":{},"body":{"injectables/SceneState.html":{}}}],["setrootelement",{"_index":413,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["setrootelement(el",{"_index":416,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["sets",{"_index":297,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["setscene",{"_index":2642,"title":{},"body":{"injectables/SceneState.html":{}}}],["setscene(@payload('scene",{"_index":2683,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setscene(scene",{"_index":2658,"title":{},"body":{"injectables/SceneState.html":{}}}],["setselectedreferenceorgans",{"_index":2643,"title":{},"body":{"injectables/SceneState.html":{}}}],["setselectedreferenceorgans(@payload('selectedreferenceorgans",{"_index":2681,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setselectedreferenceorgans(selectedreferenceorgans",{"_index":2661,"title":{},"body":{"injectables/SceneState.html":{}}}],["settheme",{"_index":2891,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":2909,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":2133,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["setting",{"_index":2872,"title":{},"body":{"modules/StoreModule.html":{}}}],["settings",{"_index":1767,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settreemodel",{"_index":2437,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["settreemodel(treemodel",{"_index":2456,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["setup",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":1063,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sexchange",{"_index":2746,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["sexes",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["shadow",{"_index":1076,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["shall",{"_index":3793,"title":{},"body":{"license.html":{}}}],["shared",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":141,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/CoreModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":1845,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":173,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":1846,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/run",{"_index":1847,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/spatial",{"_index":1807,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["shared/components/spinner",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/thumbnail",{"_index":1489,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["shared/components/viewer/viewer.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/src/lib/components/body",{"_index":151,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["shared/web",{"_index":481,"title":{},"body":{"components/AppWebComponent.html":{}}}],["sharereplay",{"_index":148,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["sharing",{"_index":1095,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["shortest",{"_index":3678,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":1581,"title":{},"body":{"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["showing",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1667,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":930,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["sides",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["simplechanges",{"_index":1640,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["simplifies",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["single",{"_index":2270,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["site",{"_index":1925,"title":{},"body":{"components/HeaderComponent.html":{},"components/ViewerComponent.html":{}}}],["sites",{"_index":3253,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":913,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["skin",{"_index":1309,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1310,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipself",{"_index":1008,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["slide",{"_index":2988,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slideinhorizontaldropdown",{"_index":1534,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":1744,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1582,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":1649,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":529,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":1762,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.component.html",{"_index":1585,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.scss",{"_index":1584,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts",{"_index":1580,"title":{},"body":{"components/DualSliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:122",{"_index":1641,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:136",{"_index":1656,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:152",{"_index":1643,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:165",{"_index":1624,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:184",{"_index":1660,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:201",{"_index":1658,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:212",{"_index":1637,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:226",{"_index":1654,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:23",{"_index":1677,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":1648,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:29",{"_index":1673,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:34",{"_index":1612,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":1616,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1614,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:49",{"_index":1619,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1666,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:59",{"_index":1669,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:64",{"_index":1668,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:69",{"_index":1663,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:74",{"_index":1662,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:79",{"_index":1679,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:90",{"_index":1670,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:95",{"_index":1608,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":1746,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider.module.ts",{"_index":1758,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.wrapper",{"_index":1738,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"coverage.html":{}}}],["slidervaluechanged",{"_index":1600,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidesoffsetafter",{"_index":2963,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slidesoffsetbefore",{"_index":2961,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slidesperview",{"_index":2964,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slightly",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1311,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":259,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["snackbar.dismiss",{"_index":290,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["snapshot",{"_index":1190,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["software",{"_index":3726,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":1562,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["solved",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["sortby",{"_index":2219,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":2395,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(topblocks",{"_index":2248,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["sortbysynonymresult",{"_index":2340,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":2369,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically",{"_index":2341,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":2373,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":2371,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["source.getcelltypetermoccurences().pipe(take(1)).subscribe(celltypetermsfulldata",{"_index":1197,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.getontologytermoccurences().pipe(take(1)).subscribe(ontologytermsfulldata",{"_index":1196,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.pipe",{"_index":1105,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":1019,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["source.service.ts",{"_index":1338,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:10",{"_index":3126,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.service.ts:18",{"_index":3128,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.service.ts:20",{"_index":1349,"title":{},"body":{"injectables/DelegateDataSourceService.html":{}}}],["source.service.ts:23",{"_index":3131,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.worker",{"_index":3137,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.worker.ts",{"_index":3566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source/data",{"_index":1018,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["source/worker",{"_index":3119,"title":{},"body":{"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":496,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["sources.includes(msg.source",{"_index":2284,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":1479,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["spacebetween",{"_index":2965,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["sparc",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":3624,"title":{},"body":{"dependencies.html":{}}}],["spatial",{"_index":545,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["spatialscenenode",{"_index":1046,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialsearchconfigbehaviorcomponent",{"_index":546,"title":{"components/SpatialSearchConfigBehaviorComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchconfigbehaviormodule",{"_index":2793,"title":{"modules/SpatialSearchConfigBehaviorModule.html":{}},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"modules.html":{},"overview.html":{}}}],["spatialsearchconfigcomponent",{"_index":550,"title":{"components/SpatialSearchConfigComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchconfigmodule",{"_index":2798,"title":{"modules/SpatialSearchConfigModule.html":{}},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["spatialsearches",{"_index":1074,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["spatialsearchfilters",{"_index":1776,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spatialsearchlistitem",{"_index":1806,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spatialsearchlistmodule",{"_index":1844,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["spatialsearchremoved",{"_index":1780,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spec",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":3747,"title":{},"body":{"index.html":{}}}],["specific",{"_index":998,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":3746,"title":{},"body":{"index.html":{}}}],["specified",{"_index":2282,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["specifying",{"_index":2264,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":231,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["spinneractive",{"_index":233,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["spinneroverlaycomponent",{"_index":552,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":16,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1312,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1313,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["sprint",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["stage",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3207,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":3745,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":3729,"title":{},"body":{"index.html":{}}}],["start",{"_index":849,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":963,"title":{},"body":{"components/ContentComponent.html":{}}}],["start?.opened",{"_index":962,"title":{},"body":{"components/ContentComponent.html":{}}}],["startdrawers",{"_index":872,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":876,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":880,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":3148,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":961,"title":{},"body":{"components/ContentComponent.html":{}}}],["starts",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":1249,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":836,"title":{},"body":{"components/ContainerComponent.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":2608,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":2606,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":2607,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":236,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":2073,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":2078,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":2082,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":939,"title":{},"body":{"components/ContentComponent.html":{}}}],["state('full",{"_index":2083,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":2079,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('open",{"_index":2072,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":941,"title":{},"body":{"components/ContentComponent.html":{}}}],["state.nodes[state.root",{"_index":2461,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["statechange",{"_index":2104,"title":{},"body":{"classes/InitializationState.html":{}}}],["statements",{"_index":3553,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":680,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["states",{"_index":923,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["states.every(state",{"_index":1086,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["static",{"_index":190,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"injectables/ThemingService.html":{}}}],["stats",{"_index":2541,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":1036,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["status.message",{"_index":1214,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["status.status",{"_index":1207,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["statusmessage",{"_index":1037,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["stay",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1710,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["still",{"_index":1862,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["stomach",{"_index":1314,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1315,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":353,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1021,"title":{},"body":{"modules/CoreModule.html":{}}}],["storemodule",{"_index":1003,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":2862,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":3703,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":3701,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":127,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":640,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":361,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["style",{"_index":934,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["style.margin",{"_index":902,"title":{},"body":{"components/ContentComponent.html":{}}}],["styled",{"_index":1946,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":567,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":2127,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":185,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":181,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":689,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["subject.next(dataquerystate.completed",{"_index":1091,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":3784,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1208,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["subscription",{"_index":826,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["subscriptions",{"_index":776,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["substantial",{"_index":3795,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1989,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":1629,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["suffix",{"_index":2445,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["super",{"_index":1181,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["super(configstore",{"_index":497,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super(globalconfig",{"_index":3133,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["super._createcontainer",{"_index":441,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["super.ngxsoninit",{"_index":2228,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["support",{"_index":3167,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1258,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swiper",{"_index":2968,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"dependencies.html":{}}}],["swiper.use([navigation",{"_index":3018,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/angular",{"_index":3014,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/core",{"_index":3015,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/types",{"_index":2991,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["swipermodule",{"_index":3013,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiperoptions",{"_index":2959,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["switch",{"_index":946,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["switched",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":1058,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":1106,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":2392,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sync",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["syncexpanded(other",{"_index":2169,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":2166,"title":{},"body":{"classes/InitializationState.html":{}}}],["synonym",{"_index":2444,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonyms",{"_index":2372,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["t",{"_index":1103,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tab",{"_index":390,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["table",{"_index":3611,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3610,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1059,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["take(1",{"_index":1204,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["takewhile",{"_index":1060,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["takewhile((status",{"_index":1206,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap",{"_index":1061,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tap((status",{"_index":1201,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap(next",{"_index":1107,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap(organs",{"_index":2706,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tap(results",{"_index":2250,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tap(scene",{"_index":2735,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["target",{"_index":1631,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["technologies",{"_index":1071,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["technology",{"_index":1153,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["technologyfilter",{"_index":1168,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilterdata",{"_index":1154,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilterquerystatus",{"_index":1124,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilters",{"_index":1777,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["telemetry",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":620,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":451,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["templateurl",{"_index":183,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["term",{"_index":1142,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":2502,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["terms",{"_index":1129,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySelectionComponent.html":{}}}],["test",{"_index":1084,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["testing",{"_index":1082,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["text",{"_index":1442,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["theme",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":244,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["themes",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":257,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["theming.initialize(el",{"_index":264,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["theming.service",{"_index":2882,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1004,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":159,"title":{"injectables/ThemingService.html":{}},"body":{"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":2883,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themselves",{"_index":2973,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["thick",{"_index":1322,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1323,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1324,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1325,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":2232,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":1184,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":1227,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":1162,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":1186,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":1233,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.pipe(distinct",{"_index":1166,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._containerelement",{"_index":442,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this._expanded",{"_index":2096,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredmargin",{"_index":2125,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":2115,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":1185,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":1230,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.pipe(distinct",{"_index":1164,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._opened",{"_index":2092,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":2088,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._providerfilterquerystatus$.next(dataquerystate.completed",{"_index":1189,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._providerfilterquerystatus$.next(dataquerystate.running",{"_index":1240,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._providerfilterquerystatus$.pipe(distinct",{"_index":1171,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.next(dataquerystate.completed",{"_index":1187,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.next(dataquerystate.running",{"_index":1236,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.pipe(distinct",{"_index":1167,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.next(dataquerystate.completed",{"_index":1188,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.next(dataquerystate.running",{"_index":1238,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.pipe(distinct",{"_index":1169,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.next(dataquerystate.completed",{"_index":1183,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.next(dataquerystate.running",{"_index":1223,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.pipe(distinct",{"_index":1161,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.aggregatedata",{"_index":1140,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":1174,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.animationsenabled",{"_index":952,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.appendtoroot",{"_index":433,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":1817,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":2923,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":2926,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":2922,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.atscrollbottom",{"_index":2605,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.attached",{"_index":424,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.bodyui.bounds",{"_index":339,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.rotation",{"_index":337,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.rotationx",{"_index":338,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.target",{"_index":335,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.cdr.markforcheck",{"_index":865,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.celltypeselectionlabel",{"_index":367,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.celltypetermoccurencesdata",{"_index":1148,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.celltypetermoccurencesdataquerystatus",{"_index":1176,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.celltypeterms",{"_index":283,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.celltypetreemodel",{"_index":285,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.channel",{"_index":856,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":2291,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":2293,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":2296,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":2272,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":862,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checked.emit(this.selected",{"_index":1401,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.closeiframeviewer",{"_index":393,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.colorassignments",{"_index":2236,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.assigncolor(node['@id",{"_index":2692,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.assigncolor(result.tissueblock.spatialentityid",{"_index":2226,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.colorassignments.colorassignments",{"_index":2239,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.unassigncolor(result.tissueblock.spatialentityid",{"_index":2227,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.consentservice.consent",{"_index":292,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.content",{"_index":867,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":866,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":853,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":855,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":854,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.contentsvisible",{"_index":1722,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":366,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ctx.patchstate",{"_index":745,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.data.querystatus$.pipe",{"_index":234,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.data.state$.pipe(pluck('statusmessage",{"_index":239,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.data.updatefilter",{"_index":362,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.databaseready$.pipe(switchmap",{"_index":1224,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.databaseready$.pipe(take(1",{"_index":1209,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.dataservice.getreferenceorgans",{"_index":2712,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.dataservice.getreferenceorgans().pipe",{"_index":2698,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datasource.getcelltypetreemodel().pipe(sharereplay(1",{"_index":286,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.datasource.getontologytreemodel().pipe(sharereplay(1",{"_index":282,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.datastate",{"_index":2234,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datastate.scenedata",{"_index":2710,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datastate.tissueblockdata",{"_index":2238,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.datastate.updatefilter",{"_index":2691,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.defaulttheme",{"_index":2920,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":2066,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.dialog.open(spatialsearchconfigbehaviorcomponent",{"_index":1810,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.dialogref.close",{"_index":2783,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.drawer",{"_index":3078,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":3076,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":949,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":860,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":871,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.element",{"_index":2925,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":2116,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expanded",{"_index":1402,"title":{},"body":{"components/DonorCardComponent.html":{},"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":2158,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":2139,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":2109,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.faded",{"_index":967,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":1135,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.filteredorgans",{"_index":2787,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.filteredorgans.includes(this.selectedorgan",{"_index":2791,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.filteredresults",{"_index":2389,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filterorgans",{"_index":2776,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.filters",{"_index":1811,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":1877,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":1815,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":1876,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.forcedunassignment.asobservable",{"_index":721,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.forcedunassignment.next",{"_index":736,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.formatlabel(node.label",{"_index":2481,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":2407,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":2388,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ga.event('expanded_toggled",{"_index":1403,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('filter_added",{"_index":628,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.ga.event('filter_removed",{"_index":631,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.ga.event('filter_update",{"_index":1812,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('filters_applied",{"_index":1816,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('filters_reset",{"_index":1819,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('link_clicked",{"_index":1404,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('list_result_selected",{"_index":2595,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.ga.event('search",{"_index":2403,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ga.event('selected_toggled",{"_index":1398,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('selection_change",{"_index":1530,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.ga.event('slider_range_change",{"_index":1724,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.getarguments(definition",{"_index":2005,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getindexofmatch(label",{"_index":2486,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":2480,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":2281,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":2002,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getstate().filter",{"_index":1220,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.getworkerurl(true",{"_index":3134,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["this.globalconfig.getoption('header",{"_index":246,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":247,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('logindisabled",{"_index":250,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":248,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('theme",{"_index":243,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.snapshot.hubmaptoken",{"_index":402,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.handlemessage(msg",{"_index":859,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.highvalue",{"_index":1702,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.initialized",{"_index":2065,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":2132,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":2140,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":2162,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initializesliderpopover",{"_index":1723,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.injector",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(colorassignmentstate",{"_index":2237,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(datastate",{"_index":2235,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(listresultsstate",{"_index":2696,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.issliderinitialized",{"_index":1720,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":1721,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.itemselected.emit",{"_index":2782,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.label}:${lowvalue}:${highvalue",{"_index":1726,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.label}:${value",{"_index":1531,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.leftmargin",{"_index":959,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.linkclick.emit(url",{"_index":1405,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.linkclicked.emit(link",{"_index":2600,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.listresultdeselected.next(result",{"_index":2599,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.listresults",{"_index":2695,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.highlightednodeid",{"_index":2713,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.highlightnode(node['@id",{"_index":2693,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.unhighlightnode",{"_index":2694,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresultselected.next(result",{"_index":2598,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.loading",{"_index":3107,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.locator.prepareexternalurl('0",{"_index":3140,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["this.lookup(nodes",{"_index":2472,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":1700,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":2112,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":2111,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":2163,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":2290,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":2278,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nextbuttonid",{"_index":2980,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.nextmessageid",{"_index":2273,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodes$.pipe",{"_index":2470,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologysearchservice.settreemodel(this.treemodel",{"_index":2522,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.ontologyselectionlabel",{"_index":365,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ontologyservice.filter(value",{"_index":2393,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologytermoccurencesdata",{"_index":1145,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.ontologytermoccurencesdataquerystatus",{"_index":1175,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.ontologyterms",{"_index":274,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ontologytreemodel",{"_index":281,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.opened",{"_index":2137,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":2154,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":2138,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.options",{"_index":1704,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.ceil",{"_index":1714,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":1713,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionschanged",{"_index":1696,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":1529,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.organchange.emit(this.selectedorgan",{"_index":2781,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.organs",{"_index":2775,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.organs.filter(organ",{"_index":2788,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.original.children.length",{"_index":1921,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":1920,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":1692,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":1719,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":1715,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":1213,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.position",{"_index":2087,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.prevbuttonid",{"_index":2978,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.providerfilterdata",{"_index":1159,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.providerfilterquerystatus",{"_index":1179,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.registericonimpl(definition",{"_index":1992,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(safedef",{"_index":1987,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry",{"_index":1996,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.removebox",{"_index":1878,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.resetview",{"_index":333,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.resolve",{"_index":2038,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.resultlabel",{"_index":2597,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.rightmargin",{"_index":960,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.rootelement",{"_index":426,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.appendchild(this._containerelement",{"_index":443,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.removechild(this._containerelement",{"_index":425,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.display",{"_index":427,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.height",{"_index":431,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.position",{"_index":429,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.safeurl",{"_index":3106,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.scenedata",{"_index":1151,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.scenedataquerystatus",{"_index":1177,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.selected",{"_index":1397,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.selected.emit(node",{"_index":2406,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selectedorgan",{"_index":2780,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.selectedreferenceorgans",{"_index":2711,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.selection",{"_index":627,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":630,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":632,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":1532,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.selectionlabel",{"_index":368,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.sendtoggle",{"_index":2141,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.setlistresults(results",{"_index":2251,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.setreferenceorgans(organs",{"_index":2707,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.setscene(scene",{"_index":2736,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.setselectedreferenceorgans(organs.filter(organ",{"_index":2708,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.settheme(this.defaulttheme",{"_index":2924,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sex",{"_index":2778,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.sexchange.emit(this.sex",{"_index":2779,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":288,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.snapshot",{"_index":725,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.snapshot.colorpalette.concat",{"_index":730,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":2396,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":2397,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":2274,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.source.getaggregateresults(filter",{"_index":1228,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getcelltypetermoccurences(filter",{"_index":1234,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getdatabasestatus()).pipe",{"_index":1200,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getdatasettechnologynames",{"_index":1239,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":1231,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getprovidernames",{"_index":1241,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getscene(filter",{"_index":1237,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.gettissueblockresults(filter",{"_index":1225,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('colorassignments",{"_index":722,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.state$.pipe(pluck('colorassignmentslist",{"_index":723,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":1133,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('highlightedid",{"_index":2665,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('highlightednodeid",{"_index":2214,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.state$.pipe(pluck('listresults",{"_index":2216,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.state$.pipe(pluck('referenceorgans",{"_index":2667,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('scene",{"_index":2669,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('selectedreferenceorgans",{"_index":2671,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('status",{"_index":1111,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.statechange.emit",{"_index":2164,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":3075,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":945,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.subscriptions.add(sub",{"_index":2777,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":858,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":868,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.syncexpanded(other",{"_index":2165,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.technologyfilterdata",{"_index":1155,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.technologyfilterquerystatus",{"_index":1178,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":2921,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.thememode$.next('dark",{"_index":306,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next('light",{"_index":307,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next(e.matches",{"_index":312,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":349,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$]).subscribe",{"_index":277,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":227,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.theming.settheme(`${theme",{"_index":279,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.tissueblock.label",{"_index":1400,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.tissueblockdata",{"_index":1136,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.tissueblockdataquerystatus",{"_index":1173,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.tissuesections.filter(section",{"_index":3042,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":2094,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":2135,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":2134,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":2098,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":2147,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":2144,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":2523,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.treemodel",{"_index":2469,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel$.next(treemodel",{"_index":2468,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel$.pipe(map(state",{"_index":2458,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel?.nodes",{"_index":2490,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.uid",{"_index":2993,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.updatefaded",{"_index":951,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatemargin(position",{"_index":957,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updateorgan(undefined",{"_index":2792,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.updatestatus",{"_index":1210,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.updatestatus(status",{"_index":1202,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.updateurl",{"_index":3105,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.url",{"_index":387,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.validatedrawers",{"_index":861,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.valuerange",{"_index":1706,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":1707,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":1709,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.vieweropen",{"_index":388,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.warmupdatabase",{"_index":1198,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.width",{"_index":2110,"title":{},"body":{"classes/InitializationState.html":{}}}],["those",{"_index":2276,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["thread",{"_index":3839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["three",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["through",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":494,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":3600,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":879,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":877,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":848,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":847,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":843,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumbnail",{"_index":555,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["thumbnailcarouselcomponent",{"_index":554,"title":{"components/ThumbnailCarouselComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["thumbnailcarouselmodule",{"_index":1486,"title":{"modules/ThumbnailCarouselModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules.html":{},"overview.html":{}}}],["thumbnails",{"_index":2939,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["thymus",{"_index":1316,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1317,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tick",{"_index":3046,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tied",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":604,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["timeouts",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["timing",{"_index":974,"title":{},"body":{"components/ContentComponent.html":{}}}],["tissue",{"_index":558,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tissueblock",{"_index":1365,"title":{},"body":{"components/DonorCardComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tissueblock.description",{"_index":1412,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.donor.description",{"_index":1408,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.donor.label",{"_index":1407,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.label",{"_index":1411,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblockdata",{"_index":1134,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockdata(filter",{"_index":1222,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockdataquerystatus",{"_index":1114,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockresult",{"_index":1047,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/ListResult.html":{}}}],["tissueblocks",{"_index":2243,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tissues",{"_index":3029,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["tissuesection",{"_index":3040,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionexists",{"_index":3024,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionexists(sectionnumber",{"_index":3036,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionresult",{"_index":3027,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesections",{"_index":3025,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesections]=\"tissueblock.sections",{"_index":1414,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissuesectionviscomponent",{"_index":557,"title":{"components/TissueSectionVisComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesectionvismodule",{"_index":1487,"title":{"modules/TissueSectionVisModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/TissueSectionVisModule.html":{},"modules.html":{},"overview.html":{}}}],["title",{"_index":1443,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["tmc",{"_index":1070,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":562,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle(opened",{"_index":2136,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglebuttoncomponent",{"_index":561,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":953,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["toggleexpanded(expanded",{"_index":2150,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggleexpansion",{"_index":1363,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["togglefiltervisible",{"_index":1856,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":1511,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":346,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{}}}],["togglescheme",{"_index":348,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["togglesliderpopover",{"_index":1601,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["token",{"_index":400,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["token.length",{"_index":403,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["tool",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["toolbar",{"_index":3111,"title":{},"body":{"components/ViewerComponent.html":{}}}],["top",{"_index":1441,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["topblocks",{"_index":2241,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["topblocks.push",{"_index":2245,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tort",{"_index":3814,"title":{},"body":{"license.html":{}}}],["total",{"_index":3032,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["totaltissuesections",{"_index":3026,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["totaltissuesections]=\"tissueblock.sectioncount",{"_index":1413,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["touch",{"_index":888,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":195,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["tracking/telemetry",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["trackingpopupcomponent",{"_index":139,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["trackingpopupmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["tracks",{"_index":2379,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":1547,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["transition",{"_index":935,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["transition('closed",{"_index":2074,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":942,"title":{},"body":{"components/ContentComponent.html":{}}}],["translatey",{"_index":1567,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["transparency",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":1431,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["travel_explore",{"_index":2629,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["travisci",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":445,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":540,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":2521,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.component.ts",{"_index":3589,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tree.module",{"_index":2328,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":2534,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":2327,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["treemodel",{"_index":2432,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["trigger",{"_index":936,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["trigger('expandcollapse",{"_index":2077,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":938,"title":{},"body":{"components/ContentComponent.html":{}}}],["trigger('openclose",{"_index":2071,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggered",{"_index":2368,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["true",{"_index":210,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/ThemingModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2006,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["ts",{"_index":3708,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":3711,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1279,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":869,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turn",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":126,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3822,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":486,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/OntologySearchComponent.html":{}}}],["types",{"_index":986,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["types/lru",{"_index":3650,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":438,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":2673,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"index.html":{}}}],["ui.component",{"_index":153,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ui.netlify.app",{"_index":3732,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":3742,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":3739,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":152,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ui/organ",{"_index":3741,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":3740,"title":{},"body":{"index.html":{}}}],["uid",{"_index":2944,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["uievent",{"_index":2586,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["unassigncolor",{"_index":752,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["unassigncolor(@payload('key",{"_index":746,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["unassigncolor(key",{"_index":757,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["unchecked",{"_index":621,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":359,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/OntologySelection.html":{}}}],["under",{"_index":1260,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["underline",{"_index":1545,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["unhighlightnode",{"_index":2195,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["unique",{"_index":2253,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["university",{"_index":3759,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":483,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unless",{"_index":1388,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["unlike",{"_index":1250,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unnecessary",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["unselect",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":3084,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":1674,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["unused",{"_index":2958,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["up",{"_index":801,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["update",{"_index":352,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["updated",{"_index":603,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["updatefaded",{"_index":898,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatefilter",{"_index":1774,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatefilter(@payload('filter",{"_index":1216,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":1800,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatemargin",{"_index":899,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatemargin(position",{"_index":924,"title":{},"body":{"components/ContentComponent.html":{}}}],["updateorgan",{"_index":2749,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["updateorgan(organ",{"_index":2759,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["updates",{"_index":922,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["updatesex",{"_index":2750,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["updatesex(sex",{"_index":2761,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["updatestatus(@payload('status",{"_index":1212,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["updateurl",{"_index":3092,"title":{},"body":{"components/ViewerComponent.html":{}}}],["upgraded",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":1618,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ureter",{"_index":1318,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":212,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["url('./data",{"_index":3136,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["url.createobjecturl(codeblob",{"_index":3146,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["url?.startswith(domain",{"_index":385,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["urls",{"_index":1982,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["use",{"_index":1391,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"license.html":{}}}],["used",{"_index":193,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["useexisting",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["useful",{"_index":845,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":300,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["user/os",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["useremoteapi",{"_index":461,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["users",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":351,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["usevalue",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":2974,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["uterus",{"_index":1319,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1320,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":3712,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":485,"title":{},"body":{"components/AppWebComponent.html":{}}}],["val.every(isstring",{"_index":489,"title":{},"body":{"components/AppWebComponent.html":{}}}],["validatedrawers",{"_index":780,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":807,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validation",{"_index":2380,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":420,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":2473,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechanges",{"_index":2387,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":2390,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueof",{"_index":2034,"title":{},"body":{"classes/InitializationState.html":{}}}],["valuerange",{"_index":1602,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":985,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":511,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":223,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3829,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1321,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":3235,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":1464,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["viewchild",{"_index":133,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["viewchild('bodyui",{"_index":189,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["viewchild('popover",{"_index":1671,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkportal",{"_index":1676,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":2519,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":835,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":820,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewer",{"_index":216,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["viewer.component",{"_index":3118,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":3090,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":3089,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewercomponent",{"_index":564,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"coverage.html":{},"overview.html":{}}}],["viewermodule",{"_index":17,"title":{"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["vieweropen",{"_index":224,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["viewport",{"_index":2589,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["views",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["virtual",{"_index":2543,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["vis",{"_index":3021,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis'},{'name",{"_index":560,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["vis.component",{"_index":3052,"title":{},"body":{"modules/TissueSectionVisModule.html":{}}}],["vis.component.html",{"_index":3023,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.scss",{"_index":3022,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts",{"_index":3020,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"coverage.html":{}}}],["vis.component.ts:12",{"_index":3035,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:15",{"_index":3031,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:18",{"_index":3028,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:21",{"_index":3037,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.module",{"_index":1494,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["vis.module.ts",{"_index":3051,"title":{},"body":{"modules/TissueSectionVisModule.html":{}}}],["vis/tissue",{"_index":1493,"title":{},"body":{"modules/DonorCardModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["visibility",{"_index":1661,"title":{},"body":{"components/DualSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visibility_off",{"_index":1330,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1328,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":1528,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visited",{"_index":3007,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["visual",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":1469,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["wait",{"_index":2036,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":2159,"title":{},"body":{"classes/InitializationState.html":{}}}],["warming",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["warmupdatabase",{"_index":1199,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["warning",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":3800,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3797,"title":{},"body":{"license.html":{}}}],["watchoverflow",{"_index":2966,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["way",{"_index":2591,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["wc",{"_index":450,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":514,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["web",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["webcomponent",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":3652,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":886,"title":{},"body":{"components/ContainerComponent.html":{}}}],["webpages",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":3728,"title":{},"body":{"index.html":{}}}],["week",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":650,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["well",{"_index":2542,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":229,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":205,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["white",{"_index":641,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["whole",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["whose",{"_index":2351,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["width",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":2167,"title":{},"body":{"classes/InitializationState.html":{}}}],["window",{"_index":220,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.matchmedia",{"_index":296,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.matchmedia('(prefers",{"_index":302,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.open(url",{"_index":391,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["within",{"_index":2507,"title":{},"body":{"components/OntologySelectionComponent.html":{},"changelog.html":{}}}],["without",{"_index":822,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["work",{"_index":2976,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["workaround",{"_index":2177,"title":{},"body":{"classes/InitializationState.html":{}}}],["worker",{"_index":1345,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["worker(url",{"_index":3135,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":3120,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["workerdatasourceservice",{"_index":1344,"title":{"injectables/WorkerDataSourceService.html":{}},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["wrapped",{"_index":819,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":1539,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["wrapper/container",{"_index":1743,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":823,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["x",{"_index":340,"title":{},"body":{"interfaces/AppOptions.html":{},"components/TissueSectionVisComponent.html":{}}}],["y",{"_index":342,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ResultsBrowserComponent.html":{}}}],["yes",{"_index":2357,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":344,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["zone.js",{"_index":3714,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nAppModule -->\n\nViewerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/app.module.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { createCustomElement } from '@angular/elements';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BodyUiModule, InfoButtonModule, OrganSelectorModule, TrackingPopupModule } from 'ccf-shared';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\nimport { ViewerModule } from './shared/components/viewer/viewer.module';\nimport { AppWebComponent } from './app-web-component.component';\n\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    BodyUiModule,\n    OrganSelectorModule,\n    InfoButtonModule,\n    MatTooltipModule,\n    ViewerModule,\n    TrackingPopupModule,\n    MatSnackBarModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    { provide: DEFAULT_THEME, useValue: 'hubmap-theme-light' },\n    { provide: OverlayContainer, useExisting: AppRootOverlayContainer }\n  ],\n  entryComponents: [AppComponent]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-eui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CCFDatabaseOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loginEnabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CCFDatabaseOptions, OntologyTreeModel } from 'ccf-database';\nimport { DataSourceService, GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map, pluck, shareReplay } from 'rxjs/operators';\n\nimport { BodyUiComponent } from '../../../ccf-shared/src/lib/components/body-ui/body-ui.component';\nimport { environment } from '../environments/environment';\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { ListResultsState } from './core/store/list-results/list-results.state';\nimport { SceneState } from './core/store/scene/scene.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n\ninterface AppOptions extends CCFDatabaseOptions {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  loginEnabled?: boolean;\n}\n\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('bodyUI', { static: false }) bodyUI: BodyUiComponent;\n\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  cellTypeSelectionLabel = 'cell';\n\n  selectionLabel = 'body | cell';\n\n  /**\n   * Whether or not organ carousel is open\n   */\n  organListVisible = true;\n\n  /**\n   * Emitted url object from the results browser item\n   */\n  url = '';\n\n  /**\n   * Acceptable viewer domains (others will open in new window)\n   */\n  acceptableViewerDomains: string[] = environment.acceptableViewerDomains || [];\n\n  /**\n   * Variable to keep track of whether the viewer is open\n   * or not\n   */\n  viewerOpen = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly loadingMessage$ = this.data.state$.pipe(pluck('statusMessage'));\n\n  readonly ontologyTerms$: Observable;\n  readonly ontologyTreeModel$: Observable;\n\n  readonly cellTypeTerms$: Observable;\n  readonly cellTypeTreeModel$: Observable;\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n  readonly loginDisabled$ = this.globalConfig.getOption('loginDisabled');\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(\n    el: ElementRef, injector: Injector,\n    readonly data: DataState, readonly theming: ThemingService,\n    readonly scene: SceneState, readonly listResultsState: ListResultsState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, overlay: AppRootOverlayContainer,\n    readonly dataSource: DataSourceService, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    overlay.setRootElement(el);\n    data.tissueBlockData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.ontologyTermOccurencesData$.subscribe();\n    data.cellTypeTermOccurencesData$.subscribe();\n    data.sceneData$.subscribe();\n    data.filter$.subscribe();\n    data.technologyFilterData$.subscribe();\n    data.providerFilterData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n\n    this.ontologyTreeModel$ = this.dataSource.getOntologyTreeModel().pipe(shareReplay(1));\n    this.cellTypeTerms$ = data.filter$.pipe(pluck('cellTypeTerms'));\n    this.cellTypeTreeModel$ = this.dataSource.getCellTypeTreeModel().pipe(shareReplay(1));\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    if (window.matchMedia) {\n      // Sets initial theme according to user theme preference\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        this.themeMode$.next('dark');\n      } else {\n        this.themeMode$.next('light');\n      }\n\n      // Listens for changes in user theme preference\n      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n        this.themeMode$.next(e.matches ? 'dark' : 'light');\n      });\n    } else {\n      this.themeMode$.next('light');\n    }\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   *\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent\n  ): void {\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n    this.resetView();\n  }\n\n  resetView(): void {\n    this.bodyUI.target = [0, 0, 0];\n    this.bodyUI.rotation = 0;\n    this.bodyUI.rotationX = 0;\n    this.bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   *\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[] | undefined, type: 'anatomical-structures' | 'cell-type'): void {\n    if (ontologySelection) {\n      if (type === 'anatomical-structures') {\n        this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id) });\n        this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      } else {\n        this.data.updateFilter({ cellTypeTerms: ontologySelection.map(selection => selection.id) });\n        this.cellTypeSelectionLabel = this.createSelectionLabel(ontologySelection);\n      }\n      if (this.ontologySelectionLabel && this.cellTypeSelectionLabel) {\n        this.selectionLabel = `${this.ontologySelectionLabel} | ${this.cellTypeSelectionLabel}`;\n      } else if (this.ontologySelectionLabel) {\n        this.selectionLabel = `${this.ontologySelectionLabel}`;\n      } else if (this.cellTypeSelectionLabel) {\n        this.selectionLabel = `${this.cellTypeSelectionLabel}`;\n      } else {\n        this.selectionLabel = '';\n      }\n      if (ontologySelection[0] && ontologySelection[0].label === 'body') {\n        this.resetView();\n      }\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [], cellTypeTerms: [] });\n    this.ontologySelectionLabel = '';\n    this.cellTypeSelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string {\n    if (ontolgySelection.length === 0) {\n      return '';\n    }\n\n    if (ontolgySelection.length === 1) {\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  url?.startsWith(domain));\n    if (isWhitelisted) {\n      this.url = url;\n      this.viewerOpen = !!url;\n    } else {\n      // Open link in new tab\n      window.open(url, '_blank');\n      this.closeiFrameViewer();\n    }\n  }\n\n  /**\n   * Function to easily close the iFrame viewer.\n   */\n  closeiFrameViewer(): void {\n    this.viewerOpen = false;\n  }\n\n  /**\n   * Gets login token\n   */\n  get loggedIn(): boolean {\n    const token = this.globalConfig.snapshot.hubmapToken ?? '';\n    return token.length > 0;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppRootOverlayContainer.html":{"url":"injectables/AppRootOverlayContainer.html","title":"injectable - AppRootOverlayContainer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppRootOverlayContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    OverlayContainer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attached\n                            \n                            \n                                    Private\n                                rootElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createContainer\n                            \n                            \n                                    Private\n                                appendToRoot\n                            \n                            \n                                setRootElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _createContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    _createContainer()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        appendToRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    appendToRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRootElement\n                        \n                    \n                \n            \n            \n                \nsetRootElement(el: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        attached\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rootElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { Injectable, ElementRef } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppRootOverlayContainer extends OverlayContainer {\n  private rootElement: ElementRef;\n  private attached = false;\n\n  setRootElement(el: ElementRef): void {\n    if (this.attached) {\n      this.rootElement.nativeElement.removeChild(this._containerElement);\n      this.attached = false;\n    }\n\n    this.rootElement = el;\n    this.rootElement.nativeElement.style.display = 'block';\n    this.rootElement.nativeElement.style.position = 'contents';\n    this.rootElement.nativeElement.style.height = '100%';\n    this.appendToRoot();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  protected _createContainer(): void {\n    super._createContainer();\n    this.appendToRoot();\n  }\n\n  private appendToRoot(): void {\n    if (!this._containerElement || !this.rootElement) {\n      return;\n    }\n\n    this.rootElement.nativeElement.appendChild(this._containerElement);\n    this.attached = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSources\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                hubmapAssetUrl\n                            \n                            \n                                hubmapDataService\n                            \n                            \n                                hubmapDataUrl\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                hubmapToken\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                remoteApiEndpoint\n                            \n                            \n                                theme\n                            \n                            \n                                useRemoteApi\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/app-web-component.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSources\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapAssetUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapDataService\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapDataUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapToken\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        remoteApiEndpoint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useRemoteApi\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/app-web-component.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS, GenericGlobalConfig } from 'ccf-shared/web-components';\n\nimport { environment } from '../environments/environment';\n\n\nfunction parseDataSources(value: unknown): string[] {\n  const isString = (val: unknown): val is string => typeof val === 'string';\n  const isStringArray = (val: unknown): val is string[] => Array.isArray(val) && val.every(isString);\n\n  if (typeof value === 'string') {\n    const json = BUILTIN_PARSERS.json(value);\n    if (isStringArray(json)) {\n      return json;\n    }\n  } else if (isStringArray(value)) {\n    return value;\n  }\n\n  throw new Error('Invalid data sources');\n}\n\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() dataSources: string | string[];\n\n  @Input() hubmapDataService: string;\n  @Input() hubmapDataUrl: string;\n  @Input() hubmapAssetUrl: string;\n  @Input() hubmapToken: string;\n  @Input() hubmapPortalUrl: string;\n\n  @Input() useRemoteApi: string | boolean;\n  @Input() remoteApiEndpoint: string;\n  @Input() theme: string;\n  @Input() header: string | boolean;\n  @Input() homeUrl: string;\n  @Input() logoTooltip: string;\n  @Input() loginDisabled: boolean;\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions'],\n        ...environment.customization\n      },\n      parse: {\n        dataSources: parseDataSources,\n        useRemoteApi: BUILTIN_PARSERS.boolean,\n        header: BUILTIN_PARSERS.boolean,\n        loginDisabled: BUILTIN_PARSERS.boolean\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of checkbox component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:33\n                            \n                        \n                \n                    \n                        Number of columns\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:18\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:23\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:28\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterOnChange\n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:53\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Number of columns\n   */\n  @Input() columns = 3;\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Creates an instance of checkbox component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   *\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n      this.ga.event('filter_added', 'filter_checkbox', option);\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n      this.ga.event('filter_removed', 'filter_checkbox', option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5rem;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  &.three {\n    .option {\n      width: 33%;\n    }\n  }\n\n  &.four {\n    .option {\n      width: 25%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            rank\n                                        \n                                \n                                \n                                        \n                                            rgba\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rgba\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rgba:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ColorAssignmentState.html":{"url":"injectables/ColorAssignmentState.html","title":"injectable - ColorAssignmentState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ColorAssignmentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Color Assignment State\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorAssignments$\n                            \n                            \n                                    Readonly\n                                colorAssignmentsList$\n                            \n                            \n                                    Private\n                                    Readonly\n                                forcedUnassignment\n                            \n                            \n                                    Readonly\n                                forcedUnassignment$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignColor\n                            \n                            \n                                getColor\n                            \n                            \n                                unassignColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        assignColor\n                        \n                    \n                \n            \n            \n                \nassignColor(key: string, doReset)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    doReset\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Immutable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Immutable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unassignColor\n                        \n                    \n                \n            \n            \n                \nunassignColor(key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorAssignments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorAssignmentsList$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        forcedUnassignment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        forcedUnassignment$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.forcedUnassignment.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:59\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorAssignmentStateModel.html":{"url":"interfaces/ColorAssignmentStateModel.html","title":"interface - ColorAssignmentStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorAssignmentStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorAssignments\n                                        \n                                \n                                \n                                        \n                                            colorAssignmentsList\n                                        \n                                \n                                \n                                        \n                                            colorPalette\n                                        \n                                \n                                \n                                        \n                                            colorsAvailable\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorAssignments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorAssignments:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorAssignmentsList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorAssignmentsList:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorPalette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorPalette:         Color[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Color[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorsAvailable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorsAvailable:         Color[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Color[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:115\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:83\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:105\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateDrawers\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:124\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageChannel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                        \n                    \n\n            \n                \n                    The connected message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ContentComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:45\n                        \n                    \n\n            \n                \n                    Content component if provided already wrapped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(ContentComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:48\n                        \n                    \n\n            \n                \n                    Content component if provided without wrapping.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(DrawerComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:41\n                        \n                    \n\n            \n                \n                    Drawer components in this container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:62\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component.\n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationsEnabled\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                faded\n                            \n                            \n                                leftMargin\n                            \n                            \n                                rightMargin\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:70\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:60\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateFaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:116\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateMargin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:103\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DrawerComponent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:39\n                        \n                    \n\n            \n                \n                    References to the side drawers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 5.5rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DataSourceService, MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\nimport { CcfApiConfiguration, CcfApiModule } from 'ccf-openapi/angular-client';\n\nimport { environment } from '../../environments/environment';\nimport { HeaderModule } from './header/header.module';\nimport { DelegateDataSourceService } from './services/data-source/data-source.service';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'eui'\n    }),\n    MousePositionTrackerModule,\n\n    CcfApiModule.forRoot(() => new CcfApiConfiguration({\n      basePath: environment.dbOptions.remoteApiEndpoint\n    })),\n\n    HeaderModule,\n    StoreModule,\n    ThemingModule\n  ],\n  providers: [\n    { provide: DataSourceService, useExisting: DelegateDataSourceService }\n  ],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Store data state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            statusMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Loading\" | \"Ready\" | \"Error\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Loading\" | \"Ready\" | \"Error\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, DatabaseStatus, Filter, SpatialSceneNode, TissueBlockResult } from 'ccf-database';\nimport { DataSourceService } from 'ccf-shared';\nimport { combineLatest, defer, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { delay, distinct, filter as rxjsFilter, map, pluck, publishReplay, refCount, repeat, switchMap, take, takeWhile, tap } from 'rxjs/operators';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000'],\n  spatialSearches: []\n};\n\n/** Current state of data queries. */\n// eslint-disable-next-line no-shadow\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n  status: 'Loading' | 'Ready' | 'Error';\n  statusMessage: string;\n}\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER,\n    status: 'Loading',\n    statusMessage: 'Loading database'\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository implements NgxsOnInit {\n  /** Emits when the database is ready. */\n  readonly databaseReady$ = this.state$.pipe(pluck('status'), distinct(), rxjsFilter((status) => status === 'Ready'));\n\n  /** Implementation subject for tissueBlockDataQueryStatus$. */\n  private readonly _tissueBlockDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for ontologyTermOccurencesDataQueryStatus$. */\n  private readonly _ontologyTermOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for cellTypeTermOccurencesDataQueryStatus$. */\n  private readonly _cellTypeTermOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for sceneDataQueryStatus$. */\n  private readonly _sceneDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for technologyFilterQueryStatus$. */\n  private readonly _technologyFilterQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for providerFilterQueryStatus$. */\n  private readonly _providerFilterQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$ = new ReplaySubject>(1);\n  /** Keeping track of all cell type terms there is data for. */\n  readonly cellTypeTermsFullData$ = new ReplaySubject>(1);\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest tissue block query data. */\n  readonly tissueBlockData$ = this.filter$.pipe(queryData(\n    this.tissueBlockData, sendCompletedTo(this._tissueBlockDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest ontology term occurences query data. */\n  readonly ontologyTermOccurencesData$ = this.filter$.pipe(queryData(\n    this.ontologyTermOccurencesData, sendCompletedTo(this._ontologyTermOccurencesDataQueryStatus$)\n  ));\n  /** Latest cell type term occurences query data. */\n  readonly cellTypeTermOccurencesData$ = this.filter$.pipe(queryData(\n    this.cellTypeTermOccurencesData, sendCompletedTo(this._cellTypeTermOccurencesDataQueryStatus$)\n  ));\n  /** Latest scene query data. */\n  readonly sceneData$ = this.filter$.pipe(queryData(\n    this.sceneData, sendCompletedTo(this._sceneDataQueryStatus$)\n  ));\n  /** Latest technology filter label query data. */\n  readonly technologyFilterData$ = this.filter$.pipe(queryData(\n    this.technologyFilterData, sendCompletedTo(this._technologyFilterQueryStatus$)\n  ));\n  /** Latest provider filter label query data. */\n  readonly providerFilterData$ = this.filter$.pipe(queryData(\n    this.providerFilterData, sendCompletedTo(this._providerFilterQueryStatus$)\n  ));\n\n  /** Current status of queries in the tissueBlockData$ observable. */\n  readonly tissueBlockDataQueryStatus$ = this._tissueBlockDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the ontologyTermOccurrences$ observable. */\n  readonly ontologyTermOccurencesDataQueryStatus$ = this._ontologyTermOccurencesDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the cellTypeTermOccurrences$ observable. */\n  readonly cellTypeTermOccurencesDataQueryStatus$ = this._cellTypeTermOccurencesDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the sceneData$ observable. */\n  readonly sceneDataQueryStatus$ = this._sceneDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the technologyFilter$ observable. */\n  readonly technologyFilterQueryStatus$ = this._technologyFilterQueryStatus$.pipe(distinct());\n  /** Current status of queries in the providerFilter$ observable. */\n  readonly providerFilterQueryStatus$ = this._providerFilterQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.tissueBlockDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.ontologyTermOccurencesDataQueryStatus$,\n    this.cellTypeTermOccurencesDataQueryStatus$,\n    this.sceneDataQueryStatus$,\n    this.technologyFilterQueryStatus$,\n    this.providerFilterQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._sceneDataQueryStatus$.next(DataQueryState.Completed);\n    this._technologyFilterQueryStatus$.next(DataQueryState.Completed);\n    this._providerFilterQueryStatus$.next(DataQueryState.Completed);\n  }\n\n  ngxsOnInit(): void {\n    const { ontologyTermsFullData$, ontologyTermOccurencesData$, cellTypeTermsFullData$, cellTypeTermOccurencesData$, source, snapshot: { filter } } = this;\n    if (filter === DEFAULT_FILTER) {\n      // Common case - Reuse the result of the regular query\n      ontologyTermOccurencesData$.pipe(take(1)).subscribe(ontologyTermsFullData$);\n      cellTypeTermOccurencesData$.pipe(take(1)).subscribe(cellTypeTermsFullData$);\n    } else {\n      source.getOntologyTermOccurences().pipe(take(1)).subscribe(ontologyTermsFullData$);\n      source.getCellTypeTermOccurences().pipe(take(1)).subscribe(cellTypeTermsFullData$);\n    }\n    this.warmUpDatabase();\n  }\n\n  private warmUpDatabase(): void {\n    defer(() => this.source.getDatabaseStatus()).pipe(\n      tap((status) => this.updateStatus(status)),\n      delay(2000),\n      take(1)\n    ).pipe(\n      repeat(1000),\n      takeWhile((status) => status.status === 'Loading')\n    ).subscribe();\n\n    this.databaseReady$.pipe(take(1), tap(() => {\n      this.updateStatus({\n        status: 'Ready',\n        message: 'Loading CCF Exploration User Interface (EUI)'\n      });\n    })).subscribe();\n  }\n\n  @DataAction()\n  updateStatus(@Payload('status') status: DatabaseStatus): void {\n    this.patchState({\n      status: status.status,\n      statusMessage: status.message\n    });\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(@Payload('filter') filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: { ...this.getState().filter, ...filter }\n    });\n  }\n\n  /**\n   * Queries for tissue block data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private tissueBlockData(filter: Filter): ObservableInput {\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getTissueBlockResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private ontologyTermOccurencesData(filter: Filter): ObservableInput> {\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for cell type term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private cellTypeTermOccurencesData(filter: Filter): ObservableInput> {\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getCellTypeTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for scene data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private sceneData(filter: Filter): ObservableInput {\n    this._sceneDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getScene(filter)));\n  }\n\n  /**\n   * Queries for technology filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private technologyFilterData(): ObservableInput {\n    this._technologyFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getDatasetTechnologyNames()));\n  }\n\n  /**\n   * Queries for provider filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private providerFilterData(): ObservableInput {\n    this._providerFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getProviderNames()));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DelegateDataSourceOptions.html":{"url":"interfaces/DelegateDataSourceOptions.html","title":"interface - DelegateDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DelegateDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useRemoteApi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRemoteApi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRemoteApi:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService, CCFDatabaseDataSourceService, DataSourceLike, InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\n\nexport interface DelegateDataSourceOptions {\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken {\n    const { useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      return ApiEndpointDataSourceService;\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DelegateDataSourceService.html":{"url":"injectables/DelegateDataSourceService.html","title":"injectable - DelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        InjectorDelegateDataSourceService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                selectToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: DelegateDataSourceOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DelegateDataSourceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService, CCFDatabaseDataSourceService, DataSourceLike, InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\n\nexport interface DelegateDataSourceOptions {\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken {\n    const { useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      return ApiEndpointDataSourceService;\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DonorCardComponent.html":{"url":"components/DonorCardComponent.html","title":"component - DonorCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DonorCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Donor card component which displays data from a patient\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-donor-card\n            \n\n            \n                styleUrls\n                ./donor-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./donor-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                hoverState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCheckbox\n                            \n                            \n                                linkHandler\n                            \n                            \n                                toggleExpansion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                expanded\n                            \n                            \n                                highlighted\n                            \n                            \n                                selected\n                            \n                            \n                                tissueBlock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                linkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of donor card component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:26\n                            \n                        \n                \n                    \n                        Allows color of the checkbox background to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:29\n                            \n                        \n                \n                    \n                        Allows the expanded state of the card to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlighted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:23\n                            \n                        \n                \n                    \n                        Allows the selected state to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueBlock\n                    \n                \n                \n                    \n                        Type :     TissueBlockResult\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:20\n                            \n                        \n                \n                    \n                        Tissue Block to generate the donor card from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:34\n                            \n                        \n                \n                    \n                        Emits the new checked state whenever it changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        linkClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:37\n                            \n                        \n                \n                    \n                        Emit the url of any link when clicked.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-donor-card\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-donor-card'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleCheckbox\n                        \n                    \n                \n            \n            \n                \nhandleCheckbox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:52\n                \n            \n\n\n            \n                \n                    Handles the logic that needs to run when the checkbox is clicked on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkHandler\n                        \n                    \n                \n            \n            \n                \nlinkHandler(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:76\n                \n            \n\n\n            \n                \n                    Handles what happens when an info card is clicked.\nPasses up the link click event unless the card isn't selected\nIn which case it selects it for ease of use.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the URL to emit up.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpansion\n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:62\n                \n            \n\n\n            \n                \n                    Ensures that the expanded variable is only changed if selected first.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-donor-card'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoverState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:40\n                        \n                    \n\n            \n                \n                    To keep track of which element, if any, are hovered over.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { TissueBlockResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Donor card component which displays data from a patient\n */\n@Component({\n  selector: 'ccf-donor-card',\n  templateUrl: './donor-card.component.html',\n  styleUrls: ['./donor-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DonorCardComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-donor-card';\n\n  /** Tissue Block to generate the donor card from */\n  @Input() tissueBlock!: TissueBlockResult;\n\n  /** Allows the selected state to be set from outside the component */\n  @Input() selected = false;\n\n  /** Allows color of the checkbox background to be set from outside the component */\n  @Input() color!: string;\n\n  /** Allows the expanded state of the card to be set from outside the component */\n  @Input() expanded = false;\n\n  @Input() highlighted = false;\n\n  /** Emits the new checked state whenever it changes */\n  @Output() readonly checked = new EventEmitter();\n\n  /** Emit the url of any link when clicked. */\n  @Output() readonly linkClick = new EventEmitter();\n\n  /** To keep track of which element, if any, are hovered over. */\n  hoverState = '';\n\n  /**\n   * Creates an instance of donor card component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Handles the logic that needs to run when the checkbox is clicked on.\n   */\n  handleCheckbox(): void {\n    this.selected = !this.selected;\n    this.ga.event('selected_toggled', 'donor_card', this.tissueBlock.label, +this.selected);\n    this.checked.emit(this.selected);\n    this.expanded = false;\n  }\n\n  /**\n   * Ensures that the expanded variable is only changed if selected first.\n   */\n  toggleExpansion(): void {\n    if (this.selected) {\n      this.expanded = !this.expanded;\n      this.ga.event('expanded_toggled', 'donor_card', this.tissueBlock.label, +this.expanded);\n    }\n  }\n\n  /**\n   * Handles what happens when an info card is clicked.\n   * Passes up the link click event unless the card isn't selected\n   * In which case it selects it for ease of use.\n   *\n   * @param url the URL to emit up.\n   */\n  linkHandler(url: string): void {\n    this.ga.event('link_clicked', 'donor_card', this.tissueBlock.label);\n    if (this.selected) {\n      this.linkClick.emit(url);\n    } else {\n      this.selected = true;\n      this.checked.emit(this.selected);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      person\n\n      \n        {{ tissueBlock.donor.label }}\n        {{ tissueBlock.donor.description }}\n      \n    \n    \n      DONOR\n      open_in_new\n    \n\n    {{ expanded ? \"expand_less\" : \"expand_more\" }}\n  \n\n\n\n  \n    \n      bubble_chart\n      \n        {{ tissueBlock.label }}\n        {{ tissueBlock.description }}\n      \n\n      \n        TISSUE BLOCK\n        open_in_new\n      \n    \n\n     1\"\n      [totalTissueSections]=\"tissueBlock.sectionCount\"\n      [tissueSections]=\"tissueBlock.sections\"\n    >\n\n     0\">\n      \n      \n    \n  \n\n  \n    \n      bubble_chart\n      \n        {{ section.label }}\n        {{ section.description }}\n      \n\n      \n        TISSUE SECTION\n        open_in_new\n      \n    \n\n     0\">\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./donor-card.component.scss\n                \n                :host {\n  width: 100%;\n\n  .main-container {\n    display: flex;\n    min-height: 3rem;\n    width: 100%;\n    align-items: center;\n    padding-left: 0.5rem;\n  }\n\n  .checkbox-background {\n    height: 2rem;\n    width: 2rem;\n    border-radius: 50%;\n    margin-right: 0.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n\n    ::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background,\n    .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {\n      background-color: transparent;\n    }\n\n    &.highlighted {\n      ::ng-deep .mat-ripple-element {\n        opacity: .04;\n      }\n    }\n\n    .checkselected {\n      ::ng-deep .mat-checkbox-frame {\n        border-color: white !important;\n      }\n    }\n\n    .checkbox {\n      margin-left: 1.12rem;\n      margin-bottom: 0.12rem; \n    }\n  }\n\n  .align-end {\n    margin-left: auto;\n  }\n\n  .info-block {\n    display: flex;\n    font-size: 0.75rem;\n    line-height: 1rem;\n    width: 100%;\n    align-items: center;\n\n    &:not(:first-child) {\n      margin-top: 0.5rem;\n    }\n\n    .text-content {\n      .title {\n        font-weight: 600;\n      }\n    }\n  }\n\n  .donor {\n    display: flex;\n    font-size: 0.75rem;\n    line-height: 1rem;\n    align-items: center;\n    flex-grow: 1;\n    height: 2.5rem;\n\n    &:hover, &.highlighted {\n      box-shadow: 0px 6px 2px -2px rgba(0, 0, 0, 0.2), 0px 4px 4px 0px rgba(0, 0, 0, 0.14), 0px 2px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n\n    .hover-state {\n      width: 19.5rem !important;\n    }\n\n    .donor-info {\n      .title {\n        font-weight: 600;\n      }\n    }\n  }\n\n  .hoverable {\n    position: relative;\n  }\n\n  .hover-enabled {\n    position: relative;\n\n    &:hover {\n      .hover-state {\n        opacity: 1;\n      }\n    }\n  }\n\n  .hover-state {\n    transition: opacity 0.15s ease-in-out;\n    opacity: 0;\n    cursor: pointer;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    margin-left: -0.5rem;\n    align-items: center;\n    display: flex;\n    justify-content: flex-end;\n    padding-right: 1rem;\n    font-size: 0.75rem;\n\n    .hover-title {\n      font-weight: lighter;\n    }\n\n    .hover-icon {\n      margin-left: 1rem;\n    }\n  }\n\n  .default-padding {\n    padding: 0.5rem;\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .expanded-view {\n    margin-top: 0.25rem;\n    width: 85%;\n    margin-bottom: 0.25rem;\n  }\n\n  .d-flex {\n    display: flex;\n  }\n\n  .icon-size {\n    height: 1.5rem;\n    width: 1.5rem;\n    font-size: 1.5rem;\n  }\n\n  .selectable {\n    cursor: pointer;\n  }\n\n  .w-80 {\n    width: 80% !important;\n\n    .info-block {\n      .text-content {\n        .description {\n          width: 16rem !important;\n        }\n      }\n    }\n  }\n\n  .ml-5 {\n    margin-left: 0.5rem;\n  }\n\n  .mr-5 {\n    margin-right: 0.5rem;\n  }\n\n  .mt-05 {\n    margin-top: 0.5rem;\n  }\n\n  .description {\n    width: 17rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person              {{ tissueBlock.donor.label }}        {{ tissueBlock.donor.description }}                    DONOR      open_in_new        {{ expanded ? \"expand_less\" : \"expand_more\" }}              bubble_chart              {{ tissueBlock.label }}        {{ tissueBlock.description }}                    TISSUE BLOCK        open_in_new               1\"      [totalTissueSections]=\"tissueBlock.sectionCount\"      [tissueSections]=\"tissueBlock.sections\"    >     0\">                              bubble_chart              {{ section.label }}        {{ section.description }}                    TISSUE SECTION        open_in_new               0\">                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DonorCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DonorCardModule.html":{"url":"modules/DonorCardModule.html","title":"module - DonorCardModule","body":"\n                   \n\n\n\n\n    Modules\n    DonorCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DonorCardModule\n\n\n\ncluster_DonorCardModule_exports\n\n\n\ncluster_DonorCardModule_imports\n\n\n\ncluster_DonorCardModule_declarations\n\n\n\n\nDonorCardComponent\n\nDonorCardComponent\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nDonorCardModule -->\n\nDonorCardComponent->DonorCardModule\n\n\n\n\n\nDonorCardComponent \n\nDonorCardComponent \n\nDonorCardComponent  -->\n\nDonorCardModule->DonorCardComponent \n\n\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nDonorCardModule -->\n\nThumbnailCarouselModule->DonorCardModule\n\n\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nDonorCardModule -->\n\nTissueSectionVisModule->DonorCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DonorCardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThumbnailCarouselModule\n                        \n                        \n                            TissueSectionVisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DonorCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ThumbnailCarouselModule } from '../../../shared/components/thumbnail-carousel/thumbnail-carousel.module';\nimport { DonorCardComponent } from './donor-card.component';\nimport { TissueSectionVisModule } from './../tissue-section-vis/tissue-section-vis.module';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatCheckboxModule,\n    MatIconModule,\n\n    ThumbnailCarouselModule,\n    TissueSectionVisModule\n  ],\n  declarations: [DonorCardComponent],\n  exports: [DonorCardComponent]\n})\nexport class DonorCardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:33\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        selectionChanged\n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:59\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleOptions\n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:50\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        optionsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'invisible'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:38\n                        \n                    \n\n            \n                \n                    Determines if menu contents are visible (used for fade-in effect).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Creates an instance of dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   *\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.ga.event('selection_change', 'dropdown', `${this.label}:${value}`);\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ label }}\n      \n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 0.875rem;\n        border: none;\n\n        mat-select {\n          font-size: 1rem;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      transform: none;\n      height: 0.125rem;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #0000003e;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 9.5rem;\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  \n  .label {\n    padding-bottom: 0.063rem;\n  }\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ label }}                                          {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSliderPopover\n                            \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:touchstart\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:95\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:34\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:44\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:39\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:49\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:touchstart\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:touchstart(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSliderPopover\n                        \n                    \n                \n            \n            \n                \ncloseSliderPopover(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])@HostListener('document:touchstart', ['$event.target'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initializeSliderPopover\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:212\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:122\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:152\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyHigh\n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyLow\n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:226\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionsChanged\n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:136\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliderValueChanged\n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:201\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSliderPopover\n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:184\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contentsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'invisible'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:74\n                        \n                    \n\n            \n                \n                    Determines if slider contents are visible (used for fade-in effect).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:69\n                        \n                    \n\n            \n                \n                    Value bound to the slider's high pointer value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSliderInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:95\n                        \n                    \n\n            \n                \n                    Determines whether slider popover has been created and initialized.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSliderOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:54\n                        \n                    \n\n            \n                \n                    Determines whether slider popover is shown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lowValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:64\n                        \n                    \n\n            \n                \n                    Value bound to the slider's low pointer value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:59\n                        \n                    \n\n            \n                \n                    Slider options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OverlayRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:90\n                        \n                    \n\n            \n                \n                    Reference to the slider popover overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popoverElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('popover', {read: ElementRef, static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:29\n                        \n                    \n\n            \n                \n                    Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popoverPortal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkPortal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(CdkPortal, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:23\n                        \n                    \n\n            \n                \n                    Reference to the template for the slider popover.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:79\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   *\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   * @param ga Analytics service\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n    private readonly ga: GoogleAnalyticsService\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   *\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // eslint-disable-line\n  // eslint-disable-line\n  @HostListener('document:touchstart', ['$event.target']) // eslint-disable-line\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement?.nativeElement?.contains?.(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.ga.event('slider_range_change', 'dual_slider', `${this.label}:${lowValue}:${highValue}`);\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   *\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                @use 'sass:math';\n\n.slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n        font-size: 0.875rem;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      transform: none;\n      height: 0.125rem;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    padding-bottom: 0.25rem;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #0000003e;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 4.375rem;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 0.9375rem;\n    margin-bottom: 0.9375rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - math.div($pointer-size, 2);\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 2rem;\n\n    &.min {\n      margin-right: 1rem;\n    }\n\n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 0.875rem;\n    }\n\n    input {\n      border: none;\n      width: 1.75rem;\n      font-size: 1rem;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                openSpatialSearch\n                            \n                            \n                                refreshFilters\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                            \n                                providerFilters\n                            \n                            \n                                spatialSearchFilters\n                            \n                            \n                                technologyFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                            \n                                spatialSearchRemoved\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of filters content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:30\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:25\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        providerFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:40\n                            \n                        \n                \n                    \n                        List of providers in the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchFilters\n                    \n                \n                \n                    \n                        Type :     S[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:45\n                            \n                        \n                \n                    \n                        List of spatial searches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        technologyFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:35\n                            \n                        \n                \n                    \n                        List of technologies in the data\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:60\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:50\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:55\n                            \n                        \n                \n                    \n                        Emits when a spatial search is removed/deleted\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyButtonClick\n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:88\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSpatialSearch\n                        \n                    \n                \n            \n            \n                \nopenSpatialSearch()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshFilters\n                        \n                    \n                \n            \n            \n                \nrefreshFilters()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:96\n                \n            \n\n\n            \n                \n                    Refreshes all filter settings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(value, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:79\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SpatialSearchListItem } from 'ccf-shared';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { DEFAULT_FILTER } from '../../../core/store/data/data.state';\nimport {\n  SpatialSearchConfigBehaviorComponent,\n} from '../../../shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters: string[];\n\n  /**\n   * List of spatial searches\n   */\n  @Input() spatialSearchFilters: S[] = [];\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() readonly filtersChange = new EventEmitter>();\n\n  /**\n   * Emits when a spatial search is removed/deleted\n   */\n  @Output() readonly spatialSearchRemoved = new EventEmitter();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() readonly applyFilters = new EventEmitter>();\n\n  /**\n   * Creates an instance of filters content component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService, public dialog: MatDialog) { }\n\n  openSpatialSearch(): void {\n    this.dialog.open(SpatialSearchConfigBehaviorComponent);\n  }\n\n  /**\n   * Updates the filter object with a new key/value\n   *\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.ga.event('filter_update', 'filter_content', `${key}:${value}`);\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.ga.event('filters_applied', 'filter_content');\n    this.applyFilters.emit(this.filters);\n  }\n\n  /**\n   * Refreshes all filter settings\n   */\n  refreshFilters(): void {\n    this.filters = JSON.parse(JSON.stringify(DEFAULT_FILTER));\n    this.ga.event('filters_reset', 'filter_content');\n    this.filtersChange.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n 0\" class=\"filter spatial-locations\" [class.hidden]=\"hidden\">\n  \n  \n\n\n\n  \n  \n    APPLY FILTERS\n    \n      refresh\n    \n  \n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  &.assays {\n    .option {\n      margin-right: 0 rem;\n      width: 25%\n    }\n  }\n\n  margin-top: 2rem;\n}\n\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n\n  ::ng-deep button {\n    border-width: 1px;\n    border-style: solid;\n  }\n}\n\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n\n  button {\n    border-width: 1px;\n    border-style: solid;\n  }\n\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  .right-group {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n  \n    .outline-button {\n      box-shadow: 0.1rem 0.1rem 0.2rem 0rem #0000001d;\n    }\n    \n    .refresh-icon {\n      padding: 0.25rem;\n      border-radius: 0.25rem;\n      margin-right: 1rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      transition: 0.6s;\n    \n      .refresh {\n        cursor: pointer;\n        transition: .6s;\n        transition-property: background;\n      }\n    }\n  }\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n  padding-top: 1rem;\n\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5rem;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           0\" class=\"filter spatial-locations\" [class.hidden]=\"hidden\">            APPLY FILTERS          refresh      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nRunSpatialSearchModule\n\nRunSpatialSearchModule\n\nFiltersContentModule -->\n\nRunSpatialSearchModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            RunSpatialSearchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SpatialSearchListModule } from 'ccf-shared';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { RunSpatialSearchModule } from '../../../shared/components/run-spatial-search/run-spatial-search.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n\n    CheckboxModule,\n    DropdownModule,\n    DualSliderModule,\n    SpatialSearchListModule,\n    RunSpatialSearchModule\n  ],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                            \n                                providerFilters\n                            \n                            \n                                spatialSearchFilters\n                            \n                            \n                                technologyFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                            \n                                spatialSearchRemoved\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:23\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:17\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        providerFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:33\n                            \n                        \n                \n                    \n                        List of providers in the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchFilters\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:38\n                            \n                        \n                \n                    \n                        List of spatial searches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        technologyFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:28\n                            \n                        \n                \n                    \n                        List of technologies in the data\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:43\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:48\n                            \n                        \n                \n                    \n                        Emits when a spatial search is removed/deleted\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:74\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeBox\n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:65\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFilterVisible\n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:58\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filtersVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:53\n                        \n                    \n\n            \n                \n                    Keeps track of whether or not the filters popover box is visible or not\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SpatialSearchListItem } from 'ccf-shared';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters: string[];\n\n  /**\n   * List of spatial searches\n   */\n  @Input() spatialSearchFilters: [] = [];\n\n  /**\n   * Emits the current filters\n   */\n  @Output() readonly filtersChange = new EventEmitter>();\n\n  /**\n   * Emits when a spatial search is removed/deleted\n   */\n  @Output() readonly spatialSearchRemoved = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   *\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  z-index: 5;\n  top: 1.2rem;\n  left: 1.48rem;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #00000058;\n\n  .popup-body {\n    padding: 1.5rem;\n    position: relative;\n  }\n\n  &.visible {\n    width: 35rem;\n    transition: width 0.2s ease-in-out;\n    border-width: 1px;\n\n    .popup-body {\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.2s;\n    }\n  }\n\n  &.hidden {\n    width: 0;\n    height: 0;\n    transition: all 0.2s ease-out;\n    transition-delay: 0.3s;\n    pointer-events: none;\n\n    .popup-body {\n      opacity: 0;\n      transition: opacity 0.2s ease-in-out;\n    }\n  }\n}\n\n.show-hide {\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n  padding: 0.5rem;\n  border-radius: 0.25rem;\n  transition: 0.6s;\n\n  .funnel {\n    // margin-top: 0.25rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/flat-node.ts\n        \n\n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                numResults\n                            \n                            \n                                    Optional\n                                opacity\n                            \n                            \n                                    Optional\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyTreeNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                    OntologyTreeNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        numResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        opacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyTreeNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:36\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:18\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:25\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyTreeNode } from 'ccf-database';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  visible?: boolean = true;\n\n  opacity?: number = 20;\n\n  numResults?: number;\n\n  /**\n   * Gets this node's label.\n   */\n  get label(): string {\n    return this.original.label;\n  }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyTreeNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyTreeNode, readonly level: number) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/core/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                homeUrl\n                            \n                            \n                                loggedIn\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:32\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:27\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loginDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:42\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:37\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Portal site\n   */\n  @Input() homeUrl: string;\n\n  @Input() loginDisabled: boolean;\n\n  @Input() logoTooltip: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() readonly refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() readonly downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n  \n  \n  LOGIN\n  LOGOUT\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .home {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n    padding: 0.25rem 0;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 0.125rem;\n    font-weight: 500;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 1rem/1.25rem Inter, sans-serif;\n  }\n\n  .disabled {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  LOGIN  LOGOUT'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer\n  ) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getArguments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:134\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMethodName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:114\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:74\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerIconImpl\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:84\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer\n  ) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deferred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Promise(resolve => {\n    this.resolve = resolve;\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                        \n                    \n\n            \n                \n                    Promise used to await on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether this state is true or false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:41\n                        \n                    \n\n            \n                \n                    Resolve function for the promise.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:46\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueOf\n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:65\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:56\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state('open, open-instant', style({\n        transform: 'none'\n      })),\n      state('closed', style({})),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-opened') // eslint-disable-line\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-expanded') // eslint-disable-line\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // eslint-disable-line\n  get expandedStateObj(): unknown {\n    return {\n      value: this.expandedState2, params: {\n        width: this.width, margin: this.measuredMargin,\n        margin2: this.margin2\n      }\n    };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(\n    messageService: MessageService,\n    cdr: ChangeDetectorRef,\n    private readonly element: ElementRef\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // eslint-disable-line\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // eslint-disable-line\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled': {\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/list-result.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rank\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                                \n                                        \n                                            tissueBlock\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueBlock\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissueBlock:     TissueBlockResult\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TissueBlockResult\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TissueBlockResult } from 'ccf-database';\n\nexport interface ListResult {\n  selected: boolean;\n  color?: string;\n  tissueBlock: TissueBlockResult;\n  rank?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListResultsState.html":{"url":"injectables/ListResultsState.html","title":"injectable - ListResultsState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListResultsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorAssignments\n                            \n                            \n                                    Private\n                                dataState\n                            \n                            \n                                    Readonly\n                                highlightedNodeId$\n                            \n                            \n                                    Readonly\n                                listResults$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deselectListResult\n                            \n                            \n                                highlightNode\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                selectListResult\n                            \n                            \n                                setListResults\n                            \n                            \n                                unHighlightNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataSourceService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deselectListResult\n                        \n                    \n                \n            \n            \n                \ndeselectListResult(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightNode\n                        \n                    \n                \n            \n            \n                \nhighlightNode(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:81\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectListResult\n                        \n                    \n                \n            \n            \n                \nselectListResult(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setListResults\n                        \n                    \n                \n            \n            \n                \nsetListResults(listResults: ListResult[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:58\n                \n            \n\n\n            \n                \n                    Sets the list results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    listResults\n                                    \n                                                ListResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The list of results to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unHighlightNode\n                        \n                    \n                \n            \n            \n                \nunHighlightNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorAssignments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorAssignmentState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:38\n                        \n                    \n\n            \n                \n                    Color assignments state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:35\n                        \n                    \n\n            \n                \n                    The data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedNodeId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        listResults$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('listResults'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:30\n                        \n                    \n\n            \n                \n                    Scene to display in the 3d Scene\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, tap } from 'rxjs/operators';\n\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State({\n  name: 'listResults',\n  defaults: {\n    listResults: []\n  }\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(pluck('listResults'), distinctUntilChanged());\n  readonly highlightedNodeId$ = this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged());\n\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([\n      this.dataState.tissueBlockData$,\n      this.colorAssignments.colorAssignments$\n    ]).pipe(\n      map(([tissueBlocks, colors]) => {\n        const topBlocks: ListResult[] = [];\n        const otherBlocks: ListResult[] = [];\n\n        for (const tissueBlock of tissueBlocks) {\n          const color = colors[tissueBlock.spatialEntityId];\n          if (color) {\n            topBlocks.push({\n              selected: true, color: color.color, tissueBlock, rank: color.rank\n            });\n          } else {\n            otherBlocks.push({\n              selected: false, tissueBlock\n            });\n          }\n        }\n\n        return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n      }),\n      tap(results => this.setListResults(results))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResultsStateModel.html":{"url":"interfaces/ListResultsStateModel.html","title":"interface - ListResultsStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListResultsStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            highlightedNodeId\n                                        \n                                \n                                \n                                        \n                                            listResults\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedNodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightedNodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listResults\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listResults:         ListResult[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListResult[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, tap } from 'rxjs/operators';\n\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State({\n  name: 'listResults',\n  defaults: {\n    listResults: []\n  }\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(pluck('listResults'), distinctUntilChanged());\n  readonly highlightedNodeId$ = this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged());\n\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([\n      this.dataState.tissueBlockData$,\n      this.colorAssignments.colorAssignments$\n    ]).pipe(\n      map(([tissueBlocks, colors]) => {\n        const topBlocks: ListResult[] = [];\n        const otherBlocks: ListResult[] = [];\n\n        for (const tissueBlock of tissueBlocks) {\n          const color = colors[tissueBlock.spatialEntityId];\n          if (color) {\n            topBlocks.push({\n              selected: true, color: color.color, tissueBlock, rank: color.rank\n            });\n          } else {\n            otherBlocks.push({\n              selected: false, tissueBlock\n            });\n          }\n        }\n\n        return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n      }),\n      tap(results => this.setListResults(results))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:50\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:50\n                        \n                    \n\n            \n                \n                    Counter used to give each message a unique id.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:83\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:93\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:103\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        nextMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:112\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:70\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:163\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:153\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                        \n                    \n\n            \n                \n                    The message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:130\n                        \n                    \n\n            \n                \n                    The message listener.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholderText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:29\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyTreeNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFormatter\n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:78\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:60\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:107\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBySynonymResult\n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:88\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortLexically\n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoCompleteOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:40\n                        \n                    \n\n            \n                \n                    Determines if autocomplete is open or close.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:45\n                        \n                    \n\n            \n                \n                    Observable which provides the filtered search results\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:34\n                        \n                    \n\n            \n                \n                    Instance of FormControl - tracks the value and validation status of an individual form control\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ontologyService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologySearchService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:53\n                        \n                    \n\n            \n                \n                    instance of searchService which provides all the search functionality\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { OntologyTreeNode } from 'ccf-database';\nimport { get, sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologySearchComponent implements OnInit {\n  @Input() placeholderText: string;\n\n  /**\n   * Output event-emitter which emits the id of the OntologyTreeNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() readonly selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   *\n   * @param ontologyService instance of searchService which provides all the search functionality\n   * @param ga Analytics service\n   */\n  constructor(public ontologyService: OntologySearchService, private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   *\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   *\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   *\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   *\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyTreeNode;\n    if (node) {\n      this.ga.event('search', 'ontology_search', node.id);\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    search\n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 100%;\n\n  .field {\n    width: 100%;\n    \n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 0.25rem 0.25rem 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n      \n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n          \n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-prefix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 0.25rem 0 0 0.25rem;\n      min-width: 2.5rem;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 0.125rem solid;\n  border-top: none;\n  border-radius: 0 0 0.25rem 0.25rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 23.75rem;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 23.75rem;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 0.25rem 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 0.25rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      search                                {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                            \n                                    Private\n                                treeModel\n                            \n                            \n                                    Private\n                                    Readonly\n                                treeModel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                    Private\n                                lookup\n                            \n                            \n                                setTreeModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:50\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:111\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyTreeNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyTreeNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildren\n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyTreeNode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:128\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OntologyTreeNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIndexOfMatch\n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:100\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        lookup\n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:63\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTreeModel\n                        \n                    \n                \n            \n            \n                \nsetTreeModel(treeModel: OntologyTreeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treeModel\n                                    \n                                            OntologyTreeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        nodes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.treeModel$.pipe(map(state => Object.values(state.nodes)))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:34\n                        \n                    \n\n            \n                \n                    All nodes in the ontology tree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        rootNode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.treeModel$.pipe(map(state => state.nodes[state.root]))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:37\n                        \n                    \n\n            \n                \n                    Root node of the ontology tree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        treeModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OntologyTreeModel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        treeModel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject(1);\n  private treeModel: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map(state => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyTreeNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-selection.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     OntologyTreeNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OntologyTreeNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyTreeNode } from 'ccf-database';\n\nexport interface OntologySelection {\n  location: OntologyTreeNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                OntologySearchService\n                \n            \n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                header\n                            \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                placeholderText\n                            \n                            \n                                termData\n                            \n                            \n                                treeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        treeModel\n                    \n                \n                \n                    \n                        Type :     OntologyTreeModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:38\n                            \n                        \n                \n                    \n                        The ontology tree model to display\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyTreeNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:75\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ontologySearchService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologySearchService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                        \n                    \n\n            \n                \n                    Service for searching the ontology.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologyTreeComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(OntologyTreeComponent, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                        \n                    \n\n            \n                \n                    View child of search component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\n\nimport { OntologySelection } from '../../../core/models/ontology-selection';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss'],\n  providers: [OntologySearchService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologySelectionComponent implements OnChanges {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * The ontology tree model to display\n   */\n  @Input() treeModel: OntologyTreeModel;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  @Input() header: boolean;\n  @Input() placeholderText: string;\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() readonly ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   *\n   * @param ontologySearchService Service for searching the ontology.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('treeModel' in changes && this.treeModel) {\n      this.ontologySearchService.setTreeModel(this.treeModel);\n    }\n  }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   *\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyTreeNode): void {\n    const nodes = this.treeModel?.nodes ?? {};\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologySelectionModule_OntologySelectionComponent_providers\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchService\n\nOntologySearchService\n\nOntologySelectionComponent -->\n\nOntologySearchService->OntologySelectionComponent\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\nimport { OpacitySliderModule } from 'ccf-shared';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OpacitySliderModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleHover\n                            \n                            \n                                handleLinkClick\n                            \n                            \n                                handleSelection\n                            \n                            \n                                handleUnhover\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                header\n                            \n                            \n                                highlighted\n                            \n                            \n                                listResults\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemHovered\n                            \n                            \n                                itemUnhovered\n                            \n                            \n                                linkClicked\n                            \n                            \n                                listResultDeselected\n                            \n                            \n                                listResultSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:64\n                            \n                        \n\n                \n                    \n                            Creates an instance of results browser component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :     Immutable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:29\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlighted\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResults\n                    \n                \n                \n                    \n                        Type :         Immutable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:24\n                            \n                        \n                \n                    \n                        Input array of List Results to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:34\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemUnhovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        linkClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:44\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResultDeselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:54\n                            \n                        \n                \n                    \n                        Output emitting the link result deselected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResultSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:49\n                            \n                        \n                \n                    \n                        Output emitting the link result selected\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleHover\n                        \n                    \n                \n            \n            \n                \nhandleHover(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleLinkClick\n                        \n                    \n                \n            \n            \n                \nhandleLinkClick(link: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:93\n                \n            \n\n\n            \n                \n                    Notifies on link click\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the link clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSelection\n                        \n                    \n                \n            \n            \n                \nhandleSelection(result: Immutable, selected: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:79\n                \n            \n\n\n            \n                \n                    Notifies listeners when a selection/deselection is made\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the list result\n\n                                    \n                                \n                                \n                                    selected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether to select or deselect the result\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUnhover\n                        \n                    \n                \n            \n            \n                \nhandleUnhover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onScroll\n                        \n                    \n                \n            \n            \n                \nonScroll(event: UIEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:102\n                \n            \n\n\n            \n                \n                    Handles the scroll event to detect when scroll is at the bottom.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            UIEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scroll event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        atScrollBottom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:64\n                        \n                    \n\n            \n                \n                    Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AggregateResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ListResult } from '../../../core/models/list-result';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResultsBrowserComponent {\n  /**\n   * Input array of List Results to display\n   */\n  @Input() listResults: Immutable;\n\n  /**\n   * Input used to add a list of stats at the top the results browser\n   */\n  @Input() aggregateData: Immutable;\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component\n   */\n  @Input() resultLabel: string;\n\n  @Input() highlighted: string;\n\n  @Input() header: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() readonly linkClicked = new EventEmitter();\n\n  /**\n   * Output emitting the link result selected\n   */\n  @Output() readonly listResultSelected = new EventEmitter>();\n\n  /**\n   * Output emitting the link result deselected\n   */\n  @Output() readonly listResultDeselected = new EventEmitter>();\n\n  @Output() readonly itemHovered = new EventEmitter();\n\n  @Output() readonly itemUnhovered = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Creates an instance of results browser component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Notifies listeners when a selection/deselection is made\n   *\n   * @param result the list result\n   * @param selected whether to select or deselect the result\n   */\n  handleSelection(result: Immutable, selected: boolean): void {\n    this.ga.event('list_result_selected', 'results_browser', this.resultLabel, +selected);\n    if (selected) {\n      this.listResultSelected.next(result);\n    } else {\n      this.listResultDeselected.next(result);\n    }\n  }\n\n  /**\n   * Notifies on link click\n   *\n   * @param link the link clicked\n   */\n  handleLinkClick(link: string): void {\n    this.linkClicked.emit(link);\n  }\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: UIEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 3rem);\n  padding: 0 1.5rem 1.5rem 1.5rem;\n\n  .stat-box {\n    margin-bottom: 1.5rem;\n    line-height: 1.25;\n    min-height: 7.75rem;\n\n    #title {\n      font-size: 1.25rem;\n      margin-bottom: 0.75rem;\n    }\n\n    .stat-row {\n      display: flex;\n      flex-direction: row;\n\n      .stat-value {\n        margin-right: 1rem;\n        width: 5.5rem;\n        text-align: right;\n        font-weight: 600;\n      }\n      .stat-label {\n        font-weight: 300;\n      }\n    }\n  }\n\n  .results-browser-list {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    scrollbar-width: thin;\n    padding-right: .5rem;\n    height: calc(100vh - 20rem);\n\n    &.header-hidden {\n      height: calc(100vh - 16rem);\n    }\n\n    .browser-item-container {\n      width: 100%;\n    }\n  }\n\n  .scroll-gradient {\n    position: absolute;\n    height: 3rem;\n    width: 95%;\n    bottom: 0;\n    pointer-events: none;\n\n\n    &.hidden {\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nResultsBrowserModule -->\n\nDonorCardModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DonorCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserComponent } from './results-browser.component';\nimport { DonorCardModule } from '../donor-card/donor-card.module';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    DonorCardModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RunSpatialSearchComponent.html":{"url":"components/RunSpatialSearchComponent.html","title":"component - RunSpatialSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RunSpatialSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        Button that opens up the Spatial Search config\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-run-spatial-search\n            \n\n            \n                styleUrls\n                ./run-spatial-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./run-spatial-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts:19\n                            \n                        \n                \n                    \n                        Emits when the button is clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-run-spatial-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-run-spatial-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts:14\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-run-spatial-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts:14\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Output } from '@angular/core';\n\n/**\n * Button that opens up the Spatial Search config\n */\n@Component({\n  selector: 'ccf-run-spatial-search',\n  templateUrl: './run-spatial-search.component.html',\n  styleUrls: ['./run-spatial-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RunSpatialSearchComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-run-spatial-search';\n\n  /**\n   * Emits when the button is clicked\n   */\n  @Output() readonly buttonClick = new EventEmitter();\n}\n\n    \n\n    \n        \n  Run Spatial Search\n  travel_explore\n\n\n\n    \n\n    \n                \n                    ./run-spatial-search.component.scss\n                \n                :host {\n  .run-spatial-search-button {\n    ::ng-deep .mat-button-wrapper {\n      display: flex;\n      align-items: center;\n  \n      .mat-icon {\n        margin-left: 9.75px;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Run Spatial Search  travel_explore'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RunSpatialSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RunSpatialSearchModule.html":{"url":"modules/RunSpatialSearchModule.html","title":"module - RunSpatialSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    RunSpatialSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RunSpatialSearchModule\n\n\n\ncluster_RunSpatialSearchModule_declarations\n\n\n\ncluster_RunSpatialSearchModule_exports\n\n\n\n\nRunSpatialSearchComponent\n\nRunSpatialSearchComponent\n\n\n\nRunSpatialSearchModule\n\nRunSpatialSearchModule\n\nRunSpatialSearchModule -->\n\nRunSpatialSearchComponent->RunSpatialSearchModule\n\n\n\n\n\nRunSpatialSearchComponent \n\nRunSpatialSearchComponent \n\nRunSpatialSearchComponent  -->\n\nRunSpatialSearchModule->RunSpatialSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RunSpatialSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RunSpatialSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { RunSpatialSearchComponent } from './run-spatial-search.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule],\n  declarations: [RunSpatialSearchComponent],\n  exports: [RunSpatialSearchComponent]\n})\nexport class RunSpatialSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorAssignments\n                            \n                            \n                                    Private\n                                dataState\n                            \n                            \n                                    Readonly\n                                highlightedId$\n                            \n                            \n                                    Private\n                                listResults\n                            \n                            \n                                    Readonly\n                                referenceOrgans$\n                            \n                            \n                                    Readonly\n                                scene$\n                            \n                            \n                                    Readonly\n                                selectedReferenceOrgans$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngxsOnInit\n                            \n                            \n                                sceneNodeClicked\n                            \n                            \n                                sceneNodeHovered\n                            \n                            \n                                sceneNodeUnhover\n                            \n                            \n                                setReferenceOrgans\n                            \n                            \n                                setScene\n                            \n                            \n                                setSelectedReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataSourceService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:65\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:136\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeClicked\n                        \n                    \n                \n            \n            \n                \nsceneNodeClicked(undefined: NodeClickEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:114\n                \n            \n\n\n            \n                \n                    Handle scene node clicks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            NodeClickEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeHovered\n                        \n                    \n                \n            \n            \n                \nsceneNodeHovered(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeUnhover\n                        \n                    \n                \n            \n            \n                \nsceneNodeUnhover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReferenceOrgans\n                        \n                    \n                \n            \n            \n                \nsetReferenceOrgans(referenceOrgans: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:95\n                \n            \n\n\n            \n                \n                    Sets the reference organs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    referenceOrgans\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reference organs available\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScene\n                        \n                    \n                \n            \n            \n                \nsetScene(scene: SpatialSceneNode[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:105\n                \n            \n\n\n            \n                \n                    Sets the scene\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active scene to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedReferenceOrgans\n                        \n                    \n                \n            \n            \n                \nsetSelectedReferenceOrgans(selectedReferenceOrgans: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:85\n                \n            \n\n\n            \n                \n                    Sets the selected reference organs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedReferenceOrgans\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorAssignments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorAssignmentState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:63\n                        \n                    \n\n            \n                \n                    Color assignments state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:60\n                        \n                    \n\n            \n                \n                    The data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('highlightedId'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListResultsState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        referenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:51\n                        \n                    \n\n            \n                \n                    Available Reference Organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('scene'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:55\n                        \n                    \n\n            \n                \n                    Scene to display in the 3d Scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedReferenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:53\n                        \n                    \n\n            \n                \n                    Selected Reference Organs\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set(['Skin', 'Heart', 'Kidney', 'Spleen']);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {}\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged());\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged());\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(pluck('scene'), distinctUntilChanged());\n\n  readonly highlightedId$ = this.state$.pipe(pluck('highlightedId'), distinctUntilChanged());\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  private listResults: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n      && node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n\n    // Initialize reference organ info\n    this.dataService.getReferenceOrgans().pipe(\n      map(refOrgans => {\n        const organIds = new Set(refOrgans.map(o => o.representation_of));\n        return ALL_POSSIBLE_ORGANS\n          .filter(organ => organIds.has(organ.id))\n          .map(organ => ({ ...organ, disabled: false, numResults: 0 }));\n      }),\n      take(1),\n      tap(organs => {\n        this.setReferenceOrgans(organs);\n        this.setSelectedReferenceOrgans(organs.filter(organ => DEFAULT_SELECTED_ORGANS.has(organ.organ)));\n      })\n    ).subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$\n    ]).pipe(\n      map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n        const activeOrgans = new Set(selectedOrgans.map(o => o.id));\n        const refOrgans = new Set(refOrganData.filter(o => activeOrgans.has(o.representation_of)).map(o => o['@id']));\n        return scene.filter(node =>\n          (node.ccf_annotations?.some?.(tag => activeOrgans.has(tag))) ||\n          (node.reference_organ && refOrgans.has(node.reference_organ))\n        ).map((node): SpatialSceneNode =>\n          node.entityId && (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id']) ?\n            ({\n              ...node,\n              color: highlightedNodeId === node['@id'] ?\n                [30, 136, 229, 255] :\n                colors[node['@id']].rgba as [number, number, number, number]\n            }) : node\n        );\n      }),\n      tap(scene => this.setScene(scene))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructureSettings\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            highlightedId\n                                        \n                                \n                                \n                                        \n                                            referenceOrgans\n                                        \n                                \n                                \n                                        \n                                            scene\n                                        \n                                \n                                \n                                        \n                                            selectedAnatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            selectedReferenceOrgans\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructureSettings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructureSettings:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referenceOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referenceOrgans:     OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scene\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scene:     SpatialSceneNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialSceneNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedAnatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedAnatomicalStructures:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedReferenceOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedReferenceOrgans:     OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set(['Skin', 'Heart', 'Kidney', 'Spleen']);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {}\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged());\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged());\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(pluck('scene'), distinctUntilChanged());\n\n  readonly highlightedId$ = this.state$.pipe(pluck('highlightedId'), distinctUntilChanged());\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  private listResults: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n      && node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n\n    // Initialize reference organ info\n    this.dataService.getReferenceOrgans().pipe(\n      map(refOrgans => {\n        const organIds = new Set(refOrgans.map(o => o.representation_of));\n        return ALL_POSSIBLE_ORGANS\n          .filter(organ => organIds.has(organ.id))\n          .map(organ => ({ ...organ, disabled: false, numResults: 0 }));\n      }),\n      take(1),\n      tap(organs => {\n        this.setReferenceOrgans(organs);\n        this.setSelectedReferenceOrgans(organs.filter(organ => DEFAULT_SELECTED_ORGANS.has(organ.organ)));\n      })\n    ).subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$\n    ]).pipe(\n      map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n        const activeOrgans = new Set(selectedOrgans.map(o => o.id));\n        const refOrgans = new Set(refOrganData.filter(o => activeOrgans.has(o.representation_of)).map(o => o['@id']));\n        return scene.filter(node =>\n          (node.ccf_annotations?.some?.(tag => activeOrgans.has(tag))) ||\n          (node.reference_organ && refOrgans.has(node.reference_organ))\n        ).map((node): SpatialSceneNode =>\n          node.entityId && (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id']) ?\n            ({\n              ...node,\n              color: highlightedNodeId === node['@id'] ?\n                [30, 136, 229, 255] :\n                colors[node['@id']].rgba as [number, number, number, number]\n            }) : node\n        );\n      }),\n      tap(scene => this.setScene(scene))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayLabel\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     OntologyTreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OntologyTreeNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyTreeNode, provides data associated with a search result\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject(1);\n  private treeModel: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map(state => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyTreeNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchConfigBehaviorComponent.html":{"url":"components/SpatialSearchConfigBehaviorComponent.html","title":"component - SpatialSearchConfigBehaviorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchConfigBehaviorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-config-behavior\n            \n\n            \n                styleUrls\n                ./spatial-search-config-behavior.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-config-behavior.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredOrgans\n                            \n                            \n                                    Readonly\n                                itemSelected\n                            \n                            \n                                    Readonly\n                                organChange\n                            \n                            \n                                organs\n                            \n                            \n                                    Optional\n                                selectedOrgan\n                            \n                            \n                                sex\n                            \n                            \n                                    Readonly\n                                sexChange\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                            \n                                close\n                            \n                            \n                                filterOrgans\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                updateOrgan\n                            \n                            \n                                updateSex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, scene: SceneState, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                        SceneState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClicked\n                        \n                    \n                \n            \n            \n                \nbuttonClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterOrgans\n                        \n                    \n                \n            \n            \n                \nfilterOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrgan\n                        \n                    \n                \n            \n            \n                \nupdateOrgan(organ?: OrganInfo)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                            OrganInfo\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSex\n                        \n                    \n                \n            \n            \n                \nupdateSex(sex: Sex)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sex\n                                    \n                                                Sex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredOrgans\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrganInfo[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemSelected\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrganInfo[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedOrgan\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrganInfo\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                \n                    \n                        Default value : 'male'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, OnDestroy } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OrganInfo } from 'ccf-shared';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nimport { SceneState } from '../../../core/store/scene/scene.state';\nimport { Sex, SpatialSearchConfigComponent } from '../spatial-search-config/spatial-search-config.component';\n\n\n@Component({\n  selector: 'ccf-spatial-search-config-behavior',\n  templateUrl: './spatial-search-config-behavior.component.html',\n  styleUrls: ['./spatial-search-config-behavior.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchConfigBehaviorComponent implements OnDestroy {\n\n  organs: OrganInfo[];\n\n  selectedOrgan?: OrganInfo;\n\n  sex: Sex = 'male';\n\n  readonly sexChange = new EventEmitter();\n\n  readonly organChange = new EventEmitter();\n\n  readonly itemSelected = new EventEmitter();\n\n  filteredOrgans: OrganInfo[];\n\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    scene: SceneState,\n    private readonly dialogRef: MatDialogRef\n  ) {\n    const sub = scene.referenceOrgans$.subscribe((organs: OrganInfo[]) => {\n      this.organs = organs;\n      this.filterOrgans();\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  updateSex(sex: Sex): void {\n    this.sex = sex;\n    this.filterOrgans();\n    this.sexChange.emit(this.sex);\n  }\n\n  updateOrgan(organ?: OrganInfo): void {\n    this.selectedOrgan = organ;\n    this.organChange.emit(this.selectedOrgan);\n  }\n\n  buttonClicked(): void {\n    if (this.selectedOrgan) {\n      this.itemSelected.emit({ sex: this.sex, organ: this.selectedOrgan });\n    }\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  filterOrgans(): void {\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    this.filteredOrgans = this.organs.filter(organ => organ.hasSex || organ.sex === this.sex);\n    if (this.selectedOrgan && !this.filteredOrgans.includes(this.selectedOrgan)) {\n      this.updateOrgan(undefined);\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./spatial-search-config-behavior.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchConfigBehaviorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchConfigBehaviorModule.html":{"url":"modules/SpatialSearchConfigBehaviorModule.html","title":"module - SpatialSearchConfigBehaviorModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchConfigBehaviorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchConfigBehaviorModule\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_imports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_exports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_declarations\n\n\n\n\nSpatialSearchConfigBehaviorComponent\n\nSpatialSearchConfigBehaviorComponent\n\n\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigBehaviorComponent->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent  -->\n\nSpatialSearchConfigBehaviorModule->SpatialSearchConfigBehaviorComponent \n\n\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigModule->SpatialSearchConfigBehaviorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchConfigBehaviorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SpatialSearchConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchConfigBehaviorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { SpatialSearchConfigModule } from '../spatial-search-config/spatial-search-config.module';\nimport { SpatialSearchConfigBehaviorComponent } from './spatial-search-config-behavior.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SpatialSearchConfigModule,\n    MatDialogModule\n  ],\n  declarations: [SpatialSearchConfigBehaviorComponent],\n  exports: [SpatialSearchConfigBehaviorComponent]\n})\nexport class SpatialSearchConfigBehaviorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchConfigComponent.html":{"url":"components/SpatialSearchConfigComponent.html","title":"component - SpatialSearchConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-config\n            \n\n            \n                styleUrls\n                ./spatial-search-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-config.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                organs\n                            \n                            \n                                selectedOrgan\n                            \n                            \n                                sex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                            \n                                closeDialog\n                            \n                            \n                                updateOrgan\n                            \n                            \n                                updateSex\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        organs\n                    \n                \n                \n                    \n                        Type :     OrganInfo[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedOrgan\n                    \n                \n                \n                    \n                        Type :     OrganInfo\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sex\n                    \n                \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeDialog\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateOrgan\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateSex\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:22\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spatial-search-config\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-config'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-config'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { OrganInfo } from 'ccf-shared';\n\n\nexport type Sex = 'male' | 'female';\n\n@Component({\n  selector: 'ccf-spatial-search-config',\n  templateUrl: './spatial-search-config.component.html',\n  styleUrls: ['./spatial-search-config.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchConfigComponent {\n  @HostBinding('class') readonly className = 'ccf-spatial-search-config';\n\n  @Input() organs: OrganInfo[];\n\n  @Input() selectedOrgan?: OrganInfo;\n\n  @Input() sex: Sex;\n\n  @Output() readonly updateSex = new EventEmitter();\n\n  @Output() readonly updateOrgan = new EventEmitter();\n\n  @Output() readonly buttonClicked = new EventEmitter();\n\n  @Output() readonly closeDialog = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    Configure Spatial Search\n    \n      info\n    \n  \n  \n    close\n  \n\n\n\n  Donor Sex: \n  \n    Male\n    Female\n  \n\n\n\n  Select an organ\n  \n    Organs\n    \n      \n        {{organ.name}}\n      \n    \n  \n\n\nContinue\n\n    \n\n    \n                \n                    ./spatial-search-config.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 2rem;\n  gap: 2rem;\n  width: 30.5rem;\n  height: 21.5rem;\n  box-shadow: 0px 25rem 25rem rgba(0, 0, 0, 0.16);\n  border-radius: .25rem;\n  font-size: 1rem;\n\n  .button {\n    cursor: pointer;\n  }\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    font-size: 1.25rem;\n  \n    .header-left {\n      display: flex;\n      align-items: center;\n\n      .title {\n        margin-right: 1rem;\n      }\n    }\n\n    button {\n      padding: 0;\n      background: none;\n      border: none;\n      cursor: pointer;\n      outline: none;\n      border-radius: 0.25rem;\n      transition: 0.6s;\n    }\n  }\n\n  .sex-toggle {\n    display: flex;\n\n    .label, .radio {\n      margin-right: 2rem;\n    }\n  }\n\n  .organ-selector {\n    ::ng-deep .mat-form-field-wrapper {\n      padding-bottom: 0;\n\n      .mat-form-field-underline {\n        bottom: 0rem;\n        height: 0.125rem;\n      }\n    }\n  }\n\n  .continue-button {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: .25rem 1rem;\n    width: 14rem;\n    height: 2rem;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: .125rem;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.16);\n\n    &.disabled {\n      pointer-events: none;\n      opacity: .5;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Configure Spatial Search          info            close    Donor Sex:       Male    Female    Select an organ      Organs                  {{organ.name}}            Continue'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchConfigModule.html":{"url":"modules/SpatialSearchConfigModule.html","title":"module - SpatialSearchConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchConfigModule\n\n\n\ncluster_SpatialSearchConfigModule_declarations\n\n\n\ncluster_SpatialSearchConfigModule_exports\n\n\n\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigComponent\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule -->\n\nSpatialSearchConfigComponent->SpatialSearchConfigModule\n\n\n\n\n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent  -->\n\nSpatialSearchConfigModule->SpatialSearchConfigComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchConfigComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchConfigComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { SpatialSearchConfigComponent } from './spatial-search-config.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule,\n    MatIconModule,\n    MatRadioModule,\n    MatButtonModule\n  ],\n  declarations: [SpatialSearchConfigComponent],\n  exports: [SpatialSearchConfigComponent]\n})\nexport class SpatialSearchConfigModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spinner-overlay\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spinner-overlay'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spinner-overlay'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 99;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { environment } from '../../../environments/environment';\nimport { ColorAssignmentState } from './color-assignment/color-assignment.state';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ListResultsState } from './list-results/list-results.state';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { SceneState } from './scene/scene.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                element\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyThemeClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:83\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:39\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:21\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:71\n                \n            \n\n\n            \n                \n                    Binds theming service to a component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            ElementRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:60\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:48\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:16\n                        \n                    \n\n            \n                \n                    Default theme class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:18\n                        \n                    \n\n            \n                \n                    Currently active theme class.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, ElementRef, Inject, Injector, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element: ElementRef;\n  private injector: Injector;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailCarouselComponent.html":{"url":"components/ThumbnailCarouselComponent.html","title":"component - ThumbnailCarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThumbnailCarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n\n\n\n    \n        Description\n    \n    \n        Carousel containing sample thumbnails in expanded donor cards\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-thumbnail-carousel\n            \n\n            \n                styleUrls\n                ./thumbnail-carousel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail-carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Readonly\n                                config\n                            \n                            \n                                    Readonly\n                                navigation\n                            \n                            \n                                    Readonly\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                linkClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    prevButtonId\n                                \n                                \n                                    nextButtonId\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     DatasetResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:34\n                            \n                        \n                \n                    \n                        Items to show in the carousel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        linkClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:39\n                            \n                        \n                \n                    \n                        Outputs the result whose link was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-thumbnail-carousel\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-thumbnail-carousel'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:29\n                        \n                    \n\n            \n                \n                    Primary css class selector\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n            \n                \nitemId(_index: number, item: DatasetResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:89\n                \n            \n\n\n            \n                \n                    Extract a unique identifier for an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                            DatasetResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        An unique identifier\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-thumbnail-carousel'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:29\n                        \n                    \n\n            \n                \n                    Primary css class selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SwiperOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:63\n                        \n                    \n\n            \n                \n                    Swiper configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        navigation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NavigationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:75\n                        \n                    \n\n            \n                \n                    Navigation configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : nextUid()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:44\n                        \n                    \n\n            \n                \n                    Per instance unique identifier\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        prevButtonId\n                    \n                \n\n                \n                    \n                        getprevButtonId()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:49\n                                \n                            \n                    \n                        \n                                HTML id for previous slide button\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextButtonId\n                    \n                \n\n                \n                    \n                        getnextButtonId()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:56\n                                \n                            \n                    \n                        \n                                HTML id for next slide button\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { DatasetResult } from 'ccf-database';\nimport { SwiperOptions } from 'swiper';\nimport { NavigationOptions } from 'swiper/types';\n\n// Returns a unique identifier\nconst nextUid = (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})();\n\n\n/**\n * Carousel containing sample thumbnails in expanded donor cards\n */\n@Component({\n  selector: 'ccf-thumbnail-carousel',\n  templateUrl: './thumbnail-carousel.component.html',\n  styleUrls: ['./thumbnail-carousel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThumbnailCarouselComponent {\n  /**\n   * Primary css class selector\n   */\n  @HostBinding('class') readonly className = 'ccf-thumbnail-carousel';\n\n  /**\n   * Items to show in the carousel\n   */\n  @Input() data: DatasetResult[];\n\n  /**\n   * Outputs the result whose link was clicked\n   */\n  @Output() readonly linkClicked = new EventEmitter();\n\n  /**\n   * Per instance unique identifier\n   */\n  readonly uid = nextUid();\n\n  /**\n   * HTML id for previous slide button\n   */\n  get prevButtonId(): string {\n    return `ccf-thumbnail-carousel-prev-button-${this.uid}`;\n  }\n\n  /**\n   * HTML id for next slide button\n   */\n  get nextButtonId(): string {\n    return `ccf-thumbnail-carousel-next-button-${this.uid}`;\n  }\n\n  /**\n   * Swiper configuration\n   */\n  readonly config: SwiperOptions = {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true\n  };\n\n  /**\n   * Navigation configuration\n   */\n  readonly navigation: NavigationOptions = {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId\n  };\n\n  /**\n   * Extract a unique identifier for an item\n   *\n   * @param _index Unused\n   * @param item The item\n   * @returns An unique identifier\n   */\n  itemId(_index: number, item: DatasetResult): string {\n    return item.thumbnail;\n  }\n}\n\n    \n\n    \n        \n  \n    navigate_before\n  \n\n\n\n  \n    \n      \n        \n          {{ item.technology }}\n        \n        \n          DATA\n          open_in_new\n        \n      \n    \n  \n\n\n\n  \n    \n    \n\n    navigate_next\n  \n\n\n    \n\n    \n                \n                    ./thumbnail-carousel.component.scss\n                \n                :host {\n  display: flex;\n\n  .swiper {\n    flex-grow: 1;\n    padding-bottom: 0.3125rem;\n\n    ::ng-deep .swiper-slide {\n      width: 3.75rem;\n      height: 2.8125rem;\n    }\n  }\n\n  .prev, .next {\n    display: flex;\n    align-items: center;\n\n    height: 2.8125rem;\n\n    button {\n      width: 1.5rem;\n      height: 1.5rem;\n      line-height: 1.5rem;\n    }\n\n    .fade {\n      position: absolute;\n      top: -0.625rem;\n      left: -2rem;\n      z-index: 10;\n\n      width: 2rem;\n      height: 2.8125rem + 0.3125rem;\n\n      opacity: 1;\n      transition: opacity ease-in-out 0.3s;\n\n      pointer-events: none;\n    }\n\n    .swiper-button-disabled, .swiper-button-lock {\n      cursor: default;\n      pointer-events: none;\n\n      .fade {\n        opacity: 0;\n      }\n    }\n  }\n\n  .slide {\n    position: relative;\n    width: 100%;\n    height: 100%;\n\n    .thumbnail {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-size: cover;\n\n      position: relative;\n      width: calc(100% - 2 * 0.125rem);\n      height: calc(100% - 2 * 0.125rem);\n\n      border-style: solid;\n      border-width: 0.125rem;\n      border-radius: 0.25rem;\n\n      background-origin: padding-box;\n      background-clip: padding-box;\n\n      font-size: 0.875rem;\n      font-weight: bold;\n\n      &:after {\n        content: \"\";\n\n        position: absolute;\n        bottom: -0.125rem;\n        left: -0.125rem;\n        width: 0.125rem;\n        height: 0.125rem;\n      }\n    }\n\n    .link {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n\n      opacity: 0;\n      transition: opacity ease-in-out 0.3s;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);\n\n      font-size: 0.75rem;\n      line-height: 0.75rem;\n\n      &,\n      &:link,\n      &:visited,\n      &:hover,\n      &:focus,\n      &:active {\n        cursor: pointer;\n        text-decoration: none;\n      }\n    }\n\n    &:hover .link {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      navigate_before                                {{ item.technology }}                          DATA          open_in_new                                  navigate_next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailCarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThumbnailCarouselModule.html":{"url":"modules/ThumbnailCarouselModule.html","title":"module - ThumbnailCarouselModule","body":"\n                   \n\n\n\n\n    Modules\n    ThumbnailCarouselModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThumbnailCarouselModule\n\n\n\ncluster_ThumbnailCarouselModule_exports\n\n\n\ncluster_ThumbnailCarouselModule_declarations\n\n\n\n\nThumbnailCarouselComponent\n\nThumbnailCarouselComponent\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule -->\n\nThumbnailCarouselComponent->ThumbnailCarouselModule\n\n\n\n\n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent  -->\n\nThumbnailCarouselModule->ThumbnailCarouselComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ThumbnailCarouselComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ThumbnailCarouselComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SwiperModule } from 'swiper/angular';\nimport { Navigation, Swiper } from 'swiper/core';\n\nimport { ThumbnailCarouselComponent } from './thumbnail-carousel.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n\n    SwiperModule\n  ],\n  declarations: [ThumbnailCarouselComponent],\n  exports: [ThumbnailCarouselComponent]\n})\nexport class ThumbnailCarouselModule {\n  constructor() {\n    // Install swiper modules\n    Swiper.use([Navigation]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissueSectionVisComponent.html":{"url":"components/TissueSectionVisComponent.html","title":"component - TissueSectionVisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TissueSectionVisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissue-section-vis\n            \n\n            \n                styleUrls\n                ./tissue-section-vis.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissue-section-vis.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tissueSectionExists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tissueSections\n                            \n                            \n                                totalTissueSections\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tissueSections\n                    \n                \n                \n                    \n                        Type :     TissueSectionResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:18\n                            \n                        \n                \n                    \n                        Tissue section data, used to determine which tissues to color on the graph\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalTissueSections\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:15\n                            \n                        \n                \n                    \n                        The total numebr of tissue sections, used for end label\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tissue-section-vis\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tissue-section-vis'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        tissueSectionExists\n                        \n                    \n                \n            \n            \n                \ntissueSectionExists(sectionNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:21\n                \n            \n\n\n            \n                \n                    Returns whether or not the given section number exists in the tissueSection array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectionNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tissue-section-vis'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { TissueSectionResult } from 'ccf-database';\n\n@Component({\n  selector: 'ccf-tissue-section-vis',\n  templateUrl: './tissue-section-vis.component.html',\n  styleUrls: ['./tissue-section-vis.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TissueSectionVisComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-tissue-section-vis';\n\n  /** The total numebr of tissue sections, used for end label */\n  @Input() totalTissueSections!: number;\n\n  /** Tissue section data, used to determine which tissues to color on the graph */\n  @Input() tissueSections!: TissueSectionResult[];\n\n  /** Returns whether or not the given section number exists in the tissueSection array */\n  tissueSectionExists(sectionNumber: number): boolean {\n    if (this.tissueSections.filter(section => section.sectionNumber === sectionNumber).length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n    \n\n    \n        0\n\n  \n  \n\n{{ totalTissueSections }}\n    \n\n    \n                \n                    ./tissue-section-vis.component.scss\n                \n                :host {\n  width: 100%;\n  height: 2.5rem;\n  padding: .5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  display: flex;\n\n  .container {\n    margin-right: .5rem;\n    margin-left: .5rem;\n    flex-grow: 1;\n    display: flex;\n    position: relative;\n    justify-content: space-evenly;\n\n    .line-tick {\n      height: 100%;\n      width: 1px;\n      z-index: 2;\n    }\n\n    .x-axis {\n      width: 100%;\n      height: 2px;\n      position: absolute;\n      top: calc(50% - 1px);\n      right: 0;\n      z-index: 1;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '0    {{ totalTissueSections }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissueSectionVisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissueSectionVisModule.html":{"url":"modules/TissueSectionVisModule.html","title":"module - TissueSectionVisModule","body":"\n                   \n\n\n\n\n    Modules\n    TissueSectionVisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TissueSectionVisModule\n\n\n\ncluster_TissueSectionVisModule_exports\n\n\n\ncluster_TissueSectionVisModule_declarations\n\n\n\n\nTissueSectionVisComponent\n\nTissueSectionVisComponent\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nTissueSectionVisModule -->\n\nTissueSectionVisComponent->TissueSectionVisModule\n\n\n\n\n\nTissueSectionVisComponent \n\nTissueSectionVisComponent \n\nTissueSectionVisComponent  -->\n\nTissueSectionVisModule->TissueSectionVisComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissueSectionVisComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TissueSectionVisComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TissueSectionVisComponent } from './tissue-section-vis.component';\n\n\n\n@NgModule({\n  declarations: [TissueSectionVisComponent],\n  imports: [CommonModule],\n  exports: [TissueSectionVisComponent]\n})\nexport class TissueSectionVisModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:85\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:65\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:75\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:97\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:40\n                        \n                    \n\n            \n                \n                    Whether the owning drawer is opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                        \n                    \n\n            \n                \n                    Position of the owning side drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:27\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      ([expand, collapse] = [collapse, expand]);\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: 0.6s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n    transition: all 0.5s;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Viewer for tissue samples\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                loading\n                            \n                            \n                                safeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:21\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-viewer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-viewer'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeResourceUrl | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:29\n                        \n                    \n\n            \n                \n                    Sanitized url\nNOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output, SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n\n/**\n * Viewer for tissue samples\n */\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements OnChanges {\n  @HostBinding('class') className = 'ccf-viewer';\n\n  @Input() url = '';\n\n  @Output() readonly closed = new EventEmitter();\n\n  loading = true;\n\n  /**\n   * Sanitized url\n   * NOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n   */\n  safeUrl: SafeResourceUrl | null = null;\n\n  constructor(private readonly sanitizer: DomSanitizer) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('url' in changes) {\n      this.updateUrl();\n    }\n  }\n\n  private updateUrl(): void {\n    const { sanitizer, url } = this;\n    this.safeUrl = null;\n    if (url) {\n      this.safeUrl = sanitizer.bypassSecurityTrustResourceUrl(url);\n      this.loading = true;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    launch\n    Open in Portal\n  \n  \n    clear\n  \n\n\n\n  \n  Loading External Site\n\n\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  display: block;\n\n  .toolbar {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    width: 100%;\n    height: 1.5rem;\n\n    .launch {\n      margin-right: 3.5rem;\n\n      &.mat-button-disabled {\n        cursor: not-allowed;\n      }\n\n      .icon {\n        margin-right: 0.25rem;\n      }\n    }\n\n    .close {\n      min-width: 0;\n      padding: 0;\n      line-height: 1.5rem;\n      border-radius: 0;\n    }\n  }\n\n  .overlay {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    top: 1.5rem;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    .spinner {\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  .frame {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      launch    Open in Portal        clear      Loading External Site'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/viewer/viewer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerDataSourceService.html":{"url":"injectables/WorkerDataSourceService.html","title":"injectable - WorkerDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    WorkerCCFDatabaseDataSourceService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createWorker\n                            \n                            \n                                    Private\n                                getWorkerUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, locator: LocationStrategy)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locator\n                                                  \n                                                        \n                                                                        LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(_config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getWorkerUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWorkerUrl(directImport: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directImport\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | URL\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LocationStrategy } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { CCFDatabaseOptions } from 'ccf-database';\nimport { GlobalConfigState, WorkerCCFDatabaseDataSourceService } from 'ccf-shared';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkerDataSourceService extends WorkerCCFDatabaseDataSourceService {\n  constructor(\n    globalConfig: GlobalConfigState,\n    private readonly locator: LocationStrategy\n  ) {\n    super(globalConfig);\n  }\n\n  protected createWorker(_config: CCFDatabaseOptions): Worker {\n    const url = this.getWorkerUrl(true);\n    return new Worker(url, { type: 'module' });\n  }\n\n  private getWorkerUrl(directImport: boolean): string | URL {\n    if (directImport) {\n      return new URL('./data-source.worker', import.meta.url);\n    }\n\n    const externalUrl = this.locator.prepareExternalUrl('0-es2015.worker.js');\n    const codeBlob = new Blob(\n      [`importScripts('${externalUrl}')`],\n      { type: 'application/javascript' }\n    );\n\n    return URL.createObjectURL(codeBlob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-eui/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app-web-component.component.ts\n            \n            function\n            parseDataSources\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                46 %\n                (14/30)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app.component.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/flat-node.ts\n            \n            class\n            FlatNode\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/list-result.ts\n            \n            interface\n            ListResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/ontology-selection.ts\n            \n            interface\n            OntologySelection\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts\n            \n            injectable\n            AppRootOverlayContainer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n            \n            injectable\n            DelegateDataSourceService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n            \n            interface\n            DelegateDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.worker.ts\n            \n            variable\n            database\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts\n            \n            injectable\n            WorkerDataSourceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n            \n            injectable\n            OntologySearchService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n            \n            interface\n            SearchResult\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n            \n            injectable\n            ThemingService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            injectable\n            ColorAssignmentState\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            interface\n            Color\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            interface\n            ColorAssignmentStateModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            variable\n            DEFAULT_COLOR_PALETTE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            injectable\n            DataState\n            \n                92 %\n                (36/39)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            interface\n            DataStateModel\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            allCompleted\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            queryData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            sendCompletedTo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            variable\n            DEFAULT_FILTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n            \n            interface\n            DefaultIconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n            \n            variable\n            DEFAULT_ICONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            injectable\n            IconRegistryState\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n            \n            injectable\n            ListResultsState\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n            \n            interface\n            ListResultsStateModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            injectable\n            SceneState\n            \n                75 %\n                (12/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            SceneStateModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            variable\n            DEFAULT_SELECTED_ORGANS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n            \n            component\n            FiltersContentComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n            \n            component\n            FiltersPopoverComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n            \n            component\n            OntologySearchComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n            \n            component\n            OntologySelectionComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            component\n            OntologyTreeComponent\n            \n                86 %\n                (32/37)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            getLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            isExpandable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts\n            \n            component\n            DonorCardComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n            \n            component\n            ResultsBrowserComponent\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts\n            \n            component\n            TissueSectionVisComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n            \n            function\n            throwDuplicateDrawersError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            class\n            InitializationState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            variable\n            EXPAND_COLLAPSE_PARAMS_DEFAULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            ContentContainerChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerContainersChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerInitialized\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerToggled\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            variable\n            MessageService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n            \n            component\n            ToggleButtonComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n            \n            component\n            DualSliderComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts\n            \n            component\n            RunSpatialSearchComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts\n            \n            component\n            SpatialSearchConfigBehaviorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n            \n            component\n            SpatialSearchConfigComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n            \n            component\n            SpinnerOverlayComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n            \n            component\n            ThumbnailCarouselComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n            \n            variable\n            nextUid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts\n            \n            component\n            ViewerComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            class\n            MessageChannel\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            MessageServiceConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (projects/.../data.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries.\n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            allCompleted   (projects/.../data.state.ts)\n                        \n                        \n                            parseDataSources   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            queryData   (projects/.../data.state.ts)\n                        \n                        \n                            sendCompletedTo   (projects/.../data.state.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (projects/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allCompleted\n                        \n                    \n                \n            \n            \n                \nallCompleted(states)\n                \n            \n\n\n\n\n            \n                \n                    Helper for testing that all states in an array are DataQueryState.Completed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    states\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of states to test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if all values in the array is Completed.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryData\n                        \n                    \n                \n            \n            \n                \nqueryData(query, next?)\n                \n            \n\n\n\n\n            \n                \n                    Helper operator that combines querying with sharing and replay functionality.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data query function.\n\n                                    \n                                \n                                \n                                    next\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional listener on the values emitted by the latest query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction>\n\n                    \n                    \n                        The combined pipe operator function.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendCompletedTo\n                        \n                    \n                \n            \n            \n                \nsendCompletedTo(subject)\n                \n            \n\n\n\n\n            \n                \n                    Helper creating a function that sends a DataQueryState.Completed to\na subject whenever it is called.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subject\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The subject to send completed messagess to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        The function.\n\n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseDataSources\n                        \n                    \n                \n            \n            \n                \nparseDataSources(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                    Helper function for creating drawer errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The position of the drawer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DonorCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RunSpatialSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchConfigBehaviorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThumbnailCarouselModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissueSectionVisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DonorCardModule\n\n\n\ncluster_DonorCardModule_declarations\n\n\n\ncluster_DonorCardModule_imports\n\n\n\ncluster_DonorCardModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_OntologySelectionComponent_providers\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_RunSpatialSearchModule\n\n\n\ncluster_RunSpatialSearchModule_declarations\n\n\n\ncluster_RunSpatialSearchModule_exports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_declarations\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_imports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_exports\n\n\n\ncluster_SpatialSearchConfigModule\n\n\n\ncluster_SpatialSearchConfigModule_declarations\n\n\n\ncluster_SpatialSearchConfigModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ThumbnailCarouselModule\n\n\n\ncluster_ThumbnailCarouselModule_declarations\n\n\n\ncluster_ThumbnailCarouselModule_exports\n\n\n\ncluster_TissueSectionVisModule\n\n\n\ncluster_TissueSectionVisModule_declarations\n\n\n\ncluster_TissueSectionVisModule_exports\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nAppModule -->\n\nViewerModule->AppModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDonorCardComponent\n\nDonorCardComponent\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nDonorCardModule -->\n\nDonorCardComponent->DonorCardModule\n\n\n\nResultsBrowserModule -->\n\nDonorCardModule->ResultsBrowserModule\n\n\n\n\n\nDonorCardComponent \n\nDonorCardComponent \n\nDonorCardComponent  -->\n\nDonorCardModule->DonorCardComponent \n\n\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nDonorCardModule -->\n\nThumbnailCarouselModule->DonorCardModule\n\n\n\n\n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent  -->\n\nThumbnailCarouselModule->ThumbnailCarouselComponent \n\n\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nDonorCardModule -->\n\nTissueSectionVisModule->DonorCardModule\n\n\n\n\n\nTissueSectionVisComponent \n\nTissueSectionVisComponent \n\nTissueSectionVisComponent  -->\n\nTissueSectionVisModule->TissueSectionVisComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nRunSpatialSearchModule\n\nRunSpatialSearchModule\n\nFiltersContentModule -->\n\nRunSpatialSearchModule->FiltersContentModule\n\n\n\n\n\nRunSpatialSearchComponent \n\nRunSpatialSearchComponent \n\nRunSpatialSearchComponent  -->\n\nRunSpatialSearchModule->RunSpatialSearchComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySearchService\n\nOntologySearchService\n\nOntologySelectionComponent -->\n\nOntologySearchService->OntologySelectionComponent\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nRunSpatialSearchComponent\n\nRunSpatialSearchComponent\n\nRunSpatialSearchModule -->\n\nRunSpatialSearchComponent->RunSpatialSearchModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent\n\nSpatialSearchConfigBehaviorComponent\n\n\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigBehaviorComponent->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent  -->\n\nSpatialSearchConfigBehaviorModule->SpatialSearchConfigBehaviorComponent \n\n\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigModule->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent  -->\n\nSpatialSearchConfigModule->SpatialSearchConfigComponent \n\n\n\n\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigModule -->\n\nSpatialSearchConfigComponent->SpatialSearchConfigModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nThumbnailCarouselComponent\n\nThumbnailCarouselComponent\n\nThumbnailCarouselModule -->\n\nThumbnailCarouselComponent->ThumbnailCarouselModule\n\n\n\n\n\nTissueSectionVisComponent\n\nTissueSectionVisComponent\n\nTissueSectionVisModule -->\n\nTissueSectionVisComponent->TissueSectionVisModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Sex   (projects/.../spatial-search-config.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n    \n    \n        \n            \n                \n                    \n                    Sex\n                \n            \n            \n                \n                        \"male\" | \"female\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            database   (projects/.../data-source.worker.ts)\n                        \n                        \n                            DEFAULT_COLOR_PALETTE   (projects/.../color-assignment.state.ts)\n                        \n                        \n                            DEFAULT_FILTER   (projects/.../data.state.ts)\n                        \n                        \n                            DEFAULT_ICONS   (projects/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_SELECTED_ORGANS   (projects/.../scene.state.ts)\n                        \n                        \n                            DEFAULT_THEME   (projects/.../theming.service.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (projects/.../drawer.component.ts)\n                        \n                        \n                            getLevel   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            isExpandable   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            nextUid   (projects/.../thumbnail-carousel.component.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/services/data-source/data-source.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CCFDatabase()\n                    \n                \n\n            \n                \n                    Worker thread database.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_COLOR_PALETTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_FILTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Filter\n\n                    \n                \n                \n                    \n                        Default value : {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000'],\n  spatialSearches: []\n}\n                    \n                \n\n            \n                \n                    Default values for filters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SELECTED_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set(['Skin', 'Heart', 'Kidney', 'Spleen'])\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : property('level')\n                    \n                \n\n            \n                \n                    Getter function for 'level' on a flat node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpandable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : property('expandable')\n                    \n                \n\n            \n                \n                    Getter function for 'expandable' on a flat node.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n)\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nextUid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})()\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
